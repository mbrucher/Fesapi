/* gsoap_witsml1_4_1_1H.h
   Generated by gSOAP 2.8.32 for witsml1_4_1_1ForGsoap.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool is licensed for commercial use, no resale/redistribution.
--------------------------------------------------------------------------------
Product and source code licensed by Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef gsoap_witsml1_4_1_1H_H
#define gsoap_witsml1_4_1_1H_H
#include "gsoap_witsml1_4_1_1Stub.h"

namespace gsoap_witsml1_4_1_1 {
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);
SOAP_FMAC3 void * SOAP_FMAC4 gsoap_witsml1_4_1_1_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 gsoap_witsml1_4_1_1_fdelete(struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 gsoap_witsml1_4_1_1_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 gsoap_witsml1_4_1_1_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_byte_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_byte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

inline int soap_write_byte(struct soap *soap, char const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_byte(soap, p, "byte", "xsd:byte") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

inline int soap_read_byte(struct soap *soap, char *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_byte(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* witsml1__positiveCount is a typedef synonym for witsml1__abstractPositiveCount */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveCount_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveCount_DEFINED

#define soap_default_witsml1__positiveCount(soap, a) soap_default_witsml1__abstractPositiveCount(soap, a)


#define soap_witsml1__positiveCount2s soap_witsml1__abstractPositiveCount2s


#define soap_out_witsml1__positiveCount soap_out_witsml1__abstractPositiveCount

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__positiveCount(struct soap*, const char*, short *);

#define soap_in_witsml1__positiveCount soap_in_witsml1__abstractPositiveCount


#define soap_put_witsml1__positiveCount soap_put_witsml1__abstractPositiveCount


#define soap_write_witsml1__positiveCount soap_write_witsml1__abstractPositiveCount


#define soap_get_witsml1__positiveCount soap_get_witsml1__abstractPositiveCount


#define soap_read_witsml1__positiveCount soap_read_witsml1__abstractPositiveCount

#endif
/* witsml1__abstractPositiveCount is a typedef synonym for witsml1__abstractShort */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractPositiveCount_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractPositiveCount_DEFINED

#define soap_default_witsml1__abstractPositiveCount(soap, a) soap_default_witsml1__abstractShort(soap, a)


#define soap_witsml1__abstractPositiveCount2s soap_witsml1__abstractShort2s


#define soap_out_witsml1__abstractPositiveCount soap_out_witsml1__abstractShort

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__abstractPositiveCount(struct soap*, const char*, short *);

#define soap_in_witsml1__abstractPositiveCount soap_in_witsml1__abstractShort


#define soap_put_witsml1__abstractPositiveCount soap_put_witsml1__abstractShort


#define soap_write_witsml1__abstractPositiveCount soap_write_witsml1__abstractShort


#define soap_get_witsml1__abstractPositiveCount soap_get_witsml1__abstractShort


#define soap_read_witsml1__abstractPositiveCount soap_read_witsml1__abstractShort

#endif
/* witsml1__levelIntegerCode is a typedef synonym for witsml1__abstractShort */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__levelIntegerCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__levelIntegerCode_DEFINED

#define soap_default_witsml1__levelIntegerCode(soap, a) soap_default_witsml1__abstractShort(soap, a)


#define soap_witsml1__levelIntegerCode2s soap_witsml1__abstractShort2s


#define soap_out_witsml1__levelIntegerCode soap_out_witsml1__abstractShort

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__levelIntegerCode(struct soap*, const char*, short *);

#define soap_in_witsml1__levelIntegerCode soap_in_witsml1__abstractShort


#define soap_put_witsml1__levelIntegerCode soap_put_witsml1__abstractShort


#define soap_write_witsml1__levelIntegerCode soap_write_witsml1__abstractShort


#define soap_get_witsml1__levelIntegerCode soap_get_witsml1__abstractShort


#define soap_read_witsml1__levelIntegerCode soap_read_witsml1__abstractShort

#endif
/* witsml1__iadcIntegerCode is a typedef synonym for witsml1__abstractShort */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcIntegerCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcIntegerCode_DEFINED

#define soap_default_witsml1__iadcIntegerCode(soap, a) soap_default_witsml1__abstractShort(soap, a)


#define soap_witsml1__iadcIntegerCode2s soap_witsml1__abstractShort2s


#define soap_out_witsml1__iadcIntegerCode soap_out_witsml1__abstractShort

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__iadcIntegerCode(struct soap*, const char*, short *);

#define soap_in_witsml1__iadcIntegerCode soap_in_witsml1__abstractShort


#define soap_put_witsml1__iadcIntegerCode soap_put_witsml1__abstractShort


#define soap_write_witsml1__iadcIntegerCode soap_write_witsml1__abstractShort


#define soap_get_witsml1__iadcIntegerCode soap_get_witsml1__abstractShort


#define soap_read_witsml1__iadcIntegerCode soap_read_witsml1__abstractShort

#endif
/* witsml1__pumpActionIntegerCode is a typedef synonym for witsml1__abstractShort */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pumpActionIntegerCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pumpActionIntegerCode_DEFINED

#define soap_default_witsml1__pumpActionIntegerCode(soap, a) soap_default_witsml1__abstractShort(soap, a)


#define soap_witsml1__pumpActionIntegerCode2s soap_witsml1__abstractShort2s


#define soap_out_witsml1__pumpActionIntegerCode soap_out_witsml1__abstractShort

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__pumpActionIntegerCode(struct soap*, const char*, short *);

#define soap_in_witsml1__pumpActionIntegerCode soap_in_witsml1__abstractShort


#define soap_put_witsml1__pumpActionIntegerCode soap_put_witsml1__abstractShort


#define soap_write_witsml1__pumpActionIntegerCode soap_write_witsml1__abstractShort


#define soap_get_witsml1__pumpActionIntegerCode soap_get_witsml1__abstractShort


#define soap_read_witsml1__pumpActionIntegerCode soap_read_witsml1__abstractShort

#endif
/* witsml1__beaufortScaleIntegerCode is a typedef synonym for witsml1__abstractShort */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__beaufortScaleIntegerCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__beaufortScaleIntegerCode_DEFINED

#define soap_default_witsml1__beaufortScaleIntegerCode(soap, a) soap_default_witsml1__abstractShort(soap, a)


#define soap_witsml1__beaufortScaleIntegerCode2s soap_witsml1__abstractShort2s


#define soap_out_witsml1__beaufortScaleIntegerCode soap_out_witsml1__abstractShort

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__beaufortScaleIntegerCode(struct soap*, const char*, short *);

#define soap_in_witsml1__beaufortScaleIntegerCode soap_in_witsml1__abstractShort


#define soap_put_witsml1__beaufortScaleIntegerCode soap_put_witsml1__abstractShort


#define soap_write_witsml1__beaufortScaleIntegerCode soap_write_witsml1__abstractShort


#define soap_get_witsml1__beaufortScaleIntegerCode soap_get_witsml1__abstractShort


#define soap_read_witsml1__beaufortScaleIntegerCode soap_read_witsml1__abstractShort

#endif
/* witsml1__nonNegativeCount is a typedef synonym for witsml1__abstractShort */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nonNegativeCount_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nonNegativeCount_DEFINED

#define soap_default_witsml1__nonNegativeCount(soap, a) soap_default_witsml1__abstractShort(soap, a)


#define soap_witsml1__nonNegativeCount2s soap_witsml1__abstractShort2s


#define soap_out_witsml1__nonNegativeCount soap_out_witsml1__abstractShort

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__nonNegativeCount(struct soap*, const char*, short *);

#define soap_in_witsml1__nonNegativeCount soap_in_witsml1__abstractShort


#define soap_put_witsml1__nonNegativeCount soap_put_witsml1__abstractShort


#define soap_write_witsml1__nonNegativeCount soap_write_witsml1__abstractShort


#define soap_get_witsml1__nonNegativeCount soap_get_witsml1__abstractShort


#define soap_read_witsml1__nonNegativeCount soap_read_witsml1__abstractShort

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractShort_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractShort_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractShort(struct soap*, short *);

#define soap_witsml1__abstractShort2s soap_short2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractShort(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__abstractShort(struct soap*, const char*, short *);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_witsml1__abstractShort(struct soap*, const char*, short *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractShort(struct soap*, const short *, const char*, const char*);

inline int soap_write_witsml1__abstractShort(struct soap *soap, short const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractShort(soap, p, "witsml1:abstractShort", "witsml1:abstractShort") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 short * SOAP_FMAC4 soap_get_witsml1__abstractShort(struct soap*, short *, const char*, const char*);

inline int soap_read_witsml1__abstractShort(struct soap *soap, short *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractShort(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_short_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_short_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap*, short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap*, const char*, short *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap*, const short *, const char*, const char*);

inline int soap_write_short(struct soap *soap, short const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_short(soap, p, "short", "xsd:short") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap*, short *, const char*, const char*);

inline int soap_read_short(struct soap *soap, short *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_short(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* witsml1__integerCount is a typedef synonym for witsml1__abstractInt */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__integerCount_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__integerCount_DEFINED

#define soap_default_witsml1__integerCount(soap, a) soap_default_witsml1__abstractInt(soap, a)


#define soap_witsml1__integerCount2s soap_witsml1__abstractInt2s


#define soap_out_witsml1__integerCount soap_out_witsml1__abstractInt

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__integerCount(struct soap*, const char*, int *);

#define soap_in_witsml1__integerCount soap_in_witsml1__abstractInt


#define soap_put_witsml1__integerCount soap_put_witsml1__abstractInt


#define soap_write_witsml1__integerCount soap_write_witsml1__abstractInt


#define soap_get_witsml1__integerCount soap_get_witsml1__abstractInt


#define soap_read_witsml1__integerCount soap_read_witsml1__abstractInt

#endif
/* witsml1__positiveBigCount is a typedef synonym for witsml1__abstractInt */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveBigCount_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__positiveBigCount_DEFINED

#define soap_default_witsml1__positiveBigCount(soap, a) soap_default_witsml1__abstractInt(soap, a)


#define soap_witsml1__positiveBigCount2s soap_witsml1__abstractInt2s


#define soap_out_witsml1__positiveBigCount soap_out_witsml1__abstractInt

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__positiveBigCount(struct soap*, const char*, int *);

#define soap_in_witsml1__positiveBigCount soap_in_witsml1__abstractInt


#define soap_put_witsml1__positiveBigCount soap_put_witsml1__abstractInt


#define soap_write_witsml1__positiveBigCount soap_write_witsml1__abstractInt


#define soap_get_witsml1__positiveBigCount soap_get_witsml1__abstractInt


#define soap_read_witsml1__positiveBigCount soap_read_witsml1__abstractInt

#endif
/* witsml1__calendarYear is a typedef synonym for witsml1__abstractInt */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__calendarYear_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__calendarYear_DEFINED

#define soap_default_witsml1__calendarYear(soap, a) soap_default_witsml1__abstractInt(soap, a)


#define soap_witsml1__calendarYear2s soap_witsml1__abstractInt2s


#define soap_out_witsml1__calendarYear soap_out_witsml1__abstractInt

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__calendarYear(struct soap*, const char*, int *);

#define soap_in_witsml1__calendarYear soap_in_witsml1__abstractInt


#define soap_put_witsml1__calendarYear soap_put_witsml1__abstractInt


#define soap_write_witsml1__calendarYear soap_write_witsml1__abstractInt


#define soap_get_witsml1__calendarYear soap_get_witsml1__abstractInt


#define soap_read_witsml1__calendarYear soap_read_witsml1__abstractInt

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractInt_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractInt_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractInt(struct soap*, int *);

#define soap_witsml1__abstractInt2s soap_int2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractInt(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__abstractInt(struct soap*, const char*, int *);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_witsml1__abstractInt(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractInt(struct soap*, const int *, const char*, const char*);

inline int soap_write_witsml1__abstractInt(struct soap *soap, int const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractInt(soap, p, "witsml1:abstractInt", "witsml1:abstractInt") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_witsml1__abstractInt(struct soap*, int *, const char*, const char*);

inline int soap_read_witsml1__abstractInt(struct soap *soap, int *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractInt(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_int_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_int_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

inline int soap_write_int(struct soap *soap, int const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_int(soap, p, "int", "xsd:int") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

inline int soap_read_int(struct soap *soap, int *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_int(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _gco__Real is a typedef synonym for double */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Real_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Real_DEFINED

#define soap_default__gco__Real(soap, a) soap_default_double(soap, a)


#define soap__gco__Real2s soap_double2s


#define soap_out__gco__Real soap_out_double


#define soap_s2_gco__Real soap_s2double


#define soap_in__gco__Real soap_in_double


#define soap_put__gco__Real soap_put_double


#define soap_write__gco__Real soap_write_double


#define soap_get__gco__Real soap_get_double


#define soap_read__gco__Real soap_read_double

#endif
/* _gml__maximumValue is a typedef synonym for double */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__maximumValue_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__maximumValue_DEFINED

#define soap_default__gml__maximumValue(soap, a) soap_default_double(soap, a)


#define soap__gml__maximumValue2s soap_double2s


#define soap_out__gml__maximumValue soap_out_double


#define soap_s2_gml__maximumValue soap_s2double


#define soap_in__gml__maximumValue soap_in_double


#define soap_put__gml__maximumValue soap_put_double


#define soap_write__gml__maximumValue soap_write_double


#define soap_get__gml__maximumValue soap_get_double


#define soap_read__gml__maximumValue soap_read_double

#endif
/* _gml__minimumValue is a typedef synonym for double */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__minimumValue_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__minimumValue_DEFINED

#define soap_default__gml__minimumValue(soap, a) soap_default_double(soap, a)


#define soap__gml__minimumValue2s soap_double2s


#define soap_out__gml__minimumValue soap_out_double


#define soap_s2_gml__minimumValue soap_s2double


#define soap_in__gml__minimumValue soap_in_double


#define soap_put__gml__minimumValue soap_put_double


#define soap_write__gml__minimumValue soap_write_double


#define soap_get__gml__minimumValue soap_get_double


#define soap_read__gml__minimumValue soap_read_double

#endif
/* witsml1__gtZeroAndLeOne is a typedef synonym for witsml1__abstractDouble */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__gtZeroAndLeOne_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__gtZeroAndLeOne_DEFINED

#define soap_default_witsml1__gtZeroAndLeOne(soap, a) soap_default_witsml1__abstractDouble(soap, a)


#define soap_witsml1__gtZeroAndLeOne2s soap_witsml1__abstractDouble2s


#define soap_out_witsml1__gtZeroAndLeOne soap_out_witsml1__abstractDouble

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__gtZeroAndLeOne(struct soap*, const char*, double *);

#define soap_in_witsml1__gtZeroAndLeOne soap_in_witsml1__abstractDouble


#define soap_put_witsml1__gtZeroAndLeOne soap_put_witsml1__abstractDouble


#define soap_write_witsml1__gtZeroAndLeOne soap_write_witsml1__abstractDouble


#define soap_get_witsml1__gtZeroAndLeOne soap_get_witsml1__abstractDouble


#define soap_read_witsml1__gtZeroAndLeOne soap_read_witsml1__abstractDouble

#endif
/* witsml1__unitlessQuantity is a typedef synonym for witsml1__abstractDouble */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__unitlessQuantity_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__unitlessQuantity_DEFINED

#define soap_default_witsml1__unitlessQuantity(soap, a) soap_default_witsml1__abstractDouble(soap, a)


#define soap_witsml1__unitlessQuantity2s soap_witsml1__abstractDouble2s


#define soap_out_witsml1__unitlessQuantity soap_out_witsml1__abstractDouble

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__unitlessQuantity(struct soap*, const char*, double *);

#define soap_in_witsml1__unitlessQuantity soap_in_witsml1__abstractDouble


#define soap_put_witsml1__unitlessQuantity soap_put_witsml1__abstractDouble


#define soap_write_witsml1__unitlessQuantity soap_write_witsml1__abstractDouble


#define soap_get_witsml1__unitlessQuantity soap_get_witsml1__abstractDouble


#define soap_read_witsml1__unitlessQuantity soap_read_witsml1__abstractDouble

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDouble_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDouble_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractDouble(struct soap*, double *);

#define soap_witsml1__abstractDouble2s soap_double2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractDouble(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__abstractDouble(struct soap*, const char*, double *);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_witsml1__abstractDouble(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractDouble(struct soap*, const double *, const char*, const char*);

inline int soap_write_witsml1__abstractDouble(struct soap *soap, double const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractDouble(soap, p, "witsml1:abstractDouble", "witsml1:abstractDouble") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_witsml1__abstractDouble(struct soap*, double *, const char*, const char*);

inline int soap_read_witsml1__abstractDouble(struct soap *soap, double *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractDouble(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_double_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_double_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

inline int soap_write_double(struct soap *soap, double const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_double(soap, p, "double", "xsd:double") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

inline int soap_read_double(struct soap *soap, double *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_double(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _gco__DateTime is a typedef synonym for dateTime */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__DateTime_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__DateTime_DEFINED

#define soap_default__gco__DateTime(soap, a) soap_default_dateTime(soap, a)


#define soap__gco__DateTime2s soap_dateTime2s


#define soap_out__gco__DateTime soap_out_dateTime


#define soap_s2_gco__DateTime soap_s2dateTime


#define soap_in__gco__DateTime soap_in_dateTime


#define soap_put__gco__DateTime soap_put_dateTime


#define soap_write__gco__DateTime soap_write_dateTime


#define soap_get__gco__DateTime soap_get_dateTime


#define soap_read__gco__DateTime soap_read_dateTime

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestamp_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__timestamp(struct soap*, time_t *);

#define soap_witsml1__timestamp2s soap_dateTime2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__timestamp(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__timestamp(struct soap*, const char*, time_t *);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_witsml1__timestamp(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__timestamp(struct soap*, const time_t *, const char*, const char*);

inline int soap_write_witsml1__timestamp(struct soap *soap, time_t const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__timestamp(soap, p, "witsml1:timestamp", "witsml1:timestamp") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_witsml1__timestamp(struct soap*, time_t *, const char*, const char*);

inline int soap_read_witsml1__timestamp(struct soap *soap, time_t *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__timestamp(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDateTime_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractDateTime(struct soap*, time_t *);

#define soap_witsml1__abstractDateTime2s soap_dateTime2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractDateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__abstractDateTime(struct soap*, const char*, time_t *);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_witsml1__abstractDateTime(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractDateTime(struct soap*, const time_t *, const char*, const char*);

inline int soap_write_witsml1__abstractDateTime(struct soap *soap, time_t const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractDateTime(soap, p, "witsml1:abstractDateTime", "witsml1:abstractDateTime") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_witsml1__abstractDateTime(struct soap*, time_t *, const char*, const char*);

inline int soap_read_witsml1__abstractDateTime(struct soap *soap, time_t *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractDateTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_dateTime_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_dateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_dateTime(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_dateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_dateTime(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_dateTime(struct soap*, const time_t *, const char*, const char*);

inline int soap_write_dateTime(struct soap *soap, time_t const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_dateTime(soap, p, "dateTime", "xsd:dateTime") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_dateTime(struct soap*, time_t *, const char*, const char*);

inline int soap_read_dateTime(struct soap *soap, time_t *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_dateTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _gco__Boolean is a typedef synonym for bool */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Boolean_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Boolean_DEFINED

#define soap_default__gco__Boolean(soap, a) soap_default_bool(soap, a)


#define soap__gco__Boolean2s soap_bool2s


#define soap_out__gco__Boolean soap_out_bool


#define soap_s2_gco__Boolean soap_s2bool


#define soap_in__gco__Boolean soap_in_bool


inline bool * soap_new__gco__Boolean(struct soap *soap, int n = -1)
{
	return static_cast<bool *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(bool)));
}

#define soap_put__gco__Boolean soap_put_bool


#define soap_write__gco__Boolean soap_write_bool


#define soap_get__gco__Boolean soap_get_bool


#define soap_read__gco__Boolean soap_read_bool

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__RelatedTimeType_relativePosition_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__RelatedTimeType_relativePosition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__RelatedTimeType_relativePosition(struct soap*, const char*, int, const enum _gml__RelatedTimeType_relativePosition *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__gml__RelatedTimeType_relativePosition2s(struct soap*, enum _gml__RelatedTimeType_relativePosition);
SOAP_FMAC3 enum _gml__RelatedTimeType_relativePosition * SOAP_FMAC4 soap_in__gml__RelatedTimeType_relativePosition(struct soap*, const char*, enum _gml__RelatedTimeType_relativePosition *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_gml__RelatedTimeType_relativePosition(struct soap*, const char*, enum _gml__RelatedTimeType_relativePosition *);

inline enum _gml__RelatedTimeType_relativePosition * soap_new__gml__RelatedTimeType_relativePosition(struct soap *soap, int n = -1)
{
	return static_cast<enum _gml__RelatedTimeType_relativePosition *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum _gml__RelatedTimeType_relativePosition)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put__gml__RelatedTimeType_relativePosition(struct soap*, const enum _gml__RelatedTimeType_relativePosition *, const char*, const char*);

inline int soap_write__gml__RelatedTimeType_relativePosition(struct soap *soap, enum _gml__RelatedTimeType_relativePosition const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__gml__RelatedTimeType_relativePosition(soap, p, "gml:RelatedTimeType-relativePosition", "gml:RelatedTimeType-relativePosition") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum _gml__RelatedTimeType_relativePosition * SOAP_FMAC4 soap_get__gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition *, const char*, const char*);

inline int soap_read__gml__RelatedTimeType_relativePosition(struct soap *soap, enum _gml__RelatedTimeType_relativePosition *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get__gml__RelatedTimeType_relativePosition(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellStatus_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellStatus(struct soap*, enum witsml1__WellStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellStatus(struct soap*, const char*, int, const enum witsml1__WellStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellStatus2s(struct soap*, enum witsml1__WellStatus);
SOAP_FMAC3 enum witsml1__WellStatus * SOAP_FMAC4 soap_in_witsml1__WellStatus(struct soap*, const char*, enum witsml1__WellStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellStatus(struct soap*, const char*, enum witsml1__WellStatus *);

inline enum witsml1__WellStatus * soap_new_witsml1__WellStatus(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellStatus(struct soap*, const enum witsml1__WellStatus *, const char*, const char*);

inline int soap_write_witsml1__WellStatus(struct soap *soap, enum witsml1__WellStatus const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellStatus(soap, p, "witsml1:WellStatus", "witsml1:WellStatus") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellStatus * SOAP_FMAC4 soap_get_witsml1__WellStatus(struct soap*, enum witsml1__WellStatus *, const char*, const char*);

inline int soap_read_witsml1__WellStatus(struct soap *soap, enum witsml1__WellStatus *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellPurpose_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellPurpose_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellPurpose(struct soap*, enum witsml1__WellPurpose *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellPurpose(struct soap*, const char*, int, const enum witsml1__WellPurpose *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellPurpose2s(struct soap*, enum witsml1__WellPurpose);
SOAP_FMAC3 enum witsml1__WellPurpose * SOAP_FMAC4 soap_in_witsml1__WellPurpose(struct soap*, const char*, enum witsml1__WellPurpose *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellPurpose(struct soap*, const char*, enum witsml1__WellPurpose *);

inline enum witsml1__WellPurpose * soap_new_witsml1__WellPurpose(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellPurpose *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellPurpose)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellPurpose(struct soap*, const enum witsml1__WellPurpose *, const char*, const char*);

inline int soap_write_witsml1__WellPurpose(struct soap *soap, enum witsml1__WellPurpose const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellPurpose(soap, p, "witsml1:WellPurpose", "witsml1:WellPurpose") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellPurpose * SOAP_FMAC4 soap_get_witsml1__WellPurpose(struct soap*, enum witsml1__WellPurpose *, const char*, const char*);

inline int soap_read_witsml1__WellPurpose(struct soap *soap, enum witsml1__WellPurpose *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellPurpose(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellboreType(struct soap*, enum witsml1__WellboreType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellboreType(struct soap*, const char*, int, const enum witsml1__WellboreType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellboreType2s(struct soap*, enum witsml1__WellboreType);
SOAP_FMAC3 enum witsml1__WellboreType * SOAP_FMAC4 soap_in_witsml1__WellboreType(struct soap*, const char*, enum witsml1__WellboreType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellboreType(struct soap*, const char*, enum witsml1__WellboreType *);

inline enum witsml1__WellboreType * soap_new_witsml1__WellboreType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellboreType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellboreType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellboreType(struct soap*, const enum witsml1__WellboreType *, const char*, const char*);

inline int soap_write_witsml1__WellboreType(struct soap *soap, enum witsml1__WellboreType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellboreType(soap, p, "witsml1:WellboreType", "witsml1:WellboreType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellboreType * SOAP_FMAC4 soap_get_witsml1__WellboreType(struct soap*, enum witsml1__WellboreType *, const char*, const char*);

inline int soap_read_witsml1__WellboreType(struct soap *soap, enum witsml1__WellboreType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellboreType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreShape_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellboreShape_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellboreShape(struct soap*, enum witsml1__WellboreShape *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellboreShape(struct soap*, const char*, int, const enum witsml1__WellboreShape *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellboreShape2s(struct soap*, enum witsml1__WellboreShape);
SOAP_FMAC3 enum witsml1__WellboreShape * SOAP_FMAC4 soap_in_witsml1__WellboreShape(struct soap*, const char*, enum witsml1__WellboreShape *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellboreShape(struct soap*, const char*, enum witsml1__WellboreShape *);

inline enum witsml1__WellboreShape * soap_new_witsml1__WellboreShape(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellboreShape *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellboreShape)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellboreShape(struct soap*, const enum witsml1__WellboreShape *, const char*, const char*);

inline int soap_write_witsml1__WellboreShape(struct soap *soap, enum witsml1__WellboreShape const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellboreShape(soap, p, "witsml1:WellboreShape", "witsml1:WellboreShape") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellboreShape * SOAP_FMAC4 soap_get_witsml1__WellboreShape(struct soap*, enum witsml1__WellboreShape *, const char*, const char*);

inline int soap_read_witsml1__WellboreShape(struct soap *soap, enum witsml1__WellboreShape *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellboreShape(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellTestType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellTestType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellTestType(struct soap*, enum witsml1__WellTestType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellTestType(struct soap*, const char*, int, const enum witsml1__WellTestType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellTestType2s(struct soap*, enum witsml1__WellTestType);
SOAP_FMAC3 enum witsml1__WellTestType * SOAP_FMAC4 soap_in_witsml1__WellTestType(struct soap*, const char*, enum witsml1__WellTestType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellTestType(struct soap*, const char*, enum witsml1__WellTestType *);

inline enum witsml1__WellTestType * soap_new_witsml1__WellTestType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellTestType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellTestType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellTestType(struct soap*, const enum witsml1__WellTestType *, const char*, const char*);

inline int soap_write_witsml1__WellTestType(struct soap *soap, enum witsml1__WellTestType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellTestType(soap, p, "witsml1:WellTestType", "witsml1:WellTestType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellTestType * SOAP_FMAC4 soap_get_witsml1__WellTestType(struct soap*, enum witsml1__WellTestType *, const char*, const char*);

inline int soap_read_witsml1__WellTestType(struct soap *soap, enum witsml1__WellTestType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellTestType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellNamingSystem_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellNamingSystem_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellNamingSystem(struct soap*, enum witsml1__WellNamingSystem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellNamingSystem(struct soap*, const char*, int, const enum witsml1__WellNamingSystem *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellNamingSystem2s(struct soap*, enum witsml1__WellNamingSystem);
SOAP_FMAC3 enum witsml1__WellNamingSystem * SOAP_FMAC4 soap_in_witsml1__WellNamingSystem(struct soap*, const char*, enum witsml1__WellNamingSystem *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellNamingSystem(struct soap*, const char*, enum witsml1__WellNamingSystem *);

inline enum witsml1__WellNamingSystem * soap_new_witsml1__WellNamingSystem(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellNamingSystem *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellNamingSystem)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellNamingSystem(struct soap*, const enum witsml1__WellNamingSystem *, const char*, const char*);

inline int soap_write_witsml1__WellNamingSystem(struct soap *soap, enum witsml1__WellNamingSystem const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellNamingSystem(soap, p, "witsml1:WellNamingSystem", "witsml1:WellNamingSystem") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellNamingSystem * SOAP_FMAC4 soap_get_witsml1__WellNamingSystem(struct soap*, enum witsml1__WellNamingSystem *, const char*, const char*);

inline int soap_read_witsml1__WellNamingSystem(struct soap *soap, enum witsml1__WellNamingSystem *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellNamingSystem(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellKillingProcedureType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellKillingProcedureType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellKillingProcedureType(struct soap*, enum witsml1__WellKillingProcedureType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellKillingProcedureType(struct soap*, const char*, int, const enum witsml1__WellKillingProcedureType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellKillingProcedureType2s(struct soap*, enum witsml1__WellKillingProcedureType);
SOAP_FMAC3 enum witsml1__WellKillingProcedureType * SOAP_FMAC4 soap_in_witsml1__WellKillingProcedureType(struct soap*, const char*, enum witsml1__WellKillingProcedureType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellKillingProcedureType(struct soap*, const char*, enum witsml1__WellKillingProcedureType *);

inline enum witsml1__WellKillingProcedureType * soap_new_witsml1__WellKillingProcedureType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellKillingProcedureType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellKillingProcedureType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellKillingProcedureType(struct soap*, const enum witsml1__WellKillingProcedureType *, const char*, const char*);

inline int soap_write_witsml1__WellKillingProcedureType(struct soap *soap, enum witsml1__WellKillingProcedureType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellKillingProcedureType(soap, p, "witsml1:WellKillingProcedureType", "witsml1:WellKillingProcedureType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellKillingProcedureType * SOAP_FMAC4 soap_get_witsml1__WellKillingProcedureType(struct soap*, enum witsml1__WellKillingProcedureType *, const char*, const char*);

inline int soap_read_witsml1__WellKillingProcedureType(struct soap *soap, enum witsml1__WellKillingProcedureType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellKillingProcedureType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellFluid_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellFluid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellFluid(struct soap*, enum witsml1__WellFluid *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellFluid(struct soap*, const char*, int, const enum witsml1__WellFluid *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellFluid2s(struct soap*, enum witsml1__WellFluid);
SOAP_FMAC3 enum witsml1__WellFluid * SOAP_FMAC4 soap_in_witsml1__WellFluid(struct soap*, const char*, enum witsml1__WellFluid *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellFluid(struct soap*, const char*, enum witsml1__WellFluid *);

inline enum witsml1__WellFluid * soap_new_witsml1__WellFluid(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellFluid *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellFluid)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellFluid(struct soap*, const enum witsml1__WellFluid *, const char*, const char*);

inline int soap_write_witsml1__WellFluid(struct soap *soap, enum witsml1__WellFluid const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellFluid(soap, p, "witsml1:WellFluid", "witsml1:WellFluid") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellFluid * SOAP_FMAC4 soap_get_witsml1__WellFluid(struct soap*, enum witsml1__WellFluid *, const char*, const char*);

inline int soap_read_witsml1__WellFluid(struct soap *soap, enum witsml1__WellFluid *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellFluid(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellDirection_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellDirection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellDirection(struct soap*, enum witsml1__WellDirection *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellDirection(struct soap*, const char*, int, const enum witsml1__WellDirection *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellDirection2s(struct soap*, enum witsml1__WellDirection);
SOAP_FMAC3 enum witsml1__WellDirection * SOAP_FMAC4 soap_in_witsml1__WellDirection(struct soap*, const char*, enum witsml1__WellDirection *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellDirection(struct soap*, const char*, enum witsml1__WellDirection *);

inline enum witsml1__WellDirection * soap_new_witsml1__WellDirection(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellDirection *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellDirection)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellDirection(struct soap*, const enum witsml1__WellDirection *, const char*, const char*);

inline int soap_write_witsml1__WellDirection(struct soap *soap, enum witsml1__WellDirection const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellDirection(soap, p, "witsml1:WellDirection", "witsml1:WellDirection") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellDirection * SOAP_FMAC4 soap_get_witsml1__WellDirection(struct soap*, enum witsml1__WellDirection *, const char*, const char*);

inline int soap_read_witsml1__WellDirection(struct soap *soap, enum witsml1__WellDirection *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellDirection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellControlIncidentType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellControlIncidentType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellControlIncidentType(struct soap*, enum witsml1__WellControlIncidentType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellControlIncidentType(struct soap*, const char*, int, const enum witsml1__WellControlIncidentType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellControlIncidentType2s(struct soap*, enum witsml1__WellControlIncidentType);
SOAP_FMAC3 enum witsml1__WellControlIncidentType * SOAP_FMAC4 soap_in_witsml1__WellControlIncidentType(struct soap*, const char*, enum witsml1__WellControlIncidentType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellControlIncidentType(struct soap*, const char*, enum witsml1__WellControlIncidentType *);

inline enum witsml1__WellControlIncidentType * soap_new_witsml1__WellControlIncidentType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellControlIncidentType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellControlIncidentType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellControlIncidentType(struct soap*, const enum witsml1__WellControlIncidentType *, const char*, const char*);

inline int soap_write_witsml1__WellControlIncidentType(struct soap *soap, enum witsml1__WellControlIncidentType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellControlIncidentType(soap, p, "witsml1:WellControlIncidentType", "witsml1:WellControlIncidentType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellControlIncidentType * SOAP_FMAC4 soap_get_witsml1__WellControlIncidentType(struct soap*, enum witsml1__WellControlIncidentType *, const char*, const char*);

inline int soap_read_witsml1__WellControlIncidentType(struct soap *soap, enum witsml1__WellControlIncidentType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellControlIncidentType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularComponent_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularComponent_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__TubularComponent(struct soap*, enum witsml1__TubularComponent *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__TubularComponent(struct soap*, const char*, int, const enum witsml1__TubularComponent *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__TubularComponent2s(struct soap*, enum witsml1__TubularComponent);
SOAP_FMAC3 enum witsml1__TubularComponent * SOAP_FMAC4 soap_in_witsml1__TubularComponent(struct soap*, const char*, enum witsml1__TubularComponent *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__TubularComponent(struct soap*, const char*, enum witsml1__TubularComponent *);

inline enum witsml1__TubularComponent * soap_new_witsml1__TubularComponent(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__TubularComponent *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__TubularComponent)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__TubularComponent(struct soap*, const enum witsml1__TubularComponent *, const char*, const char*);

inline int soap_write_witsml1__TubularComponent(struct soap *soap, enum witsml1__TubularComponent const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__TubularComponent(soap, p, "witsml1:TubularComponent", "witsml1:TubularComponent") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__TubularComponent * SOAP_FMAC4 soap_get_witsml1__TubularComponent(struct soap*, enum witsml1__TubularComponent *, const char*, const char*);

inline int soap_read_witsml1__TubularComponent(struct soap *soap, enum witsml1__TubularComponent *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__TubularComponent(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularAssembly_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TubularAssembly_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__TubularAssembly(struct soap*, enum witsml1__TubularAssembly *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__TubularAssembly(struct soap*, const char*, int, const enum witsml1__TubularAssembly *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__TubularAssembly2s(struct soap*, enum witsml1__TubularAssembly);
SOAP_FMAC3 enum witsml1__TubularAssembly * SOAP_FMAC4 soap_in_witsml1__TubularAssembly(struct soap*, const char*, enum witsml1__TubularAssembly *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__TubularAssembly(struct soap*, const char*, enum witsml1__TubularAssembly *);

inline enum witsml1__TubularAssembly * soap_new_witsml1__TubularAssembly(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__TubularAssembly *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__TubularAssembly)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__TubularAssembly(struct soap*, const enum witsml1__TubularAssembly *, const char*, const char*);

inline int soap_write_witsml1__TubularAssembly(struct soap *soap, enum witsml1__TubularAssembly const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__TubularAssembly(soap, p, "witsml1:TubularAssembly", "witsml1:TubularAssembly") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__TubularAssembly * SOAP_FMAC4 soap_get_witsml1__TubularAssembly(struct soap*, enum witsml1__TubularAssembly *, const char*, const char*);

inline int soap_read_witsml1__TubularAssembly(struct soap *soap, enum witsml1__TubularAssembly *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__TubularAssembly(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__TrajStationType(struct soap*, enum witsml1__TrajStationType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__TrajStationType(struct soap*, const char*, int, const enum witsml1__TrajStationType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__TrajStationType2s(struct soap*, enum witsml1__TrajStationType);
SOAP_FMAC3 enum witsml1__TrajStationType * SOAP_FMAC4 soap_in_witsml1__TrajStationType(struct soap*, const char*, enum witsml1__TrajStationType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__TrajStationType(struct soap*, const char*, enum witsml1__TrajStationType *);

inline enum witsml1__TrajStationType * soap_new_witsml1__TrajStationType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__TrajStationType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__TrajStationType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__TrajStationType(struct soap*, const enum witsml1__TrajStationType *, const char*, const char*);

inline int soap_write_witsml1__TrajStationType(struct soap *soap, enum witsml1__TrajStationType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__TrajStationType(soap, p, "witsml1:TrajStationType", "witsml1:TrajStationType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__TrajStationType * SOAP_FMAC4 soap_get_witsml1__TrajStationType(struct soap*, enum witsml1__TrajStationType *, const char*, const char*);

inline int soap_read_witsml1__TrajStationType(struct soap *soap, enum witsml1__TrajStationType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__TrajStationType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationStatus_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStationStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__TrajStationStatus(struct soap*, enum witsml1__TrajStationStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__TrajStationStatus(struct soap*, const char*, int, const enum witsml1__TrajStationStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__TrajStationStatus2s(struct soap*, enum witsml1__TrajStationStatus);
SOAP_FMAC3 enum witsml1__TrajStationStatus * SOAP_FMAC4 soap_in_witsml1__TrajStationStatus(struct soap*, const char*, enum witsml1__TrajStationStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__TrajStationStatus(struct soap*, const char*, enum witsml1__TrajStationStatus *);

inline enum witsml1__TrajStationStatus * soap_new_witsml1__TrajStationStatus(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__TrajStationStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__TrajStationStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__TrajStationStatus(struct soap*, const enum witsml1__TrajStationStatus *, const char*, const char*);

inline int soap_write_witsml1__TrajStationStatus(struct soap *soap, enum witsml1__TrajStationStatus const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__TrajStationStatus(soap, p, "witsml1:TrajStationStatus", "witsml1:TrajStationStatus") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__TrajStationStatus * SOAP_FMAC4 soap_get_witsml1__TrajStationStatus(struct soap*, enum witsml1__TrajStationStatus *, const char*, const char*);

inline int soap_read_witsml1__TrajStationStatus(struct soap *soap, enum witsml1__TrajStationStatus *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__TrajStationStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetSectionScope_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetSectionScope_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__TargetSectionScope(struct soap*, enum witsml1__TargetSectionScope *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__TargetSectionScope(struct soap*, const char*, int, const enum witsml1__TargetSectionScope *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__TargetSectionScope2s(struct soap*, enum witsml1__TargetSectionScope);
SOAP_FMAC3 enum witsml1__TargetSectionScope * SOAP_FMAC4 soap_in_witsml1__TargetSectionScope(struct soap*, const char*, enum witsml1__TargetSectionScope *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__TargetSectionScope(struct soap*, const char*, enum witsml1__TargetSectionScope *);

inline enum witsml1__TargetSectionScope * soap_new_witsml1__TargetSectionScope(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__TargetSectionScope *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__TargetSectionScope)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__TargetSectionScope(struct soap*, const enum witsml1__TargetSectionScope *, const char*, const char*);

inline int soap_write_witsml1__TargetSectionScope(struct soap *soap, enum witsml1__TargetSectionScope const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__TargetSectionScope(soap, p, "witsml1:TargetSectionScope", "witsml1:TargetSectionScope") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__TargetSectionScope * SOAP_FMAC4 soap_get_witsml1__TargetSectionScope(struct soap*, enum witsml1__TargetSectionScope *, const char*, const char*);

inline int soap_read_witsml1__TargetSectionScope(struct soap *soap, enum witsml1__TargetSectionScope *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__TargetSectionScope(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetScope_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetScope_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__TargetScope(struct soap*, enum witsml1__TargetScope *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__TargetScope(struct soap*, const char*, int, const enum witsml1__TargetScope *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__TargetScope2s(struct soap*, enum witsml1__TargetScope);
SOAP_FMAC3 enum witsml1__TargetScope * SOAP_FMAC4 soap_in_witsml1__TargetScope(struct soap*, const char*, enum witsml1__TargetScope *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__TargetScope(struct soap*, const char*, enum witsml1__TargetScope *);

inline enum witsml1__TargetScope * soap_new_witsml1__TargetScope(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__TargetScope *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__TargetScope)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__TargetScope(struct soap*, const enum witsml1__TargetScope *, const char*, const char*);

inline int soap_write_witsml1__TargetScope(struct soap *soap, enum witsml1__TargetScope const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__TargetScope(soap, p, "witsml1:TargetScope", "witsml1:TargetScope") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__TargetScope * SOAP_FMAC4 soap_get_witsml1__TargetScope(struct soap*, enum witsml1__TargetScope *, const char*, const char*);

inline int soap_read_witsml1__TargetScope(struct soap *soap, enum witsml1__TargetScope *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__TargetScope(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetCategory_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TargetCategory_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__TargetCategory(struct soap*, enum witsml1__TargetCategory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__TargetCategory(struct soap*, const char*, int, const enum witsml1__TargetCategory *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__TargetCategory2s(struct soap*, enum witsml1__TargetCategory);
SOAP_FMAC3 enum witsml1__TargetCategory * SOAP_FMAC4 soap_in_witsml1__TargetCategory(struct soap*, const char*, enum witsml1__TargetCategory *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__TargetCategory(struct soap*, const char*, enum witsml1__TargetCategory *);

inline enum witsml1__TargetCategory * soap_new_witsml1__TargetCategory(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__TargetCategory *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__TargetCategory)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__TargetCategory(struct soap*, const enum witsml1__TargetCategory *, const char*, const char*);

inline int soap_write_witsml1__TargetCategory(struct soap *soap, enum witsml1__TargetCategory const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__TargetCategory(soap, p, "witsml1:TargetCategory", "witsml1:TargetCategory") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__TargetCategory * SOAP_FMAC4 soap_get_witsml1__TargetCategory(struct soap*, enum witsml1__TargetCategory *, const char*, const char*);

inline int soap_read_witsml1__TargetCategory(struct soap *soap, enum witsml1__TargetCategory *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__TargetCategory(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurveyToolOperatingMode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurveyToolOperatingMode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__SurveyToolOperatingMode(struct soap*, enum witsml1__SurveyToolOperatingMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__SurveyToolOperatingMode(struct soap*, const char*, int, const enum witsml1__SurveyToolOperatingMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__SurveyToolOperatingMode2s(struct soap*, enum witsml1__SurveyToolOperatingMode);
SOAP_FMAC3 enum witsml1__SurveyToolOperatingMode * SOAP_FMAC4 soap_in_witsml1__SurveyToolOperatingMode(struct soap*, const char*, enum witsml1__SurveyToolOperatingMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__SurveyToolOperatingMode(struct soap*, const char*, enum witsml1__SurveyToolOperatingMode *);

inline enum witsml1__SurveyToolOperatingMode * soap_new_witsml1__SurveyToolOperatingMode(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__SurveyToolOperatingMode *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__SurveyToolOperatingMode)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__SurveyToolOperatingMode(struct soap*, const enum witsml1__SurveyToolOperatingMode *, const char*, const char*);

inline int soap_write_witsml1__SurveyToolOperatingMode(struct soap *soap, enum witsml1__SurveyToolOperatingMode const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__SurveyToolOperatingMode(soap, p, "witsml1:SurveyToolOperatingMode", "witsml1:SurveyToolOperatingMode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__SurveyToolOperatingMode * SOAP_FMAC4 soap_get_witsml1__SurveyToolOperatingMode(struct soap*, enum witsml1__SurveyToolOperatingMode *, const char*, const char*);

inline int soap_read_witsml1__SurveyToolOperatingMode(struct soap *soap, enum witsml1__SurveyToolOperatingMode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__SurveyToolOperatingMode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurfEquipType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SurfEquipType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__SurfEquipType(struct soap*, enum witsml1__SurfEquipType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__SurfEquipType(struct soap*, const char*, int, const enum witsml1__SurfEquipType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__SurfEquipType2s(struct soap*, enum witsml1__SurfEquipType);
SOAP_FMAC3 enum witsml1__SurfEquipType * SOAP_FMAC4 soap_in_witsml1__SurfEquipType(struct soap*, const char*, enum witsml1__SurfEquipType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__SurfEquipType(struct soap*, const char*, enum witsml1__SurfEquipType *);

inline enum witsml1__SurfEquipType * soap_new_witsml1__SurfEquipType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__SurfEquipType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__SurfEquipType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__SurfEquipType(struct soap*, const enum witsml1__SurfEquipType *, const char*, const char*);

inline int soap_write_witsml1__SurfEquipType(struct soap *soap, enum witsml1__SurfEquipType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__SurfEquipType(soap, p, "witsml1:SurfEquipType", "witsml1:SurfEquipType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__SurfEquipType * SOAP_FMAC4 soap_get_witsml1__SurfEquipType(struct soap*, enum witsml1__SurfEquipType *, const char*, const char*);

inline int soap_read_witsml1__SurfEquipType(struct soap *soap, enum witsml1__SurfEquipType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__SurfEquipType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SupportCraft_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SupportCraft_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__SupportCraft(struct soap*, enum witsml1__SupportCraft *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__SupportCraft(struct soap*, const char*, int, const enum witsml1__SupportCraft *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__SupportCraft2s(struct soap*, enum witsml1__SupportCraft);
SOAP_FMAC3 enum witsml1__SupportCraft * SOAP_FMAC4 soap_in_witsml1__SupportCraft(struct soap*, const char*, enum witsml1__SupportCraft *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__SupportCraft(struct soap*, const char*, enum witsml1__SupportCraft *);

inline enum witsml1__SupportCraft * soap_new_witsml1__SupportCraft(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__SupportCraft *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__SupportCraft)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__SupportCraft(struct soap*, const enum witsml1__SupportCraft *, const char*, const char*);

inline int soap_write_witsml1__SupportCraft(struct soap *soap, enum witsml1__SupportCraft const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__SupportCraft(soap, p, "witsml1:SupportCraft", "witsml1:SupportCraft") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__SupportCraft * SOAP_FMAC4 soap_get_witsml1__SupportCraft(struct soap*, enum witsml1__SupportCraft *, const char*, const char*);

inline int soap_read_witsml1__SupportCraft(struct soap *soap, enum witsml1__SupportCraft *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__SupportCraft(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StimStageType(struct soap*, enum witsml1__StimStageType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StimStageType(struct soap*, const char*, int, const enum witsml1__StimStageType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StimStageType2s(struct soap*, enum witsml1__StimStageType);
SOAP_FMAC3 enum witsml1__StimStageType * SOAP_FMAC4 soap_in_witsml1__StimStageType(struct soap*, const char*, enum witsml1__StimStageType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StimStageType(struct soap*, const char*, enum witsml1__StimStageType *);

inline enum witsml1__StimStageType * soap_new_witsml1__StimStageType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StimStageType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StimStageType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StimStageType(struct soap*, const enum witsml1__StimStageType *, const char*, const char*);

inline int soap_write_witsml1__StimStageType(struct soap *soap, enum witsml1__StimStageType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StimStageType(soap, p, "witsml1:StimStageType", "witsml1:StimStageType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StimStageType * SOAP_FMAC4 soap_get_witsml1__StimStageType(struct soap*, enum witsml1__StimStageType *, const char*, const char*);

inline int soap_read_witsml1__StimStageType(struct soap *soap, enum witsml1__StimStageType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StimStageType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageFlowPathType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimStageFlowPathType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StimStageFlowPathType(struct soap*, enum witsml1__StimStageFlowPathType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StimStageFlowPathType(struct soap*, const char*, int, const enum witsml1__StimStageFlowPathType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StimStageFlowPathType2s(struct soap*, enum witsml1__StimStageFlowPathType);
SOAP_FMAC3 enum witsml1__StimStageFlowPathType * SOAP_FMAC4 soap_in_witsml1__StimStageFlowPathType(struct soap*, const char*, enum witsml1__StimStageFlowPathType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StimStageFlowPathType(struct soap*, const char*, enum witsml1__StimStageFlowPathType *);

inline enum witsml1__StimStageFlowPathType * soap_new_witsml1__StimStageFlowPathType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StimStageFlowPathType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StimStageFlowPathType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StimStageFlowPathType(struct soap*, const enum witsml1__StimStageFlowPathType *, const char*, const char*);

inline int soap_write_witsml1__StimStageFlowPathType(struct soap *soap, enum witsml1__StimStageFlowPathType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StimStageFlowPathType(soap, p, "witsml1:StimStageFlowPathType", "witsml1:StimStageFlowPathType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StimStageFlowPathType * SOAP_FMAC4 soap_get_witsml1__StimStageFlowPathType(struct soap*, enum witsml1__StimStageFlowPathType *, const char*, const char*);

inline int soap_read_witsml1__StimStageFlowPathType(struct soap *soap, enum witsml1__StimStageFlowPathType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StimStageFlowPathType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimProppantType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimProppantType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StimProppantType(struct soap*, enum witsml1__StimProppantType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StimProppantType(struct soap*, const char*, int, const enum witsml1__StimProppantType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StimProppantType2s(struct soap*, enum witsml1__StimProppantType);
SOAP_FMAC3 enum witsml1__StimProppantType * SOAP_FMAC4 soap_in_witsml1__StimProppantType(struct soap*, const char*, enum witsml1__StimProppantType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StimProppantType(struct soap*, const char*, enum witsml1__StimProppantType *);

inline enum witsml1__StimProppantType * soap_new_witsml1__StimProppantType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StimProppantType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StimProppantType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StimProppantType(struct soap*, const enum witsml1__StimProppantType *, const char*, const char*);

inline int soap_write_witsml1__StimProppantType(struct soap *soap, enum witsml1__StimProppantType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StimProppantType(soap, p, "witsml1:StimProppantType", "witsml1:StimProppantType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StimProppantType * SOAP_FMAC4 soap_get_witsml1__StimProppantType(struct soap*, enum witsml1__StimProppantType *, const char*, const char*);

inline int soap_read_witsml1__StimProppantType(struct soap *soap, enum witsml1__StimProppantType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StimProppantType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StimFluidType(struct soap*, enum witsml1__StimFluidType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StimFluidType(struct soap*, const char*, int, const enum witsml1__StimFluidType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StimFluidType2s(struct soap*, enum witsml1__StimFluidType);
SOAP_FMAC3 enum witsml1__StimFluidType * SOAP_FMAC4 soap_in_witsml1__StimFluidType(struct soap*, const char*, enum witsml1__StimFluidType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StimFluidType(struct soap*, const char*, enum witsml1__StimFluidType *);

inline enum witsml1__StimFluidType * soap_new_witsml1__StimFluidType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StimFluidType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StimFluidType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StimFluidType(struct soap*, const enum witsml1__StimFluidType *, const char*, const char*);

inline int soap_write_witsml1__StimFluidType(struct soap *soap, enum witsml1__StimFluidType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StimFluidType(soap, p, "witsml1:StimFluidType", "witsml1:StimFluidType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StimFluidType * SOAP_FMAC4 soap_get_witsml1__StimFluidType(struct soap*, enum witsml1__StimFluidType *, const char*, const char*);

inline int soap_read_witsml1__StimFluidType(struct soap *soap, enum witsml1__StimFluidType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StimFluidType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidSubtype_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimFluidSubtype_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StimFluidSubtype(struct soap*, enum witsml1__StimFluidSubtype *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StimFluidSubtype(struct soap*, const char*, int, const enum witsml1__StimFluidSubtype *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StimFluidSubtype2s(struct soap*, enum witsml1__StimFluidSubtype);
SOAP_FMAC3 enum witsml1__StimFluidSubtype * SOAP_FMAC4 soap_in_witsml1__StimFluidSubtype(struct soap*, const char*, enum witsml1__StimFluidSubtype *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StimFluidSubtype(struct soap*, const char*, enum witsml1__StimFluidSubtype *);

inline enum witsml1__StimFluidSubtype * soap_new_witsml1__StimFluidSubtype(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StimFluidSubtype *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StimFluidSubtype)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StimFluidSubtype(struct soap*, const enum witsml1__StimFluidSubtype *, const char*, const char*);

inline int soap_write_witsml1__StimFluidSubtype(struct soap *soap, enum witsml1__StimFluidSubtype const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StimFluidSubtype(soap, p, "witsml1:StimFluidSubtype", "witsml1:StimFluidSubtype") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StimFluidSubtype * SOAP_FMAC4 soap_get_witsml1__StimFluidSubtype(struct soap*, enum witsml1__StimFluidSubtype *, const char*, const char*);

inline int soap_read_witsml1__StimFluidSubtype(struct soap *soap, enum witsml1__StimFluidSubtype *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StimFluidSubtype(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAnalysisMethod_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAnalysisMethod_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StimAnalysisMethod(struct soap*, enum witsml1__StimAnalysisMethod *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StimAnalysisMethod(struct soap*, const char*, int, const enum witsml1__StimAnalysisMethod *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StimAnalysisMethod2s(struct soap*, enum witsml1__StimAnalysisMethod);
SOAP_FMAC3 enum witsml1__StimAnalysisMethod * SOAP_FMAC4 soap_in_witsml1__StimAnalysisMethod(struct soap*, const char*, enum witsml1__StimAnalysisMethod *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StimAnalysisMethod(struct soap*, const char*, enum witsml1__StimAnalysisMethod *);

inline enum witsml1__StimAnalysisMethod * soap_new_witsml1__StimAnalysisMethod(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StimAnalysisMethod *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StimAnalysisMethod)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StimAnalysisMethod(struct soap*, const enum witsml1__StimAnalysisMethod *, const char*, const char*);

inline int soap_write_witsml1__StimAnalysisMethod(struct soap *soap, enum witsml1__StimAnalysisMethod const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StimAnalysisMethod(soap, p, "witsml1:StimAnalysisMethod", "witsml1:StimAnalysisMethod") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StimAnalysisMethod * SOAP_FMAC4 soap_get_witsml1__StimAnalysisMethod(struct soap*, enum witsml1__StimAnalysisMethod *, const char*, const char*);

inline int soap_read_witsml1__StimAnalysisMethod(struct soap *soap, enum witsml1__StimAnalysisMethod *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StimAnalysisMethod(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAdditiveType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StimAdditiveType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StimAdditiveType(struct soap*, enum witsml1__StimAdditiveType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StimAdditiveType(struct soap*, const char*, int, const enum witsml1__StimAdditiveType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StimAdditiveType2s(struct soap*, enum witsml1__StimAdditiveType);
SOAP_FMAC3 enum witsml1__StimAdditiveType * SOAP_FMAC4 soap_in_witsml1__StimAdditiveType(struct soap*, const char*, enum witsml1__StimAdditiveType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StimAdditiveType(struct soap*, const char*, enum witsml1__StimAdditiveType *);

inline enum witsml1__StimAdditiveType * soap_new_witsml1__StimAdditiveType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StimAdditiveType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StimAdditiveType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StimAdditiveType(struct soap*, const enum witsml1__StimAdditiveType *, const char*, const char*);

inline int soap_write_witsml1__StimAdditiveType(struct soap *soap, enum witsml1__StimAdditiveType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StimAdditiveType(soap, p, "witsml1:StimAdditiveType", "witsml1:StimAdditiveType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StimAdditiveType * SOAP_FMAC4 soap_get_witsml1__StimAdditiveType(struct soap*, enum witsml1__StimAdditiveType *, const char*, const char*);

inline int soap_read_witsml1__StimAdditiveType(struct soap *soap, enum witsml1__StimAdditiveType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StimAdditiveType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StateDetailActivity_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StateDetailActivity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StateDetailActivity(struct soap*, enum witsml1__StateDetailActivity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StateDetailActivity(struct soap*, const char*, int, const enum witsml1__StateDetailActivity *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StateDetailActivity2s(struct soap*, enum witsml1__StateDetailActivity);
SOAP_FMAC3 enum witsml1__StateDetailActivity * SOAP_FMAC4 soap_in_witsml1__StateDetailActivity(struct soap*, const char*, enum witsml1__StateDetailActivity *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StateDetailActivity(struct soap*, const char*, enum witsml1__StateDetailActivity *);

inline enum witsml1__StateDetailActivity * soap_new_witsml1__StateDetailActivity(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StateDetailActivity *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StateDetailActivity)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StateDetailActivity(struct soap*, const enum witsml1__StateDetailActivity *, const char*, const char*);

inline int soap_write_witsml1__StateDetailActivity(struct soap *soap, enum witsml1__StateDetailActivity const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StateDetailActivity(soap, p, "witsml1:StateDetailActivity", "witsml1:StateDetailActivity") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StateDetailActivity * SOAP_FMAC4 soap_get_witsml1__StateDetailActivity(struct soap*, enum witsml1__StateDetailActivity *, const char*, const char*);

inline int soap_read_witsml1__StateDetailActivity(struct soap *soap, enum witsml1__StateDetailActivity *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StateDetailActivity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowSpeed_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowSpeed_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ShowSpeed(struct soap*, enum witsml1__ShowSpeed *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ShowSpeed(struct soap*, const char*, int, const enum witsml1__ShowSpeed *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ShowSpeed2s(struct soap*, enum witsml1__ShowSpeed);
SOAP_FMAC3 enum witsml1__ShowSpeed * SOAP_FMAC4 soap_in_witsml1__ShowSpeed(struct soap*, const char*, enum witsml1__ShowSpeed *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ShowSpeed(struct soap*, const char*, enum witsml1__ShowSpeed *);

inline enum witsml1__ShowSpeed * soap_new_witsml1__ShowSpeed(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ShowSpeed *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ShowSpeed)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ShowSpeed(struct soap*, const enum witsml1__ShowSpeed *, const char*, const char*);

inline int soap_write_witsml1__ShowSpeed(struct soap *soap, enum witsml1__ShowSpeed const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ShowSpeed(soap, p, "witsml1:ShowSpeed", "witsml1:ShowSpeed") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ShowSpeed * SOAP_FMAC4 soap_get_witsml1__ShowSpeed(struct soap*, enum witsml1__ShowSpeed *, const char*, const char*);

inline int soap_read_witsml1__ShowSpeed(struct soap *soap, enum witsml1__ShowSpeed *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ShowSpeed(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowRating_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowRating_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ShowRating(struct soap*, enum witsml1__ShowRating *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ShowRating(struct soap*, const char*, int, const enum witsml1__ShowRating *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ShowRating2s(struct soap*, enum witsml1__ShowRating);
SOAP_FMAC3 enum witsml1__ShowRating * SOAP_FMAC4 soap_in_witsml1__ShowRating(struct soap*, const char*, enum witsml1__ShowRating *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ShowRating(struct soap*, const char*, enum witsml1__ShowRating *);

inline enum witsml1__ShowRating * soap_new_witsml1__ShowRating(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ShowRating *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ShowRating)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ShowRating(struct soap*, const enum witsml1__ShowRating *, const char*, const char*);

inline int soap_write_witsml1__ShowRating(struct soap *soap, enum witsml1__ShowRating const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ShowRating(soap, p, "witsml1:ShowRating", "witsml1:ShowRating") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ShowRating * SOAP_FMAC4 soap_get_witsml1__ShowRating(struct soap*, enum witsml1__ShowRating *, const char*, const char*);

inline int soap_read_witsml1__ShowRating(struct soap *soap, enum witsml1__ShowRating *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ShowRating(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowLevel_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowLevel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ShowLevel(struct soap*, enum witsml1__ShowLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ShowLevel(struct soap*, const char*, int, const enum witsml1__ShowLevel *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ShowLevel2s(struct soap*, enum witsml1__ShowLevel);
SOAP_FMAC3 enum witsml1__ShowLevel * SOAP_FMAC4 soap_in_witsml1__ShowLevel(struct soap*, const char*, enum witsml1__ShowLevel *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ShowLevel(struct soap*, const char*, enum witsml1__ShowLevel *);

inline enum witsml1__ShowLevel * soap_new_witsml1__ShowLevel(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ShowLevel *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ShowLevel)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ShowLevel(struct soap*, const enum witsml1__ShowLevel *, const char*, const char*);

inline int soap_write_witsml1__ShowLevel(struct soap *soap, enum witsml1__ShowLevel const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ShowLevel(soap, p, "witsml1:ShowLevel", "witsml1:ShowLevel") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ShowLevel * SOAP_FMAC4 soap_get_witsml1__ShowLevel(struct soap*, enum witsml1__ShowLevel *, const char*, const char*);

inline int soap_read_witsml1__ShowLevel(struct soap *soap, enum witsml1__ShowLevel *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ShowLevel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowFluorescence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ShowFluorescence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ShowFluorescence(struct soap*, enum witsml1__ShowFluorescence *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ShowFluorescence(struct soap*, const char*, int, const enum witsml1__ShowFluorescence *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ShowFluorescence2s(struct soap*, enum witsml1__ShowFluorescence);
SOAP_FMAC3 enum witsml1__ShowFluorescence * SOAP_FMAC4 soap_in_witsml1__ShowFluorescence(struct soap*, const char*, enum witsml1__ShowFluorescence *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ShowFluorescence(struct soap*, const char*, enum witsml1__ShowFluorescence *);

inline enum witsml1__ShowFluorescence * soap_new_witsml1__ShowFluorescence(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ShowFluorescence *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ShowFluorescence)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ShowFluorescence(struct soap*, const enum witsml1__ShowFluorescence *, const char*, const char*);

inline int soap_write_witsml1__ShowFluorescence(struct soap *soap, enum witsml1__ShowFluorescence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ShowFluorescence(soap, p, "witsml1:ShowFluorescence", "witsml1:ShowFluorescence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ShowFluorescence * SOAP_FMAC4 soap_get_witsml1__ShowFluorescence(struct soap*, enum witsml1__ShowFluorescence *, const char*, const char*);

inline int soap_read_witsml1__ShowFluorescence(struct soap *soap, enum witsml1__ShowFluorescence *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ShowFluorescence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ScrType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ScrType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ScrType(struct soap*, enum witsml1__ScrType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ScrType(struct soap*, const char*, int, const enum witsml1__ScrType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ScrType2s(struct soap*, enum witsml1__ScrType);
SOAP_FMAC3 enum witsml1__ScrType * SOAP_FMAC4 soap_in_witsml1__ScrType(struct soap*, const char*, enum witsml1__ScrType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ScrType(struct soap*, const char*, enum witsml1__ScrType *);

inline enum witsml1__ScrType * soap_new_witsml1__ScrType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ScrType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ScrType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ScrType(struct soap*, const enum witsml1__ScrType *, const char*, const char*);

inline int soap_write_witsml1__ScrType(struct soap *soap, enum witsml1__ScrType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ScrType(soap, p, "witsml1:ScrType", "witsml1:ScrType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ScrType * SOAP_FMAC4 soap_get_witsml1__ScrType(struct soap*, enum witsml1__ScrType *, const char*, const char*);

inline int soap_read_witsml1__ScrType(struct soap *soap, enum witsml1__ScrType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ScrType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__RiskType(struct soap*, enum witsml1__RiskType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__RiskType(struct soap*, const char*, int, const enum witsml1__RiskType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__RiskType2s(struct soap*, enum witsml1__RiskType);
SOAP_FMAC3 enum witsml1__RiskType * SOAP_FMAC4 soap_in_witsml1__RiskType(struct soap*, const char*, enum witsml1__RiskType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__RiskType(struct soap*, const char*, enum witsml1__RiskType *);

inline enum witsml1__RiskType * soap_new_witsml1__RiskType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__RiskType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__RiskType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__RiskType(struct soap*, const enum witsml1__RiskType *, const char*, const char*);

inline int soap_write_witsml1__RiskType(struct soap *soap, enum witsml1__RiskType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__RiskType(soap, p, "witsml1:RiskType", "witsml1:RiskType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__RiskType * SOAP_FMAC4 soap_get_witsml1__RiskType(struct soap*, enum witsml1__RiskType *, const char*, const char*);

inline int soap_read_witsml1__RiskType(struct soap *soap, enum witsml1__RiskType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__RiskType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskSubCategory_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskSubCategory_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__RiskSubCategory(struct soap*, enum witsml1__RiskSubCategory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__RiskSubCategory(struct soap*, const char*, int, const enum witsml1__RiskSubCategory *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__RiskSubCategory2s(struct soap*, enum witsml1__RiskSubCategory);
SOAP_FMAC3 enum witsml1__RiskSubCategory * SOAP_FMAC4 soap_in_witsml1__RiskSubCategory(struct soap*, const char*, enum witsml1__RiskSubCategory *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__RiskSubCategory(struct soap*, const char*, enum witsml1__RiskSubCategory *);

inline enum witsml1__RiskSubCategory * soap_new_witsml1__RiskSubCategory(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__RiskSubCategory *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__RiskSubCategory)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__RiskSubCategory(struct soap*, const enum witsml1__RiskSubCategory *, const char*, const char*);

inline int soap_write_witsml1__RiskSubCategory(struct soap *soap, enum witsml1__RiskSubCategory const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__RiskSubCategory(soap, p, "witsml1:RiskSubCategory", "witsml1:RiskSubCategory") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__RiskSubCategory * SOAP_FMAC4 soap_get_witsml1__RiskSubCategory(struct soap*, enum witsml1__RiskSubCategory *, const char*, const char*);

inline int soap_read_witsml1__RiskSubCategory(struct soap *soap, enum witsml1__RiskSubCategory *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__RiskSubCategory(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskCategory_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskCategory_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__RiskCategory(struct soap*, enum witsml1__RiskCategory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__RiskCategory(struct soap*, const char*, int, const enum witsml1__RiskCategory *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__RiskCategory2s(struct soap*, enum witsml1__RiskCategory);
SOAP_FMAC3 enum witsml1__RiskCategory * SOAP_FMAC4 soap_in_witsml1__RiskCategory(struct soap*, const char*, enum witsml1__RiskCategory *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__RiskCategory(struct soap*, const char*, enum witsml1__RiskCategory *);

inline enum witsml1__RiskCategory * soap_new_witsml1__RiskCategory(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__RiskCategory *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__RiskCategory)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__RiskCategory(struct soap*, const enum witsml1__RiskCategory *, const char*, const char*);

inline int soap_write_witsml1__RiskCategory(struct soap *soap, enum witsml1__RiskCategory const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__RiskCategory(soap, p, "witsml1:RiskCategory", "witsml1:RiskCategory") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__RiskCategory * SOAP_FMAC4 soap_get_witsml1__RiskCategory(struct soap*, enum witsml1__RiskCategory *, const char*, const char*);

inline int soap_read_witsml1__RiskCategory(struct soap *soap, enum witsml1__RiskCategory *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__RiskCategory(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskAffectedPersonnel_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RiskAffectedPersonnel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__RiskAffectedPersonnel(struct soap*, enum witsml1__RiskAffectedPersonnel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__RiskAffectedPersonnel(struct soap*, const char*, int, const enum witsml1__RiskAffectedPersonnel *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__RiskAffectedPersonnel2s(struct soap*, enum witsml1__RiskAffectedPersonnel);
SOAP_FMAC3 enum witsml1__RiskAffectedPersonnel * SOAP_FMAC4 soap_in_witsml1__RiskAffectedPersonnel(struct soap*, const char*, enum witsml1__RiskAffectedPersonnel *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__RiskAffectedPersonnel(struct soap*, const char*, enum witsml1__RiskAffectedPersonnel *);

inline enum witsml1__RiskAffectedPersonnel * soap_new_witsml1__RiskAffectedPersonnel(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__RiskAffectedPersonnel *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__RiskAffectedPersonnel)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__RiskAffectedPersonnel(struct soap*, const enum witsml1__RiskAffectedPersonnel *, const char*, const char*);

inline int soap_write_witsml1__RiskAffectedPersonnel(struct soap *soap, enum witsml1__RiskAffectedPersonnel const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__RiskAffectedPersonnel(soap, p, "witsml1:RiskAffectedPersonnel", "witsml1:RiskAffectedPersonnel") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__RiskAffectedPersonnel * SOAP_FMAC4 soap_get_witsml1__RiskAffectedPersonnel(struct soap*, enum witsml1__RiskAffectedPersonnel *, const char*, const char*);

inline int soap_read_witsml1__RiskAffectedPersonnel(struct soap *soap, enum witsml1__RiskAffectedPersonnel *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__RiskAffectedPersonnel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RigType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RigType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__RigType(struct soap*, enum witsml1__RigType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__RigType(struct soap*, const char*, int, const enum witsml1__RigType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__RigType2s(struct soap*, enum witsml1__RigType);
SOAP_FMAC3 enum witsml1__RigType * SOAP_FMAC4 soap_in_witsml1__RigType(struct soap*, const char*, enum witsml1__RigType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__RigType(struct soap*, const char*, enum witsml1__RigType *);

inline enum witsml1__RigType * soap_new_witsml1__RigType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__RigType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__RigType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__RigType(struct soap*, const enum witsml1__RigType *, const char*, const char*);

inline int soap_write_witsml1__RigType(struct soap *soap, enum witsml1__RigType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__RigType(soap, p, "witsml1:RigType", "witsml1:RigType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__RigType * SOAP_FMAC4 soap_get_witsml1__RigType(struct soap*, enum witsml1__RigType *, const char*, const char*);

inline int soap_read_witsml1__RigType(struct soap *soap, enum witsml1__RigType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__RigType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ReadingKind_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ReadingKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ReadingKind(struct soap*, enum witsml1__ReadingKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ReadingKind(struct soap*, const char*, int, const enum witsml1__ReadingKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ReadingKind2s(struct soap*, enum witsml1__ReadingKind);
SOAP_FMAC3 enum witsml1__ReadingKind * SOAP_FMAC4 soap_in_witsml1__ReadingKind(struct soap*, const char*, enum witsml1__ReadingKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ReadingKind(struct soap*, const char*, enum witsml1__ReadingKind *);

inline enum witsml1__ReadingKind * soap_new_witsml1__ReadingKind(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ReadingKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ReadingKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ReadingKind(struct soap*, const enum witsml1__ReadingKind *, const char*, const char*);

inline int soap_write_witsml1__ReadingKind(struct soap *soap, enum witsml1__ReadingKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ReadingKind(soap, p, "witsml1:ReadingKind", "witsml1:ReadingKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ReadingKind * SOAP_FMAC4 soap_get_witsml1__ReadingKind(struct soap*, enum witsml1__ReadingKind *, const char*, const char*);

inline int soap_read_witsml1__ReadingKind(struct soap *soap, enum witsml1__ReadingKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ReadingKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpOpType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpOpType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PumpOpType(struct soap*, enum witsml1__PumpOpType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PumpOpType(struct soap*, const char*, int, const enum witsml1__PumpOpType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PumpOpType2s(struct soap*, enum witsml1__PumpOpType);
SOAP_FMAC3 enum witsml1__PumpOpType * SOAP_FMAC4 soap_in_witsml1__PumpOpType(struct soap*, const char*, enum witsml1__PumpOpType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PumpOpType(struct soap*, const char*, enum witsml1__PumpOpType *);

inline enum witsml1__PumpOpType * soap_new_witsml1__PumpOpType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PumpOpType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PumpOpType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PumpOpType(struct soap*, const enum witsml1__PumpOpType *, const char*, const char*);

inline int soap_write_witsml1__PumpOpType(struct soap *soap, enum witsml1__PumpOpType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PumpOpType(soap, p, "witsml1:PumpOpType", "witsml1:PumpOpType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PumpOpType * SOAP_FMAC4 soap_get_witsml1__PumpOpType(struct soap*, enum witsml1__PumpOpType *, const char*, const char*);

inline int soap_read_witsml1__PumpOpType(struct soap *soap, enum witsml1__PumpOpType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PumpOpType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PumpType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PumpType(struct soap*, enum witsml1__PumpType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PumpType(struct soap*, const char*, int, const enum witsml1__PumpType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PumpType2s(struct soap*, enum witsml1__PumpType);
SOAP_FMAC3 enum witsml1__PumpType * SOAP_FMAC4 soap_in_witsml1__PumpType(struct soap*, const char*, enum witsml1__PumpType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PumpType(struct soap*, const char*, enum witsml1__PumpType *);

inline enum witsml1__PumpType * soap_new_witsml1__PumpType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PumpType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PumpType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PumpType(struct soap*, const enum witsml1__PumpType *, const char*, const char*);

inline int soap_write_witsml1__PumpType(struct soap *soap, enum witsml1__PumpType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PumpType(soap, p, "witsml1:PumpType", "witsml1:PumpType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PumpType * SOAP_FMAC4 soap_get_witsml1__PumpType(struct soap*, enum witsml1__PumpType *, const char*, const char*);

inline int soap_read_witsml1__PumpType(struct soap *soap, enum witsml1__PumpType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PumpType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrincipalMeridian_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrincipalMeridian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PrincipalMeridian(struct soap*, enum witsml1__PrincipalMeridian *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PrincipalMeridian(struct soap*, const char*, int, const enum witsml1__PrincipalMeridian *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PrincipalMeridian2s(struct soap*, enum witsml1__PrincipalMeridian);
SOAP_FMAC3 enum witsml1__PrincipalMeridian * SOAP_FMAC4 soap_in_witsml1__PrincipalMeridian(struct soap*, const char*, enum witsml1__PrincipalMeridian *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PrincipalMeridian(struct soap*, const char*, enum witsml1__PrincipalMeridian *);

inline enum witsml1__PrincipalMeridian * soap_new_witsml1__PrincipalMeridian(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PrincipalMeridian *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PrincipalMeridian)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PrincipalMeridian(struct soap*, const enum witsml1__PrincipalMeridian *, const char*, const char*);

inline int soap_write_witsml1__PrincipalMeridian(struct soap *soap, enum witsml1__PrincipalMeridian const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PrincipalMeridian(soap, p, "witsml1:PrincipalMeridian", "witsml1:PrincipalMeridian") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PrincipalMeridian * SOAP_FMAC4 soap_get_witsml1__PrincipalMeridian(struct soap*, enum witsml1__PrincipalMeridian *, const char*, const char*);

inline int soap_read_witsml1__PrincipalMeridian(struct soap *soap, enum witsml1__PrincipalMeridian *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PrincipalMeridian(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PresTestType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PresTestType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PresTestType(struct soap*, enum witsml1__PresTestType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PresTestType(struct soap*, const char*, int, const enum witsml1__PresTestType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PresTestType2s(struct soap*, enum witsml1__PresTestType);
SOAP_FMAC3 enum witsml1__PresTestType * SOAP_FMAC4 soap_in_witsml1__PresTestType(struct soap*, const char*, enum witsml1__PresTestType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PresTestType(struct soap*, const char*, enum witsml1__PresTestType *);

inline enum witsml1__PresTestType * soap_new_witsml1__PresTestType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PresTestType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PresTestType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PresTestType(struct soap*, const enum witsml1__PresTestType *, const char*, const char*);

inline int soap_write_witsml1__PresTestType(struct soap *soap, enum witsml1__PresTestType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PresTestType(soap, p, "witsml1:PresTestType", "witsml1:PresTestType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PresTestType * SOAP_FMAC4 soap_get_witsml1__PresTestType(struct soap*, enum witsml1__PresTestType *, const char*, const char*);

inline int soap_read_witsml1__PresTestType(struct soap *soap, enum witsml1__PresTestType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PresTestType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ProjectionVariantsObliqueMercator_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ProjectionVariantsObliqueMercator_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ProjectionVariantsObliqueMercator(struct soap*, enum witsml1__ProjectionVariantsObliqueMercator *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ProjectionVariantsObliqueMercator(struct soap*, const char*, int, const enum witsml1__ProjectionVariantsObliqueMercator *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ProjectionVariantsObliqueMercator2s(struct soap*, enum witsml1__ProjectionVariantsObliqueMercator);
SOAP_FMAC3 enum witsml1__ProjectionVariantsObliqueMercator * SOAP_FMAC4 soap_in_witsml1__ProjectionVariantsObliqueMercator(struct soap*, const char*, enum witsml1__ProjectionVariantsObliqueMercator *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ProjectionVariantsObliqueMercator(struct soap*, const char*, enum witsml1__ProjectionVariantsObliqueMercator *);

inline enum witsml1__ProjectionVariantsObliqueMercator * soap_new_witsml1__ProjectionVariantsObliqueMercator(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ProjectionVariantsObliqueMercator *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ProjectionVariantsObliqueMercator)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ProjectionVariantsObliqueMercator(struct soap*, const enum witsml1__ProjectionVariantsObliqueMercator *, const char*, const char*);

inline int soap_write_witsml1__ProjectionVariantsObliqueMercator(struct soap *soap, enum witsml1__ProjectionVariantsObliqueMercator const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ProjectionVariantsObliqueMercator(soap, p, "witsml1:ProjectionVariantsObliqueMercator", "witsml1:ProjectionVariantsObliqueMercator") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ProjectionVariantsObliqueMercator * SOAP_FMAC4 soap_get_witsml1__ProjectionVariantsObliqueMercator(struct soap*, enum witsml1__ProjectionVariantsObliqueMercator *, const char*, const char*);

inline int soap_read_witsml1__ProjectionVariantsObliqueMercator(struct soap *soap, enum witsml1__ProjectionVariantsObliqueMercator *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ProjectionVariantsObliqueMercator(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Projection_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Projection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__Projection(struct soap*, enum witsml1__Projection *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__Projection(struct soap*, const char*, int, const enum witsml1__Projection *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__Projection2s(struct soap*, enum witsml1__Projection);
SOAP_FMAC3 enum witsml1__Projection * SOAP_FMAC4 soap_in_witsml1__Projection(struct soap*, const char*, enum witsml1__Projection *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__Projection(struct soap*, const char*, enum witsml1__Projection *);

inline enum witsml1__Projection * soap_new_witsml1__Projection(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__Projection *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__Projection)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__Projection(struct soap*, const enum witsml1__Projection *, const char*, const char*);

inline int soap_write_witsml1__Projection(struct soap *soap, enum witsml1__Projection const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__Projection(soap, p, "witsml1:Projection", "witsml1:Projection") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__Projection * SOAP_FMAC4 soap_get_witsml1__Projection(struct soap*, enum witsml1__Projection *, const char*, const char*);

inline int soap_read_witsml1__Projection(struct soap *soap, enum witsml1__Projection *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__Projection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrimitiveType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PrimitiveType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PrimitiveType(struct soap*, enum witsml1__PrimitiveType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PrimitiveType(struct soap*, const char*, int, const enum witsml1__PrimitiveType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PrimitiveType2s(struct soap*, enum witsml1__PrimitiveType);
SOAP_FMAC3 enum witsml1__PrimitiveType * SOAP_FMAC4 soap_in_witsml1__PrimitiveType(struct soap*, const char*, enum witsml1__PrimitiveType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PrimitiveType(struct soap*, const char*, enum witsml1__PrimitiveType *);

inline enum witsml1__PrimitiveType * soap_new_witsml1__PrimitiveType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PrimitiveType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PrimitiveType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PrimitiveType(struct soap*, const enum witsml1__PrimitiveType *, const char*, const char*);

inline int soap_write_witsml1__PrimitiveType(struct soap *soap, enum witsml1__PrimitiveType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PrimitiveType(soap, p, "witsml1:PrimitiveType", "witsml1:PrimitiveType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PrimitiveType * SOAP_FMAC4 soap_get_witsml1__PrimitiveType(struct soap*, enum witsml1__PrimitiveType *, const char*, const char*);

inline int soap_read_witsml1__PrimitiveType(struct soap *soap, enum witsml1__PrimitiveType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PrimitiveType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PitType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PitType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PitType(struct soap*, enum witsml1__PitType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PitType(struct soap*, const char*, int, const enum witsml1__PitType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PitType2s(struct soap*, enum witsml1__PitType);
SOAP_FMAC3 enum witsml1__PitType * SOAP_FMAC4 soap_in_witsml1__PitType(struct soap*, const char*, enum witsml1__PitType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PitType(struct soap*, const char*, enum witsml1__PitType *);

inline enum witsml1__PitType * soap_new_witsml1__PitType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PitType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PitType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PitType(struct soap*, const enum witsml1__PitType *, const char*, const char*);

inline int soap_write_witsml1__PitType(struct soap *soap, enum witsml1__PitType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PitType(soap, p, "witsml1:PitType", "witsml1:PitType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PitType * SOAP_FMAC4 soap_get_witsml1__PitType(struct soap*, enum witsml1__PitType *, const char*, const char*);

inline int soap_read_witsml1__PitType(struct soap *soap, enum witsml1__PitType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PitType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PIDXCommodityCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PIDXCommodityCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PIDXCommodityCode(struct soap*, enum witsml1__PIDXCommodityCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PIDXCommodityCode(struct soap*, const char*, int, const enum witsml1__PIDXCommodityCode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PIDXCommodityCode2s(struct soap*, enum witsml1__PIDXCommodityCode);
SOAP_FMAC3 enum witsml1__PIDXCommodityCode * SOAP_FMAC4 soap_in_witsml1__PIDXCommodityCode(struct soap*, const char*, enum witsml1__PIDXCommodityCode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PIDXCommodityCode(struct soap*, const char*, enum witsml1__PIDXCommodityCode *);

inline enum witsml1__PIDXCommodityCode * soap_new_witsml1__PIDXCommodityCode(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PIDXCommodityCode *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PIDXCommodityCode)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PIDXCommodityCode(struct soap*, const enum witsml1__PIDXCommodityCode *, const char*, const char*);

inline int soap_write_witsml1__PIDXCommodityCode(struct soap *soap, enum witsml1__PIDXCommodityCode const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PIDXCommodityCode(soap, p, "witsml1:PIDXCommodityCode", "witsml1:PIDXCommodityCode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PIDXCommodityCode * SOAP_FMAC4 soap_get_witsml1__PIDXCommodityCode(struct soap*, enum witsml1__PIDXCommodityCode *, const char*, const char*);

inline int soap_read_witsml1__PIDXCommodityCode(struct soap *soap, enum witsml1__PIDXCommodityCode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PIDXCommodityCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__OpsReportVersion_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__OpsReportVersion_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__OpsReportVersion(struct soap*, enum witsml1__OpsReportVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__OpsReportVersion(struct soap*, const char*, int, const enum witsml1__OpsReportVersion *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__OpsReportVersion2s(struct soap*, enum witsml1__OpsReportVersion);
SOAP_FMAC3 enum witsml1__OpsReportVersion * SOAP_FMAC4 soap_in_witsml1__OpsReportVersion(struct soap*, const char*, enum witsml1__OpsReportVersion *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__OpsReportVersion(struct soap*, const char*, enum witsml1__OpsReportVersion *);

inline enum witsml1__OpsReportVersion * soap_new_witsml1__OpsReportVersion(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__OpsReportVersion *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__OpsReportVersion)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__OpsReportVersion(struct soap*, const enum witsml1__OpsReportVersion *, const char*, const char*);

inline int soap_write_witsml1__OpsReportVersion(struct soap *soap, enum witsml1__OpsReportVersion const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__OpsReportVersion(soap, p, "witsml1:OpsReportVersion", "witsml1:OpsReportVersion") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__OpsReportVersion * SOAP_FMAC4 soap_get_witsml1__OpsReportVersion(struct soap*, enum witsml1__OpsReportVersion *, const char*, const char*);

inline int soap_read_witsml1__OpsReportVersion(struct soap *soap, enum witsml1__OpsReportVersion *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__OpsReportVersion(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NozzleType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NozzleType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__NozzleType(struct soap*, enum witsml1__NozzleType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__NozzleType(struct soap*, const char*, int, const enum witsml1__NozzleType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__NozzleType2s(struct soap*, enum witsml1__NozzleType);
SOAP_FMAC3 enum witsml1__NozzleType * SOAP_FMAC4 soap_in_witsml1__NozzleType(struct soap*, const char*, enum witsml1__NozzleType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__NozzleType(struct soap*, const char*, enum witsml1__NozzleType *);

inline enum witsml1__NozzleType * soap_new_witsml1__NozzleType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__NozzleType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__NozzleType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__NozzleType(struct soap*, const enum witsml1__NozzleType *, const char*, const char*);

inline int soap_write_witsml1__NozzleType(struct soap *soap, enum witsml1__NozzleType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__NozzleType(soap, p, "witsml1:NozzleType", "witsml1:NozzleType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__NozzleType * SOAP_FMAC4 soap_get_witsml1__NozzleType(struct soap*, enum witsml1__NozzleType *, const char*, const char*);

inline int soap_read_witsml1__NozzleType(struct soap *soap, enum witsml1__NozzleType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__NozzleType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NorthOrSouth_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NorthOrSouth_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__NorthOrSouth(struct soap*, enum witsml1__NorthOrSouth *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__NorthOrSouth(struct soap*, const char*, int, const enum witsml1__NorthOrSouth *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__NorthOrSouth2s(struct soap*, enum witsml1__NorthOrSouth);
SOAP_FMAC3 enum witsml1__NorthOrSouth * SOAP_FMAC4 soap_in_witsml1__NorthOrSouth(struct soap*, const char*, enum witsml1__NorthOrSouth *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__NorthOrSouth(struct soap*, const char*, enum witsml1__NorthOrSouth *);

inline enum witsml1__NorthOrSouth * soap_new_witsml1__NorthOrSouth(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__NorthOrSouth *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__NorthOrSouth)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__NorthOrSouth(struct soap*, const enum witsml1__NorthOrSouth *, const char*, const char*);

inline int soap_write_witsml1__NorthOrSouth(struct soap *soap, enum witsml1__NorthOrSouth const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__NorthOrSouth(soap, p, "witsml1:NorthOrSouth", "witsml1:NorthOrSouth") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__NorthOrSouth * SOAP_FMAC4 soap_get_witsml1__NorthOrSouth(struct soap*, enum witsml1__NorthOrSouth *, const char*, const char*);

inline int soap_read_witsml1__NorthOrSouth(struct soap *soap, enum witsml1__NorthOrSouth *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__NorthOrSouth(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NADTypes_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NADTypes_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__NADTypes(struct soap*, enum witsml1__NADTypes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__NADTypes(struct soap*, const char*, int, const enum witsml1__NADTypes *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__NADTypes2s(struct soap*, enum witsml1__NADTypes);
SOAP_FMAC3 enum witsml1__NADTypes * SOAP_FMAC4 soap_in_witsml1__NADTypes(struct soap*, const char*, enum witsml1__NADTypes *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__NADTypes(struct soap*, const char*, enum witsml1__NADTypes *);

inline enum witsml1__NADTypes * soap_new_witsml1__NADTypes(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__NADTypes *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__NADTypes)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__NADTypes(struct soap*, const enum witsml1__NADTypes *, const char*, const char*);

inline int soap_write_witsml1__NADTypes(struct soap *soap, enum witsml1__NADTypes const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__NADTypes(soap, p, "witsml1:NADTypes", "witsml1:NADTypes") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__NADTypes * SOAP_FMAC4 soap_get_witsml1__NADTypes(struct soap*, enum witsml1__NADTypes *, const char*, const char*);

inline int soap_read_witsml1__NADTypes(struct soap *soap, enum witsml1__NADTypes *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__NADTypes(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudLogParameterType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudLogParameterType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MudLogParameterType(struct soap*, enum witsml1__MudLogParameterType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MudLogParameterType(struct soap*, const char*, int, const enum witsml1__MudLogParameterType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MudLogParameterType2s(struct soap*, enum witsml1__MudLogParameterType);
SOAP_FMAC3 enum witsml1__MudLogParameterType * SOAP_FMAC4 soap_in_witsml1__MudLogParameterType(struct soap*, const char*, enum witsml1__MudLogParameterType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MudLogParameterType(struct soap*, const char*, enum witsml1__MudLogParameterType *);

inline enum witsml1__MudLogParameterType * soap_new_witsml1__MudLogParameterType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MudLogParameterType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MudLogParameterType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MudLogParameterType(struct soap*, const enum witsml1__MudLogParameterType *, const char*, const char*);

inline int soap_write_witsml1__MudLogParameterType(struct soap *soap, enum witsml1__MudLogParameterType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MudLogParameterType(soap, p, "witsml1:MudLogParameterType", "witsml1:MudLogParameterType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MudLogParameterType * SOAP_FMAC4 soap_get_witsml1__MudLogParameterType(struct soap*, enum witsml1__MudLogParameterType *, const char*, const char*);

inline int soap_read_witsml1__MudLogParameterType(struct soap *soap, enum witsml1__MudLogParameterType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MudLogParameterType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudClass_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudClass_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MudClass(struct soap*, enum witsml1__MudClass *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MudClass(struct soap*, const char*, int, const enum witsml1__MudClass *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MudClass2s(struct soap*, enum witsml1__MudClass);
SOAP_FMAC3 enum witsml1__MudClass * SOAP_FMAC4 soap_in_witsml1__MudClass(struct soap*, const char*, enum witsml1__MudClass *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MudClass(struct soap*, const char*, enum witsml1__MudClass *);

inline enum witsml1__MudClass * soap_new_witsml1__MudClass(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MudClass *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MudClass)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MudClass(struct soap*, const enum witsml1__MudClass *, const char*, const char*);

inline int soap_write_witsml1__MudClass(struct soap *soap, enum witsml1__MudClass const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MudClass(soap, p, "witsml1:MudClass", "witsml1:MudClass") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MudClass * SOAP_FMAC4 soap_get_witsml1__MudClass(struct soap*, enum witsml1__MudClass *, const char*, const char*);

inline int soap_read_witsml1__MudClass(struct soap *soap, enum witsml1__MudClass *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MudClass(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MessageType(struct soap*, enum witsml1__MessageType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MessageType(struct soap*, const char*, int, const enum witsml1__MessageType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MessageType2s(struct soap*, enum witsml1__MessageType);
SOAP_FMAC3 enum witsml1__MessageType * SOAP_FMAC4 soap_in_witsml1__MessageType(struct soap*, const char*, enum witsml1__MessageType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MessageType(struct soap*, const char*, enum witsml1__MessageType *);

inline enum witsml1__MessageType * soap_new_witsml1__MessageType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MessageType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MessageType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MessageType(struct soap*, const enum witsml1__MessageType *, const char*, const char*);

inline int soap_write_witsml1__MessageType(struct soap *soap, enum witsml1__MessageType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MessageType(soap, p, "witsml1:MessageType", "witsml1:MessageType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MessageType * SOAP_FMAC4 soap_get_witsml1__MessageType(struct soap*, enum witsml1__MessageType *, const char*, const char*);

inline int soap_read_witsml1__MessageType(struct soap *soap, enum witsml1__MessageType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MessageType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageSeverity_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageSeverity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MessageSeverity(struct soap*, enum witsml1__MessageSeverity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MessageSeverity(struct soap*, const char*, int, const enum witsml1__MessageSeverity *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MessageSeverity2s(struct soap*, enum witsml1__MessageSeverity);
SOAP_FMAC3 enum witsml1__MessageSeverity * SOAP_FMAC4 soap_in_witsml1__MessageSeverity(struct soap*, const char*, enum witsml1__MessageSeverity *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MessageSeverity(struct soap*, const char*, enum witsml1__MessageSeverity *);

inline enum witsml1__MessageSeverity * soap_new_witsml1__MessageSeverity(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MessageSeverity *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MessageSeverity)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MessageSeverity(struct soap*, const enum witsml1__MessageSeverity *, const char*, const char*);

inline int soap_write_witsml1__MessageSeverity(struct soap *soap, enum witsml1__MessageSeverity const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MessageSeverity(soap, p, "witsml1:MessageSeverity", "witsml1:MessageSeverity") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MessageSeverity * SOAP_FMAC4 soap_get_witsml1__MessageSeverity(struct soap*, enum witsml1__MessageSeverity *, const char*, const char*);

inline int soap_read_witsml1__MessageSeverity(struct soap *soap, enum witsml1__MessageSeverity *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MessageSeverity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageProbability_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MessageProbability_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MessageProbability(struct soap*, enum witsml1__MessageProbability *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MessageProbability(struct soap*, const char*, int, const enum witsml1__MessageProbability *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MessageProbability2s(struct soap*, enum witsml1__MessageProbability);
SOAP_FMAC3 enum witsml1__MessageProbability * SOAP_FMAC4 soap_in_witsml1__MessageProbability(struct soap*, const char*, enum witsml1__MessageProbability *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MessageProbability(struct soap*, const char*, enum witsml1__MessageProbability *);

inline enum witsml1__MessageProbability * soap_new_witsml1__MessageProbability(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MessageProbability *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MessageProbability)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MessageProbability(struct soap*, const enum witsml1__MessageProbability *, const char*, const char*);

inline int soap_write_witsml1__MessageProbability(struct soap *soap, enum witsml1__MessageProbability const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MessageProbability(soap, p, "witsml1:MessageProbability", "witsml1:MessageProbability") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MessageProbability * SOAP_FMAC4 soap_get_witsml1__MessageProbability(struct soap*, enum witsml1__MessageProbability *, const char*, const char*);

inline int soap_read_witsml1__MessageProbability(struct soap *soap, enum witsml1__MessageProbability *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MessageProbability(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasurementType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasurementType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MeasurementType(struct soap*, enum witsml1__MeasurementType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MeasurementType(struct soap*, const char*, int, const enum witsml1__MeasurementType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MeasurementType2s(struct soap*, enum witsml1__MeasurementType);
SOAP_FMAC3 enum witsml1__MeasurementType * SOAP_FMAC4 soap_in_witsml1__MeasurementType(struct soap*, const char*, enum witsml1__MeasurementType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MeasurementType(struct soap*, const char*, enum witsml1__MeasurementType *);

inline enum witsml1__MeasurementType * soap_new_witsml1__MeasurementType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MeasurementType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MeasurementType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MeasurementType(struct soap*, const enum witsml1__MeasurementType *, const char*, const char*);

inline int soap_write_witsml1__MeasurementType(struct soap *soap, enum witsml1__MeasurementType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MeasurementType(soap, p, "witsml1:MeasurementType", "witsml1:MeasurementType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MeasurementType * SOAP_FMAC4 soap_get_witsml1__MeasurementType(struct soap*, enum witsml1__MeasurementType *, const char*, const char*);

inline int soap_read_witsml1__MeasurementType(struct soap *soap, enum witsml1__MeasurementType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MeasurementType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MaterialType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MaterialType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MaterialType(struct soap*, enum witsml1__MaterialType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MaterialType(struct soap*, const char*, int, const enum witsml1__MaterialType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MaterialType2s(struct soap*, enum witsml1__MaterialType);
SOAP_FMAC3 enum witsml1__MaterialType * SOAP_FMAC4 soap_in_witsml1__MaterialType(struct soap*, const char*, enum witsml1__MaterialType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MaterialType(struct soap*, const char*, enum witsml1__MaterialType *);

inline enum witsml1__MaterialType * soap_new_witsml1__MaterialType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MaterialType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MaterialType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MaterialType(struct soap*, const enum witsml1__MaterialType *, const char*, const char*);

inline int soap_write_witsml1__MaterialType(struct soap *soap, enum witsml1__MaterialType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MaterialType(soap, p, "witsml1:MaterialType", "witsml1:MaterialType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MaterialType * SOAP_FMAC4 soap_get_witsml1__MaterialType(struct soap*, enum witsml1__MaterialType *, const char*, const char*);

inline int soap_read_witsml1__MaterialType(struct soap *soap, enum witsml1__MaterialType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MaterialType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceState_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceState_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__LogTraceState(struct soap*, enum witsml1__LogTraceState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__LogTraceState(struct soap*, const char*, int, const enum witsml1__LogTraceState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__LogTraceState2s(struct soap*, enum witsml1__LogTraceState);
SOAP_FMAC3 enum witsml1__LogTraceState * SOAP_FMAC4 soap_in_witsml1__LogTraceState(struct soap*, const char*, enum witsml1__LogTraceState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__LogTraceState(struct soap*, const char*, enum witsml1__LogTraceState *);

inline enum witsml1__LogTraceState * soap_new_witsml1__LogTraceState(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__LogTraceState *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__LogTraceState)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__LogTraceState(struct soap*, const enum witsml1__LogTraceState *, const char*, const char*);

inline int soap_write_witsml1__LogTraceState(struct soap *soap, enum witsml1__LogTraceState const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__LogTraceState(soap, p, "witsml1:LogTraceState", "witsml1:LogTraceState") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__LogTraceState * SOAP_FMAC4 soap_get_witsml1__LogTraceState(struct soap*, enum witsml1__LogTraceState *, const char*, const char*);

inline int soap_read_witsml1__LogTraceState(struct soap *soap, enum witsml1__LogTraceState *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__LogTraceState(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceOrigin_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogTraceOrigin_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__LogTraceOrigin(struct soap*, enum witsml1__LogTraceOrigin *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__LogTraceOrigin(struct soap*, const char*, int, const enum witsml1__LogTraceOrigin *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__LogTraceOrigin2s(struct soap*, enum witsml1__LogTraceOrigin);
SOAP_FMAC3 enum witsml1__LogTraceOrigin * SOAP_FMAC4 soap_in_witsml1__LogTraceOrigin(struct soap*, const char*, enum witsml1__LogTraceOrigin *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__LogTraceOrigin(struct soap*, const char*, enum witsml1__LogTraceOrigin *);

inline enum witsml1__LogTraceOrigin * soap_new_witsml1__LogTraceOrigin(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__LogTraceOrigin *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__LogTraceOrigin)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__LogTraceOrigin(struct soap*, const enum witsml1__LogTraceOrigin *, const char*, const char*);

inline int soap_write_witsml1__LogTraceOrigin(struct soap *soap, enum witsml1__LogTraceOrigin const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__LogTraceOrigin(soap, p, "witsml1:LogTraceOrigin", "witsml1:LogTraceOrigin") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__LogTraceOrigin * SOAP_FMAC4 soap_get_witsml1__LogTraceOrigin(struct soap*, enum witsml1__LogTraceOrigin *, const char*, const char*);

inline int soap_read_witsml1__LogTraceOrigin(struct soap *soap, enum witsml1__LogTraceOrigin *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__LogTraceOrigin(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__LogIndexType(struct soap*, enum witsml1__LogIndexType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__LogIndexType(struct soap*, const char*, int, const enum witsml1__LogIndexType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__LogIndexType2s(struct soap*, enum witsml1__LogIndexType);
SOAP_FMAC3 enum witsml1__LogIndexType * SOAP_FMAC4 soap_in_witsml1__LogIndexType(struct soap*, const char*, enum witsml1__LogIndexType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__LogIndexType(struct soap*, const char*, enum witsml1__LogIndexType *);

inline enum witsml1__LogIndexType * soap_new_witsml1__LogIndexType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__LogIndexType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__LogIndexType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__LogIndexType(struct soap*, const enum witsml1__LogIndexType *, const char*, const char*);

inline int soap_write_witsml1__LogIndexType(struct soap *soap, enum witsml1__LogIndexType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__LogIndexType(soap, p, "witsml1:LogIndexType", "witsml1:LogIndexType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__LogIndexType * SOAP_FMAC4 soap_get_witsml1__LogIndexType(struct soap*, enum witsml1__LogIndexType *, const char*, const char*);

inline int soap_read_witsml1__LogIndexType(struct soap *soap, enum witsml1__LogIndexType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__LogIndexType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexDirection_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogIndexDirection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__LogIndexDirection(struct soap*, enum witsml1__LogIndexDirection *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__LogIndexDirection(struct soap*, const char*, int, const enum witsml1__LogIndexDirection *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__LogIndexDirection2s(struct soap*, enum witsml1__LogIndexDirection);
SOAP_FMAC3 enum witsml1__LogIndexDirection * SOAP_FMAC4 soap_in_witsml1__LogIndexDirection(struct soap*, const char*, enum witsml1__LogIndexDirection *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__LogIndexDirection(struct soap*, const char*, enum witsml1__LogIndexDirection *);

inline enum witsml1__LogIndexDirection * soap_new_witsml1__LogIndexDirection(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__LogIndexDirection *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__LogIndexDirection)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__LogIndexDirection(struct soap*, const enum witsml1__LogIndexDirection *, const char*, const char*);

inline int soap_write_witsml1__LogIndexDirection(struct soap *soap, enum witsml1__LogIndexDirection const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__LogIndexDirection(soap, p, "witsml1:LogIndexDirection", "witsml1:LogIndexDirection") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__LogIndexDirection * SOAP_FMAC4 soap_get_witsml1__LogIndexDirection(struct soap*, enum witsml1__LogIndexDirection *, const char*, const char*);

inline int soap_read_witsml1__LogIndexDirection(struct soap *soap, enum witsml1__LogIndexDirection *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__LogIndexDirection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogDataType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LogDataType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__LogDataType(struct soap*, enum witsml1__LogDataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__LogDataType(struct soap*, const char*, int, const enum witsml1__LogDataType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__LogDataType2s(struct soap*, enum witsml1__LogDataType);
SOAP_FMAC3 enum witsml1__LogDataType * SOAP_FMAC4 soap_in_witsml1__LogDataType(struct soap*, const char*, enum witsml1__LogDataType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__LogDataType(struct soap*, const char*, enum witsml1__LogDataType *);

inline enum witsml1__LogDataType * soap_new_witsml1__LogDataType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__LogDataType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__LogDataType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__LogDataType(struct soap*, const enum witsml1__LogDataType *, const char*, const char*);

inline int soap_write_witsml1__LogDataType(struct soap *soap, enum witsml1__LogDataType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__LogDataType(soap, p, "witsml1:LogDataType", "witsml1:LogDataType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__LogDataType * SOAP_FMAC4 soap_get_witsml1__LogDataType(struct soap*, enum witsml1__LogDataType *, const char*, const char*);

inline int soap_read_witsml1__LogDataType(struct soap *soap, enum witsml1__LogDataType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__LogDataType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithostratigraphyUnit_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithostratigraphyUnit_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__LithostratigraphyUnit(struct soap*, enum witsml1__LithostratigraphyUnit *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__LithostratigraphyUnit(struct soap*, const char*, int, const enum witsml1__LithostratigraphyUnit *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__LithostratigraphyUnit2s(struct soap*, enum witsml1__LithostratigraphyUnit);
SOAP_FMAC3 enum witsml1__LithostratigraphyUnit * SOAP_FMAC4 soap_in_witsml1__LithostratigraphyUnit(struct soap*, const char*, enum witsml1__LithostratigraphyUnit *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__LithostratigraphyUnit(struct soap*, const char*, enum witsml1__LithostratigraphyUnit *);

inline enum witsml1__LithostratigraphyUnit * soap_new_witsml1__LithostratigraphyUnit(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__LithostratigraphyUnit *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__LithostratigraphyUnit)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__LithostratigraphyUnit(struct soap*, const enum witsml1__LithostratigraphyUnit *, const char*, const char*);

inline int soap_write_witsml1__LithostratigraphyUnit(struct soap *soap, enum witsml1__LithostratigraphyUnit const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__LithostratigraphyUnit(soap, p, "witsml1:LithostratigraphyUnit", "witsml1:LithostratigraphyUnit") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__LithostratigraphyUnit * SOAP_FMAC4 soap_get_witsml1__LithostratigraphyUnit(struct soap*, enum witsml1__LithostratigraphyUnit *, const char*, const char*);

inline int soap_read_witsml1__LithostratigraphyUnit(struct soap *soap, enum witsml1__LithostratigraphyUnit *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__LithostratigraphyUnit(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologySource_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologySource_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__LithologySource(struct soap*, enum witsml1__LithologySource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__LithologySource(struct soap*, const char*, int, const enum witsml1__LithologySource *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__LithologySource2s(struct soap*, enum witsml1__LithologySource);
SOAP_FMAC3 enum witsml1__LithologySource * SOAP_FMAC4 soap_in_witsml1__LithologySource(struct soap*, const char*, enum witsml1__LithologySource *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__LithologySource(struct soap*, const char*, enum witsml1__LithologySource *);

inline enum witsml1__LithologySource * soap_new_witsml1__LithologySource(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__LithologySource *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__LithologySource)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__LithologySource(struct soap*, const enum witsml1__LithologySource *, const char*, const char*);

inline int soap_write_witsml1__LithologySource(struct soap *soap, enum witsml1__LithologySource const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__LithologySource(soap, p, "witsml1:LithologySource", "witsml1:LithologySource") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__LithologySource * SOAP_FMAC4 soap_get_witsml1__LithologySource(struct soap*, enum witsml1__LithologySource *, const char*, const char*);

inline int soap_read_witsml1__LithologySource(struct soap *soap, enum witsml1__LithologySource *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__LithologySource(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarAction_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarAction_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__JarAction(struct soap*, enum witsml1__JarAction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__JarAction(struct soap*, const char*, int, const enum witsml1__JarAction *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__JarAction2s(struct soap*, enum witsml1__JarAction);
SOAP_FMAC3 enum witsml1__JarAction * SOAP_FMAC4 soap_in_witsml1__JarAction(struct soap*, const char*, enum witsml1__JarAction *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__JarAction(struct soap*, const char*, enum witsml1__JarAction *);

inline enum witsml1__JarAction * soap_new_witsml1__JarAction(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__JarAction *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__JarAction)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__JarAction(struct soap*, const enum witsml1__JarAction *, const char*, const char*);

inline int soap_write_witsml1__JarAction(struct soap *soap, enum witsml1__JarAction const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__JarAction(soap, p, "witsml1:JarAction", "witsml1:JarAction") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__JarAction * SOAP_FMAC4 soap_get_witsml1__JarAction(struct soap*, enum witsml1__JarAction *, const char*, const char*);

inline int soap_read_witsml1__JarAction(struct soap *soap, enum witsml1__JarAction *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__JarAction(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__JarType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__JarType(struct soap*, enum witsml1__JarType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__JarType(struct soap*, const char*, int, const enum witsml1__JarType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__JarType2s(struct soap*, enum witsml1__JarType);
SOAP_FMAC3 enum witsml1__JarType * SOAP_FMAC4 soap_in_witsml1__JarType(struct soap*, const char*, enum witsml1__JarType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__JarType(struct soap*, const char*, enum witsml1__JarType *);

inline enum witsml1__JarType * soap_new_witsml1__JarType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__JarType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__JarType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__JarType(struct soap*, const enum witsml1__JarType *, const char*, const char*);

inline int soap_write_witsml1__JarType(struct soap *soap, enum witsml1__JarType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__JarType(soap, p, "witsml1:JarType", "witsml1:JarType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__JarType * SOAP_FMAC4 soap_get_witsml1__JarType(struct soap*, enum witsml1__JarType *, const char*, const char*);

inline int soap_read_witsml1__JarType(struct soap *soap, enum witsml1__JarType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__JarType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ItemState_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ItemState_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ItemState(struct soap*, enum witsml1__ItemState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ItemState(struct soap*, const char*, int, const enum witsml1__ItemState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ItemState2s(struct soap*, enum witsml1__ItemState);
SOAP_FMAC3 enum witsml1__ItemState * SOAP_FMAC4 soap_in_witsml1__ItemState(struct soap*, const char*, enum witsml1__ItemState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ItemState(struct soap*, const char*, enum witsml1__ItemState *);

inline enum witsml1__ItemState * soap_new_witsml1__ItemState(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ItemState *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ItemState)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ItemState(struct soap*, const enum witsml1__ItemState *, const char*, const char*);

inline int soap_write_witsml1__ItemState(struct soap *soap, enum witsml1__ItemState const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ItemState(soap, p, "witsml1:ItemState", "witsml1:ItemState") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ItemState * SOAP_FMAC4 soap_get_witsml1__ItemState(struct soap*, enum witsml1__ItemState *, const char*, const char*);

inline int soap_read_witsml1__ItemState(struct soap *soap, enum witsml1__ItemState *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ItemState(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__InnerBarrelType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__InnerBarrelType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__InnerBarrelType(struct soap*, enum witsml1__InnerBarrelType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__InnerBarrelType(struct soap*, const char*, int, const enum witsml1__InnerBarrelType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__InnerBarrelType2s(struct soap*, enum witsml1__InnerBarrelType);
SOAP_FMAC3 enum witsml1__InnerBarrelType * SOAP_FMAC4 soap_in_witsml1__InnerBarrelType(struct soap*, const char*, enum witsml1__InnerBarrelType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__InnerBarrelType(struct soap*, const char*, enum witsml1__InnerBarrelType *);

inline enum witsml1__InnerBarrelType * soap_new_witsml1__InnerBarrelType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__InnerBarrelType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__InnerBarrelType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__InnerBarrelType(struct soap*, const enum witsml1__InnerBarrelType *, const char*, const char*);

inline int soap_write_witsml1__InnerBarrelType(struct soap *soap, enum witsml1__InnerBarrelType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__InnerBarrelType(soap, p, "witsml1:InnerBarrelType", "witsml1:InnerBarrelType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__InnerBarrelType * SOAP_FMAC4 soap_get_witsml1__InnerBarrelType(struct soap*, enum witsml1__InnerBarrelType *, const char*, const char*);

inline int soap_read_witsml1__InnerBarrelType(struct soap *soap, enum witsml1__InnerBarrelType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__InnerBarrelType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleOpenerType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleOpenerType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__HoleOpenerType(struct soap*, enum witsml1__HoleOpenerType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__HoleOpenerType(struct soap*, const char*, int, const enum witsml1__HoleOpenerType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__HoleOpenerType2s(struct soap*, enum witsml1__HoleOpenerType);
SOAP_FMAC3 enum witsml1__HoleOpenerType * SOAP_FMAC4 soap_in_witsml1__HoleOpenerType(struct soap*, const char*, enum witsml1__HoleOpenerType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__HoleOpenerType(struct soap*, const char*, enum witsml1__HoleOpenerType *);

inline enum witsml1__HoleOpenerType * soap_new_witsml1__HoleOpenerType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__HoleOpenerType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__HoleOpenerType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__HoleOpenerType(struct soap*, const enum witsml1__HoleOpenerType *, const char*, const char*);

inline int soap_write_witsml1__HoleOpenerType(struct soap *soap, enum witsml1__HoleOpenerType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__HoleOpenerType(soap, p, "witsml1:HoleOpenerType", "witsml1:HoleOpenerType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__HoleOpenerType * SOAP_FMAC4 soap_get_witsml1__HoleOpenerType(struct soap*, enum witsml1__HoleOpenerType *, const char*, const char*);

inline int soap_read_witsml1__HoleOpenerType(struct soap *soap, enum witsml1__HoleOpenerType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__HoleOpenerType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleCasingType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__HoleCasingType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__HoleCasingType(struct soap*, enum witsml1__HoleCasingType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__HoleCasingType(struct soap*, const char*, int, const enum witsml1__HoleCasingType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__HoleCasingType2s(struct soap*, enum witsml1__HoleCasingType);
SOAP_FMAC3 enum witsml1__HoleCasingType * SOAP_FMAC4 soap_in_witsml1__HoleCasingType(struct soap*, const char*, enum witsml1__HoleCasingType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__HoleCasingType(struct soap*, const char*, enum witsml1__HoleCasingType *);

inline enum witsml1__HoleCasingType * soap_new_witsml1__HoleCasingType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__HoleCasingType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__HoleCasingType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__HoleCasingType(struct soap*, const enum witsml1__HoleCasingType *, const char*, const char*);

inline int soap_write_witsml1__HoleCasingType(struct soap *soap, enum witsml1__HoleCasingType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__HoleCasingType(soap, p, "witsml1:HoleCasingType", "witsml1:HoleCasingType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__HoleCasingType * SOAP_FMAC4 soap_get_witsml1__HoleCasingType(struct soap*, enum witsml1__HoleCasingType *, const char*, const char*);

inline int soap_read_witsml1__HoleCasingType(struct soap *soap, enum witsml1__HoleCasingType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__HoleCasingType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Hemispheres_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Hemispheres_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__Hemispheres(struct soap*, enum witsml1__Hemispheres *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__Hemispheres(struct soap*, const char*, int, const enum witsml1__Hemispheres *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__Hemispheres2s(struct soap*, enum witsml1__Hemispheres);
SOAP_FMAC3 enum witsml1__Hemispheres * SOAP_FMAC4 soap_in_witsml1__Hemispheres(struct soap*, const char*, enum witsml1__Hemispheres *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__Hemispheres(struct soap*, const char*, enum witsml1__Hemispheres *);

inline enum witsml1__Hemispheres * soap_new_witsml1__Hemispheres(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__Hemispheres *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__Hemispheres)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__Hemispheres(struct soap*, const enum witsml1__Hemispheres *, const char*, const char*);

inline int soap_write_witsml1__Hemispheres(struct soap *soap, enum witsml1__Hemispheres const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__Hemispheres(soap, p, "witsml1:Hemispheres", "witsml1:Hemispheres") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__Hemispheres * SOAP_FMAC4 soap_get_witsml1__Hemispheres(struct soap*, enum witsml1__Hemispheres *, const char*, const char*);

inline int soap_read_witsml1__Hemispheres(struct soap *soap, enum witsml1__Hemispheres *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__Hemispheres(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GeodeticDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GeodeticDatum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__GeodeticDatum(struct soap*, enum witsml1__GeodeticDatum *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__GeodeticDatum(struct soap*, const char*, int, const enum witsml1__GeodeticDatum *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__GeodeticDatum2s(struct soap*, enum witsml1__GeodeticDatum);
SOAP_FMAC3 enum witsml1__GeodeticDatum * SOAP_FMAC4 soap_in_witsml1__GeodeticDatum(struct soap*, const char*, enum witsml1__GeodeticDatum *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__GeodeticDatum(struct soap*, const char*, enum witsml1__GeodeticDatum *);

inline enum witsml1__GeodeticDatum * soap_new_witsml1__GeodeticDatum(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__GeodeticDatum *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__GeodeticDatum)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__GeodeticDatum(struct soap*, const enum witsml1__GeodeticDatum *, const char*, const char*);

inline int soap_write_witsml1__GeodeticDatum(struct soap *soap, enum witsml1__GeodeticDatum const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__GeodeticDatum(soap, p, "witsml1:GeodeticDatum", "witsml1:GeodeticDatum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__GeodeticDatum * SOAP_FMAC4 soap_get_witsml1__GeodeticDatum(struct soap*, enum witsml1__GeodeticDatum *, const char*, const char*);

inline int soap_read_witsml1__GeodeticDatum(struct soap *soap, enum witsml1__GeodeticDatum *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__GeodeticDatum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GasPeakType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__GasPeakType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__GasPeakType(struct soap*, enum witsml1__GasPeakType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__GasPeakType(struct soap*, const char*, int, const enum witsml1__GasPeakType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__GasPeakType2s(struct soap*, enum witsml1__GasPeakType);
SOAP_FMAC3 enum witsml1__GasPeakType * SOAP_FMAC4 soap_in_witsml1__GasPeakType(struct soap*, const char*, enum witsml1__GasPeakType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__GasPeakType(struct soap*, const char*, enum witsml1__GasPeakType *);

inline enum witsml1__GasPeakType * soap_new_witsml1__GasPeakType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__GasPeakType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__GasPeakType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__GasPeakType(struct soap*, const enum witsml1__GasPeakType *, const char*, const char*);

inline int soap_write_witsml1__GasPeakType(struct soap *soap, enum witsml1__GasPeakType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__GasPeakType(soap, p, "witsml1:GasPeakType", "witsml1:GasPeakType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__GasPeakType * SOAP_FMAC4 soap_get_witsml1__GasPeakType(struct soap*, enum witsml1__GasPeakType *, const char*, const char*);

inline int soap_read_witsml1__GasPeakType(struct soap *soap, enum witsml1__GasPeakType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__GasPeakType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorModelMisalignmentMode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorModelMisalignmentMode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ErrorModelMisalignmentMode(struct soap*, enum witsml1__ErrorModelMisalignmentMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ErrorModelMisalignmentMode(struct soap*, const char*, int, const enum witsml1__ErrorModelMisalignmentMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ErrorModelMisalignmentMode2s(struct soap*, enum witsml1__ErrorModelMisalignmentMode);
SOAP_FMAC3 enum witsml1__ErrorModelMisalignmentMode * SOAP_FMAC4 soap_in_witsml1__ErrorModelMisalignmentMode(struct soap*, const char*, enum witsml1__ErrorModelMisalignmentMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ErrorModelMisalignmentMode(struct soap*, const char*, enum witsml1__ErrorModelMisalignmentMode *);

inline enum witsml1__ErrorModelMisalignmentMode * soap_new_witsml1__ErrorModelMisalignmentMode(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ErrorModelMisalignmentMode *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ErrorModelMisalignmentMode)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ErrorModelMisalignmentMode(struct soap*, const enum witsml1__ErrorModelMisalignmentMode *, const char*, const char*);

inline int soap_write_witsml1__ErrorModelMisalignmentMode(struct soap *soap, enum witsml1__ErrorModelMisalignmentMode const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ErrorModelMisalignmentMode(soap, p, "witsml1:ErrorModelMisalignmentMode", "witsml1:ErrorModelMisalignmentMode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ErrorModelMisalignmentMode * SOAP_FMAC4 soap_get_witsml1__ErrorModelMisalignmentMode(struct soap*, enum witsml1__ErrorModelMisalignmentMode *, const char*, const char*);

inline int soap_read_witsml1__ErrorModelMisalignmentMode(struct soap *soap, enum witsml1__ErrorModelMisalignmentMode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ErrorModelMisalignmentMode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorPropagationMode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorPropagationMode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ErrorPropagationMode(struct soap*, enum witsml1__ErrorPropagationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ErrorPropagationMode(struct soap*, const char*, int, const enum witsml1__ErrorPropagationMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ErrorPropagationMode2s(struct soap*, enum witsml1__ErrorPropagationMode);
SOAP_FMAC3 enum witsml1__ErrorPropagationMode * SOAP_FMAC4 soap_in_witsml1__ErrorPropagationMode(struct soap*, const char*, enum witsml1__ErrorPropagationMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ErrorPropagationMode(struct soap*, const char*, enum witsml1__ErrorPropagationMode *);

inline enum witsml1__ErrorPropagationMode * soap_new_witsml1__ErrorPropagationMode(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ErrorPropagationMode *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ErrorPropagationMode)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ErrorPropagationMode(struct soap*, const enum witsml1__ErrorPropagationMode *, const char*, const char*);

inline int soap_write_witsml1__ErrorPropagationMode(struct soap *soap, enum witsml1__ErrorPropagationMode const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ErrorPropagationMode(soap, p, "witsml1:ErrorPropagationMode", "witsml1:ErrorPropagationMode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ErrorPropagationMode * SOAP_FMAC4 soap_get_witsml1__ErrorPropagationMode(struct soap*, enum witsml1__ErrorPropagationMode *, const char*, const char*);

inline int soap_read_witsml1__ErrorPropagationMode(struct soap *soap, enum witsml1__ErrorPropagationMode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ErrorPropagationMode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorTermSource_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ErrorTermSource_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ErrorTermSource(struct soap*, enum witsml1__ErrorTermSource *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ErrorTermSource(struct soap*, const char*, int, const enum witsml1__ErrorTermSource *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ErrorTermSource2s(struct soap*, enum witsml1__ErrorTermSource);
SOAP_FMAC3 enum witsml1__ErrorTermSource * SOAP_FMAC4 soap_in_witsml1__ErrorTermSource(struct soap*, const char*, enum witsml1__ErrorTermSource *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ErrorTermSource(struct soap*, const char*, enum witsml1__ErrorTermSource *);

inline enum witsml1__ErrorTermSource * soap_new_witsml1__ErrorTermSource(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ErrorTermSource *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ErrorTermSource)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ErrorTermSource(struct soap*, const enum witsml1__ErrorTermSource *, const char*, const char*);

inline int soap_write_witsml1__ErrorTermSource(struct soap *soap, enum witsml1__ErrorTermSource const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ErrorTermSource(soap, p, "witsml1:ErrorTermSource", "witsml1:ErrorTermSource") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ErrorTermSource * SOAP_FMAC4 soap_get_witsml1__ErrorTermSource(struct soap*, enum witsml1__ErrorTermSource *, const char*, const char*);

inline int soap_read_witsml1__ErrorTermSource(struct soap *soap, enum witsml1__ErrorTermSource *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ErrorTermSource(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Ellipsoid_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__Ellipsoid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__Ellipsoid(struct soap*, enum witsml1__Ellipsoid *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__Ellipsoid(struct soap*, const char*, int, const enum witsml1__Ellipsoid *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__Ellipsoid2s(struct soap*, enum witsml1__Ellipsoid);
SOAP_FMAC3 enum witsml1__Ellipsoid * SOAP_FMAC4 soap_in_witsml1__Ellipsoid(struct soap*, const char*, enum witsml1__Ellipsoid *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__Ellipsoid(struct soap*, const char*, enum witsml1__Ellipsoid *);

inline enum witsml1__Ellipsoid * soap_new_witsml1__Ellipsoid(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__Ellipsoid *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__Ellipsoid)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__Ellipsoid(struct soap*, const enum witsml1__Ellipsoid *, const char*, const char*);

inline int soap_write_witsml1__Ellipsoid(struct soap *soap, enum witsml1__Ellipsoid const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__Ellipsoid(soap, p, "witsml1:Ellipsoid", "witsml1:Ellipsoid") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__Ellipsoid * SOAP_FMAC4 soap_get_witsml1__Ellipsoid(struct soap*, enum witsml1__Ellipsoid *, const char*, const char*);

inline int soap_read_witsml1__Ellipsoid(struct soap *soap, enum witsml1__Ellipsoid *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__Ellipsoid(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElevCodeEnum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElevCodeEnum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ElevCodeEnum(struct soap*, enum witsml1__ElevCodeEnum *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ElevCodeEnum(struct soap*, const char*, int, const enum witsml1__ElevCodeEnum *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ElevCodeEnum2s(struct soap*, enum witsml1__ElevCodeEnum);
SOAP_FMAC3 enum witsml1__ElevCodeEnum * SOAP_FMAC4 soap_in_witsml1__ElevCodeEnum(struct soap*, const char*, enum witsml1__ElevCodeEnum *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ElevCodeEnum(struct soap*, const char*, enum witsml1__ElevCodeEnum *);

inline enum witsml1__ElevCodeEnum * soap_new_witsml1__ElevCodeEnum(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ElevCodeEnum *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ElevCodeEnum)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ElevCodeEnum(struct soap*, const enum witsml1__ElevCodeEnum *, const char*, const char*);

inline int soap_write_witsml1__ElevCodeEnum(struct soap *soap, enum witsml1__ElevCodeEnum const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ElevCodeEnum(soap, p, "witsml1:ElevCodeEnum", "witsml1:ElevCodeEnum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ElevCodeEnum * SOAP_FMAC4 soap_get_witsml1__ElevCodeEnum(struct soap*, enum witsml1__ElevCodeEnum *, const char*, const char*);

inline int soap_read_witsml1__ElevCodeEnum(struct soap *soap, enum witsml1__ElevCodeEnum *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ElevCodeEnum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EastOrWest_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EastOrWest_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__EastOrWest(struct soap*, enum witsml1__EastOrWest *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__EastOrWest(struct soap*, const char*, int, const enum witsml1__EastOrWest *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__EastOrWest2s(struct soap*, enum witsml1__EastOrWest);
SOAP_FMAC3 enum witsml1__EastOrWest * SOAP_FMAC4 soap_in_witsml1__EastOrWest(struct soap*, const char*, enum witsml1__EastOrWest *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__EastOrWest(struct soap*, const char*, enum witsml1__EastOrWest *);

inline enum witsml1__EastOrWest * soap_new_witsml1__EastOrWest(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__EastOrWest *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__EastOrWest)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__EastOrWest(struct soap*, const enum witsml1__EastOrWest *, const char*, const char*);

inline int soap_write_witsml1__EastOrWest(struct soap *soap, enum witsml1__EastOrWest const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__EastOrWest(soap, p, "witsml1:EastOrWest", "witsml1:EastOrWest") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__EastOrWest * SOAP_FMAC4 soap_get_witsml1__EastOrWest(struct soap*, enum witsml1__EastOrWest *, const char*, const char*);

inline int soap_read_witsml1__EastOrWest(struct soap *soap, enum witsml1__EastOrWest *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__EastOrWest(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DriveType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DriveType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__DriveType(struct soap*, enum witsml1__DriveType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__DriveType(struct soap*, const char*, int, const enum witsml1__DriveType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__DriveType2s(struct soap*, enum witsml1__DriveType);
SOAP_FMAC3 enum witsml1__DriveType * SOAP_FMAC4 soap_in_witsml1__DriveType(struct soap*, const char*, enum witsml1__DriveType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__DriveType(struct soap*, const char*, enum witsml1__DriveType *);

inline enum witsml1__DriveType * soap_new_witsml1__DriveType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__DriveType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__DriveType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__DriveType(struct soap*, const enum witsml1__DriveType *, const char*, const char*);

inline int soap_write_witsml1__DriveType(struct soap *soap, enum witsml1__DriveType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__DriveType(soap, p, "witsml1:DriveType", "witsml1:DriveType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__DriveType * SOAP_FMAC4 soap_get_witsml1__DriveType(struct soap*, enum witsml1__DriveType *, const char*, const char*);

inline int soap_read_witsml1__DriveType(struct soap *soap, enum witsml1__DriveType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__DriveType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DrawWorksType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DrawWorksType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__DrawWorksType(struct soap*, enum witsml1__DrawWorksType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__DrawWorksType(struct soap*, const char*, int, const enum witsml1__DrawWorksType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__DrawWorksType2s(struct soap*, enum witsml1__DrawWorksType);
SOAP_FMAC3 enum witsml1__DrawWorksType * SOAP_FMAC4 soap_in_witsml1__DrawWorksType(struct soap*, const char*, enum witsml1__DrawWorksType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__DrawWorksType(struct soap*, const char*, enum witsml1__DrawWorksType *);

inline enum witsml1__DrawWorksType * soap_new_witsml1__DrawWorksType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__DrawWorksType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__DrawWorksType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__DrawWorksType(struct soap*, const enum witsml1__DrawWorksType *, const char*, const char*);

inline int soap_write_witsml1__DrawWorksType(struct soap *soap, enum witsml1__DrawWorksType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__DrawWorksType(soap, p, "witsml1:DrawWorksType", "witsml1:DrawWorksType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__DrawWorksType * SOAP_FMAC4 soap_get_witsml1__DrawWorksType(struct soap*, enum witsml1__DrawWorksType *, const char*, const char*);

inline int soap_read_witsml1__DrawWorksType(struct soap *soap, enum witsml1__DrawWorksType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__DrawWorksType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DerrickType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DerrickType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__DerrickType(struct soap*, enum witsml1__DerrickType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__DerrickType(struct soap*, const char*, int, const enum witsml1__DerrickType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__DerrickType2s(struct soap*, enum witsml1__DerrickType);
SOAP_FMAC3 enum witsml1__DerrickType * SOAP_FMAC4 soap_in_witsml1__DerrickType(struct soap*, const char*, enum witsml1__DerrickType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__DerrickType(struct soap*, const char*, enum witsml1__DerrickType *);

inline enum witsml1__DerrickType * soap_new_witsml1__DerrickType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__DerrickType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__DerrickType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__DerrickType(struct soap*, const enum witsml1__DerrickType *, const char*, const char*);

inline int soap_write_witsml1__DerrickType(struct soap *soap, enum witsml1__DerrickType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__DerrickType(soap, p, "witsml1:DerrickType", "witsml1:DerrickType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__DerrickType * SOAP_FMAC4 soap_get_witsml1__DerrickType(struct soap*, enum witsml1__DerrickType *, const char*, const char*);

inline int soap_read_witsml1__DerrickType(struct soap *soap, enum witsml1__DerrickType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__DerrickType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DeflectionMethod_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DeflectionMethod_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__DeflectionMethod(struct soap*, enum witsml1__DeflectionMethod *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__DeflectionMethod(struct soap*, const char*, int, const enum witsml1__DeflectionMethod *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__DeflectionMethod2s(struct soap*, enum witsml1__DeflectionMethod);
SOAP_FMAC3 enum witsml1__DeflectionMethod * SOAP_FMAC4 soap_in_witsml1__DeflectionMethod(struct soap*, const char*, enum witsml1__DeflectionMethod *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__DeflectionMethod(struct soap*, const char*, enum witsml1__DeflectionMethod *);

inline enum witsml1__DeflectionMethod * soap_new_witsml1__DeflectionMethod(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__DeflectionMethod *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__DeflectionMethod)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__DeflectionMethod(struct soap*, const enum witsml1__DeflectionMethod *, const char*, const char*);

inline int soap_write_witsml1__DeflectionMethod(struct soap *soap, enum witsml1__DeflectionMethod const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__DeflectionMethod(soap, p, "witsml1:DeflectionMethod", "witsml1:DeflectionMethod") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__DeflectionMethod * SOAP_FMAC4 soap_get_witsml1__DeflectionMethod(struct soap*, enum witsml1__DeflectionMethod *, const char*, const char*);

inline int soap_read_witsml1__DeflectionMethod(struct soap *soap, enum witsml1__DeflectionMethod *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__DeflectionMethod(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ConnectionPosition_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ConnectionPosition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ConnectionPosition(struct soap*, enum witsml1__ConnectionPosition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ConnectionPosition(struct soap*, const char*, int, const enum witsml1__ConnectionPosition *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ConnectionPosition2s(struct soap*, enum witsml1__ConnectionPosition);
SOAP_FMAC3 enum witsml1__ConnectionPosition * SOAP_FMAC4 soap_in_witsml1__ConnectionPosition(struct soap*, const char*, enum witsml1__ConnectionPosition *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ConnectionPosition(struct soap*, const char*, enum witsml1__ConnectionPosition *);

inline enum witsml1__ConnectionPosition * soap_new_witsml1__ConnectionPosition(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ConnectionPosition *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ConnectionPosition)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ConnectionPosition(struct soap*, const enum witsml1__ConnectionPosition *, const char*, const char*);

inline int soap_write_witsml1__ConnectionPosition(struct soap *soap, enum witsml1__ConnectionPosition const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ConnectionPosition(soap, p, "witsml1:ConnectionPosition", "witsml1:ConnectionPosition") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ConnectionPosition * SOAP_FMAC4 soap_get_witsml1__ConnectionPosition(struct soap*, enum witsml1__ConnectionPosition *, const char*, const char*);

inline int soap_read_witsml1__ConnectionPosition(struct soap *soap, enum witsml1__ConnectionPosition *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ConnectionPosition(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChronostratigraphyUnit_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChronostratigraphyUnit_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ChronostratigraphyUnit(struct soap*, enum witsml1__ChronostratigraphyUnit *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ChronostratigraphyUnit(struct soap*, const char*, int, const enum witsml1__ChronostratigraphyUnit *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ChronostratigraphyUnit2s(struct soap*, enum witsml1__ChronostratigraphyUnit);
SOAP_FMAC3 enum witsml1__ChronostratigraphyUnit * SOAP_FMAC4 soap_in_witsml1__ChronostratigraphyUnit(struct soap*, const char*, enum witsml1__ChronostratigraphyUnit *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ChronostratigraphyUnit(struct soap*, const char*, enum witsml1__ChronostratigraphyUnit *);

inline enum witsml1__ChronostratigraphyUnit * soap_new_witsml1__ChronostratigraphyUnit(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ChronostratigraphyUnit *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ChronostratigraphyUnit)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ChronostratigraphyUnit(struct soap*, const enum witsml1__ChronostratigraphyUnit *, const char*, const char*);

inline int soap_write_witsml1__ChronostratigraphyUnit(struct soap *soap, enum witsml1__ChronostratigraphyUnit const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ChronostratigraphyUnit(soap, p, "witsml1:ChronostratigraphyUnit", "witsml1:ChronostratigraphyUnit") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ChronostratigraphyUnit * SOAP_FMAC4 soap_get_witsml1__ChronostratigraphyUnit(struct soap*, enum witsml1__ChronostratigraphyUnit *, const char*, const char*);

inline int soap_read_witsml1__ChronostratigraphyUnit(struct soap *soap, enum witsml1__ChronostratigraphyUnit *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ChronostratigraphyUnit(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChangeInfoType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ChangeInfoType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ChangeInfoType(struct soap*, enum witsml1__ChangeInfoType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ChangeInfoType(struct soap*, const char*, int, const enum witsml1__ChangeInfoType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ChangeInfoType2s(struct soap*, enum witsml1__ChangeInfoType);
SOAP_FMAC3 enum witsml1__ChangeInfoType * SOAP_FMAC4 soap_in_witsml1__ChangeInfoType(struct soap*, const char*, enum witsml1__ChangeInfoType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ChangeInfoType(struct soap*, const char*, enum witsml1__ChangeInfoType *);

inline enum witsml1__ChangeInfoType * soap_new_witsml1__ChangeInfoType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ChangeInfoType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ChangeInfoType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ChangeInfoType(struct soap*, const enum witsml1__ChangeInfoType *, const char*, const char*);

inline int soap_write_witsml1__ChangeInfoType(struct soap *soap, enum witsml1__ChangeInfoType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ChangeInfoType(soap, p, "witsml1:ChangeInfoType", "witsml1:ChangeInfoType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ChangeInfoType * SOAP_FMAC4 soap_get_witsml1__ChangeInfoType(struct soap*, enum witsml1__ChangeInfoType *, const char*, const char*);

inline int soap_read_witsml1__ChangeInfoType(struct soap *soap, enum witsml1__ChangeInfoType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ChangeInfoType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CementJobType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CementJobType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__CementJobType(struct soap*, enum witsml1__CementJobType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__CementJobType(struct soap*, const char*, int, const enum witsml1__CementJobType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__CementJobType2s(struct soap*, enum witsml1__CementJobType);
SOAP_FMAC3 enum witsml1__CementJobType * SOAP_FMAC4 soap_in_witsml1__CementJobType(struct soap*, const char*, enum witsml1__CementJobType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__CementJobType(struct soap*, const char*, enum witsml1__CementJobType *);

inline enum witsml1__CementJobType * soap_new_witsml1__CementJobType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__CementJobType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__CementJobType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__CementJobType(struct soap*, const enum witsml1__CementJobType *, const char*, const char*);

inline int soap_write_witsml1__CementJobType(struct soap *soap, enum witsml1__CementJobType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__CementJobType(soap, p, "witsml1:CementJobType", "witsml1:CementJobType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__CementJobType * SOAP_FMAC4 soap_get_witsml1__CementJobType(struct soap*, enum witsml1__CementJobType *, const char*, const char*);

inline int soap_read_witsml1__CementJobType(struct soap *soap, enum witsml1__CementJobType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__CementJobType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BoxPinConfig_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BoxPinConfig_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__BoxPinConfig(struct soap*, enum witsml1__BoxPinConfig *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__BoxPinConfig(struct soap*, const char*, int, const enum witsml1__BoxPinConfig *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__BoxPinConfig2s(struct soap*, enum witsml1__BoxPinConfig);
SOAP_FMAC3 enum witsml1__BoxPinConfig * SOAP_FMAC4 soap_in_witsml1__BoxPinConfig(struct soap*, const char*, enum witsml1__BoxPinConfig *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__BoxPinConfig(struct soap*, const char*, enum witsml1__BoxPinConfig *);

inline enum witsml1__BoxPinConfig * soap_new_witsml1__BoxPinConfig(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__BoxPinConfig *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__BoxPinConfig)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__BoxPinConfig(struct soap*, const enum witsml1__BoxPinConfig *, const char*, const char*);

inline int soap_write_witsml1__BoxPinConfig(struct soap *soap, enum witsml1__BoxPinConfig const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__BoxPinConfig(soap, p, "witsml1:BoxPinConfig", "witsml1:BoxPinConfig") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__BoxPinConfig * SOAP_FMAC4 soap_get_witsml1__BoxPinConfig(struct soap*, enum witsml1__BoxPinConfig *, const char*, const char*);

inline int soap_read_witsml1__BoxPinConfig(struct soap *soap, enum witsml1__BoxPinConfig *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__BoxPinConfig(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BopType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BopType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__BopType(struct soap*, enum witsml1__BopType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__BopType(struct soap*, const char*, int, const enum witsml1__BopType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__BopType2s(struct soap*, enum witsml1__BopType);
SOAP_FMAC3 enum witsml1__BopType * SOAP_FMAC4 soap_in_witsml1__BopType(struct soap*, const char*, enum witsml1__BopType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__BopType(struct soap*, const char*, enum witsml1__BopType *);

inline enum witsml1__BopType * soap_new_witsml1__BopType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__BopType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__BopType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__BopType(struct soap*, const enum witsml1__BopType *, const char*, const char*);

inline int soap_write_witsml1__BopType(struct soap *soap, enum witsml1__BopType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__BopType(soap, p, "witsml1:BopType", "witsml1:BopType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__BopType * SOAP_FMAC4 soap_get_witsml1__BopType(struct soap*, enum witsml1__BopType *, const char*, const char*);

inline int soap_read_witsml1__BopType(struct soap *soap, enum witsml1__BopType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__BopType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__BladeType(struct soap*, enum witsml1__BladeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__BladeType(struct soap*, const char*, int, const enum witsml1__BladeType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__BladeType2s(struct soap*, enum witsml1__BladeType);
SOAP_FMAC3 enum witsml1__BladeType * SOAP_FMAC4 soap_in_witsml1__BladeType(struct soap*, const char*, enum witsml1__BladeType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__BladeType(struct soap*, const char*, enum witsml1__BladeType *);

inline enum witsml1__BladeType * soap_new_witsml1__BladeType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__BladeType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__BladeType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__BladeType(struct soap*, const enum witsml1__BladeType *, const char*, const char*);

inline int soap_write_witsml1__BladeType(struct soap *soap, enum witsml1__BladeType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__BladeType(soap, p, "witsml1:BladeType", "witsml1:BladeType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__BladeType * SOAP_FMAC4 soap_get_witsml1__BladeType(struct soap*, enum witsml1__BladeType *, const char*, const char*);

inline int soap_read_witsml1__BladeType(struct soap *soap, enum witsml1__BladeType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__BladeType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeShapeType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BladeShapeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__BladeShapeType(struct soap*, enum witsml1__BladeShapeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__BladeShapeType(struct soap*, const char*, int, const enum witsml1__BladeShapeType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__BladeShapeType2s(struct soap*, enum witsml1__BladeShapeType);
SOAP_FMAC3 enum witsml1__BladeShapeType * SOAP_FMAC4 soap_in_witsml1__BladeShapeType(struct soap*, const char*, enum witsml1__BladeShapeType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__BladeShapeType(struct soap*, const char*, enum witsml1__BladeShapeType *);

inline enum witsml1__BladeShapeType * soap_new_witsml1__BladeShapeType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__BladeShapeType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__BladeShapeType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__BladeShapeType(struct soap*, const enum witsml1__BladeShapeType *, const char*, const char*);

inline int soap_write_witsml1__BladeShapeType(struct soap *soap, enum witsml1__BladeShapeType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__BladeShapeType(soap, p, "witsml1:BladeShapeType", "witsml1:BladeShapeType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__BladeShapeType * SOAP_FMAC4 soap_get_witsml1__BladeShapeType(struct soap*, enum witsml1__BladeShapeType *, const char*, const char*);

inline int soap_read_witsml1__BladeShapeType(struct soap *soap, enum witsml1__BladeShapeType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__BladeShapeType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BhaStatus_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BhaStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__BhaStatus(struct soap*, enum witsml1__BhaStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__BhaStatus(struct soap*, const char*, int, const enum witsml1__BhaStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__BhaStatus2s(struct soap*, enum witsml1__BhaStatus);
SOAP_FMAC3 enum witsml1__BhaStatus * SOAP_FMAC4 soap_in_witsml1__BhaStatus(struct soap*, const char*, enum witsml1__BhaStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__BhaStatus(struct soap*, const char*, enum witsml1__BhaStatus *);

inline enum witsml1__BhaStatus * soap_new_witsml1__BhaStatus(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__BhaStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__BhaStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__BhaStatus(struct soap*, const enum witsml1__BhaStatus *, const char*, const char*);

inline int soap_write_witsml1__BhaStatus(struct soap *soap, enum witsml1__BhaStatus const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__BhaStatus(soap, p, "witsml1:BhaStatus", "witsml1:BhaStatus") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__BhaStatus * SOAP_FMAC4 soap_get_witsml1__BhaStatus(struct soap*, enum witsml1__BhaStatus *, const char*, const char*);

inline int soap_read_witsml1__BhaStatus(struct soap *soap, enum witsml1__BhaStatus *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__BhaStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__BitType(struct soap*, enum witsml1__BitType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__BitType(struct soap*, const char*, int, const enum witsml1__BitType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__BitType2s(struct soap*, enum witsml1__BitType);
SOAP_FMAC3 enum witsml1__BitType * SOAP_FMAC4 soap_in_witsml1__BitType(struct soap*, const char*, enum witsml1__BitType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__BitType(struct soap*, const char*, enum witsml1__BitType *);

inline enum witsml1__BitType * soap_new_witsml1__BitType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__BitType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__BitType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__BitType(struct soap*, const enum witsml1__BitType *, const char*, const char*);

inline int soap_write_witsml1__BitType(struct soap *soap, enum witsml1__BitType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__BitType(soap, p, "witsml1:BitType", "witsml1:BitType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__BitType * SOAP_FMAC4 soap_get_witsml1__BitType(struct soap*, enum witsml1__BitType *, const char*, const char*);

inline int soap_read_witsml1__BitType(struct soap *soap, enum witsml1__BitType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__BitType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitReasonPulled_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitReasonPulled_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__BitReasonPulled(struct soap*, enum witsml1__BitReasonPulled *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__BitReasonPulled(struct soap*, const char*, int, const enum witsml1__BitReasonPulled *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__BitReasonPulled2s(struct soap*, enum witsml1__BitReasonPulled);
SOAP_FMAC3 enum witsml1__BitReasonPulled * SOAP_FMAC4 soap_in_witsml1__BitReasonPulled(struct soap*, const char*, enum witsml1__BitReasonPulled *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__BitReasonPulled(struct soap*, const char*, enum witsml1__BitReasonPulled *);

inline enum witsml1__BitReasonPulled * soap_new_witsml1__BitReasonPulled(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__BitReasonPulled *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__BitReasonPulled)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__BitReasonPulled(struct soap*, const enum witsml1__BitReasonPulled *, const char*, const char*);

inline int soap_write_witsml1__BitReasonPulled(struct soap *soap, enum witsml1__BitReasonPulled const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__BitReasonPulled(soap, p, "witsml1:BitReasonPulled", "witsml1:BitReasonPulled") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__BitReasonPulled * SOAP_FMAC4 soap_get_witsml1__BitReasonPulled(struct soap*, enum witsml1__BitReasonPulled *, const char*, const char*);

inline int soap_read_witsml1__BitReasonPulled(struct soap *soap, enum witsml1__BitReasonPulled *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__BitReasonPulled(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitDullCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BitDullCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__BitDullCode(struct soap*, enum witsml1__BitDullCode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__BitDullCode(struct soap*, const char*, int, const enum witsml1__BitDullCode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__BitDullCode2s(struct soap*, enum witsml1__BitDullCode);
SOAP_FMAC3 enum witsml1__BitDullCode * SOAP_FMAC4 soap_in_witsml1__BitDullCode(struct soap*, const char*, enum witsml1__BitDullCode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__BitDullCode(struct soap*, const char*, enum witsml1__BitDullCode *);

inline enum witsml1__BitDullCode * soap_new_witsml1__BitDullCode(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__BitDullCode *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__BitDullCode)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__BitDullCode(struct soap*, const enum witsml1__BitDullCode *, const char*, const char*);

inline int soap_write_witsml1__BitDullCode(struct soap *soap, enum witsml1__BitDullCode const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__BitDullCode(soap, p, "witsml1:BitDullCode", "witsml1:BitDullCode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__BitDullCode * SOAP_FMAC4 soap_get_witsml1__BitDullCode(struct soap*, enum witsml1__BitDullCode *, const char*, const char*);

inline int soap_read_witsml1__BitDullCode(struct soap *soap, enum witsml1__BitDullCode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__BitDullCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BearingType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__BearingType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__BearingType(struct soap*, enum witsml1__BearingType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__BearingType(struct soap*, const char*, int, const enum witsml1__BearingType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__BearingType2s(struct soap*, enum witsml1__BearingType);
SOAP_FMAC3 enum witsml1__BearingType * SOAP_FMAC4 soap_in_witsml1__BearingType(struct soap*, const char*, enum witsml1__BearingType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__BearingType(struct soap*, const char*, enum witsml1__BearingType *);

inline enum witsml1__BearingType * soap_new_witsml1__BearingType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__BearingType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__BearingType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__BearingType(struct soap*, const enum witsml1__BearingType *, const char*, const char*);

inline int soap_write_witsml1__BearingType(struct soap *soap, enum witsml1__BearingType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__BearingType(soap, p, "witsml1:BearingType", "witsml1:BearingType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__BearingType * SOAP_FMAC4 soap_get_witsml1__BearingType(struct soap*, enum witsml1__BearingType *, const char*, const char*);

inline int soap_read_witsml1__BearingType(struct soap *soap, enum witsml1__BearingType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__BearingType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AziRef_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AziRef_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__AziRef(struct soap*, enum witsml1__AziRef *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__AziRef(struct soap*, const char*, int, const enum witsml1__AziRef *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__AziRef2s(struct soap*, enum witsml1__AziRef);
SOAP_FMAC3 enum witsml1__AziRef * SOAP_FMAC4 soap_in_witsml1__AziRef(struct soap*, const char*, enum witsml1__AziRef *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__AziRef(struct soap*, const char*, enum witsml1__AziRef *);

inline enum witsml1__AziRef * soap_new_witsml1__AziRef(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__AziRef *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__AziRef)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__AziRef(struct soap*, const enum witsml1__AziRef *, const char*, const char*);

inline int soap_write_witsml1__AziRef(struct soap *soap, enum witsml1__AziRef const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__AziRef(soap, p, "witsml1:AziRef", "witsml1:AziRef") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__AziRef * SOAP_FMAC4 soap_get_witsml1__AziRef(struct soap*, enum witsml1__AziRef *, const char*, const char*);

inline int soap_read_witsml1__AziRef(struct soap *soap, enum witsml1__AziRef *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__AziRef(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AuthorizationStatus_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AuthorizationStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__AuthorizationStatus(struct soap*, enum witsml1__AuthorizationStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__AuthorizationStatus(struct soap*, const char*, int, const enum witsml1__AuthorizationStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__AuthorizationStatus2s(struct soap*, enum witsml1__AuthorizationStatus);
SOAP_FMAC3 enum witsml1__AuthorizationStatus * SOAP_FMAC4 soap_in_witsml1__AuthorizationStatus(struct soap*, const char*, enum witsml1__AuthorizationStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__AuthorizationStatus(struct soap*, const char*, enum witsml1__AuthorizationStatus *);

inline enum witsml1__AuthorizationStatus * soap_new_witsml1__AuthorizationStatus(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__AuthorizationStatus *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__AuthorizationStatus)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__AuthorizationStatus(struct soap*, const enum witsml1__AuthorizationStatus *, const char*, const char*);

inline int soap_write_witsml1__AuthorizationStatus(struct soap *soap, enum witsml1__AuthorizationStatus const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__AuthorizationStatus(soap, p, "witsml1:AuthorizationStatus", "witsml1:AuthorizationStatus") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__AuthorizationStatus * SOAP_FMAC4 soap_get_witsml1__AuthorizationStatus(struct soap*, enum witsml1__AuthorizationStatus *, const char*, const char*);

inline int soap_read_witsml1__AuthorizationStatus(struct soap *soap, enum witsml1__AuthorizationStatus *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__AuthorizationStatus(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityClassType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityClassType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ActivityClassType(struct soap*, enum witsml1__ActivityClassType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ActivityClassType(struct soap*, const char*, int, const enum witsml1__ActivityClassType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ActivityClassType2s(struct soap*, enum witsml1__ActivityClassType);
SOAP_FMAC3 enum witsml1__ActivityClassType * SOAP_FMAC4 soap_in_witsml1__ActivityClassType(struct soap*, const char*, enum witsml1__ActivityClassType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ActivityClassType(struct soap*, const char*, enum witsml1__ActivityClassType *);

inline enum witsml1__ActivityClassType * soap_new_witsml1__ActivityClassType(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ActivityClassType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ActivityClassType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ActivityClassType(struct soap*, const enum witsml1__ActivityClassType *, const char*, const char*);

inline int soap_write_witsml1__ActivityClassType(struct soap *soap, enum witsml1__ActivityClassType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ActivityClassType(soap, p, "witsml1:ActivityClassType", "witsml1:ActivityClassType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ActivityClassType * SOAP_FMAC4 soap_get_witsml1__ActivityClassType(struct soap*, enum witsml1__ActivityClassType *, const char*, const char*);

inline int soap_read_witsml1__ActivityClassType(struct soap *soap, enum witsml1__ActivityClassType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ActivityClassType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__VolumePerVolumeUom(struct soap*, enum witsml1__VolumePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__VolumePerVolumeUom(struct soap*, const char*, int, const enum witsml1__VolumePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__VolumePerVolumeUom2s(struct soap*, enum witsml1__VolumePerVolumeUom);
SOAP_FMAC3 enum witsml1__VolumePerVolumeUom * SOAP_FMAC4 soap_in_witsml1__VolumePerVolumeUom(struct soap*, const char*, enum witsml1__VolumePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__VolumePerVolumeUom(struct soap*, const char*, enum witsml1__VolumePerVolumeUom *);

inline enum witsml1__VolumePerVolumeUom * soap_new_witsml1__VolumePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__VolumePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__VolumePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__VolumePerVolumeUom(struct soap*, const enum witsml1__VolumePerVolumeUom *, const char*, const char*);

inline int soap_write_witsml1__VolumePerVolumeUom(struct soap *soap, enum witsml1__VolumePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__VolumePerVolumeUom(soap, p, "witsml1:VolumePerVolumeUom", "witsml1:VolumePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__VolumePerVolumeUom * SOAP_FMAC4 soap_get_witsml1__VolumePerVolumeUom(struct soap*, enum witsml1__VolumePerVolumeUom *, const char*, const char*);

inline int soap_read_witsml1__VolumePerVolumeUom(struct soap *soap, enum witsml1__VolumePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__VolumePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__VolumePerLengthUom(struct soap*, enum witsml1__VolumePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__VolumePerLengthUom(struct soap*, const char*, int, const enum witsml1__VolumePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__VolumePerLengthUom2s(struct soap*, enum witsml1__VolumePerLengthUom);
SOAP_FMAC3 enum witsml1__VolumePerLengthUom * SOAP_FMAC4 soap_in_witsml1__VolumePerLengthUom(struct soap*, const char*, enum witsml1__VolumePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__VolumePerLengthUom(struct soap*, const char*, enum witsml1__VolumePerLengthUom *);

inline enum witsml1__VolumePerLengthUom * soap_new_witsml1__VolumePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__VolumePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__VolumePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__VolumePerLengthUom(struct soap*, const enum witsml1__VolumePerLengthUom *, const char*, const char*);

inline int soap_write_witsml1__VolumePerLengthUom(struct soap *soap, enum witsml1__VolumePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__VolumePerLengthUom(soap, p, "witsml1:VolumePerLengthUom", "witsml1:VolumePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__VolumePerLengthUom * SOAP_FMAC4 soap_get_witsml1__VolumePerLengthUom(struct soap*, enum witsml1__VolumePerLengthUom *, const char*, const char*);

inline int soap_read_witsml1__VolumePerLengthUom(struct soap *soap, enum witsml1__VolumePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__VolumePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeFlowRateUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeFlowRateUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__VolumeFlowRateUom(struct soap*, enum witsml1__VolumeFlowRateUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__VolumeFlowRateUom(struct soap*, const char*, int, const enum witsml1__VolumeFlowRateUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__VolumeFlowRateUom2s(struct soap*, enum witsml1__VolumeFlowRateUom);
SOAP_FMAC3 enum witsml1__VolumeFlowRateUom * SOAP_FMAC4 soap_in_witsml1__VolumeFlowRateUom(struct soap*, const char*, enum witsml1__VolumeFlowRateUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__VolumeFlowRateUom(struct soap*, const char*, enum witsml1__VolumeFlowRateUom *);

inline enum witsml1__VolumeFlowRateUom * soap_new_witsml1__VolumeFlowRateUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__VolumeFlowRateUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__VolumeFlowRateUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__VolumeFlowRateUom(struct soap*, const enum witsml1__VolumeFlowRateUom *, const char*, const char*);

inline int soap_write_witsml1__VolumeFlowRateUom(struct soap *soap, enum witsml1__VolumeFlowRateUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__VolumeFlowRateUom(soap, p, "witsml1:VolumeFlowRateUom", "witsml1:VolumeFlowRateUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__VolumeFlowRateUom * SOAP_FMAC4 soap_get_witsml1__VolumeFlowRateUom(struct soap*, enum witsml1__VolumeFlowRateUom *, const char*, const char*);

inline int soap_read_witsml1__VolumeFlowRateUom(struct soap *soap, enum witsml1__VolumeFlowRateUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__VolumeFlowRateUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__VolumeUom(struct soap*, enum witsml1__VolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__VolumeUom(struct soap*, const char*, int, const enum witsml1__VolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__VolumeUom2s(struct soap*, enum witsml1__VolumeUom);
SOAP_FMAC3 enum witsml1__VolumeUom * SOAP_FMAC4 soap_in_witsml1__VolumeUom(struct soap*, const char*, enum witsml1__VolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__VolumeUom(struct soap*, const char*, enum witsml1__VolumeUom *);

inline enum witsml1__VolumeUom * soap_new_witsml1__VolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__VolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__VolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__VolumeUom(struct soap*, const enum witsml1__VolumeUom *, const char*, const char*);

inline int soap_write_witsml1__VolumeUom(struct soap *soap, enum witsml1__VolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__VolumeUom(soap, p, "witsml1:VolumeUom", "witsml1:VolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__VolumeUom * SOAP_FMAC4 soap_get_witsml1__VolumeUom(struct soap*, enum witsml1__VolumeUom *, const char*, const char*);

inline int soap_read_witsml1__VolumeUom(struct soap *soap, enum witsml1__VolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__VolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VelocityUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__VelocityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__VelocityUom(struct soap*, enum witsml1__VelocityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__VelocityUom(struct soap*, const char*, int, const enum witsml1__VelocityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__VelocityUom2s(struct soap*, enum witsml1__VelocityUom);
SOAP_FMAC3 enum witsml1__VelocityUom * SOAP_FMAC4 soap_in_witsml1__VelocityUom(struct soap*, const char*, enum witsml1__VelocityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__VelocityUom(struct soap*, const char*, enum witsml1__VelocityUom *);

inline enum witsml1__VelocityUom * soap_new_witsml1__VelocityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__VelocityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__VelocityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__VelocityUom(struct soap*, const enum witsml1__VelocityUom *, const char*, const char*);

inline int soap_write_witsml1__VelocityUom(struct soap *soap, enum witsml1__VelocityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__VelocityUom(soap, p, "witsml1:VelocityUom", "witsml1:VelocityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__VelocityUom * SOAP_FMAC4 soap_get_witsml1__VelocityUom(struct soap*, enum witsml1__VelocityUom *, const char*, const char*);

inline int soap_read_witsml1__VelocityUom(struct soap *soap, enum witsml1__VelocityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__VelocityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TimeUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__TimeUom(struct soap*, enum witsml1__TimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__TimeUom(struct soap*, const char*, int, const enum witsml1__TimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__TimeUom2s(struct soap*, enum witsml1__TimeUom);
SOAP_FMAC3 enum witsml1__TimeUom * SOAP_FMAC4 soap_in_witsml1__TimeUom(struct soap*, const char*, enum witsml1__TimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__TimeUom(struct soap*, const char*, enum witsml1__TimeUom *);

inline enum witsml1__TimeUom * soap_new_witsml1__TimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__TimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__TimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__TimeUom(struct soap*, const enum witsml1__TimeUom *, const char*, const char*);

inline int soap_write_witsml1__TimeUom(struct soap *soap, enum witsml1__TimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__TimeUom(soap, p, "witsml1:TimeUom", "witsml1:TimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__TimeUom * SOAP_FMAC4 soap_get_witsml1__TimeUom(struct soap*, enum witsml1__TimeUom *, const char*, const char*);

inline int soap_read_witsml1__TimeUom(struct soap *soap, enum witsml1__TimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__TimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermodynamicTemperatureUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermodynamicTemperatureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ThermodynamicTemperatureUom(struct soap*, enum witsml1__ThermodynamicTemperatureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ThermodynamicTemperatureUom(struct soap*, const char*, int, const enum witsml1__ThermodynamicTemperatureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ThermodynamicTemperatureUom2s(struct soap*, enum witsml1__ThermodynamicTemperatureUom);
SOAP_FMAC3 enum witsml1__ThermodynamicTemperatureUom * SOAP_FMAC4 soap_in_witsml1__ThermodynamicTemperatureUom(struct soap*, const char*, enum witsml1__ThermodynamicTemperatureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ThermodynamicTemperatureUom(struct soap*, const char*, enum witsml1__ThermodynamicTemperatureUom *);

inline enum witsml1__ThermodynamicTemperatureUom * soap_new_witsml1__ThermodynamicTemperatureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ThermodynamicTemperatureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ThermodynamicTemperatureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ThermodynamicTemperatureUom(struct soap*, const enum witsml1__ThermodynamicTemperatureUom *, const char*, const char*);

inline int soap_write_witsml1__ThermodynamicTemperatureUom(struct soap *soap, enum witsml1__ThermodynamicTemperatureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ThermodynamicTemperatureUom(soap, p, "witsml1:ThermodynamicTemperatureUom", "witsml1:ThermodynamicTemperatureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ThermodynamicTemperatureUom * SOAP_FMAC4 soap_get_witsml1__ThermodynamicTemperatureUom(struct soap*, enum witsml1__ThermodynamicTemperatureUom *, const char*, const char*);

inline int soap_read_witsml1__ThermodynamicTemperatureUom(struct soap *soap, enum witsml1__ThermodynamicTemperatureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ThermodynamicTemperatureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalVolumetricExpansionUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalVolumetricExpansionUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ThermalVolumetricExpansionUom(struct soap*, enum witsml1__ThermalVolumetricExpansionUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ThermalVolumetricExpansionUom(struct soap*, const char*, int, const enum witsml1__ThermalVolumetricExpansionUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ThermalVolumetricExpansionUom2s(struct soap*, enum witsml1__ThermalVolumetricExpansionUom);
SOAP_FMAC3 enum witsml1__ThermalVolumetricExpansionUom * SOAP_FMAC4 soap_in_witsml1__ThermalVolumetricExpansionUom(struct soap*, const char*, enum witsml1__ThermalVolumetricExpansionUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ThermalVolumetricExpansionUom(struct soap*, const char*, enum witsml1__ThermalVolumetricExpansionUom *);

inline enum witsml1__ThermalVolumetricExpansionUom * soap_new_witsml1__ThermalVolumetricExpansionUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ThermalVolumetricExpansionUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ThermalVolumetricExpansionUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ThermalVolumetricExpansionUom(struct soap*, const enum witsml1__ThermalVolumetricExpansionUom *, const char*, const char*);

inline int soap_write_witsml1__ThermalVolumetricExpansionUom(struct soap *soap, enum witsml1__ThermalVolumetricExpansionUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ThermalVolumetricExpansionUom(soap, p, "witsml1:ThermalVolumetricExpansionUom", "witsml1:ThermalVolumetricExpansionUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ThermalVolumetricExpansionUom * SOAP_FMAC4 soap_get_witsml1__ThermalVolumetricExpansionUom(struct soap*, enum witsml1__ThermalVolumetricExpansionUom *, const char*, const char*);

inline int soap_read_witsml1__ThermalVolumetricExpansionUom(struct soap *soap, enum witsml1__ThermalVolumetricExpansionUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ThermalVolumetricExpansionUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalConductivityUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ThermalConductivityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ThermalConductivityUom(struct soap*, enum witsml1__ThermalConductivityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ThermalConductivityUom(struct soap*, const char*, int, const enum witsml1__ThermalConductivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ThermalConductivityUom2s(struct soap*, enum witsml1__ThermalConductivityUom);
SOAP_FMAC3 enum witsml1__ThermalConductivityUom * SOAP_FMAC4 soap_in_witsml1__ThermalConductivityUom(struct soap*, const char*, enum witsml1__ThermalConductivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ThermalConductivityUom(struct soap*, const char*, enum witsml1__ThermalConductivityUom *);

inline enum witsml1__ThermalConductivityUom * soap_new_witsml1__ThermalConductivityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ThermalConductivityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ThermalConductivityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ThermalConductivityUom(struct soap*, const enum witsml1__ThermalConductivityUom *, const char*, const char*);

inline int soap_write_witsml1__ThermalConductivityUom(struct soap *soap, enum witsml1__ThermalConductivityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ThermalConductivityUom(soap, p, "witsml1:ThermalConductivityUom", "witsml1:ThermalConductivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ThermalConductivityUom * SOAP_FMAC4 soap_get_witsml1__ThermalConductivityUom(struct soap*, enum witsml1__ThermalConductivityUom *, const char*, const char*);

inline int soap_read_witsml1__ThermalConductivityUom(struct soap *soap, enum witsml1__ThermalConductivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ThermalConductivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumePerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StandardVolumePerTimeUom(struct soap*, enum witsml1__StandardVolumePerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StandardVolumePerTimeUom(struct soap*, const char*, int, const enum witsml1__StandardVolumePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StandardVolumePerTimeUom2s(struct soap*, enum witsml1__StandardVolumePerTimeUom);
SOAP_FMAC3 enum witsml1__StandardVolumePerTimeUom * SOAP_FMAC4 soap_in_witsml1__StandardVolumePerTimeUom(struct soap*, const char*, enum witsml1__StandardVolumePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StandardVolumePerTimeUom(struct soap*, const char*, enum witsml1__StandardVolumePerTimeUom *);

inline enum witsml1__StandardVolumePerTimeUom * soap_new_witsml1__StandardVolumePerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StandardVolumePerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StandardVolumePerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StandardVolumePerTimeUom(struct soap*, const enum witsml1__StandardVolumePerTimeUom *, const char*, const char*);

inline int soap_write_witsml1__StandardVolumePerTimeUom(struct soap *soap, enum witsml1__StandardVolumePerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StandardVolumePerTimeUom(soap, p, "witsml1:StandardVolumePerTimeUom", "witsml1:StandardVolumePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StandardVolumePerTimeUom * SOAP_FMAC4 soap_get_witsml1__StandardVolumePerTimeUom(struct soap*, enum witsml1__StandardVolumePerTimeUom *, const char*, const char*);

inline int soap_read_witsml1__StandardVolumePerTimeUom(struct soap *soap, enum witsml1__StandardVolumePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StandardVolumePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__StandardVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__StandardVolumeUom(struct soap*, enum witsml1__StandardVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__StandardVolumeUom(struct soap*, const char*, int, const enum witsml1__StandardVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__StandardVolumeUom2s(struct soap*, enum witsml1__StandardVolumeUom);
SOAP_FMAC3 enum witsml1__StandardVolumeUom * SOAP_FMAC4 soap_in_witsml1__StandardVolumeUom(struct soap*, const char*, enum witsml1__StandardVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__StandardVolumeUom(struct soap*, const char*, enum witsml1__StandardVolumeUom *);

inline enum witsml1__StandardVolumeUom * soap_new_witsml1__StandardVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__StandardVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__StandardVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__StandardVolumeUom(struct soap*, const enum witsml1__StandardVolumeUom *, const char*, const char*);

inline int soap_write_witsml1__StandardVolumeUom(struct soap *soap, enum witsml1__StandardVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__StandardVolumeUom(soap, p, "witsml1:StandardVolumeUom", "witsml1:StandardVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__StandardVolumeUom * SOAP_FMAC4 soap_get_witsml1__StandardVolumeUom(struct soap*, enum witsml1__StandardVolumeUom *, const char*, const char*);

inline int soap_read_witsml1__StandardVolumeUom(struct soap *soap, enum witsml1__StandardVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__StandardVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__SpecificVolumeUom(struct soap*, enum witsml1__SpecificVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__SpecificVolumeUom(struct soap*, const char*, int, const enum witsml1__SpecificVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__SpecificVolumeUom2s(struct soap*, enum witsml1__SpecificVolumeUom);
SOAP_FMAC3 enum witsml1__SpecificVolumeUom * SOAP_FMAC4 soap_in_witsml1__SpecificVolumeUom(struct soap*, const char*, enum witsml1__SpecificVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__SpecificVolumeUom(struct soap*, const char*, enum witsml1__SpecificVolumeUom *);

inline enum witsml1__SpecificVolumeUom * soap_new_witsml1__SpecificVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__SpecificVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__SpecificVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__SpecificVolumeUom(struct soap*, const enum witsml1__SpecificVolumeUom *, const char*, const char*);

inline int soap_write_witsml1__SpecificVolumeUom(struct soap *soap, enum witsml1__SpecificVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__SpecificVolumeUom(soap, p, "witsml1:SpecificVolumeUom", "witsml1:SpecificVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__SpecificVolumeUom * SOAP_FMAC4 soap_get_witsml1__SpecificVolumeUom(struct soap*, enum witsml1__SpecificVolumeUom *, const char*, const char*);

inline int soap_read_witsml1__SpecificVolumeUom(struct soap *soap, enum witsml1__SpecificVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__SpecificVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificHeatCapacityUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__SpecificHeatCapacityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__SpecificHeatCapacityUom(struct soap*, enum witsml1__SpecificHeatCapacityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__SpecificHeatCapacityUom(struct soap*, const char*, int, const enum witsml1__SpecificHeatCapacityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__SpecificHeatCapacityUom2s(struct soap*, enum witsml1__SpecificHeatCapacityUom);
SOAP_FMAC3 enum witsml1__SpecificHeatCapacityUom * SOAP_FMAC4 soap_in_witsml1__SpecificHeatCapacityUom(struct soap*, const char*, enum witsml1__SpecificHeatCapacityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__SpecificHeatCapacityUom(struct soap*, const char*, enum witsml1__SpecificHeatCapacityUom *);

inline enum witsml1__SpecificHeatCapacityUom * soap_new_witsml1__SpecificHeatCapacityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__SpecificHeatCapacityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__SpecificHeatCapacityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__SpecificHeatCapacityUom(struct soap*, const enum witsml1__SpecificHeatCapacityUom *, const char*, const char*);

inline int soap_write_witsml1__SpecificHeatCapacityUom(struct soap *soap, enum witsml1__SpecificHeatCapacityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__SpecificHeatCapacityUom(soap, p, "witsml1:SpecificHeatCapacityUom", "witsml1:SpecificHeatCapacityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__SpecificHeatCapacityUom * SOAP_FMAC4 soap_get_witsml1__SpecificHeatCapacityUom(struct soap*, enum witsml1__SpecificHeatCapacityUom *, const char*, const char*);

inline int soap_read_witsml1__SpecificHeatCapacityUom(struct soap *soap, enum witsml1__SpecificHeatCapacityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__SpecificHeatCapacityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RelativePowerUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__RelativePowerUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__RelativePowerUom(struct soap*, enum witsml1__RelativePowerUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__RelativePowerUom(struct soap*, const char*, int, const enum witsml1__RelativePowerUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__RelativePowerUom2s(struct soap*, enum witsml1__RelativePowerUom);
SOAP_FMAC3 enum witsml1__RelativePowerUom * SOAP_FMAC4 soap_in_witsml1__RelativePowerUom(struct soap*, const char*, enum witsml1__RelativePowerUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__RelativePowerUom(struct soap*, const char*, enum witsml1__RelativePowerUom *);

inline enum witsml1__RelativePowerUom * soap_new_witsml1__RelativePowerUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__RelativePowerUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__RelativePowerUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__RelativePowerUom(struct soap*, const enum witsml1__RelativePowerUom *, const char*, const char*);

inline int soap_write_witsml1__RelativePowerUom(struct soap *soap, enum witsml1__RelativePowerUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__RelativePowerUom(soap, p, "witsml1:RelativePowerUom", "witsml1:RelativePowerUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__RelativePowerUom * SOAP_FMAC4 soap_get_witsml1__RelativePowerUom(struct soap*, enum witsml1__RelativePowerUom *, const char*, const char*);

inline int soap_read_witsml1__RelativePowerUom(struct soap *soap, enum witsml1__RelativePowerUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__RelativePowerUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PressureUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PressureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PressureUom(struct soap*, enum witsml1__PressureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PressureUom(struct soap*, const char*, int, const enum witsml1__PressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PressureUom2s(struct soap*, enum witsml1__PressureUom);
SOAP_FMAC3 enum witsml1__PressureUom * SOAP_FMAC4 soap_in_witsml1__PressureUom(struct soap*, const char*, enum witsml1__PressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PressureUom(struct soap*, const char*, enum witsml1__PressureUom *);

inline enum witsml1__PressureUom * soap_new_witsml1__PressureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PressureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PressureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PressureUom(struct soap*, const enum witsml1__PressureUom *, const char*, const char*);

inline int soap_write_witsml1__PressureUom(struct soap *soap, enum witsml1__PressureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PressureUom(soap, p, "witsml1:PressureUom", "witsml1:PressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PressureUom * SOAP_FMAC4 soap_get_witsml1__PressureUom(struct soap*, enum witsml1__PressureUom *, const char*, const char*);

inline int soap_read_witsml1__PressureUom(struct soap *soap, enum witsml1__PressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PowerUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PowerUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PowerUom(struct soap*, enum witsml1__PowerUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PowerUom(struct soap*, const char*, int, const enum witsml1__PowerUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PowerUom2s(struct soap*, enum witsml1__PowerUom);
SOAP_FMAC3 enum witsml1__PowerUom * SOAP_FMAC4 soap_in_witsml1__PowerUom(struct soap*, const char*, enum witsml1__PowerUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PowerUom(struct soap*, const char*, enum witsml1__PowerUom *);

inline enum witsml1__PowerUom * soap_new_witsml1__PowerUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PowerUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PowerUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PowerUom(struct soap*, const enum witsml1__PowerUom *, const char*, const char*);

inline int soap_write_witsml1__PowerUom(struct soap *soap, enum witsml1__PowerUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PowerUom(soap, p, "witsml1:PowerUom", "witsml1:PowerUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PowerUom * SOAP_FMAC4 soap_get_witsml1__PowerUom(struct soap*, enum witsml1__PowerUom *, const char*, const char*);

inline int soap_read_witsml1__PowerUom(struct soap *soap, enum witsml1__PowerUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PowerUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PlaneAngleUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PlaneAngleUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PlaneAngleUom(struct soap*, enum witsml1__PlaneAngleUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PlaneAngleUom(struct soap*, const char*, int, const enum witsml1__PlaneAngleUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PlaneAngleUom2s(struct soap*, enum witsml1__PlaneAngleUom);
SOAP_FMAC3 enum witsml1__PlaneAngleUom * SOAP_FMAC4 soap_in_witsml1__PlaneAngleUom(struct soap*, const char*, enum witsml1__PlaneAngleUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PlaneAngleUom(struct soap*, const char*, enum witsml1__PlaneAngleUom *);

inline enum witsml1__PlaneAngleUom * soap_new_witsml1__PlaneAngleUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PlaneAngleUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PlaneAngleUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PlaneAngleUom(struct soap*, const enum witsml1__PlaneAngleUom *, const char*, const char*);

inline int soap_write_witsml1__PlaneAngleUom(struct soap *soap, enum witsml1__PlaneAngleUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PlaneAngleUom(soap, p, "witsml1:PlaneAngleUom", "witsml1:PlaneAngleUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PlaneAngleUom * SOAP_FMAC4 soap_get_witsml1__PlaneAngleUom(struct soap*, enum witsml1__PlaneAngleUom *, const char*, const char*);

inline int soap_read_witsml1__PlaneAngleUom(struct soap *soap, enum witsml1__PlaneAngleUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PlaneAngleUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PermeabilityRockUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PermeabilityRockUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PermeabilityRockUom(struct soap*, enum witsml1__PermeabilityRockUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PermeabilityRockUom(struct soap*, const char*, int, const enum witsml1__PermeabilityRockUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PermeabilityRockUom2s(struct soap*, enum witsml1__PermeabilityRockUom);
SOAP_FMAC3 enum witsml1__PermeabilityRockUom * SOAP_FMAC4 soap_in_witsml1__PermeabilityRockUom(struct soap*, const char*, enum witsml1__PermeabilityRockUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PermeabilityRockUom(struct soap*, const char*, enum witsml1__PermeabilityRockUom *);

inline enum witsml1__PermeabilityRockUom * soap_new_witsml1__PermeabilityRockUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PermeabilityRockUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PermeabilityRockUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PermeabilityRockUom(struct soap*, const enum witsml1__PermeabilityRockUom *, const char*, const char*);

inline int soap_write_witsml1__PermeabilityRockUom(struct soap *soap, enum witsml1__PermeabilityRockUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PermeabilityRockUom(soap, p, "witsml1:PermeabilityRockUom", "witsml1:PermeabilityRockUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PermeabilityRockUom * SOAP_FMAC4 soap_get_witsml1__PermeabilityRockUom(struct soap*, enum witsml1__PermeabilityRockUom *, const char*, const char*);

inline int soap_read_witsml1__PermeabilityRockUom(struct soap *soap, enum witsml1__PermeabilityRockUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PermeabilityRockUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PerLengthUom(struct soap*, enum witsml1__PerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PerLengthUom(struct soap*, const char*, int, const enum witsml1__PerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PerLengthUom2s(struct soap*, enum witsml1__PerLengthUom);
SOAP_FMAC3 enum witsml1__PerLengthUom * SOAP_FMAC4 soap_in_witsml1__PerLengthUom(struct soap*, const char*, enum witsml1__PerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PerLengthUom(struct soap*, const char*, enum witsml1__PerLengthUom *);

inline enum witsml1__PerLengthUom * soap_new_witsml1__PerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PerLengthUom(struct soap*, const enum witsml1__PerLengthUom *, const char*, const char*);

inline int soap_write_witsml1__PerLengthUom(struct soap *soap, enum witsml1__PerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PerLengthUom(soap, p, "witsml1:PerLengthUom", "witsml1:PerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PerLengthUom * SOAP_FMAC4 soap_get_witsml1__PerLengthUom(struct soap*, enum witsml1__PerLengthUom *, const char*, const char*);

inline int soap_read_witsml1__PerLengthUom(struct soap *soap, enum witsml1__PerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MomentOfForceUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MomentOfForceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MomentOfForceUom(struct soap*, enum witsml1__MomentOfForceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MomentOfForceUom(struct soap*, const char*, int, const enum witsml1__MomentOfForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MomentOfForceUom2s(struct soap*, enum witsml1__MomentOfForceUom);
SOAP_FMAC3 enum witsml1__MomentOfForceUom * SOAP_FMAC4 soap_in_witsml1__MomentOfForceUom(struct soap*, const char*, enum witsml1__MomentOfForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MomentOfForceUom(struct soap*, const char*, enum witsml1__MomentOfForceUom *);

inline enum witsml1__MomentOfForceUom * soap_new_witsml1__MomentOfForceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MomentOfForceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MomentOfForceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MomentOfForceUom(struct soap*, const enum witsml1__MomentOfForceUom *, const char*, const char*);

inline int soap_write_witsml1__MomentOfForceUom(struct soap *soap, enum witsml1__MomentOfForceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MomentOfForceUom(soap, p, "witsml1:MomentOfForceUom", "witsml1:MomentOfForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MomentOfForceUom * SOAP_FMAC4 soap_get_witsml1__MomentOfForceUom(struct soap*, enum witsml1__MomentOfForceUom *, const char*, const char*);

inline int soap_read_witsml1__MomentOfForceUom(struct soap *soap, enum witsml1__MomentOfForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MomentOfForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassPerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MassPerLengthUom(struct soap*, enum witsml1__MassPerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MassPerLengthUom(struct soap*, const char*, int, const enum witsml1__MassPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MassPerLengthUom2s(struct soap*, enum witsml1__MassPerLengthUom);
SOAP_FMAC3 enum witsml1__MassPerLengthUom * SOAP_FMAC4 soap_in_witsml1__MassPerLengthUom(struct soap*, const char*, enum witsml1__MassPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MassPerLengthUom(struct soap*, const char*, enum witsml1__MassPerLengthUom *);

inline enum witsml1__MassPerLengthUom * soap_new_witsml1__MassPerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MassPerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MassPerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MassPerLengthUom(struct soap*, const enum witsml1__MassPerLengthUom *, const char*, const char*);

inline int soap_write_witsml1__MassPerLengthUom(struct soap *soap, enum witsml1__MassPerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MassPerLengthUom(soap, p, "witsml1:MassPerLengthUom", "witsml1:MassPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MassPerLengthUom * SOAP_FMAC4 soap_get_witsml1__MassPerLengthUom(struct soap*, enum witsml1__MassPerLengthUom *, const char*, const char*);

inline int soap_read_witsml1__MassPerLengthUom(struct soap *soap, enum witsml1__MassPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MassPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MassUom(struct soap*, enum witsml1__MassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MassUom(struct soap*, const char*, int, const enum witsml1__MassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MassUom2s(struct soap*, enum witsml1__MassUom);
SOAP_FMAC3 enum witsml1__MassUom * SOAP_FMAC4 soap_in_witsml1__MassUom(struct soap*, const char*, enum witsml1__MassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MassUom(struct soap*, const char*, enum witsml1__MassUom *);

inline enum witsml1__MassUom * soap_new_witsml1__MassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MassUom(struct soap*, const enum witsml1__MassUom *, const char*, const char*);

inline int soap_write_witsml1__MassUom(struct soap *soap, enum witsml1__MassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MassUom(soap, p, "witsml1:MassUom", "witsml1:MassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MassUom * SOAP_FMAC4 soap_get_witsml1__MassUom(struct soap*, enum witsml1__MassUom *, const char*, const char*);

inline int soap_read_witsml1__MassUom(struct soap *soap, enum witsml1__MassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassConcentrationUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MassConcentrationUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MassConcentrationUom(struct soap*, enum witsml1__MassConcentrationUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MassConcentrationUom(struct soap*, const char*, int, const enum witsml1__MassConcentrationUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MassConcentrationUom2s(struct soap*, enum witsml1__MassConcentrationUom);
SOAP_FMAC3 enum witsml1__MassConcentrationUom * SOAP_FMAC4 soap_in_witsml1__MassConcentrationUom(struct soap*, const char*, enum witsml1__MassConcentrationUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MassConcentrationUom(struct soap*, const char*, enum witsml1__MassConcentrationUom *);

inline enum witsml1__MassConcentrationUom * soap_new_witsml1__MassConcentrationUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MassConcentrationUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MassConcentrationUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MassConcentrationUom(struct soap*, const enum witsml1__MassConcentrationUom *, const char*, const char*);

inline int soap_write_witsml1__MassConcentrationUom(struct soap *soap, enum witsml1__MassConcentrationUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MassConcentrationUom(soap, p, "witsml1:MassConcentrationUom", "witsml1:MassConcentrationUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MassConcentrationUom * SOAP_FMAC4 soap_get_witsml1__MassConcentrationUom(struct soap*, enum witsml1__MassConcentrationUom *, const char*, const char*);

inline int soap_read_witsml1__MassConcentrationUom(struct soap *soap, enum witsml1__MassConcentrationUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MassConcentrationUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MagneticInductionUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MagneticInductionUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MagneticInductionUom(struct soap*, enum witsml1__MagneticInductionUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MagneticInductionUom(struct soap*, const char*, int, const enum witsml1__MagneticInductionUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MagneticInductionUom2s(struct soap*, enum witsml1__MagneticInductionUom);
SOAP_FMAC3 enum witsml1__MagneticInductionUom * SOAP_FMAC4 soap_in_witsml1__MagneticInductionUom(struct soap*, const char*, enum witsml1__MagneticInductionUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MagneticInductionUom(struct soap*, const char*, enum witsml1__MagneticInductionUom *);

inline enum witsml1__MagneticInductionUom * soap_new_witsml1__MagneticInductionUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MagneticInductionUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MagneticInductionUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MagneticInductionUom(struct soap*, const enum witsml1__MagneticInductionUom *, const char*, const char*);

inline int soap_write_witsml1__MagneticInductionUom(struct soap *soap, enum witsml1__MagneticInductionUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MagneticInductionUom(soap, p, "witsml1:MagneticInductionUom", "witsml1:MagneticInductionUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MagneticInductionUom * SOAP_FMAC4 soap_get_witsml1__MagneticInductionUom(struct soap*, enum witsml1__MagneticInductionUom *, const char*, const char*);

inline int soap_read_witsml1__MagneticInductionUom(struct soap *soap, enum witsml1__MagneticInductionUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MagneticInductionUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthPerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__LengthPerLengthUom(struct soap*, enum witsml1__LengthPerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__LengthPerLengthUom(struct soap*, const char*, int, const enum witsml1__LengthPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__LengthPerLengthUom2s(struct soap*, enum witsml1__LengthPerLengthUom);
SOAP_FMAC3 enum witsml1__LengthPerLengthUom * SOAP_FMAC4 soap_in_witsml1__LengthPerLengthUom(struct soap*, const char*, enum witsml1__LengthPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__LengthPerLengthUom(struct soap*, const char*, enum witsml1__LengthPerLengthUom *);

inline enum witsml1__LengthPerLengthUom * soap_new_witsml1__LengthPerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__LengthPerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__LengthPerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__LengthPerLengthUom(struct soap*, const enum witsml1__LengthPerLengthUom *, const char*, const char*);

inline int soap_write_witsml1__LengthPerLengthUom(struct soap *soap, enum witsml1__LengthPerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__LengthPerLengthUom(soap, p, "witsml1:LengthPerLengthUom", "witsml1:LengthPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__LengthPerLengthUom * SOAP_FMAC4 soap_get_witsml1__LengthPerLengthUom(struct soap*, enum witsml1__LengthPerLengthUom *, const char*, const char*);

inline int soap_read_witsml1__LengthPerLengthUom(struct soap *soap, enum witsml1__LengthPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__LengthPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__LengthUom(struct soap*, enum witsml1__LengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__LengthUom(struct soap*, const char*, int, const enum witsml1__LengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__LengthUom2s(struct soap*, enum witsml1__LengthUom);
SOAP_FMAC3 enum witsml1__LengthUom * SOAP_FMAC4 soap_in_witsml1__LengthUom(struct soap*, const char*, enum witsml1__LengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__LengthUom(struct soap*, const char*, enum witsml1__LengthUom *);

inline enum witsml1__LengthUom * soap_new_witsml1__LengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__LengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__LengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__LengthUom(struct soap*, const enum witsml1__LengthUom *, const char*, const char*);

inline int soap_write_witsml1__LengthUom(struct soap *soap, enum witsml1__LengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__LengthUom(soap, p, "witsml1:LengthUom", "witsml1:LengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__LengthUom * SOAP_FMAC4 soap_get_witsml1__LengthUom(struct soap*, enum witsml1__LengthUom *, const char*, const char*);

inline int soap_read_witsml1__LengthUom(struct soap *soap, enum witsml1__LengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__LengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__IlluminanceUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__IlluminanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__IlluminanceUom(struct soap*, enum witsml1__IlluminanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__IlluminanceUom(struct soap*, const char*, int, const enum witsml1__IlluminanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__IlluminanceUom2s(struct soap*, enum witsml1__IlluminanceUom);
SOAP_FMAC3 enum witsml1__IlluminanceUom * SOAP_FMAC4 soap_in_witsml1__IlluminanceUom(struct soap*, const char*, enum witsml1__IlluminanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__IlluminanceUom(struct soap*, const char*, enum witsml1__IlluminanceUom *);

inline enum witsml1__IlluminanceUom * soap_new_witsml1__IlluminanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__IlluminanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__IlluminanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__IlluminanceUom(struct soap*, const enum witsml1__IlluminanceUom *, const char*, const char*);

inline int soap_write_witsml1__IlluminanceUom(struct soap *soap, enum witsml1__IlluminanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__IlluminanceUom(soap, p, "witsml1:IlluminanceUom", "witsml1:IlluminanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__IlluminanceUom * SOAP_FMAC4 soap_get_witsml1__IlluminanceUom(struct soap*, enum witsml1__IlluminanceUom *, const char*, const char*);

inline int soap_read_witsml1__IlluminanceUom(struct soap *soap, enum witsml1__IlluminanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__IlluminanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ForcePerVolumeUom(struct soap*, enum witsml1__ForcePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ForcePerVolumeUom(struct soap*, const char*, int, const enum witsml1__ForcePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ForcePerVolumeUom2s(struct soap*, enum witsml1__ForcePerVolumeUom);
SOAP_FMAC3 enum witsml1__ForcePerVolumeUom * SOAP_FMAC4 soap_in_witsml1__ForcePerVolumeUom(struct soap*, const char*, enum witsml1__ForcePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ForcePerVolumeUom(struct soap*, const char*, enum witsml1__ForcePerVolumeUom *);

inline enum witsml1__ForcePerVolumeUom * soap_new_witsml1__ForcePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ForcePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ForcePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ForcePerVolumeUom(struct soap*, const enum witsml1__ForcePerVolumeUom *, const char*, const char*);

inline int soap_write_witsml1__ForcePerVolumeUom(struct soap *soap, enum witsml1__ForcePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ForcePerVolumeUom(soap, p, "witsml1:ForcePerVolumeUom", "witsml1:ForcePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ForcePerVolumeUom * SOAP_FMAC4 soap_get_witsml1__ForcePerVolumeUom(struct soap*, enum witsml1__ForcePerVolumeUom *, const char*, const char*);

inline int soap_read_witsml1__ForcePerVolumeUom(struct soap *soap, enum witsml1__ForcePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ForcePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForcePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ForcePerLengthUom(struct soap*, enum witsml1__ForcePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ForcePerLengthUom(struct soap*, const char*, int, const enum witsml1__ForcePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ForcePerLengthUom2s(struct soap*, enum witsml1__ForcePerLengthUom);
SOAP_FMAC3 enum witsml1__ForcePerLengthUom * SOAP_FMAC4 soap_in_witsml1__ForcePerLengthUom(struct soap*, const char*, enum witsml1__ForcePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ForcePerLengthUom(struct soap*, const char*, enum witsml1__ForcePerLengthUom *);

inline enum witsml1__ForcePerLengthUom * soap_new_witsml1__ForcePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ForcePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ForcePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ForcePerLengthUom(struct soap*, const enum witsml1__ForcePerLengthUom *, const char*, const char*);

inline int soap_write_witsml1__ForcePerLengthUom(struct soap *soap, enum witsml1__ForcePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ForcePerLengthUom(soap, p, "witsml1:ForcePerLengthUom", "witsml1:ForcePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ForcePerLengthUom * SOAP_FMAC4 soap_get_witsml1__ForcePerLengthUom(struct soap*, enum witsml1__ForcePerLengthUom *, const char*, const char*);

inline int soap_read_witsml1__ForcePerLengthUom(struct soap *soap, enum witsml1__ForcePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ForcePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForceUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ForceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ForceUom(struct soap*, enum witsml1__ForceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ForceUom(struct soap*, const char*, int, const enum witsml1__ForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ForceUom2s(struct soap*, enum witsml1__ForceUom);
SOAP_FMAC3 enum witsml1__ForceUom * SOAP_FMAC4 soap_in_witsml1__ForceUom(struct soap*, const char*, enum witsml1__ForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ForceUom(struct soap*, const char*, enum witsml1__ForceUom *);

inline enum witsml1__ForceUom * soap_new_witsml1__ForceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ForceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ForceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ForceUom(struct soap*, const enum witsml1__ForceUom *, const char*, const char*);

inline int soap_write_witsml1__ForceUom(struct soap *soap, enum witsml1__ForceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ForceUom(soap, p, "witsml1:ForceUom", "witsml1:ForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ForceUom * SOAP_FMAC4 soap_get_witsml1__ForceUom(struct soap*, enum witsml1__ForceUom *, const char*, const char*);

inline int soap_read_witsml1__ForceUom(struct soap *soap, enum witsml1__ForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EquivalentPerMassUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__EquivalentPerMassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__EquivalentPerMassUom(struct soap*, enum witsml1__EquivalentPerMassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__EquivalentPerMassUom(struct soap*, const char*, int, const enum witsml1__EquivalentPerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__EquivalentPerMassUom2s(struct soap*, enum witsml1__EquivalentPerMassUom);
SOAP_FMAC3 enum witsml1__EquivalentPerMassUom * SOAP_FMAC4 soap_in_witsml1__EquivalentPerMassUom(struct soap*, const char*, enum witsml1__EquivalentPerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__EquivalentPerMassUom(struct soap*, const char*, enum witsml1__EquivalentPerMassUom *);

inline enum witsml1__EquivalentPerMassUom * soap_new_witsml1__EquivalentPerMassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__EquivalentPerMassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__EquivalentPerMassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__EquivalentPerMassUom(struct soap*, const enum witsml1__EquivalentPerMassUom *, const char*, const char*);

inline int soap_write_witsml1__EquivalentPerMassUom(struct soap *soap, enum witsml1__EquivalentPerMassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__EquivalentPerMassUom(soap, p, "witsml1:EquivalentPerMassUom", "witsml1:EquivalentPerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__EquivalentPerMassUom * SOAP_FMAC4 soap_get_witsml1__EquivalentPerMassUom(struct soap*, enum witsml1__EquivalentPerMassUom *, const char*, const char*);

inline int soap_read_witsml1__EquivalentPerMassUom(struct soap *soap, enum witsml1__EquivalentPerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__EquivalentPerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricPotentialUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricPotentialUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ElectricPotentialUom(struct soap*, enum witsml1__ElectricPotentialUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ElectricPotentialUom(struct soap*, const char*, int, const enum witsml1__ElectricPotentialUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ElectricPotentialUom2s(struct soap*, enum witsml1__ElectricPotentialUom);
SOAP_FMAC3 enum witsml1__ElectricPotentialUom * SOAP_FMAC4 soap_in_witsml1__ElectricPotentialUom(struct soap*, const char*, enum witsml1__ElectricPotentialUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ElectricPotentialUom(struct soap*, const char*, enum witsml1__ElectricPotentialUom *);

inline enum witsml1__ElectricPotentialUom * soap_new_witsml1__ElectricPotentialUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ElectricPotentialUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ElectricPotentialUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ElectricPotentialUom(struct soap*, const enum witsml1__ElectricPotentialUom *, const char*, const char*);

inline int soap_write_witsml1__ElectricPotentialUom(struct soap *soap, enum witsml1__ElectricPotentialUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ElectricPotentialUom(soap, p, "witsml1:ElectricPotentialUom", "witsml1:ElectricPotentialUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ElectricPotentialUom * SOAP_FMAC4 soap_get_witsml1__ElectricPotentialUom(struct soap*, enum witsml1__ElectricPotentialUom *, const char*, const char*);

inline int soap_read_witsml1__ElectricPotentialUom(struct soap *soap, enum witsml1__ElectricPotentialUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ElectricPotentialUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricCurrentUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ElectricCurrentUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__ElectricCurrentUom(struct soap*, enum witsml1__ElectricCurrentUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ElectricCurrentUom(struct soap*, const char*, int, const enum witsml1__ElectricCurrentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__ElectricCurrentUom2s(struct soap*, enum witsml1__ElectricCurrentUom);
SOAP_FMAC3 enum witsml1__ElectricCurrentUom * SOAP_FMAC4 soap_in_witsml1__ElectricCurrentUom(struct soap*, const char*, enum witsml1__ElectricCurrentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__ElectricCurrentUom(struct soap*, const char*, enum witsml1__ElectricCurrentUom *);

inline enum witsml1__ElectricCurrentUom * soap_new_witsml1__ElectricCurrentUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__ElectricCurrentUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__ElectricCurrentUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__ElectricCurrentUom(struct soap*, const enum witsml1__ElectricCurrentUom *, const char*, const char*);

inline int soap_write_witsml1__ElectricCurrentUom(struct soap *soap, enum witsml1__ElectricCurrentUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__ElectricCurrentUom(soap, p, "witsml1:ElectricCurrentUom", "witsml1:ElectricCurrentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__ElectricCurrentUom * SOAP_FMAC4 soap_get_witsml1__ElectricCurrentUom(struct soap*, enum witsml1__ElectricCurrentUom *, const char*, const char*);

inline int soap_read_witsml1__ElectricCurrentUom(struct soap *soap, enum witsml1__ElectricCurrentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__ElectricCurrentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DynamicViscosityUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DynamicViscosityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__DynamicViscosityUom(struct soap*, enum witsml1__DynamicViscosityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__DynamicViscosityUom(struct soap*, const char*, int, const enum witsml1__DynamicViscosityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__DynamicViscosityUom2s(struct soap*, enum witsml1__DynamicViscosityUom);
SOAP_FMAC3 enum witsml1__DynamicViscosityUom * SOAP_FMAC4 soap_in_witsml1__DynamicViscosityUom(struct soap*, const char*, enum witsml1__DynamicViscosityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__DynamicViscosityUom(struct soap*, const char*, enum witsml1__DynamicViscosityUom *);

inline enum witsml1__DynamicViscosityUom * soap_new_witsml1__DynamicViscosityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__DynamicViscosityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__DynamicViscosityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__DynamicViscosityUom(struct soap*, const enum witsml1__DynamicViscosityUom *, const char*, const char*);

inline int soap_write_witsml1__DynamicViscosityUom(struct soap *soap, enum witsml1__DynamicViscosityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__DynamicViscosityUom(soap, p, "witsml1:DynamicViscosityUom", "witsml1:DynamicViscosityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__DynamicViscosityUom * SOAP_FMAC4 soap_get_witsml1__DynamicViscosityUom(struct soap*, enum witsml1__DynamicViscosityUom *, const char*, const char*);

inline int soap_read_witsml1__DynamicViscosityUom(struct soap *soap, enum witsml1__DynamicViscosityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__DynamicViscosityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DimensionlessUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DimensionlessUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__DimensionlessUom(struct soap*, enum witsml1__DimensionlessUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__DimensionlessUom(struct soap*, const char*, int, const enum witsml1__DimensionlessUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__DimensionlessUom2s(struct soap*, enum witsml1__DimensionlessUom);
SOAP_FMAC3 enum witsml1__DimensionlessUom * SOAP_FMAC4 soap_in_witsml1__DimensionlessUom(struct soap*, const char*, enum witsml1__DimensionlessUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__DimensionlessUom(struct soap*, const char*, enum witsml1__DimensionlessUom *);

inline enum witsml1__DimensionlessUom * soap_new_witsml1__DimensionlessUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__DimensionlessUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__DimensionlessUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__DimensionlessUom(struct soap*, const enum witsml1__DimensionlessUom *, const char*, const char*);

inline int soap_write_witsml1__DimensionlessUom(struct soap *soap, enum witsml1__DimensionlessUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__DimensionlessUom(soap, p, "witsml1:DimensionlessUom", "witsml1:DimensionlessUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__DimensionlessUom * SOAP_FMAC4 soap_get_witsml1__DimensionlessUom(struct soap*, enum witsml1__DimensionlessUom *, const char*, const char*);

inline int soap_read_witsml1__DimensionlessUom(struct soap *soap, enum witsml1__DimensionlessUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__DimensionlessUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DensityUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__DensityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__DensityUom(struct soap*, enum witsml1__DensityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__DensityUom(struct soap*, const char*, int, const enum witsml1__DensityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__DensityUom2s(struct soap*, enum witsml1__DensityUom);
SOAP_FMAC3 enum witsml1__DensityUom * SOAP_FMAC4 soap_in_witsml1__DensityUom(struct soap*, const char*, enum witsml1__DensityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__DensityUom(struct soap*, const char*, enum witsml1__DensityUom *);

inline enum witsml1__DensityUom * soap_new_witsml1__DensityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__DensityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__DensityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__DensityUom(struct soap*, const enum witsml1__DensityUom *, const char*, const char*);

inline int soap_write_witsml1__DensityUom(struct soap *soap, enum witsml1__DensityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__DensityUom(soap, p, "witsml1:DensityUom", "witsml1:DensityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__DensityUom * SOAP_FMAC4 soap_get_witsml1__DensityUom(struct soap*, enum witsml1__DensityUom *, const char*, const char*);

inline int soap_read_witsml1__DensityUom(struct soap *soap, enum witsml1__DensityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__DensityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CompressibilityUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__CompressibilityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__CompressibilityUom(struct soap*, enum witsml1__CompressibilityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__CompressibilityUom(struct soap*, const char*, int, const enum witsml1__CompressibilityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__CompressibilityUom2s(struct soap*, enum witsml1__CompressibilityUom);
SOAP_FMAC3 enum witsml1__CompressibilityUom * SOAP_FMAC4 soap_in_witsml1__CompressibilityUom(struct soap*, const char*, enum witsml1__CompressibilityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__CompressibilityUom(struct soap*, const char*, enum witsml1__CompressibilityUom *);

inline enum witsml1__CompressibilityUom * soap_new_witsml1__CompressibilityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__CompressibilityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__CompressibilityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__CompressibilityUom(struct soap*, const enum witsml1__CompressibilityUom *, const char*, const char*);

inline int soap_write_witsml1__CompressibilityUom(struct soap *soap, enum witsml1__CompressibilityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__CompressibilityUom(soap, p, "witsml1:CompressibilityUom", "witsml1:CompressibilityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__CompressibilityUom * SOAP_FMAC4 soap_get_witsml1__CompressibilityUom(struct soap*, enum witsml1__CompressibilityUom *, const char*, const char*);

inline int soap_read_witsml1__CompressibilityUom(struct soap *soap, enum witsml1__CompressibilityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__CompressibilityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaPerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__AreaPerAreaUom(struct soap*, enum witsml1__AreaPerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__AreaPerAreaUom(struct soap*, const char*, int, const enum witsml1__AreaPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__AreaPerAreaUom2s(struct soap*, enum witsml1__AreaPerAreaUom);
SOAP_FMAC3 enum witsml1__AreaPerAreaUom * SOAP_FMAC4 soap_in_witsml1__AreaPerAreaUom(struct soap*, const char*, enum witsml1__AreaPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__AreaPerAreaUom(struct soap*, const char*, enum witsml1__AreaPerAreaUom *);

inline enum witsml1__AreaPerAreaUom * soap_new_witsml1__AreaPerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__AreaPerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__AreaPerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__AreaPerAreaUom(struct soap*, const enum witsml1__AreaPerAreaUom *, const char*, const char*);

inline int soap_write_witsml1__AreaPerAreaUom(struct soap *soap, enum witsml1__AreaPerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__AreaPerAreaUom(soap, p, "witsml1:AreaPerAreaUom", "witsml1:AreaPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__AreaPerAreaUom * SOAP_FMAC4 soap_get_witsml1__AreaPerAreaUom(struct soap*, enum witsml1__AreaPerAreaUom *, const char*, const char*);

inline int soap_read_witsml1__AreaPerAreaUom(struct soap *soap, enum witsml1__AreaPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__AreaPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__AreaUom(struct soap*, enum witsml1__AreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__AreaUom(struct soap*, const char*, int, const enum witsml1__AreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__AreaUom2s(struct soap*, enum witsml1__AreaUom);
SOAP_FMAC3 enum witsml1__AreaUom * SOAP_FMAC4 soap_in_witsml1__AreaUom(struct soap*, const char*, enum witsml1__AreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__AreaUom(struct soap*, const char*, enum witsml1__AreaUom *);

inline enum witsml1__AreaUom * soap_new_witsml1__AreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__AreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__AreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__AreaUom(struct soap*, const enum witsml1__AreaUom *, const char*, const char*);

inline int soap_write_witsml1__AreaUom(struct soap *soap, enum witsml1__AreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__AreaUom(soap, p, "witsml1:AreaUom", "witsml1:AreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__AreaUom * SOAP_FMAC4 soap_get_witsml1__AreaUom(struct soap*, enum witsml1__AreaUom *, const char*, const char*);

inline int soap_read_witsml1__AreaUom(struct soap *soap, enum witsml1__AreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__AreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__AnglePerTimeUom(struct soap*, enum witsml1__AnglePerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__AnglePerTimeUom(struct soap*, const char*, int, const enum witsml1__AnglePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__AnglePerTimeUom2s(struct soap*, enum witsml1__AnglePerTimeUom);
SOAP_FMAC3 enum witsml1__AnglePerTimeUom * SOAP_FMAC4 soap_in_witsml1__AnglePerTimeUom(struct soap*, const char*, enum witsml1__AnglePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__AnglePerTimeUom(struct soap*, const char*, enum witsml1__AnglePerTimeUom *);

inline enum witsml1__AnglePerTimeUom * soap_new_witsml1__AnglePerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__AnglePerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__AnglePerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__AnglePerTimeUom(struct soap*, const enum witsml1__AnglePerTimeUom *, const char*, const char*);

inline int soap_write_witsml1__AnglePerTimeUom(struct soap *soap, enum witsml1__AnglePerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__AnglePerTimeUom(soap, p, "witsml1:AnglePerTimeUom", "witsml1:AnglePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__AnglePerTimeUom * SOAP_FMAC4 soap_get_witsml1__AnglePerTimeUom(struct soap*, enum witsml1__AnglePerTimeUom *, const char*, const char*);

inline int soap_read_witsml1__AnglePerTimeUom(struct soap *soap, enum witsml1__AnglePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__AnglePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AnglePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__AnglePerLengthUom(struct soap*, enum witsml1__AnglePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__AnglePerLengthUom(struct soap*, const char*, int, const enum witsml1__AnglePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__AnglePerLengthUom2s(struct soap*, enum witsml1__AnglePerLengthUom);
SOAP_FMAC3 enum witsml1__AnglePerLengthUom * SOAP_FMAC4 soap_in_witsml1__AnglePerLengthUom(struct soap*, const char*, enum witsml1__AnglePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__AnglePerLengthUom(struct soap*, const char*, enum witsml1__AnglePerLengthUom *);

inline enum witsml1__AnglePerLengthUom * soap_new_witsml1__AnglePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__AnglePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__AnglePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__AnglePerLengthUom(struct soap*, const enum witsml1__AnglePerLengthUom *, const char*, const char*);

inline int soap_write_witsml1__AnglePerLengthUom(struct soap *soap, enum witsml1__AnglePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__AnglePerLengthUom(soap, p, "witsml1:AnglePerLengthUom", "witsml1:AnglePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__AnglePerLengthUom * SOAP_FMAC4 soap_get_witsml1__AnglePerLengthUom(struct soap*, enum witsml1__AnglePerLengthUom *, const char*, const char*);

inline int soap_read_witsml1__AnglePerLengthUom(struct soap *soap, enum witsml1__AnglePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__AnglePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AccelerationLinearUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__AccelerationLinearUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__AccelerationLinearUom(struct soap*, enum witsml1__AccelerationLinearUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__AccelerationLinearUom(struct soap*, const char*, int, const enum witsml1__AccelerationLinearUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__AccelerationLinearUom2s(struct soap*, enum witsml1__AccelerationLinearUom);
SOAP_FMAC3 enum witsml1__AccelerationLinearUom * SOAP_FMAC4 soap_in_witsml1__AccelerationLinearUom(struct soap*, const char*, enum witsml1__AccelerationLinearUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__AccelerationLinearUom(struct soap*, const char*, enum witsml1__AccelerationLinearUom *);

inline enum witsml1__AccelerationLinearUom * soap_new_witsml1__AccelerationLinearUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__AccelerationLinearUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__AccelerationLinearUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__AccelerationLinearUom(struct soap*, const enum witsml1__AccelerationLinearUom *, const char*, const char*);

inline int soap_write_witsml1__AccelerationLinearUom(struct soap *soap, enum witsml1__AccelerationLinearUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__AccelerationLinearUom(soap, p, "witsml1:AccelerationLinearUom", "witsml1:AccelerationLinearUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__AccelerationLinearUom * SOAP_FMAC4 soap_get_witsml1__AccelerationLinearUom(struct soap*, enum witsml1__AccelerationLinearUom *, const char*, const char*);

inline int soap_read_witsml1__AccelerationLinearUom(struct soap *soap, enum witsml1__AccelerationLinearUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__AccelerationLinearUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellVerticalCoordinateUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__WellVerticalCoordinateUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__WellVerticalCoordinateUom(struct soap*, enum witsml1__WellVerticalCoordinateUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__WellVerticalCoordinateUom(struct soap*, const char*, int, const enum witsml1__WellVerticalCoordinateUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__WellVerticalCoordinateUom2s(struct soap*, enum witsml1__WellVerticalCoordinateUom);
SOAP_FMAC3 enum witsml1__WellVerticalCoordinateUom * SOAP_FMAC4 soap_in_witsml1__WellVerticalCoordinateUom(struct soap*, const char*, enum witsml1__WellVerticalCoordinateUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__WellVerticalCoordinateUom(struct soap*, const char*, enum witsml1__WellVerticalCoordinateUom *);

inline enum witsml1__WellVerticalCoordinateUom * soap_new_witsml1__WellVerticalCoordinateUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__WellVerticalCoordinateUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__WellVerticalCoordinateUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__WellVerticalCoordinateUom(struct soap*, const enum witsml1__WellVerticalCoordinateUom *, const char*, const char*);

inline int soap_write_witsml1__WellVerticalCoordinateUom(struct soap *soap, enum witsml1__WellVerticalCoordinateUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__WellVerticalCoordinateUom(soap, p, "witsml1:WellVerticalCoordinateUom", "witsml1:WellVerticalCoordinateUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__WellVerticalCoordinateUom * SOAP_FMAC4 soap_get_witsml1__WellVerticalCoordinateUom(struct soap*, enum witsml1__WellVerticalCoordinateUom *, const char*, const char*);

inline int soap_read_witsml1__WellVerticalCoordinateUom(struct soap *soap, enum witsml1__WellVerticalCoordinateUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__WellVerticalCoordinateUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasuredDepthUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasuredDepthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__MeasuredDepthUom(struct soap*, enum witsml1__MeasuredDepthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__MeasuredDepthUom(struct soap*, const char*, int, const enum witsml1__MeasuredDepthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__MeasuredDepthUom2s(struct soap*, enum witsml1__MeasuredDepthUom);
SOAP_FMAC3 enum witsml1__MeasuredDepthUom * SOAP_FMAC4 soap_in_witsml1__MeasuredDepthUom(struct soap*, const char*, enum witsml1__MeasuredDepthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__MeasuredDepthUom(struct soap*, const char*, enum witsml1__MeasuredDepthUom *);

inline enum witsml1__MeasuredDepthUom * soap_new_witsml1__MeasuredDepthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__MeasuredDepthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__MeasuredDepthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__MeasuredDepthUom(struct soap*, const enum witsml1__MeasuredDepthUom *, const char*, const char*);

inline int soap_write_witsml1__MeasuredDepthUom(struct soap *soap, enum witsml1__MeasuredDepthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__MeasuredDepthUom(soap, p, "witsml1:MeasuredDepthUom", "witsml1:MeasuredDepthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__MeasuredDepthUom * SOAP_FMAC4 soap_get_witsml1__MeasuredDepthUom(struct soap*, enum witsml1__MeasuredDepthUom *, const char*, const char*);

inline int soap_read_witsml1__MeasuredDepthUom(struct soap *soap, enum witsml1__MeasuredDepthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__MeasuredDepthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PercentUom_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__PercentUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__PercentUom(struct soap*, enum witsml1__PercentUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__PercentUom(struct soap*, const char*, int, const enum witsml1__PercentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_witsml1__PercentUom2s(struct soap*, enum witsml1__PercentUom);
SOAP_FMAC3 enum witsml1__PercentUom * SOAP_FMAC4 soap_in_witsml1__PercentUom(struct soap*, const char*, enum witsml1__PercentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__PercentUom(struct soap*, const char*, enum witsml1__PercentUom *);

inline enum witsml1__PercentUom * soap_new_witsml1__PercentUom(struct soap *soap, int n = -1)
{
	return static_cast<enum witsml1__PercentUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum witsml1__PercentUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__PercentUom(struct soap*, const enum witsml1__PercentUom *, const char*, const char*);

inline int soap_write_witsml1__PercentUom(struct soap *soap, enum witsml1__PercentUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__PercentUom(soap, p, "witsml1:PercentUom", "witsml1:PercentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum witsml1__PercentUom * SOAP_FMAC4 soap_get_witsml1__PercentUom(struct soap*, enum witsml1__PercentUom *, const char*, const char*);

inline int soap_read_witsml1__PercentUom(struct soap *soap, enum witsml1__PercentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__PercentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* witsml1__logicalBoolean is a typedef synonym for witsml1__abstractBoolean */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__logicalBoolean_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__logicalBoolean_DEFINED

#define soap_default_witsml1__logicalBoolean(soap, a) soap_default_witsml1__abstractBoolean(soap, a)


#define soap_witsml1__logicalBoolean2s soap_witsml1__abstractBoolean2s


#define soap_out_witsml1__logicalBoolean soap_out_witsml1__abstractBoolean

SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__logicalBoolean(struct soap*, const char*, bool *);

#define soap_in_witsml1__logicalBoolean soap_in_witsml1__abstractBoolean


inline bool * soap_new_witsml1__logicalBoolean(struct soap *soap, int n = -1)
{
	return static_cast<bool *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(bool)));
}

#define soap_put_witsml1__logicalBoolean soap_put_witsml1__abstractBoolean


#define soap_write_witsml1__logicalBoolean soap_write_witsml1__abstractBoolean


#define soap_get_witsml1__logicalBoolean soap_get_witsml1__abstractBoolean


#define soap_read_witsml1__logicalBoolean soap_read_witsml1__abstractBoolean

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__actuate_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__actuate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xlink__actuate(struct soap*, enum _xlink__actuate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xlink__actuate(struct soap*, const char*, int, const enum _xlink__actuate *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__xlink__actuate2s(struct soap*, enum _xlink__actuate);
SOAP_FMAC3 enum _xlink__actuate * SOAP_FMAC4 soap_in__xlink__actuate(struct soap*, const char*, enum _xlink__actuate *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_xlink__actuate(struct soap*, const char*, enum _xlink__actuate *);

inline enum _xlink__actuate * soap_new__xlink__actuate(struct soap *soap, int n = -1)
{
	return static_cast<enum _xlink__actuate *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum _xlink__actuate)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put__xlink__actuate(struct soap*, const enum _xlink__actuate *, const char*, const char*);

inline int soap_write__xlink__actuate(struct soap *soap, enum _xlink__actuate const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__xlink__actuate(soap, p, "xlink:actuate", "xlink:actuate") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum _xlink__actuate * SOAP_FMAC4 soap_get__xlink__actuate(struct soap*, enum _xlink__actuate *, const char*, const char*);

inline int soap_read__xlink__actuate(struct soap *soap, enum _xlink__actuate *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get__xlink__actuate(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__show_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__show_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xlink__show(struct soap*, enum _xlink__show *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xlink__show(struct soap*, const char*, int, const enum _xlink__show *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__xlink__show2s(struct soap*, enum _xlink__show);
SOAP_FMAC3 enum _xlink__show * SOAP_FMAC4 soap_in__xlink__show(struct soap*, const char*, enum _xlink__show *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_xlink__show(struct soap*, const char*, enum _xlink__show *);

inline enum _xlink__show * soap_new__xlink__show(struct soap *soap, int n = -1)
{
	return static_cast<enum _xlink__show *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum _xlink__show)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put__xlink__show(struct soap*, const enum _xlink__show *, const char*, const char*);

inline int soap_write__xlink__show(struct soap *soap, enum _xlink__show const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__xlink__show(soap, p, "xlink:show", "xlink:show") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum _xlink__show * SOAP_FMAC4 soap_get__xlink__show(struct soap*, enum _xlink__show *, const char*, const char*);

inline int soap_read__xlink__show(struct soap *soap, enum _xlink__show *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get__xlink__show(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AggregationType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AggregationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__AggregationType(struct soap*, enum gml__AggregationType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AggregationType(struct soap*, const char*, int, const enum gml__AggregationType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_gml__AggregationType2s(struct soap*, enum gml__AggregationType);
SOAP_FMAC3 enum gml__AggregationType * SOAP_FMAC4 soap_in_gml__AggregationType(struct soap*, const char*, enum gml__AggregationType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2gml__AggregationType(struct soap*, const char*, enum gml__AggregationType *);

inline enum gml__AggregationType * soap_new_gml__AggregationType(struct soap *soap, int n = -1)
{
	return static_cast<enum gml__AggregationType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum gml__AggregationType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__AggregationType(struct soap*, const enum gml__AggregationType *, const char*, const char*);

inline int soap_write_gml__AggregationType(struct soap *soap, enum gml__AggregationType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__AggregationType(soap, p, "gml:AggregationType", "gml:AggregationType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum gml__AggregationType * SOAP_FMAC4 soap_get_gml__AggregationType(struct soap*, enum gml__AggregationType *, const char*, const char*);

inline int soap_read_gml__AggregationType(struct soap *soap, enum gml__AggregationType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__AggregationType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractBoolean_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractBoolean_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractBoolean(struct soap*, bool *);

#define soap_witsml1__abstractBoolean2s soap_bool2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractBoolean(struct soap*, const char*, int, const bool *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2witsml1__abstractBoolean(struct soap*, const char*, bool *);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_witsml1__abstractBoolean(struct soap*, const char*, bool *, const char*);

inline bool * soap_new_witsml1__abstractBoolean(struct soap *soap, int n = -1)
{
	return static_cast<bool *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(bool)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractBoolean(struct soap*, const bool *, const char*, const char*);

inline int soap_write_witsml1__abstractBoolean(struct soap *soap, bool const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractBoolean(soap, p, "witsml1:abstractBoolean", "witsml1:abstractBoolean") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_witsml1__abstractBoolean(struct soap*, bool *, const char*, const char*);

inline int soap_read_witsml1__abstractBoolean(struct soap *soap, bool *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractBoolean(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_bool_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_bool_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

inline bool * soap_new_bool(struct soap *soap, int n = -1)
{
	return static_cast<bool *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(bool)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

inline int soap_write_bool(struct soap *soap, bool const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_bool(soap, p, "boolean", "xsd:boolean") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

inline int soap_read_bool(struct soap *soap, bool *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_bool(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _gco__nilReason is a typedef synonym for gml__NilReasonType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__nilReason_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__nilReason_DEFINED

#define soap_default__gco__nilReason(soap, a) soap_default_gml__NilReasonType(soap, a)


#define soap_serialize__gco__nilReason soap_serialize_gml__NilReasonType


#define soap__gco__nilReason2s(soap, a) ((a).c_str())

#define soap_out__gco__nilReason soap_out_gml__NilReasonType


#define soap_s2_gco__nilReason(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gco__nilReason soap_in_gml__NilReasonType


#define soap_instantiate__gco__nilReason soap_instantiate_gml__NilReasonType


#define soap_new__gco__nilReason soap_new_gml__NilReasonType


#define soap_put__gco__nilReason soap_put_gml__NilReasonType


#define soap_write__gco__nilReason soap_write_gml__NilReasonType


#define soap_get__gco__nilReason soap_get_gml__NilReasonType


#define soap_read__gco__nilReason soap_read_gml__NilReasonType

#endif
/* _gco__Date is a typedef synonym for gco__Date_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Date_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__Date_DEFINED

#define soap_default__gco__Date(soap, a) soap_default_gco__Date_USCOREType(soap, a)


#define soap_serialize__gco__Date soap_serialize_gco__Date_USCOREType


#define soap__gco__Date2s(soap, a) ((a).c_str())

#define soap_out__gco__Date soap_out_gco__Date_USCOREType


#define soap_s2_gco__Date(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gco__Date soap_in_gco__Date_USCOREType


#define soap_instantiate__gco__Date soap_instantiate_gco__Date_USCOREType


#define soap_new__gco__Date soap_new_gco__Date_USCOREType


#define soap_put__gco__Date soap_put_gco__Date_USCOREType


#define soap_write__gco__Date soap_write_gco__Date_USCOREType


#define soap_get__gco__Date soap_get_gco__Date_USCOREType


#define soap_read__gco__Date soap_read_gco__Date_USCOREType

#endif
/* _gco__CharacterString is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__CharacterString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__CharacterString_DEFINED

#define soap_default__gco__CharacterString(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__gco__CharacterString soap_serialize_std__string


#define soap__gco__CharacterString2s(soap, a) ((a).c_str())

#define soap_out__gco__CharacterString soap_out_std__string


#define soap_s2_gco__CharacterString(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gco__CharacterString soap_in_std__string


#define soap_instantiate__gco__CharacterString soap_instantiate_std__string


#define soap_new__gco__CharacterString soap_new_std__string


#define soap_put__gco__CharacterString soap_put_std__string


#define soap_write__gco__CharacterString soap_write_std__string


#define soap_get__gco__CharacterString soap_get_std__string


#define soap_read__gco__CharacterString soap_read_std__string

#endif
/* _gmd__DQ_USCOREEvaluationMethodTypeCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__DQ_USCOREEvaluationMethodTypeCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__DQ_USCOREEvaluationMethodTypeCode_DEFINED

#define soap_default__gmd__DQ_USCOREEvaluationMethodTypeCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__DQ_USCOREEvaluationMethodTypeCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__DQ_USCOREEvaluationMethodTypeCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__DQ_USCOREEvaluationMethodTypeCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__DQ_USCOREEvaluationMethodTypeCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__DQ_USCOREEvaluationMethodTypeCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__DQ_USCOREEvaluationMethodTypeCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__DQ_USCOREEvaluationMethodTypeCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__DQ_USCOREEvaluationMethodTypeCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__DQ_USCOREEvaluationMethodTypeCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__DQ_USCOREEvaluationMethodTypeCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__DQ_USCOREEvaluationMethodTypeCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__DQ_USCOREEvaluationMethodTypeCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__DQ_USCOREEvaluationMethodTypeCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__CI_USCORESeries is a typedef synonym for gmd__CI_USCORESeries_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORESeries_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORESeries_DEFINED

#define soap_default__gmd__CI_USCORESeries(soap, a) (a)->gmd__CI_USCORESeries_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCORESeries(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCORESeries2s soap_gmd__CI_USCORESeries_USCOREType2s


#define soap_out__gmd__CI_USCORESeries soap_out_gmd__CI_USCORESeries_USCOREType


#define soap_s2_gmd__CI_USCORESeries soap_s2gmd__CI_USCORESeries_USCOREType


#define soap_in__gmd__CI_USCORESeries soap_in_gmd__CI_USCORESeries_USCOREType


#define soap_instantiate__gmd__CI_USCORESeries soap_instantiate_gmd__CI_USCORESeries_USCOREType


#define soap_new__gmd__CI_USCORESeries soap_new_gmd__CI_USCORESeries_USCOREType


#define soap_new_req__gmd__CI_USCORESeries soap_new_req_gmd__CI_USCORESeries_USCOREType


#define soap_new_set__gmd__CI_USCORESeries soap_new_set_gmd__CI_USCORESeries_USCOREType


#define soap_put__gmd__CI_USCORESeries soap_put_gmd__CI_USCORESeries_USCOREType


#define soap_write__gmd__CI_USCORESeries soap_write_gmd__CI_USCORESeries_USCOREType


#define soap_get__gmd__CI_USCORESeries soap_get_gmd__CI_USCORESeries_USCOREType


#define soap_read__gmd__CI_USCORESeries soap_read_gmd__CI_USCORESeries_USCOREType

#endif
/* _gmd__CI_USCOREPresentationFormCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREPresentationFormCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREPresentationFormCode_DEFINED

#define soap_default__gmd__CI_USCOREPresentationFormCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREPresentationFormCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREPresentationFormCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__CI_USCOREPresentationFormCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__CI_USCOREPresentationFormCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__CI_USCOREPresentationFormCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__CI_USCOREPresentationFormCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__CI_USCOREPresentationFormCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__CI_USCOREPresentationFormCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__CI_USCOREPresentationFormCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__CI_USCOREPresentationFormCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__CI_USCOREPresentationFormCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__CI_USCOREPresentationFormCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__CI_USCOREPresentationFormCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__CI_USCORERoleCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORERoleCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORERoleCode_DEFINED

#define soap_default__gmd__CI_USCORERoleCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCORERoleCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCORERoleCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__CI_USCORERoleCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__CI_USCORERoleCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__CI_USCORERoleCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__CI_USCORERoleCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__CI_USCORERoleCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__CI_USCORERoleCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__CI_USCORERoleCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__CI_USCORERoleCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__CI_USCORERoleCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__CI_USCORERoleCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__CI_USCORERoleCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__CI_USCOREOnLineFunctionCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnLineFunctionCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnLineFunctionCode_DEFINED

#define soap_default__gmd__CI_USCOREOnLineFunctionCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREOnLineFunctionCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREOnLineFunctionCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__CI_USCOREOnLineFunctionCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__CI_USCOREOnLineFunctionCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__CI_USCOREOnLineFunctionCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__CI_USCOREOnLineFunctionCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__CI_USCOREOnLineFunctionCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__CI_USCOREOnLineFunctionCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__CI_USCOREOnLineFunctionCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__CI_USCOREOnLineFunctionCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__CI_USCOREOnLineFunctionCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__CI_USCOREOnLineFunctionCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__CI_USCOREOnLineFunctionCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__URL is a typedef synonym for xsd__anyURI */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__URL_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__URL_DEFINED

#define soap_default__gmd__URL(soap, a) soap_default_xsd__anyURI(soap, a)


#define soap_serialize__gmd__URL soap_serialize_xsd__anyURI


#define soap__gmd__URL2s(soap, a) ((a).c_str())

#define soap_out__gmd__URL soap_out_xsd__anyURI


#define soap_s2_gmd__URL(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gmd__URL soap_in_xsd__anyURI


#define soap_instantiate__gmd__URL soap_instantiate_xsd__anyURI


#define soap_new__gmd__URL soap_new_xsd__anyURI


#define soap_put__gmd__URL soap_put_xsd__anyURI


#define soap_write__gmd__URL soap_write_xsd__anyURI


#define soap_get__gmd__URL soap_get_xsd__anyURI


#define soap_read__gmd__URL soap_read_xsd__anyURI

#endif
/* _gmd__CI_USCOREOnlineResource is a typedef synonym for gmd__CI_USCOREOnlineResource_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnlineResource_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREOnlineResource_DEFINED

#define soap_default__gmd__CI_USCOREOnlineResource(soap, a) (a)->gmd__CI_USCOREOnlineResource_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREOnlineResource(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREOnlineResource2s soap_gmd__CI_USCOREOnlineResource_USCOREType2s


#define soap_out__gmd__CI_USCOREOnlineResource soap_out_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_s2_gmd__CI_USCOREOnlineResource soap_s2gmd__CI_USCOREOnlineResource_USCOREType


#define soap_in__gmd__CI_USCOREOnlineResource soap_in_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_instantiate__gmd__CI_USCOREOnlineResource soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_new__gmd__CI_USCOREOnlineResource soap_new_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_new_req__gmd__CI_USCOREOnlineResource soap_new_req_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_new_set__gmd__CI_USCOREOnlineResource soap_new_set_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_put__gmd__CI_USCOREOnlineResource soap_put_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_write__gmd__CI_USCOREOnlineResource soap_write_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_get__gmd__CI_USCOREOnlineResource soap_get_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_read__gmd__CI_USCOREOnlineResource soap_read_gmd__CI_USCOREOnlineResource_USCOREType

#endif
/* _gmd__CI_USCOREAddress is a typedef synonym for gmd__CI_USCOREAddress_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREAddress_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREAddress_DEFINED

#define soap_default__gmd__CI_USCOREAddress(soap, a) (a)->gmd__CI_USCOREAddress_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREAddress(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREAddress2s soap_gmd__CI_USCOREAddress_USCOREType2s


#define soap_out__gmd__CI_USCOREAddress soap_out_gmd__CI_USCOREAddress_USCOREType


#define soap_s2_gmd__CI_USCOREAddress soap_s2gmd__CI_USCOREAddress_USCOREType


#define soap_in__gmd__CI_USCOREAddress soap_in_gmd__CI_USCOREAddress_USCOREType


#define soap_instantiate__gmd__CI_USCOREAddress soap_instantiate_gmd__CI_USCOREAddress_USCOREType


#define soap_new__gmd__CI_USCOREAddress soap_new_gmd__CI_USCOREAddress_USCOREType


#define soap_new_req__gmd__CI_USCOREAddress soap_new_req_gmd__CI_USCOREAddress_USCOREType


#define soap_new_set__gmd__CI_USCOREAddress soap_new_set_gmd__CI_USCOREAddress_USCOREType


#define soap_put__gmd__CI_USCOREAddress soap_put_gmd__CI_USCOREAddress_USCOREType


#define soap_write__gmd__CI_USCOREAddress soap_write_gmd__CI_USCOREAddress_USCOREType


#define soap_get__gmd__CI_USCOREAddress soap_get_gmd__CI_USCOREAddress_USCOREType


#define soap_read__gmd__CI_USCOREAddress soap_read_gmd__CI_USCOREAddress_USCOREType

#endif
/* _gmd__CI_USCORETelephone is a typedef synonym for gmd__CI_USCORETelephone_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORETelephone_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORETelephone_DEFINED

#define soap_default__gmd__CI_USCORETelephone(soap, a) (a)->gmd__CI_USCORETelephone_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCORETelephone(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCORETelephone2s soap_gmd__CI_USCORETelephone_USCOREType2s


#define soap_out__gmd__CI_USCORETelephone soap_out_gmd__CI_USCORETelephone_USCOREType


#define soap_s2_gmd__CI_USCORETelephone soap_s2gmd__CI_USCORETelephone_USCOREType


#define soap_in__gmd__CI_USCORETelephone soap_in_gmd__CI_USCORETelephone_USCOREType


#define soap_instantiate__gmd__CI_USCORETelephone soap_instantiate_gmd__CI_USCORETelephone_USCOREType


#define soap_new__gmd__CI_USCORETelephone soap_new_gmd__CI_USCORETelephone_USCOREType


#define soap_new_req__gmd__CI_USCORETelephone soap_new_req_gmd__CI_USCORETelephone_USCOREType


#define soap_new_set__gmd__CI_USCORETelephone soap_new_set_gmd__CI_USCORETelephone_USCOREType


#define soap_put__gmd__CI_USCORETelephone soap_put_gmd__CI_USCORETelephone_USCOREType


#define soap_write__gmd__CI_USCORETelephone soap_write_gmd__CI_USCORETelephone_USCOREType


#define soap_get__gmd__CI_USCORETelephone soap_get_gmd__CI_USCORETelephone_USCOREType


#define soap_read__gmd__CI_USCORETelephone soap_read_gmd__CI_USCORETelephone_USCOREType

#endif
/* _gmd__CI_USCOREContact is a typedef synonym for gmd__CI_USCOREContact_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREContact_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREContact_DEFINED

#define soap_default__gmd__CI_USCOREContact(soap, a) (a)->gmd__CI_USCOREContact_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREContact(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREContact2s soap_gmd__CI_USCOREContact_USCOREType2s


#define soap_out__gmd__CI_USCOREContact soap_out_gmd__CI_USCOREContact_USCOREType


#define soap_s2_gmd__CI_USCOREContact soap_s2gmd__CI_USCOREContact_USCOREType


#define soap_in__gmd__CI_USCOREContact soap_in_gmd__CI_USCOREContact_USCOREType


#define soap_instantiate__gmd__CI_USCOREContact soap_instantiate_gmd__CI_USCOREContact_USCOREType


#define soap_new__gmd__CI_USCOREContact soap_new_gmd__CI_USCOREContact_USCOREType


#define soap_new_req__gmd__CI_USCOREContact soap_new_req_gmd__CI_USCOREContact_USCOREType


#define soap_new_set__gmd__CI_USCOREContact soap_new_set_gmd__CI_USCOREContact_USCOREType


#define soap_put__gmd__CI_USCOREContact soap_put_gmd__CI_USCOREContact_USCOREType


#define soap_write__gmd__CI_USCOREContact soap_write_gmd__CI_USCOREContact_USCOREType


#define soap_get__gmd__CI_USCOREContact soap_get_gmd__CI_USCOREContact_USCOREType


#define soap_read__gmd__CI_USCOREContact soap_read_gmd__CI_USCOREContact_USCOREType

#endif
/* _gmd__CI_USCOREResponsibleParty is a typedef synonym for gmd__CI_USCOREResponsibleParty_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREResponsibleParty_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREResponsibleParty_DEFINED

#define soap_default__gmd__CI_USCOREResponsibleParty(soap, a) (a)->gmd__CI_USCOREResponsibleParty_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREResponsibleParty(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREResponsibleParty2s soap_gmd__CI_USCOREResponsibleParty_USCOREType2s


#define soap_out__gmd__CI_USCOREResponsibleParty soap_out_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_s2_gmd__CI_USCOREResponsibleParty soap_s2gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_in__gmd__CI_USCOREResponsibleParty soap_in_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_instantiate__gmd__CI_USCOREResponsibleParty soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_new__gmd__CI_USCOREResponsibleParty soap_new_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_new_req__gmd__CI_USCOREResponsibleParty soap_new_req_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_new_set__gmd__CI_USCOREResponsibleParty soap_new_set_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_put__gmd__CI_USCOREResponsibleParty soap_put_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_write__gmd__CI_USCOREResponsibleParty soap_write_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_get__gmd__CI_USCOREResponsibleParty soap_get_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_read__gmd__CI_USCOREResponsibleParty soap_read_gmd__CI_USCOREResponsibleParty_USCOREType

#endif
/* _gmd__CI_USCOREDateTypeCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDateTypeCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDateTypeCode_DEFINED

#define soap_default__gmd__CI_USCOREDateTypeCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREDateTypeCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREDateTypeCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__CI_USCOREDateTypeCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__CI_USCOREDateTypeCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__CI_USCOREDateTypeCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__CI_USCOREDateTypeCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__CI_USCOREDateTypeCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__CI_USCOREDateTypeCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__CI_USCOREDateTypeCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__CI_USCOREDateTypeCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__CI_USCOREDateTypeCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__CI_USCOREDateTypeCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__CI_USCOREDateTypeCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__CI_USCOREDate is a typedef synonym for gmd__CI_USCOREDate_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDate_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCOREDate_DEFINED

#define soap_default__gmd__CI_USCOREDate(soap, a) (a)->gmd__CI_USCOREDate_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREDate(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREDate2s soap_gmd__CI_USCOREDate_USCOREType2s


#define soap_out__gmd__CI_USCOREDate soap_out_gmd__CI_USCOREDate_USCOREType


#define soap_s2_gmd__CI_USCOREDate soap_s2gmd__CI_USCOREDate_USCOREType


#define soap_in__gmd__CI_USCOREDate soap_in_gmd__CI_USCOREDate_USCOREType


#define soap_instantiate__gmd__CI_USCOREDate soap_instantiate_gmd__CI_USCOREDate_USCOREType


#define soap_new__gmd__CI_USCOREDate soap_new_gmd__CI_USCOREDate_USCOREType


#define soap_new_req__gmd__CI_USCOREDate soap_new_req_gmd__CI_USCOREDate_USCOREType


#define soap_new_set__gmd__CI_USCOREDate soap_new_set_gmd__CI_USCOREDate_USCOREType


#define soap_put__gmd__CI_USCOREDate soap_put_gmd__CI_USCOREDate_USCOREType


#define soap_write__gmd__CI_USCOREDate soap_write_gmd__CI_USCOREDate_USCOREType


#define soap_get__gmd__CI_USCOREDate soap_get_gmd__CI_USCOREDate_USCOREType


#define soap_read__gmd__CI_USCOREDate soap_read_gmd__CI_USCOREDate_USCOREType

#endif
/* _gmd__CI_USCORECitation is a typedef synonym for gmd__CI_USCORECitation_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORECitation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__CI_USCORECitation_DEFINED

#define soap_default__gmd__CI_USCORECitation(soap, a) (a)->gmd__CI_USCORECitation_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCORECitation(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCORECitation2s soap_gmd__CI_USCORECitation_USCOREType2s


#define soap_out__gmd__CI_USCORECitation soap_out_gmd__CI_USCORECitation_USCOREType


#define soap_s2_gmd__CI_USCORECitation soap_s2gmd__CI_USCORECitation_USCOREType


#define soap_in__gmd__CI_USCORECitation soap_in_gmd__CI_USCORECitation_USCOREType


#define soap_instantiate__gmd__CI_USCORECitation soap_instantiate_gmd__CI_USCORECitation_USCOREType


#define soap_new__gmd__CI_USCORECitation soap_new_gmd__CI_USCORECitation_USCOREType


#define soap_new_req__gmd__CI_USCORECitation soap_new_req_gmd__CI_USCORECitation_USCOREType


#define soap_new_set__gmd__CI_USCORECitation soap_new_set_gmd__CI_USCORECitation_USCOREType


#define soap_put__gmd__CI_USCORECitation soap_put_gmd__CI_USCORECitation_USCOREType


#define soap_write__gmd__CI_USCORECitation soap_write_gmd__CI_USCORECitation_USCOREType


#define soap_get__gmd__CI_USCORECitation soap_get_gmd__CI_USCORECitation_USCOREType


#define soap_read__gmd__CI_USCORECitation soap_read_gmd__CI_USCORECitation_USCOREType

#endif
/* _gmd__MD_USCOREIdentifier is a typedef synonym for gmd__MD_USCOREIdentifier_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__MD_USCOREIdentifier_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__MD_USCOREIdentifier_DEFINED

#define soap_default__gmd__MD_USCOREIdentifier(soap, a) (a)->gmd__MD_USCOREIdentifier_USCOREType::soap_default(soap)


#define soap_serialize__gmd__MD_USCOREIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__MD_USCOREIdentifier2s soap_gmd__MD_USCOREIdentifier_USCOREType2s


#define soap_out__gmd__MD_USCOREIdentifier soap_out_gmd__MD_USCOREIdentifier_USCOREType


#define soap_s2_gmd__MD_USCOREIdentifier soap_s2gmd__MD_USCOREIdentifier_USCOREType


#define soap_in__gmd__MD_USCOREIdentifier soap_in_gmd__MD_USCOREIdentifier_USCOREType


#define soap_instantiate__gmd__MD_USCOREIdentifier soap_instantiate_gmd__MD_USCOREIdentifier_USCOREType


#define soap_new__gmd__MD_USCOREIdentifier soap_new_gmd__MD_USCOREIdentifier_USCOREType


#define soap_new_req__gmd__MD_USCOREIdentifier soap_new_req_gmd__MD_USCOREIdentifier_USCOREType


#define soap_new_set__gmd__MD_USCOREIdentifier soap_new_set_gmd__MD_USCOREIdentifier_USCOREType


#define soap_put__gmd__MD_USCOREIdentifier soap_put_gmd__MD_USCOREIdentifier_USCOREType


#define soap_write__gmd__MD_USCOREIdentifier soap_write_gmd__MD_USCOREIdentifier_USCOREType


#define soap_get__gmd__MD_USCOREIdentifier soap_get_gmd__MD_USCOREIdentifier_USCOREType


#define soap_read__gmd__MD_USCOREIdentifier soap_read_gmd__MD_USCOREIdentifier_USCOREType

#endif
/* _gmd__EX_USCOREVerticalExtent is a typedef synonym for gmd__EX_USCOREVerticalExtent_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREVerticalExtent_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREVerticalExtent_DEFINED

#define soap_default__gmd__EX_USCOREVerticalExtent(soap, a) (a)->gmd__EX_USCOREVerticalExtent_USCOREType::soap_default(soap)


#define soap_serialize__gmd__EX_USCOREVerticalExtent(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__EX_USCOREVerticalExtent2s soap_gmd__EX_USCOREVerticalExtent_USCOREType2s


#define soap_out__gmd__EX_USCOREVerticalExtent soap_out_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_s2_gmd__EX_USCOREVerticalExtent soap_s2gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_in__gmd__EX_USCOREVerticalExtent soap_in_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_instantiate__gmd__EX_USCOREVerticalExtent soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_new__gmd__EX_USCOREVerticalExtent soap_new_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_new_req__gmd__EX_USCOREVerticalExtent soap_new_req_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_new_set__gmd__EX_USCOREVerticalExtent soap_new_set_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_put__gmd__EX_USCOREVerticalExtent soap_put_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_write__gmd__EX_USCOREVerticalExtent soap_write_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_get__gmd__EX_USCOREVerticalExtent soap_get_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_read__gmd__EX_USCOREVerticalExtent soap_read_gmd__EX_USCOREVerticalExtent_USCOREType

#endif
/* _gmd__EX_USCORETemporalExtent is a typedef synonym for gmd__EX_USCORETemporalExtent_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCORETemporalExtent_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCORETemporalExtent_DEFINED

#define soap_default__gmd__EX_USCORETemporalExtent(soap, a) (a)->gmd__EX_USCORETemporalExtent_USCOREType::soap_default(soap)


#define soap_serialize__gmd__EX_USCORETemporalExtent(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__EX_USCORETemporalExtent2s soap_gmd__EX_USCORETemporalExtent_USCOREType2s


#define soap_out__gmd__EX_USCORETemporalExtent soap_out_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_s2_gmd__EX_USCORETemporalExtent soap_s2gmd__EX_USCORETemporalExtent_USCOREType


#define soap_in__gmd__EX_USCORETemporalExtent soap_in_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_instantiate__gmd__EX_USCORETemporalExtent soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_new__gmd__EX_USCORETemporalExtent soap_new_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_new_req__gmd__EX_USCORETemporalExtent soap_new_req_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_new_set__gmd__EX_USCORETemporalExtent soap_new_set_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_put__gmd__EX_USCORETemporalExtent soap_put_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_write__gmd__EX_USCORETemporalExtent soap_write_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_get__gmd__EX_USCORETemporalExtent soap_get_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_read__gmd__EX_USCORETemporalExtent soap_read_gmd__EX_USCORETemporalExtent_USCOREType

#endif
/* _gmd__EX_USCOREExtent is a typedef synonym for gmd__EX_USCOREExtent_USCOREType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREExtent_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__EX_USCOREExtent_DEFINED

#define soap_default__gmd__EX_USCOREExtent(soap, a) (a)->gmd__EX_USCOREExtent_USCOREType::soap_default(soap)


#define soap_serialize__gmd__EX_USCOREExtent(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__EX_USCOREExtent2s soap_gmd__EX_USCOREExtent_USCOREType2s


#define soap_out__gmd__EX_USCOREExtent soap_out_gmd__EX_USCOREExtent_USCOREType


#define soap_s2_gmd__EX_USCOREExtent soap_s2gmd__EX_USCOREExtent_USCOREType


#define soap_in__gmd__EX_USCOREExtent soap_in_gmd__EX_USCOREExtent_USCOREType


#define soap_instantiate__gmd__EX_USCOREExtent soap_instantiate_gmd__EX_USCOREExtent_USCOREType


#define soap_new__gmd__EX_USCOREExtent soap_new_gmd__EX_USCOREExtent_USCOREType


#define soap_new_req__gmd__EX_USCOREExtent soap_new_req_gmd__EX_USCOREExtent_USCOREType


#define soap_new_set__gmd__EX_USCOREExtent soap_new_set_gmd__EX_USCOREExtent_USCOREType


#define soap_put__gmd__EX_USCOREExtent soap_put_gmd__EX_USCOREExtent_USCOREType


#define soap_write__gmd__EX_USCOREExtent soap_write_gmd__EX_USCOREExtent_USCOREType


#define soap_get__gmd__EX_USCOREExtent soap_get_gmd__EX_USCOREExtent_USCOREType


#define soap_read__gmd__EX_USCOREExtent soap_read_gmd__EX_USCOREExtent_USCOREType

#endif
/* _xlink__title is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__title_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__title_DEFINED

#define soap_default__xlink__title(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__xlink__title soap_serialize_std__string


#define soap__xlink__title2s(soap, a) ((a).c_str())

#define soap_out__xlink__title soap_out_std__string


#define soap_s2_xlink__title(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__xlink__title soap_in_std__string


#define soap_instantiate__xlink__title soap_instantiate_std__string


#define soap_new__xlink__title soap_new_std__string


#define soap_put__xlink__title soap_put_std__string


#define soap_write__xlink__title soap_write_std__string


#define soap_get__xlink__title soap_get_std__string


#define soap_read__xlink__title soap_read_std__string

#endif
/* _xlink__arcrole is a typedef synonym for xsd__anyURI */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__arcrole_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__arcrole_DEFINED

#define soap_default__xlink__arcrole(soap, a) soap_default_xsd__anyURI(soap, a)


#define soap_serialize__xlink__arcrole soap_serialize_xsd__anyURI


#define soap__xlink__arcrole2s(soap, a) ((a).c_str())

#define soap_out__xlink__arcrole soap_out_xsd__anyURI


#define soap_s2_xlink__arcrole(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__xlink__arcrole soap_in_xsd__anyURI


#define soap_instantiate__xlink__arcrole soap_instantiate_xsd__anyURI


#define soap_new__xlink__arcrole soap_new_xsd__anyURI


#define soap_put__xlink__arcrole soap_put_xsd__anyURI


#define soap_write__xlink__arcrole soap_write_xsd__anyURI


#define soap_get__xlink__arcrole soap_get_xsd__anyURI


#define soap_read__xlink__arcrole soap_read_xsd__anyURI

#endif
/* _xlink__role is a typedef synonym for xsd__anyURI */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__role_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__role_DEFINED

#define soap_default__xlink__role(soap, a) soap_default_xsd__anyURI(soap, a)


#define soap_serialize__xlink__role soap_serialize_xsd__anyURI


#define soap__xlink__role2s(soap, a) ((a).c_str())

#define soap_out__xlink__role soap_out_xsd__anyURI


#define soap_s2_xlink__role(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__xlink__role soap_in_xsd__anyURI


#define soap_instantiate__xlink__role soap_instantiate_xsd__anyURI


#define soap_new__xlink__role soap_new_xsd__anyURI


#define soap_put__xlink__role soap_put_xsd__anyURI


#define soap_write__xlink__role soap_write_xsd__anyURI


#define soap_get__xlink__role soap_get_xsd__anyURI


#define soap_read__xlink__role soap_read_xsd__anyURI

#endif
/* _xlink__href is a typedef synonym for xsd__anyURI */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__href_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__xlink__href_DEFINED

#define soap_default__xlink__href(soap, a) soap_default_xsd__anyURI(soap, a)


#define soap_serialize__xlink__href soap_serialize_xsd__anyURI


#define soap__xlink__href2s(soap, a) ((a).c_str())

#define soap_out__xlink__href soap_out_xsd__anyURI


#define soap_s2_xlink__href(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__xlink__href soap_in_xsd__anyURI


#define soap_instantiate__xlink__href soap_instantiate_xsd__anyURI


#define soap_new__xlink__href soap_new_xsd__anyURI


#define soap_put__xlink__href soap_put_xsd__anyURI


#define soap_write__xlink__href soap_write_xsd__anyURI


#define soap_get__xlink__href soap_get_xsd__anyURI


#define soap_read__xlink__href soap_read_xsd__anyURI

#endif
/* _gml__id is a typedef synonym for xsd__ID */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__id_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__id_DEFINED

#define soap_default__gml__id(soap, a) soap_default_xsd__ID(soap, a)


#define soap_serialize__gml__id soap_serialize_xsd__ID


#define soap__gml__id2s(soap, a) ((a).c_str())

#define soap_out__gml__id soap_out_xsd__ID


#define soap_s2_gml__id(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__id soap_in_xsd__ID


#define soap_instantiate__gml__id soap_instantiate_xsd__ID


#define soap_new__gml__id soap_new_xsd__ID


#define soap_put__gml__id soap_put_xsd__ID


#define soap_write__gml__id soap_write_xsd__ID


#define soap_get__gml__id soap_get_xsd__ID


#define soap_read__gml__id soap_read_xsd__ID

#endif
/* _gml__VerticalDatum is a typedef synonym for gml__VerticalDatumType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalDatum_DEFINED

#define soap_default__gml__VerticalDatum(soap, a) (a)->gml__VerticalDatumType::soap_default(soap)


#define soap_serialize__gml__VerticalDatum(soap, a) (a)->soap_serialize(soap)


#define soap__gml__VerticalDatum2s soap_gml__VerticalDatumType2s


#define soap_out__gml__VerticalDatum soap_out_gml__VerticalDatumType


#define soap_s2_gml__VerticalDatum soap_s2gml__VerticalDatumType


#define soap_in__gml__VerticalDatum soap_in_gml__VerticalDatumType


#define soap_instantiate__gml__VerticalDatum soap_instantiate_gml__VerticalDatumType


#define soap_new__gml__VerticalDatum soap_new_gml__VerticalDatumType


#define soap_new_req__gml__VerticalDatum soap_new_req_gml__VerticalDatumType


#define soap_new_set__gml__VerticalDatum soap_new_set_gml__VerticalDatumType


#define soap_put__gml__VerticalDatum soap_put_gml__VerticalDatumType


#define soap_write__gml__VerticalDatum soap_write_gml__VerticalDatumType


#define soap_get__gml__VerticalDatum soap_get_gml__VerticalDatumType


#define soap_read__gml__VerticalDatum soap_read_gml__VerticalDatumType

#endif
/* _gml__verticalDatum is a typedef synonym for gml__VerticalDatumPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalDatum_DEFINED

#define soap_default__gml__verticalDatum(soap, a) (a)->gml__VerticalDatumPropertyType::soap_default(soap)


#define soap_serialize__gml__verticalDatum(soap, a) (a)->soap_serialize(soap)


#define soap__gml__verticalDatum2s soap_gml__VerticalDatumPropertyType2s


#define soap_out__gml__verticalDatum soap_out_gml__VerticalDatumPropertyType


#define soap_s2_gml__verticalDatum soap_s2gml__VerticalDatumPropertyType


#define soap_in__gml__verticalDatum soap_in_gml__VerticalDatumPropertyType


#define soap_instantiate__gml__verticalDatum soap_instantiate_gml__VerticalDatumPropertyType


#define soap_new__gml__verticalDatum soap_new_gml__VerticalDatumPropertyType


#define soap_new_req__gml__verticalDatum soap_new_req_gml__VerticalDatumPropertyType


#define soap_new_set__gml__verticalDatum soap_new_set_gml__VerticalDatumPropertyType


#define soap_put__gml__verticalDatum soap_put_gml__VerticalDatumPropertyType


#define soap_write__gml__verticalDatum soap_write_gml__VerticalDatumPropertyType


#define soap_get__gml__verticalDatum soap_get_gml__VerticalDatumPropertyType


#define soap_read__gml__verticalDatum soap_read_gml__VerticalDatumPropertyType

#endif
/* _gml__VerticalCS is a typedef synonym for gml__VerticalCSType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCS_DEFINED

#define soap_default__gml__VerticalCS(soap, a) (a)->gml__VerticalCSType::soap_default(soap)


#define soap_serialize__gml__VerticalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__VerticalCS2s soap_gml__VerticalCSType2s


#define soap_out__gml__VerticalCS soap_out_gml__VerticalCSType


#define soap_s2_gml__VerticalCS soap_s2gml__VerticalCSType


#define soap_in__gml__VerticalCS soap_in_gml__VerticalCSType


#define soap_instantiate__gml__VerticalCS soap_instantiate_gml__VerticalCSType


#define soap_new__gml__VerticalCS soap_new_gml__VerticalCSType


#define soap_new_req__gml__VerticalCS soap_new_req_gml__VerticalCSType


#define soap_new_set__gml__VerticalCS soap_new_set_gml__VerticalCSType


#define soap_put__gml__VerticalCS soap_put_gml__VerticalCSType


#define soap_write__gml__VerticalCS soap_write_gml__VerticalCSType


#define soap_get__gml__VerticalCS soap_get_gml__VerticalCSType


#define soap_read__gml__VerticalCS soap_read_gml__VerticalCSType

#endif
/* _gml__verticalCS is a typedef synonym for gml__VerticalCSPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalCS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__verticalCS_DEFINED

#define soap_default__gml__verticalCS(soap, a) (a)->gml__VerticalCSPropertyType::soap_default(soap)


#define soap_serialize__gml__verticalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__verticalCS2s soap_gml__VerticalCSPropertyType2s


#define soap_out__gml__verticalCS soap_out_gml__VerticalCSPropertyType


#define soap_s2_gml__verticalCS soap_s2gml__VerticalCSPropertyType


#define soap_in__gml__verticalCS soap_in_gml__VerticalCSPropertyType


#define soap_instantiate__gml__verticalCS soap_instantiate_gml__VerticalCSPropertyType


#define soap_new__gml__verticalCS soap_new_gml__VerticalCSPropertyType


#define soap_new_req__gml__verticalCS soap_new_req_gml__VerticalCSPropertyType


#define soap_new_set__gml__verticalCS soap_new_set_gml__VerticalCSPropertyType


#define soap_put__gml__verticalCS soap_put_gml__VerticalCSPropertyType


#define soap_write__gml__verticalCS soap_write_gml__VerticalCSPropertyType


#define soap_get__gml__verticalCS soap_get_gml__VerticalCSPropertyType


#define soap_read__gml__verticalCS soap_read_gml__VerticalCSPropertyType

#endif
/* _gml__VerticalCRS is a typedef synonym for gml__VerticalCRSType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__VerticalCRS_DEFINED

#define soap_default__gml__VerticalCRS(soap, a) (a)->gml__VerticalCRSType::soap_default(soap)


#define soap_serialize__gml__VerticalCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__VerticalCRS2s soap_gml__VerticalCRSType2s


#define soap_out__gml__VerticalCRS soap_out_gml__VerticalCRSType


#define soap_s2_gml__VerticalCRS soap_s2gml__VerticalCRSType


#define soap_in__gml__VerticalCRS soap_in_gml__VerticalCRSType


#define soap_instantiate__gml__VerticalCRS soap_instantiate_gml__VerticalCRSType


#define soap_new__gml__VerticalCRS soap_new_gml__VerticalCRSType


#define soap_new_req__gml__VerticalCRS soap_new_req_gml__VerticalCRSType


#define soap_new_set__gml__VerticalCRS soap_new_set_gml__VerticalCRSType


#define soap_put__gml__VerticalCRS soap_put_gml__VerticalCRSType


#define soap_write__gml__VerticalCRS soap_write_gml__VerticalCRSType


#define soap_get__gml__VerticalCRS soap_get_gml__VerticalCRSType


#define soap_read__gml__VerticalCRS soap_read_gml__VerticalCRSType

#endif
/* _gml__baseGeodeticCRS is a typedef synonym for gml__GeodeticCRSPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__baseGeodeticCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__baseGeodeticCRS_DEFINED

#define soap_default__gml__baseGeodeticCRS(soap, a) (a)->gml__GeodeticCRSPropertyType::soap_default(soap)


#define soap_serialize__gml__baseGeodeticCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__baseGeodeticCRS2s soap_gml__GeodeticCRSPropertyType2s


#define soap_out__gml__baseGeodeticCRS soap_out_gml__GeodeticCRSPropertyType


#define soap_s2_gml__baseGeodeticCRS soap_s2gml__GeodeticCRSPropertyType


#define soap_in__gml__baseGeodeticCRS soap_in_gml__GeodeticCRSPropertyType


#define soap_instantiate__gml__baseGeodeticCRS soap_instantiate_gml__GeodeticCRSPropertyType


#define soap_new__gml__baseGeodeticCRS soap_new_gml__GeodeticCRSPropertyType


#define soap_new_req__gml__baseGeodeticCRS soap_new_req_gml__GeodeticCRSPropertyType


#define soap_new_set__gml__baseGeodeticCRS soap_new_set_gml__GeodeticCRSPropertyType


#define soap_put__gml__baseGeodeticCRS soap_put_gml__GeodeticCRSPropertyType


#define soap_write__gml__baseGeodeticCRS soap_write_gml__GeodeticCRSPropertyType


#define soap_get__gml__baseGeodeticCRS soap_get_gml__GeodeticCRSPropertyType


#define soap_read__gml__baseGeodeticCRS soap_read_gml__GeodeticCRSPropertyType

#endif
/* _gml__targetCRS is a typedef synonym for gml__CRSPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__targetCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__targetCRS_DEFINED

#define soap_default__gml__targetCRS(soap, a) (a)->gml__CRSPropertyType::soap_default(soap)


#define soap_serialize__gml__targetCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__targetCRS2s soap_gml__CRSPropertyType2s


#define soap_out__gml__targetCRS soap_out_gml__CRSPropertyType


#define soap_s2_gml__targetCRS soap_s2gml__CRSPropertyType


#define soap_in__gml__targetCRS soap_in_gml__CRSPropertyType


#define soap_instantiate__gml__targetCRS soap_instantiate_gml__CRSPropertyType


#define soap_new__gml__targetCRS soap_new_gml__CRSPropertyType


#define soap_new_req__gml__targetCRS soap_new_req_gml__CRSPropertyType


#define soap_new_set__gml__targetCRS soap_new_set_gml__CRSPropertyType


#define soap_put__gml__targetCRS soap_put_gml__CRSPropertyType


#define soap_write__gml__targetCRS soap_write_gml__CRSPropertyType


#define soap_get__gml__targetCRS soap_get_gml__CRSPropertyType


#define soap_read__gml__targetCRS soap_read_gml__CRSPropertyType

#endif
/* _gml__sourceCRS is a typedef synonym for gml__CRSPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sourceCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sourceCRS_DEFINED

#define soap_default__gml__sourceCRS(soap, a) (a)->gml__CRSPropertyType::soap_default(soap)


#define soap_serialize__gml__sourceCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__sourceCRS2s soap_gml__CRSPropertyType2s


#define soap_out__gml__sourceCRS soap_out_gml__CRSPropertyType


#define soap_s2_gml__sourceCRS soap_s2gml__CRSPropertyType


#define soap_in__gml__sourceCRS soap_in_gml__CRSPropertyType


#define soap_instantiate__gml__sourceCRS soap_instantiate_gml__CRSPropertyType


#define soap_new__gml__sourceCRS soap_new_gml__CRSPropertyType


#define soap_new_req__gml__sourceCRS soap_new_req_gml__CRSPropertyType


#define soap_new_set__gml__sourceCRS soap_new_set_gml__CRSPropertyType


#define soap_put__gml__sourceCRS soap_put_gml__CRSPropertyType


#define soap_write__gml__sourceCRS soap_write_gml__CRSPropertyType


#define soap_get__gml__sourceCRS soap_get_gml__CRSPropertyType


#define soap_read__gml__sourceCRS soap_read_gml__CRSPropertyType

#endif
/* _gml__operationVersion is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__operationVersion_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__operationVersion_DEFINED

#define soap_default__gml__operationVersion(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__gml__operationVersion soap_serialize_std__string


#define soap__gml__operationVersion2s(soap, a) ((a).c_str())

#define soap_out__gml__operationVersion soap_out_std__string


#define soap_s2_gml__operationVersion(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__operationVersion soap_in_std__string


#define soap_instantiate__gml__operationVersion soap_instantiate_std__string


#define soap_new__gml__operationVersion soap_new_std__string


#define soap_put__gml__operationVersion soap_put_std__string


#define soap_write__gml__operationVersion soap_write_std__string


#define soap_get__gml__operationVersion soap_get_std__string


#define soap_read__gml__operationVersion soap_read_std__string

#endif
/* _gml__conversion is a typedef synonym for gml__GeneralConversionPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__conversion_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__conversion_DEFINED

#define soap_default__gml__conversion(soap, a) (a)->gml__GeneralConversionPropertyType::soap_default(soap)


#define soap_serialize__gml__conversion(soap, a) (a)->soap_serialize(soap)


#define soap__gml__conversion2s soap_gml__GeneralConversionPropertyType2s


#define soap_out__gml__conversion soap_out_gml__GeneralConversionPropertyType


#define soap_s2_gml__conversion soap_s2gml__GeneralConversionPropertyType


#define soap_in__gml__conversion soap_in_gml__GeneralConversionPropertyType


#define soap_instantiate__gml__conversion soap_instantiate_gml__GeneralConversionPropertyType


#define soap_new__gml__conversion soap_new_gml__GeneralConversionPropertyType


#define soap_new_req__gml__conversion soap_new_req_gml__GeneralConversionPropertyType


#define soap_new_set__gml__conversion soap_new_set_gml__GeneralConversionPropertyType


#define soap_put__gml__conversion soap_put_gml__GeneralConversionPropertyType


#define soap_write__gml__conversion soap_write_gml__GeneralConversionPropertyType


#define soap_get__gml__conversion soap_get_gml__GeneralConversionPropertyType


#define soap_read__gml__conversion soap_read_gml__GeneralConversionPropertyType

#endif
/* _gml__ProjectedCRS is a typedef synonym for gml__ProjectedCRSType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ProjectedCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ProjectedCRS_DEFINED

#define soap_default__gml__ProjectedCRS(soap, a) (a)->gml__ProjectedCRSType::soap_default(soap)


#define soap_serialize__gml__ProjectedCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__ProjectedCRS2s soap_gml__ProjectedCRSType2s


#define soap_out__gml__ProjectedCRS soap_out_gml__ProjectedCRSType


#define soap_s2_gml__ProjectedCRS soap_s2gml__ProjectedCRSType


#define soap_in__gml__ProjectedCRS soap_in_gml__ProjectedCRSType


#define soap_instantiate__gml__ProjectedCRS soap_instantiate_gml__ProjectedCRSType


#define soap_new__gml__ProjectedCRS soap_new_gml__ProjectedCRSType


#define soap_new_req__gml__ProjectedCRS soap_new_req_gml__ProjectedCRSType


#define soap_new_set__gml__ProjectedCRS soap_new_set_gml__ProjectedCRSType


#define soap_put__gml__ProjectedCRS soap_put_gml__ProjectedCRSType


#define soap_write__gml__ProjectedCRS soap_write_gml__ProjectedCRSType


#define soap_get__gml__ProjectedCRS soap_get_gml__ProjectedCRSType


#define soap_read__gml__ProjectedCRS soap_read_gml__ProjectedCRSType

#endif
/* _gml__semiMajorAxis is a typedef synonym for gml__MeasureType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__semiMajorAxis_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__semiMajorAxis_DEFINED

#define soap_default__gml__semiMajorAxis(soap, a) (a)->gml__MeasureType::soap_default(soap)


#define soap_serialize__gml__semiMajorAxis(soap, a) (a)->soap_serialize(soap)


#define soap__gml__semiMajorAxis2s soap_gml__MeasureType2s


#define soap_out__gml__semiMajorAxis soap_out_gml__MeasureType


#define soap_s2_gml__semiMajorAxis soap_s2gml__MeasureType


#define soap_in__gml__semiMajorAxis soap_in_gml__MeasureType


#define soap_instantiate__gml__semiMajorAxis soap_instantiate_gml__MeasureType


#define soap_new__gml__semiMajorAxis soap_new_gml__MeasureType


#define soap_new_req__gml__semiMajorAxis soap_new_req_gml__MeasureType


#define soap_new_set__gml__semiMajorAxis soap_new_set_gml__MeasureType


#define soap_put__gml__semiMajorAxis soap_put_gml__MeasureType


#define soap_write__gml__semiMajorAxis soap_write_gml__MeasureType


#define soap_get__gml__semiMajorAxis soap_get_gml__MeasureType


#define soap_read__gml__semiMajorAxis soap_read_gml__MeasureType

#endif
/* _gml__Ellipsoid is a typedef synonym for gml__EllipsoidType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Ellipsoid_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Ellipsoid_DEFINED

#define soap_default__gml__Ellipsoid(soap, a) (a)->gml__EllipsoidType::soap_default(soap)


#define soap_serialize__gml__Ellipsoid(soap, a) (a)->soap_serialize(soap)


#define soap__gml__Ellipsoid2s soap_gml__EllipsoidType2s


#define soap_out__gml__Ellipsoid soap_out_gml__EllipsoidType


#define soap_s2_gml__Ellipsoid soap_s2gml__EllipsoidType


#define soap_in__gml__Ellipsoid soap_in_gml__EllipsoidType


#define soap_instantiate__gml__Ellipsoid soap_instantiate_gml__EllipsoidType


#define soap_new__gml__Ellipsoid soap_new_gml__EllipsoidType


#define soap_new_req__gml__Ellipsoid soap_new_req_gml__EllipsoidType


#define soap_new_set__gml__Ellipsoid soap_new_set_gml__EllipsoidType


#define soap_put__gml__Ellipsoid soap_put_gml__EllipsoidType


#define soap_write__gml__Ellipsoid soap_write_gml__EllipsoidType


#define soap_get__gml__Ellipsoid soap_get_gml__EllipsoidType


#define soap_read__gml__Ellipsoid soap_read_gml__EllipsoidType

#endif
/* _gml__ellipsoid is a typedef synonym for gml__EllipsoidPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoid_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoid_DEFINED

#define soap_default__gml__ellipsoid(soap, a) (a)->gml__EllipsoidPropertyType::soap_default(soap)


#define soap_serialize__gml__ellipsoid(soap, a) (a)->soap_serialize(soap)


#define soap__gml__ellipsoid2s soap_gml__EllipsoidPropertyType2s


#define soap_out__gml__ellipsoid soap_out_gml__EllipsoidPropertyType


#define soap_s2_gml__ellipsoid soap_s2gml__EllipsoidPropertyType


#define soap_in__gml__ellipsoid soap_in_gml__EllipsoidPropertyType


#define soap_instantiate__gml__ellipsoid soap_instantiate_gml__EllipsoidPropertyType


#define soap_new__gml__ellipsoid soap_new_gml__EllipsoidPropertyType


#define soap_new_req__gml__ellipsoid soap_new_req_gml__EllipsoidPropertyType


#define soap_new_set__gml__ellipsoid soap_new_set_gml__EllipsoidPropertyType


#define soap_put__gml__ellipsoid soap_put_gml__EllipsoidPropertyType


#define soap_write__gml__ellipsoid soap_write_gml__EllipsoidPropertyType


#define soap_get__gml__ellipsoid soap_get_gml__EllipsoidPropertyType


#define soap_read__gml__ellipsoid soap_read_gml__EllipsoidPropertyType

#endif
/* _gml__greenwichLongitude is a typedef synonym for gml__AngleType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__greenwichLongitude_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__greenwichLongitude_DEFINED

#define soap_default__gml__greenwichLongitude(soap, a) (a)->gml__AngleType::soap_default(soap)


#define soap_serialize__gml__greenwichLongitude(soap, a) (a)->soap_serialize(soap)


#define soap__gml__greenwichLongitude2s soap_gml__AngleType2s


#define soap_out__gml__greenwichLongitude soap_out_gml__AngleType


#define soap_s2_gml__greenwichLongitude soap_s2gml__AngleType


#define soap_in__gml__greenwichLongitude soap_in_gml__AngleType


#define soap_instantiate__gml__greenwichLongitude soap_instantiate_gml__AngleType


#define soap_new__gml__greenwichLongitude soap_new_gml__AngleType


#define soap_new_req__gml__greenwichLongitude soap_new_req_gml__AngleType


#define soap_new_set__gml__greenwichLongitude soap_new_set_gml__AngleType


#define soap_put__gml__greenwichLongitude soap_put_gml__AngleType


#define soap_write__gml__greenwichLongitude soap_write_gml__AngleType


#define soap_get__gml__greenwichLongitude soap_get_gml__AngleType


#define soap_read__gml__greenwichLongitude soap_read_gml__AngleType

#endif
/* _gml__PrimeMeridian is a typedef synonym for gml__PrimeMeridianType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__PrimeMeridian_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__PrimeMeridian_DEFINED

#define soap_default__gml__PrimeMeridian(soap, a) (a)->gml__PrimeMeridianType::soap_default(soap)


#define soap_serialize__gml__PrimeMeridian(soap, a) (a)->soap_serialize(soap)


#define soap__gml__PrimeMeridian2s soap_gml__PrimeMeridianType2s


#define soap_out__gml__PrimeMeridian soap_out_gml__PrimeMeridianType


#define soap_s2_gml__PrimeMeridian soap_s2gml__PrimeMeridianType


#define soap_in__gml__PrimeMeridian soap_in_gml__PrimeMeridianType


#define soap_instantiate__gml__PrimeMeridian soap_instantiate_gml__PrimeMeridianType


#define soap_new__gml__PrimeMeridian soap_new_gml__PrimeMeridianType


#define soap_new_req__gml__PrimeMeridian soap_new_req_gml__PrimeMeridianType


#define soap_new_set__gml__PrimeMeridian soap_new_set_gml__PrimeMeridianType


#define soap_put__gml__PrimeMeridian soap_put_gml__PrimeMeridianType


#define soap_write__gml__PrimeMeridian soap_write_gml__PrimeMeridianType


#define soap_get__gml__PrimeMeridian soap_get_gml__PrimeMeridianType


#define soap_read__gml__PrimeMeridian soap_read_gml__PrimeMeridianType

#endif
/* _gml__primeMeridian is a typedef synonym for gml__PrimeMeridianPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__primeMeridian_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__primeMeridian_DEFINED

#define soap_default__gml__primeMeridian(soap, a) (a)->gml__PrimeMeridianPropertyType::soap_default(soap)


#define soap_serialize__gml__primeMeridian(soap, a) (a)->soap_serialize(soap)


#define soap__gml__primeMeridian2s soap_gml__PrimeMeridianPropertyType2s


#define soap_out__gml__primeMeridian soap_out_gml__PrimeMeridianPropertyType


#define soap_s2_gml__primeMeridian soap_s2gml__PrimeMeridianPropertyType


#define soap_in__gml__primeMeridian soap_in_gml__PrimeMeridianPropertyType


#define soap_instantiate__gml__primeMeridian soap_instantiate_gml__PrimeMeridianPropertyType


#define soap_new__gml__primeMeridian soap_new_gml__PrimeMeridianPropertyType


#define soap_new_req__gml__primeMeridian soap_new_req_gml__PrimeMeridianPropertyType


#define soap_new_set__gml__primeMeridian soap_new_set_gml__PrimeMeridianPropertyType


#define soap_put__gml__primeMeridian soap_put_gml__PrimeMeridianPropertyType


#define soap_write__gml__primeMeridian soap_write_gml__PrimeMeridianPropertyType


#define soap_get__gml__primeMeridian soap_get_gml__PrimeMeridianPropertyType


#define soap_read__gml__primeMeridian soap_read_gml__PrimeMeridianPropertyType

#endif
/* _gml__realizationEpoch is a typedef synonym for xsd__date */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__realizationEpoch_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__realizationEpoch_DEFINED

#define soap_default__gml__realizationEpoch(soap, a) soap_default_xsd__date(soap, a)


#define soap_serialize__gml__realizationEpoch soap_serialize_xsd__date


#define soap__gml__realizationEpoch2s(soap, a) ((a).c_str())

#define soap_out__gml__realizationEpoch soap_out_xsd__date


#define soap_s2_gml__realizationEpoch(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__realizationEpoch soap_in_xsd__date


#define soap_instantiate__gml__realizationEpoch soap_instantiate_xsd__date


#define soap_new__gml__realizationEpoch soap_new_xsd__date


#define soap_put__gml__realizationEpoch soap_put_xsd__date


#define soap_write__gml__realizationEpoch soap_write_xsd__date


#define soap_get__gml__realizationEpoch soap_get_xsd__date


#define soap_read__gml__realizationEpoch soap_read_xsd__date

#endif
/* _gml__anchorDefinition is a typedef synonym for gml__CodeType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__anchorDefinition_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__anchorDefinition_DEFINED

#define soap_default__gml__anchorDefinition(soap, a) (a)->gml__CodeType::soap_default(soap)


#define soap_serialize__gml__anchorDefinition(soap, a) (a)->soap_serialize(soap)


#define soap__gml__anchorDefinition2s soap_gml__CodeType2s


#define soap_out__gml__anchorDefinition soap_out_gml__CodeType


#define soap_s2_gml__anchorDefinition soap_s2gml__CodeType


#define soap_in__gml__anchorDefinition soap_in_gml__CodeType


#define soap_instantiate__gml__anchorDefinition soap_instantiate_gml__CodeType


#define soap_new__gml__anchorDefinition soap_new_gml__CodeType


#define soap_new_req__gml__anchorDefinition soap_new_req_gml__CodeType


#define soap_new_set__gml__anchorDefinition soap_new_set_gml__CodeType


#define soap_put__gml__anchorDefinition soap_put_gml__CodeType


#define soap_write__gml__anchorDefinition soap_write_gml__CodeType


#define soap_get__gml__anchorDefinition soap_get_gml__CodeType


#define soap_read__gml__anchorDefinition soap_read_gml__CodeType

#endif
/* _gml__GeodeticDatum is a typedef synonym for gml__GeodeticDatumType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticDatum_DEFINED

#define soap_default__gml__GeodeticDatum(soap, a) (a)->gml__GeodeticDatumType::soap_default(soap)


#define soap_serialize__gml__GeodeticDatum(soap, a) (a)->soap_serialize(soap)


#define soap__gml__GeodeticDatum2s soap_gml__GeodeticDatumType2s


#define soap_out__gml__GeodeticDatum soap_out_gml__GeodeticDatumType


#define soap_s2_gml__GeodeticDatum soap_s2gml__GeodeticDatumType


#define soap_in__gml__GeodeticDatum soap_in_gml__GeodeticDatumType


#define soap_instantiate__gml__GeodeticDatum soap_instantiate_gml__GeodeticDatumType


#define soap_new__gml__GeodeticDatum soap_new_gml__GeodeticDatumType


#define soap_new_req__gml__GeodeticDatum soap_new_req_gml__GeodeticDatumType


#define soap_new_set__gml__GeodeticDatum soap_new_set_gml__GeodeticDatumType


#define soap_put__gml__GeodeticDatum soap_put_gml__GeodeticDatumType


#define soap_write__gml__GeodeticDatum soap_write_gml__GeodeticDatumType


#define soap_get__gml__GeodeticDatum soap_get_gml__GeodeticDatumType


#define soap_read__gml__GeodeticDatum soap_read_gml__GeodeticDatumType

#endif
/* _gml__geodeticDatum is a typedef synonym for gml__GeodeticDatumPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__geodeticDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__geodeticDatum_DEFINED

#define soap_default__gml__geodeticDatum(soap, a) (a)->gml__GeodeticDatumPropertyType::soap_default(soap)


#define soap_serialize__gml__geodeticDatum(soap, a) (a)->soap_serialize(soap)


#define soap__gml__geodeticDatum2s soap_gml__GeodeticDatumPropertyType2s


#define soap_out__gml__geodeticDatum soap_out_gml__GeodeticDatumPropertyType


#define soap_s2_gml__geodeticDatum soap_s2gml__GeodeticDatumPropertyType


#define soap_in__gml__geodeticDatum soap_in_gml__GeodeticDatumPropertyType


#define soap_instantiate__gml__geodeticDatum soap_instantiate_gml__GeodeticDatumPropertyType


#define soap_new__gml__geodeticDatum soap_new_gml__GeodeticDatumPropertyType


#define soap_new_req__gml__geodeticDatum soap_new_req_gml__GeodeticDatumPropertyType


#define soap_new_set__gml__geodeticDatum soap_new_set_gml__GeodeticDatumPropertyType


#define soap_put__gml__geodeticDatum soap_put_gml__GeodeticDatumPropertyType


#define soap_write__gml__geodeticDatum soap_write_gml__GeodeticDatumPropertyType


#define soap_get__gml__geodeticDatum soap_get_gml__GeodeticDatumPropertyType


#define soap_read__gml__geodeticDatum soap_read_gml__GeodeticDatumPropertyType

#endif
/* _gml__SphericalCS is a typedef synonym for gml__SphericalCSType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SphericalCS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SphericalCS_DEFINED

#define soap_default__gml__SphericalCS(soap, a) (a)->gml__SphericalCSType::soap_default(soap)


#define soap_serialize__gml__SphericalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__SphericalCS2s soap_gml__SphericalCSType2s


#define soap_out__gml__SphericalCS soap_out_gml__SphericalCSType


#define soap_s2_gml__SphericalCS soap_s2gml__SphericalCSType


#define soap_in__gml__SphericalCS soap_in_gml__SphericalCSType


#define soap_instantiate__gml__SphericalCS soap_instantiate_gml__SphericalCSType


#define soap_new__gml__SphericalCS soap_new_gml__SphericalCSType


#define soap_new_req__gml__SphericalCS soap_new_req_gml__SphericalCSType


#define soap_new_set__gml__SphericalCS soap_new_set_gml__SphericalCSType


#define soap_put__gml__SphericalCS soap_put_gml__SphericalCSType


#define soap_write__gml__SphericalCS soap_write_gml__SphericalCSType


#define soap_get__gml__SphericalCS soap_get_gml__SphericalCSType


#define soap_read__gml__SphericalCS soap_read_gml__SphericalCSType

#endif
/* _gml__sphericalCS is a typedef synonym for gml__SphericalCSPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sphericalCS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__sphericalCS_DEFINED

#define soap_default__gml__sphericalCS(soap, a) (a)->gml__SphericalCSPropertyType::soap_default(soap)


#define soap_serialize__gml__sphericalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__sphericalCS2s soap_gml__SphericalCSPropertyType2s


#define soap_out__gml__sphericalCS soap_out_gml__SphericalCSPropertyType


#define soap_s2_gml__sphericalCS soap_s2gml__SphericalCSPropertyType


#define soap_in__gml__sphericalCS soap_in_gml__SphericalCSPropertyType


#define soap_instantiate__gml__sphericalCS soap_instantiate_gml__SphericalCSPropertyType


#define soap_new__gml__sphericalCS soap_new_gml__SphericalCSPropertyType


#define soap_new_req__gml__sphericalCS soap_new_req_gml__SphericalCSPropertyType


#define soap_new_set__gml__sphericalCS soap_new_set_gml__SphericalCSPropertyType


#define soap_put__gml__sphericalCS soap_put_gml__SphericalCSPropertyType


#define soap_write__gml__sphericalCS soap_write_gml__SphericalCSPropertyType


#define soap_get__gml__sphericalCS soap_get_gml__SphericalCSPropertyType


#define soap_read__gml__sphericalCS soap_read_gml__SphericalCSPropertyType

#endif
/* _gml__CartesianCS is a typedef synonym for gml__CartesianCSType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CartesianCS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CartesianCS_DEFINED

#define soap_default__gml__CartesianCS(soap, a) (a)->gml__CartesianCSType::soap_default(soap)


#define soap_serialize__gml__CartesianCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__CartesianCS2s soap_gml__CartesianCSType2s


#define soap_out__gml__CartesianCS soap_out_gml__CartesianCSType


#define soap_s2_gml__CartesianCS soap_s2gml__CartesianCSType


#define soap_in__gml__CartesianCS soap_in_gml__CartesianCSType


#define soap_instantiate__gml__CartesianCS soap_instantiate_gml__CartesianCSType


#define soap_new__gml__CartesianCS soap_new_gml__CartesianCSType


#define soap_new_req__gml__CartesianCS soap_new_req_gml__CartesianCSType


#define soap_new_set__gml__CartesianCS soap_new_set_gml__CartesianCSType


#define soap_put__gml__CartesianCS soap_put_gml__CartesianCSType


#define soap_write__gml__CartesianCS soap_write_gml__CartesianCSType


#define soap_get__gml__CartesianCS soap_get_gml__CartesianCSType


#define soap_read__gml__CartesianCS soap_read_gml__CartesianCSType

#endif
/* _gml__cartesianCS is a typedef synonym for gml__CartesianCSPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__cartesianCS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__cartesianCS_DEFINED

#define soap_default__gml__cartesianCS(soap, a) (a)->gml__CartesianCSPropertyType::soap_default(soap)


#define soap_serialize__gml__cartesianCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__cartesianCS2s soap_gml__CartesianCSPropertyType2s


#define soap_out__gml__cartesianCS soap_out_gml__CartesianCSPropertyType


#define soap_s2_gml__cartesianCS soap_s2gml__CartesianCSPropertyType


#define soap_in__gml__cartesianCS soap_in_gml__CartesianCSPropertyType


#define soap_instantiate__gml__cartesianCS soap_instantiate_gml__CartesianCSPropertyType


#define soap_new__gml__cartesianCS soap_new_gml__CartesianCSPropertyType


#define soap_new_req__gml__cartesianCS soap_new_req_gml__CartesianCSPropertyType


#define soap_new_set__gml__cartesianCS soap_new_set_gml__CartesianCSPropertyType


#define soap_put__gml__cartesianCS soap_put_gml__CartesianCSPropertyType


#define soap_write__gml__cartesianCS soap_write_gml__CartesianCSPropertyType


#define soap_get__gml__cartesianCS soap_get_gml__CartesianCSPropertyType


#define soap_read__gml__cartesianCS soap_read_gml__CartesianCSPropertyType

#endif
/* _gml__rangeMeaning is a typedef synonym for gml__CodeWithAuthorityType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__rangeMeaning_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__rangeMeaning_DEFINED

#define soap_default__gml__rangeMeaning(soap, a) (a)->gml__CodeWithAuthorityType::soap_default(soap)


#define soap_serialize__gml__rangeMeaning(soap, a) (a)->soap_serialize(soap)


#define soap__gml__rangeMeaning2s soap_gml__CodeWithAuthorityType2s


#define soap_out__gml__rangeMeaning soap_out_gml__CodeWithAuthorityType


#define soap_s2_gml__rangeMeaning soap_s2gml__CodeWithAuthorityType


#define soap_in__gml__rangeMeaning soap_in_gml__CodeWithAuthorityType


#define soap_instantiate__gml__rangeMeaning soap_instantiate_gml__CodeWithAuthorityType


#define soap_new__gml__rangeMeaning soap_new_gml__CodeWithAuthorityType


#define soap_new_req__gml__rangeMeaning soap_new_req_gml__CodeWithAuthorityType


#define soap_new_set__gml__rangeMeaning soap_new_set_gml__CodeWithAuthorityType


#define soap_put__gml__rangeMeaning soap_put_gml__CodeWithAuthorityType


#define soap_write__gml__rangeMeaning soap_write_gml__CodeWithAuthorityType


#define soap_get__gml__rangeMeaning soap_get_gml__CodeWithAuthorityType


#define soap_read__gml__rangeMeaning soap_read_gml__CodeWithAuthorityType

#endif
/* _gml__axisDirection is a typedef synonym for gml__CodeWithAuthorityType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisDirection_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisDirection_DEFINED

#define soap_default__gml__axisDirection(soap, a) (a)->gml__CodeWithAuthorityType::soap_default(soap)


#define soap_serialize__gml__axisDirection(soap, a) (a)->soap_serialize(soap)


#define soap__gml__axisDirection2s soap_gml__CodeWithAuthorityType2s


#define soap_out__gml__axisDirection soap_out_gml__CodeWithAuthorityType


#define soap_s2_gml__axisDirection soap_s2gml__CodeWithAuthorityType


#define soap_in__gml__axisDirection soap_in_gml__CodeWithAuthorityType


#define soap_instantiate__gml__axisDirection soap_instantiate_gml__CodeWithAuthorityType


#define soap_new__gml__axisDirection soap_new_gml__CodeWithAuthorityType


#define soap_new_req__gml__axisDirection soap_new_req_gml__CodeWithAuthorityType


#define soap_new_set__gml__axisDirection soap_new_set_gml__CodeWithAuthorityType


#define soap_put__gml__axisDirection soap_put_gml__CodeWithAuthorityType


#define soap_write__gml__axisDirection soap_write_gml__CodeWithAuthorityType


#define soap_get__gml__axisDirection soap_get_gml__CodeWithAuthorityType


#define soap_read__gml__axisDirection soap_read_gml__CodeWithAuthorityType

#endif
/* _gml__axisAbbrev is a typedef synonym for gml__CodeType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisAbbrev_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axisAbbrev_DEFINED

#define soap_default__gml__axisAbbrev(soap, a) (a)->gml__CodeType::soap_default(soap)


#define soap_serialize__gml__axisAbbrev(soap, a) (a)->soap_serialize(soap)


#define soap__gml__axisAbbrev2s soap_gml__CodeType2s


#define soap_out__gml__axisAbbrev soap_out_gml__CodeType


#define soap_s2_gml__axisAbbrev soap_s2gml__CodeType


#define soap_in__gml__axisAbbrev soap_in_gml__CodeType


#define soap_instantiate__gml__axisAbbrev soap_instantiate_gml__CodeType


#define soap_new__gml__axisAbbrev soap_new_gml__CodeType


#define soap_new_req__gml__axisAbbrev soap_new_req_gml__CodeType


#define soap_new_set__gml__axisAbbrev soap_new_set_gml__CodeType


#define soap_put__gml__axisAbbrev soap_put_gml__CodeType


#define soap_write__gml__axisAbbrev soap_write_gml__CodeType


#define soap_get__gml__axisAbbrev soap_get_gml__CodeType


#define soap_read__gml__axisAbbrev soap_read_gml__CodeType

#endif
/* _gml__CoordinateSystemAxis is a typedef synonym for gml__CoordinateSystemAxisType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CoordinateSystemAxis_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__CoordinateSystemAxis_DEFINED

#define soap_default__gml__CoordinateSystemAxis(soap, a) (a)->gml__CoordinateSystemAxisType::soap_default(soap)


#define soap_serialize__gml__CoordinateSystemAxis(soap, a) (a)->soap_serialize(soap)


#define soap__gml__CoordinateSystemAxis2s soap_gml__CoordinateSystemAxisType2s


#define soap_out__gml__CoordinateSystemAxis soap_out_gml__CoordinateSystemAxisType


#define soap_s2_gml__CoordinateSystemAxis soap_s2gml__CoordinateSystemAxisType


#define soap_in__gml__CoordinateSystemAxis soap_in_gml__CoordinateSystemAxisType


#define soap_instantiate__gml__CoordinateSystemAxis soap_instantiate_gml__CoordinateSystemAxisType


#define soap_new__gml__CoordinateSystemAxis soap_new_gml__CoordinateSystemAxisType


#define soap_new_req__gml__CoordinateSystemAxis soap_new_req_gml__CoordinateSystemAxisType


#define soap_new_set__gml__CoordinateSystemAxis soap_new_set_gml__CoordinateSystemAxisType


#define soap_put__gml__CoordinateSystemAxis soap_put_gml__CoordinateSystemAxisType


#define soap_write__gml__CoordinateSystemAxis soap_write_gml__CoordinateSystemAxisType


#define soap_get__gml__CoordinateSystemAxis soap_get_gml__CoordinateSystemAxisType


#define soap_read__gml__CoordinateSystemAxis soap_read_gml__CoordinateSystemAxisType

#endif
/* _gml__axis is a typedef synonym for gml__CoordinateSystemAxisPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axis_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__axis_DEFINED

#define soap_default__gml__axis(soap, a) (a)->gml__CoordinateSystemAxisPropertyType::soap_default(soap)


#define soap_serialize__gml__axis(soap, a) (a)->soap_serialize(soap)


#define soap__gml__axis2s soap_gml__CoordinateSystemAxisPropertyType2s


#define soap_out__gml__axis soap_out_gml__CoordinateSystemAxisPropertyType


#define soap_s2_gml__axis soap_s2gml__CoordinateSystemAxisPropertyType


#define soap_in__gml__axis soap_in_gml__CoordinateSystemAxisPropertyType


#define soap_instantiate__gml__axis soap_instantiate_gml__CoordinateSystemAxisPropertyType


#define soap_new__gml__axis soap_new_gml__CoordinateSystemAxisPropertyType


#define soap_new_req__gml__axis soap_new_req_gml__CoordinateSystemAxisPropertyType


#define soap_new_set__gml__axis soap_new_set_gml__CoordinateSystemAxisPropertyType


#define soap_put__gml__axis soap_put_gml__CoordinateSystemAxisPropertyType


#define soap_write__gml__axis soap_write_gml__CoordinateSystemAxisPropertyType


#define soap_get__gml__axis soap_get_gml__CoordinateSystemAxisPropertyType


#define soap_read__gml__axis soap_read_gml__CoordinateSystemAxisPropertyType

#endif
/* _gml__EllipsoidalCS is a typedef synonym for gml__EllipsoidalCSType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__EllipsoidalCS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__EllipsoidalCS_DEFINED

#define soap_default__gml__EllipsoidalCS(soap, a) (a)->gml__EllipsoidalCSType::soap_default(soap)


#define soap_serialize__gml__EllipsoidalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__EllipsoidalCS2s soap_gml__EllipsoidalCSType2s


#define soap_out__gml__EllipsoidalCS soap_out_gml__EllipsoidalCSType


#define soap_s2_gml__EllipsoidalCS soap_s2gml__EllipsoidalCSType


#define soap_in__gml__EllipsoidalCS soap_in_gml__EllipsoidalCSType


#define soap_instantiate__gml__EllipsoidalCS soap_instantiate_gml__EllipsoidalCSType


#define soap_new__gml__EllipsoidalCS soap_new_gml__EllipsoidalCSType


#define soap_new_req__gml__EllipsoidalCS soap_new_req_gml__EllipsoidalCSType


#define soap_new_set__gml__EllipsoidalCS soap_new_set_gml__EllipsoidalCSType


#define soap_put__gml__EllipsoidalCS soap_put_gml__EllipsoidalCSType


#define soap_write__gml__EllipsoidalCS soap_write_gml__EllipsoidalCSType


#define soap_get__gml__EllipsoidalCS soap_get_gml__EllipsoidalCSType


#define soap_read__gml__EllipsoidalCS soap_read_gml__EllipsoidalCSType

#endif
/* _gml__ellipsoidalCS is a typedef synonym for gml__EllipsoidalCSPropertyType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoidalCS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__ellipsoidalCS_DEFINED

#define soap_default__gml__ellipsoidalCS(soap, a) (a)->gml__EllipsoidalCSPropertyType::soap_default(soap)


#define soap_serialize__gml__ellipsoidalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__ellipsoidalCS2s soap_gml__EllipsoidalCSPropertyType2s


#define soap_out__gml__ellipsoidalCS soap_out_gml__EllipsoidalCSPropertyType


#define soap_s2_gml__ellipsoidalCS soap_s2gml__EllipsoidalCSPropertyType


#define soap_in__gml__ellipsoidalCS soap_in_gml__EllipsoidalCSPropertyType


#define soap_instantiate__gml__ellipsoidalCS soap_instantiate_gml__EllipsoidalCSPropertyType


#define soap_new__gml__ellipsoidalCS soap_new_gml__EllipsoidalCSPropertyType


#define soap_new_req__gml__ellipsoidalCS soap_new_req_gml__EllipsoidalCSPropertyType


#define soap_new_set__gml__ellipsoidalCS soap_new_set_gml__EllipsoidalCSPropertyType


#define soap_put__gml__ellipsoidalCS soap_put_gml__EllipsoidalCSPropertyType


#define soap_write__gml__ellipsoidalCS soap_write_gml__EllipsoidalCSPropertyType


#define soap_get__gml__ellipsoidalCS soap_get_gml__EllipsoidalCSPropertyType


#define soap_read__gml__ellipsoidalCS soap_read_gml__EllipsoidalCSPropertyType

#endif
/* _gml__scope is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__scope_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__scope_DEFINED

#define soap_default__gml__scope(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__gml__scope soap_serialize_std__string


#define soap__gml__scope2s(soap, a) ((a).c_str())

#define soap_out__gml__scope soap_out_std__string


#define soap_s2_gml__scope(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__scope soap_in_std__string


#define soap_instantiate__gml__scope soap_instantiate_std__string


#define soap_new__gml__scope soap_new_std__string


#define soap_put__gml__scope soap_put_std__string


#define soap_write__gml__scope soap_write_std__string


#define soap_get__gml__scope soap_get_std__string


#define soap_read__gml__scope soap_read_std__string

#endif
/* _gml__Definition is a typedef synonym for gml__DefinitionType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Definition_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__Definition_DEFINED

#define soap_default__gml__Definition(soap, a) (a)->gml__DefinitionType::soap_default(soap)


#define soap_serialize__gml__Definition(soap, a) (a)->soap_serialize(soap)


#define soap__gml__Definition2s soap_gml__DefinitionType2s


#define soap_out__gml__Definition soap_out_gml__DefinitionType


#define soap_s2_gml__Definition soap_s2gml__DefinitionType


#define soap_in__gml__Definition soap_in_gml__DefinitionType


#define soap_instantiate__gml__Definition soap_instantiate_gml__DefinitionType


#define soap_new__gml__Definition soap_new_gml__DefinitionType


#define soap_new_req__gml__Definition soap_new_req_gml__DefinitionType


#define soap_new_set__gml__Definition soap_new_set_gml__DefinitionType


#define soap_put__gml__Definition soap_put_gml__DefinitionType


#define soap_write__gml__Definition soap_write_gml__DefinitionType


#define soap_get__gml__Definition soap_get_gml__DefinitionType


#define soap_read__gml__Definition soap_read_gml__DefinitionType

#endif
/* _gml__remarks is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__remarks_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__remarks_DEFINED

#define soap_default__gml__remarks(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__gml__remarks soap_serialize_std__string


#define soap__gml__remarks2s(soap, a) ((a).c_str())

#define soap_out__gml__remarks soap_out_std__string


#define soap_s2_gml__remarks(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__remarks soap_in_std__string


#define soap_instantiate__gml__remarks soap_instantiate_std__string


#define soap_new__gml__remarks soap_new_std__string


#define soap_put__gml__remarks soap_put_std__string


#define soap_write__gml__remarks soap_write_std__string


#define soap_get__gml__remarks soap_get_std__string


#define soap_read__gml__remarks soap_read_std__string

#endif
/* _gml__name is a typedef synonym for gml__CodeType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__name_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__name_DEFINED

#define soap_default__gml__name(soap, a) (a)->gml__CodeType::soap_default(soap)


#define soap_serialize__gml__name(soap, a) (a)->soap_serialize(soap)


#define soap__gml__name2s soap_gml__CodeType2s


#define soap_out__gml__name soap_out_gml__CodeType


#define soap_s2_gml__name soap_s2gml__CodeType


#define soap_in__gml__name soap_in_gml__CodeType


#define soap_instantiate__gml__name soap_instantiate_gml__CodeType


#define soap_new__gml__name soap_new_gml__CodeType


#define soap_new_req__gml__name soap_new_req_gml__CodeType


#define soap_new_set__gml__name soap_new_set_gml__CodeType


#define soap_put__gml__name soap_put_gml__CodeType


#define soap_write__gml__name soap_write_gml__CodeType


#define soap_get__gml__name soap_get_gml__CodeType


#define soap_read__gml__name soap_read_gml__CodeType

#endif
/* _gml__identifier is a typedef synonym for gml__CodeWithAuthorityType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__identifier_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__identifier_DEFINED

#define soap_default__gml__identifier(soap, a) (a)->gml__CodeWithAuthorityType::soap_default(soap)


#define soap_serialize__gml__identifier(soap, a) (a)->soap_serialize(soap)


#define soap__gml__identifier2s soap_gml__CodeWithAuthorityType2s


#define soap_out__gml__identifier soap_out_gml__CodeWithAuthorityType


#define soap_s2_gml__identifier soap_s2gml__CodeWithAuthorityType


#define soap_in__gml__identifier soap_in_gml__CodeWithAuthorityType


#define soap_instantiate__gml__identifier soap_instantiate_gml__CodeWithAuthorityType


#define soap_new__gml__identifier soap_new_gml__CodeWithAuthorityType


#define soap_new_req__gml__identifier soap_new_req_gml__CodeWithAuthorityType


#define soap_new_set__gml__identifier soap_new_set_gml__CodeWithAuthorityType


#define soap_put__gml__identifier soap_put_gml__CodeWithAuthorityType


#define soap_write__gml__identifier soap_write_gml__CodeWithAuthorityType


#define soap_get__gml__identifier soap_get_gml__CodeWithAuthorityType


#define soap_read__gml__identifier soap_read_gml__CodeWithAuthorityType

#endif
/* _gml__descriptionReference is a typedef synonym for gml__ReferenceType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__descriptionReference_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__descriptionReference_DEFINED

#define soap_default__gml__descriptionReference(soap, a) (a)->gml__ReferenceType::soap_default(soap)


#define soap_serialize__gml__descriptionReference(soap, a) (a)->soap_serialize(soap)


#define soap__gml__descriptionReference2s soap_gml__ReferenceType2s


#define soap_out__gml__descriptionReference soap_out_gml__ReferenceType


#define soap_s2_gml__descriptionReference soap_s2gml__ReferenceType


#define soap_in__gml__descriptionReference soap_in_gml__ReferenceType


#define soap_instantiate__gml__descriptionReference soap_instantiate_gml__ReferenceType


#define soap_new__gml__descriptionReference soap_new_gml__ReferenceType


#define soap_new_req__gml__descriptionReference soap_new_req_gml__ReferenceType


#define soap_new_set__gml__descriptionReference soap_new_set_gml__ReferenceType


#define soap_put__gml__descriptionReference soap_put_gml__ReferenceType


#define soap_write__gml__descriptionReference soap_write_gml__ReferenceType


#define soap_get__gml__descriptionReference soap_get_gml__ReferenceType


#define soap_read__gml__descriptionReference soap_read_gml__ReferenceType

#endif
/* _gml__description is a typedef synonym for gml__StringOrRefType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__description_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__description_DEFINED

#define soap_default__gml__description(soap, a) (a)->gml__StringOrRefType::soap_default(soap)


#define soap_serialize__gml__description(soap, a) (a)->soap_serialize(soap)


#define soap__gml__description2s soap_gml__StringOrRefType2s


#define soap_out__gml__description soap_out_gml__StringOrRefType


#define soap_s2_gml__description soap_s2gml__StringOrRefType


#define soap_in__gml__description soap_in_gml__StringOrRefType


#define soap_instantiate__gml__description soap_instantiate_gml__StringOrRefType


#define soap_new__gml__description soap_new_gml__StringOrRefType


#define soap_new_req__gml__description soap_new_req_gml__StringOrRefType


#define soap_new_set__gml__description soap_new_set_gml__StringOrRefType


#define soap_put__gml__description soap_put_gml__StringOrRefType


#define soap_write__gml__description soap_write_gml__StringOrRefType


#define soap_get__gml__description soap_get_gml__StringOrRefType


#define soap_read__gml__description soap_read_gml__StringOrRefType

#endif
/* _gml__GeodeticCRS is a typedef synonym for gml__GeodeticCRSType */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__GeodeticCRS_DEFINED

#define soap_default__gml__GeodeticCRS(soap, a) (a)->gml__GeodeticCRSType::soap_default(soap)


#define soap_serialize__gml__GeodeticCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__GeodeticCRS2s soap_gml__GeodeticCRSType2s


#define soap_out__gml__GeodeticCRS soap_out_gml__GeodeticCRSType


#define soap_s2_gml__GeodeticCRS soap_s2gml__GeodeticCRSType


#define soap_in__gml__GeodeticCRS soap_in_gml__GeodeticCRSType


#define soap_instantiate__gml__GeodeticCRS soap_instantiate_gml__GeodeticCRSType


#define soap_new__gml__GeodeticCRS soap_new_gml__GeodeticCRSType


#define soap_new_req__gml__GeodeticCRS soap_new_req_gml__GeodeticCRSType


#define soap_new_set__gml__GeodeticCRS soap_new_set_gml__GeodeticCRSType


#define soap_put__gml__GeodeticCRS soap_put_gml__GeodeticCRSType


#define soap_write__gml__GeodeticCRS soap_write_gml__GeodeticCRSType


#define soap_get__gml__GeodeticCRS soap_get_gml__GeodeticCRSType


#define soap_read__gml__GeodeticCRS soap_read_gml__GeodeticCRSType

#endif
/* _witsml1__coordinateReferenceSystems is a typedef synonym for witsml1__obj_USCOREcoordinateReferenceSystems */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__coordinateReferenceSystems_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__coordinateReferenceSystems_DEFINED

#define soap_default__witsml1__coordinateReferenceSystems(soap, a) (a)->witsml1__obj_USCOREcoordinateReferenceSystems::soap_default(soap)


#define soap_serialize__witsml1__coordinateReferenceSystems(soap, a) (a)->soap_serialize(soap)


#define soap__witsml1__coordinateReferenceSystems2s soap_witsml1__obj_USCOREcoordinateReferenceSystems2s


#define soap_out__witsml1__coordinateReferenceSystems soap_out_witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_s2_witsml1__coordinateReferenceSystems soap_s2witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_in__witsml1__coordinateReferenceSystems soap_in_witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_instantiate__witsml1__coordinateReferenceSystems soap_instantiate_witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_new__witsml1__coordinateReferenceSystems soap_new_witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_new_req__witsml1__coordinateReferenceSystems soap_new_req_witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_new_set__witsml1__coordinateReferenceSystems soap_new_set_witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_put__witsml1__coordinateReferenceSystems soap_put_witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_write__witsml1__coordinateReferenceSystems soap_write_witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_get__witsml1__coordinateReferenceSystems soap_get_witsml1__obj_USCOREcoordinateReferenceSystems


#define soap_read__witsml1__coordinateReferenceSystems soap_read_witsml1__obj_USCOREcoordinateReferenceSystems

#endif
/* _witsml1__formationMarkers is a typedef synonym for witsml1__obj_USCOREformationMarkers */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__formationMarkers_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__formationMarkers_DEFINED

#define soap_default__witsml1__formationMarkers(soap, a) (a)->witsml1__obj_USCOREformationMarkers::soap_default(soap)


#define soap_serialize__witsml1__formationMarkers(soap, a) (a)->soap_serialize(soap)


#define soap__witsml1__formationMarkers2s soap_witsml1__obj_USCOREformationMarkers2s


#define soap_out__witsml1__formationMarkers soap_out_witsml1__obj_USCOREformationMarkers


#define soap_s2_witsml1__formationMarkers soap_s2witsml1__obj_USCOREformationMarkers


#define soap_in__witsml1__formationMarkers soap_in_witsml1__obj_USCOREformationMarkers


#define soap_instantiate__witsml1__formationMarkers soap_instantiate_witsml1__obj_USCOREformationMarkers


#define soap_new__witsml1__formationMarkers soap_new_witsml1__obj_USCOREformationMarkers


#define soap_new_req__witsml1__formationMarkers soap_new_req_witsml1__obj_USCOREformationMarkers


#define soap_new_set__witsml1__formationMarkers soap_new_set_witsml1__obj_USCOREformationMarkers


#define soap_put__witsml1__formationMarkers soap_put_witsml1__obj_USCOREformationMarkers


#define soap_write__witsml1__formationMarkers soap_write_witsml1__obj_USCOREformationMarkers


#define soap_get__witsml1__formationMarkers soap_get_witsml1__obj_USCOREformationMarkers


#define soap_read__witsml1__formationMarkers soap_read_witsml1__obj_USCOREformationMarkers

#endif
/* _witsml1__logs is a typedef synonym for witsml1__obj_USCORElogs */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__logs_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__logs_DEFINED

#define soap_default__witsml1__logs(soap, a) (a)->witsml1__obj_USCORElogs::soap_default(soap)


#define soap_serialize__witsml1__logs(soap, a) (a)->soap_serialize(soap)


#define soap__witsml1__logs2s soap_witsml1__obj_USCORElogs2s


#define soap_out__witsml1__logs soap_out_witsml1__obj_USCORElogs


#define soap_s2_witsml1__logs soap_s2witsml1__obj_USCORElogs


#define soap_in__witsml1__logs soap_in_witsml1__obj_USCORElogs


#define soap_instantiate__witsml1__logs soap_instantiate_witsml1__obj_USCORElogs


#define soap_new__witsml1__logs soap_new_witsml1__obj_USCORElogs


#define soap_new_req__witsml1__logs soap_new_req_witsml1__obj_USCORElogs


#define soap_new_set__witsml1__logs soap_new_set_witsml1__obj_USCORElogs


#define soap_put__witsml1__logs soap_put_witsml1__obj_USCORElogs


#define soap_write__witsml1__logs soap_write_witsml1__obj_USCORElogs


#define soap_get__witsml1__logs soap_get_witsml1__obj_USCORElogs


#define soap_read__witsml1__logs soap_read_witsml1__obj_USCORElogs

#endif
/* _witsml1__trajectorys is a typedef synonym for witsml1__obj_USCOREtrajectorys */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__trajectorys_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__trajectorys_DEFINED

#define soap_default__witsml1__trajectorys(soap, a) (a)->witsml1__obj_USCOREtrajectorys::soap_default(soap)


#define soap_serialize__witsml1__trajectorys(soap, a) (a)->soap_serialize(soap)


#define soap__witsml1__trajectorys2s soap_witsml1__obj_USCOREtrajectorys2s


#define soap_out__witsml1__trajectorys soap_out_witsml1__obj_USCOREtrajectorys


#define soap_s2_witsml1__trajectorys soap_s2witsml1__obj_USCOREtrajectorys


#define soap_in__witsml1__trajectorys soap_in_witsml1__obj_USCOREtrajectorys


#define soap_instantiate__witsml1__trajectorys soap_instantiate_witsml1__obj_USCOREtrajectorys


#define soap_new__witsml1__trajectorys soap_new_witsml1__obj_USCOREtrajectorys


#define soap_new_req__witsml1__trajectorys soap_new_req_witsml1__obj_USCOREtrajectorys


#define soap_new_set__witsml1__trajectorys soap_new_set_witsml1__obj_USCOREtrajectorys


#define soap_put__witsml1__trajectorys soap_put_witsml1__obj_USCOREtrajectorys


#define soap_write__witsml1__trajectorys soap_write_witsml1__obj_USCOREtrajectorys


#define soap_get__witsml1__trajectorys soap_get_witsml1__obj_USCOREtrajectorys


#define soap_read__witsml1__trajectorys soap_read_witsml1__obj_USCOREtrajectorys

#endif
/* _witsml1__wellbores is a typedef synonym for witsml1__obj_USCOREwellbores */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wellbores_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wellbores_DEFINED

#define soap_default__witsml1__wellbores(soap, a) (a)->witsml1__obj_USCOREwellbores::soap_default(soap)


#define soap_serialize__witsml1__wellbores(soap, a) (a)->soap_serialize(soap)


#define soap__witsml1__wellbores2s soap_witsml1__obj_USCOREwellbores2s


#define soap_out__witsml1__wellbores soap_out_witsml1__obj_USCOREwellbores


#define soap_s2_witsml1__wellbores soap_s2witsml1__obj_USCOREwellbores


#define soap_in__witsml1__wellbores soap_in_witsml1__obj_USCOREwellbores


#define soap_instantiate__witsml1__wellbores soap_instantiate_witsml1__obj_USCOREwellbores


#define soap_new__witsml1__wellbores soap_new_witsml1__obj_USCOREwellbores


#define soap_new_req__witsml1__wellbores soap_new_req_witsml1__obj_USCOREwellbores


#define soap_new_set__witsml1__wellbores soap_new_set_witsml1__obj_USCOREwellbores


#define soap_put__witsml1__wellbores soap_put_witsml1__obj_USCOREwellbores


#define soap_write__witsml1__wellbores soap_write_witsml1__obj_USCOREwellbores


#define soap_get__witsml1__wellbores soap_get_witsml1__obj_USCOREwellbores


#define soap_read__witsml1__wellbores soap_read_witsml1__obj_USCOREwellbores

#endif
/* _witsml1__wells is a typedef synonym for witsml1__obj_USCOREwells */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wells_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__wells_DEFINED

#define soap_default__witsml1__wells(soap, a) (a)->witsml1__obj_USCOREwells::soap_default(soap)


#define soap_serialize__witsml1__wells(soap, a) (a)->soap_serialize(soap)


#define soap__witsml1__wells2s soap_witsml1__obj_USCOREwells2s


#define soap_out__witsml1__wells soap_out_witsml1__obj_USCOREwells


#define soap_s2_witsml1__wells soap_s2witsml1__obj_USCOREwells


#define soap_in__witsml1__wells soap_in_witsml1__obj_USCOREwells


#define soap_instantiate__witsml1__wells soap_instantiate_witsml1__obj_USCOREwells


#define soap_new__witsml1__wells soap_new_witsml1__obj_USCOREwells


#define soap_new_req__witsml1__wells soap_new_req_witsml1__obj_USCOREwells


#define soap_new_set__witsml1__wells soap_new_set_witsml1__obj_USCOREwells


#define soap_put__witsml1__wells soap_put_witsml1__obj_USCOREwells


#define soap_write__witsml1__wells soap_write_witsml1__obj_USCOREwells


#define soap_get__witsml1__wells soap_get_witsml1__obj_USCOREwells


#define soap_read__witsml1__wells soap_read_witsml1__obj_USCOREwells

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gsr__SC_USCORECRS_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gsr__SC_USCORECRS_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, const char*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gsr__SC_USCORECRS_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gsr__SC_USCORECRS_USCOREPropertyType_sequence * soap_new___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gsr__SC_USCORECRS_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gsr__SC_USCORECRS_USCOREPropertyType_sequence * soap_new_req___gsr__SC_USCORECRS_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractCRS,
	const union _gsr__union_SC_USCORECRS_USCOREPropertyType& union_SC_USCORECRS_USCOREPropertyType)
{
	__gsr__SC_USCORECRS_USCOREPropertyType_sequence *_p = soap_new___gsr__SC_USCORECRS_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gsr__SC_USCORECRS_USCOREPropertyType_sequence::__unionAbstractCRS = __unionAbstractCRS;
		_p->__gsr__SC_USCORECRS_USCOREPropertyType_sequence::union_SC_USCORECRS_USCOREPropertyType = union_SC_USCORECRS_USCOREPropertyType;
	}
	return _p;
}

inline __gsr__SC_USCORECRS_USCOREPropertyType_sequence * soap_new_set___gsr__SC_USCORECRS_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractCRS,
	const union _gsr__union_SC_USCORECRS_USCOREPropertyType& union_SC_USCORECRS_USCOREPropertyType)
{
	__gsr__SC_USCORECRS_USCOREPropertyType_sequence *_p = soap_new___gsr__SC_USCORECRS_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gsr__SC_USCORECRS_USCOREPropertyType_sequence::__unionAbstractCRS = __unionAbstractCRS;
		_p->__gsr__SC_USCORECRS_USCOREPropertyType_sequence::union_SC_USCORECRS_USCOREPropertyType = union_SC_USCORECRS_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap *soap, __gsr__SC_USCORECRS_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gsr:SC_CRS_PropertyType-sequence", "-gsr:SC_CRS_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gsr__SC_USCORECRS_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap *soap, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gsr__SC_USCORECRS_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gco__DateTime_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gco__DateTime_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gco__DateTime_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gco__DateTime_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gco__DateTime_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gco__DateTime_USCOREPropertyType_sequence(struct soap*, const char*, __gco__DateTime_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gco__DateTime_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__DateTime_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gco__DateTime_USCOREPropertyType_sequence * soap_new___gco__DateTime_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gco__DateTime_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gco__DateTime_USCOREPropertyType_sequence * soap_new_req___gco__DateTime_USCOREPropertyType_sequence(
	struct soap *soap,
	time_t DateTime)
{
	__gco__DateTime_USCOREPropertyType_sequence *_p = soap_new___gco__DateTime_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__DateTime_USCOREPropertyType_sequence::DateTime = DateTime;
	}
	return _p;
}

inline __gco__DateTime_USCOREPropertyType_sequence * soap_new_set___gco__DateTime_USCOREPropertyType_sequence(
	struct soap *soap,
	time_t DateTime)
{
	__gco__DateTime_USCOREPropertyType_sequence *_p = soap_new___gco__DateTime_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__DateTime_USCOREPropertyType_sequence::DateTime = DateTime;
	}
	return _p;
}

inline int soap_write___gco__DateTime_USCOREPropertyType_sequence(struct soap *soap, __gco__DateTime_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gco:DateTime_PropertyType-sequence", "-gco:DateTime_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gco__DateTime_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gco__DateTime_USCOREPropertyType_sequence(struct soap*, __gco__DateTime_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gco__DateTime_USCOREPropertyType_sequence(struct soap *soap, __gco__DateTime_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gco__DateTime_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Real_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Real_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gco__Real_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gco__Real_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gco__Real_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gco__Real_USCOREPropertyType_sequence(struct soap*, const char*, __gco__Real_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gco__Real_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__Real_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gco__Real_USCOREPropertyType_sequence * soap_new___gco__Real_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gco__Real_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gco__Real_USCOREPropertyType_sequence * soap_new_req___gco__Real_USCOREPropertyType_sequence(
	struct soap *soap,
	double Real)
{
	__gco__Real_USCOREPropertyType_sequence *_p = soap_new___gco__Real_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__Real_USCOREPropertyType_sequence::Real = Real;
	}
	return _p;
}

inline __gco__Real_USCOREPropertyType_sequence * soap_new_set___gco__Real_USCOREPropertyType_sequence(
	struct soap *soap,
	double Real)
{
	__gco__Real_USCOREPropertyType_sequence *_p = soap_new___gco__Real_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__Real_USCOREPropertyType_sequence::Real = Real;
	}
	return _p;
}

inline int soap_write___gco__Real_USCOREPropertyType_sequence(struct soap *soap, __gco__Real_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gco:Real_PropertyType-sequence", "-gco:Real_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gco__Real_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gco__Real_USCOREPropertyType_sequence(struct soap*, __gco__Real_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gco__Real_USCOREPropertyType_sequence(struct soap *soap, __gco__Real_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gco__Real_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Boolean_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gco__Boolean_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gco__Boolean_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gco__Boolean_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gco__Boolean_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gco__Boolean_USCOREPropertyType_sequence(struct soap*, const char*, __gco__Boolean_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gco__Boolean_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__Boolean_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gco__Boolean_USCOREPropertyType_sequence * soap_new___gco__Boolean_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gco__Boolean_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gco__Boolean_USCOREPropertyType_sequence * soap_new_req___gco__Boolean_USCOREPropertyType_sequence(
	struct soap *soap,
	bool Boolean)
{
	__gco__Boolean_USCOREPropertyType_sequence *_p = soap_new___gco__Boolean_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__Boolean_USCOREPropertyType_sequence::Boolean = Boolean;
	}
	return _p;
}

inline __gco__Boolean_USCOREPropertyType_sequence * soap_new_set___gco__Boolean_USCOREPropertyType_sequence(
	struct soap *soap,
	bool Boolean)
{
	__gco__Boolean_USCOREPropertyType_sequence *_p = soap_new___gco__Boolean_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__Boolean_USCOREPropertyType_sequence::Boolean = Boolean;
	}
	return _p;
}

inline int soap_write___gco__Boolean_USCOREPropertyType_sequence(struct soap *soap, __gco__Boolean_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gco:Boolean_PropertyType-sequence", "-gco:Boolean_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gco__Boolean_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gco__Boolean_USCOREPropertyType_sequence(struct soap*, __gco__Boolean_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gco__Boolean_USCOREPropertyType_sequence(struct soap *soap, __gco__Boolean_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gco__Boolean_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gco__CharacterString_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gco__CharacterString_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gco__CharacterString_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gco__CharacterString_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, const char*, __gco__CharacterString_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gco__CharacterString_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gco__CharacterString_USCOREPropertyType_sequence * soap_new___gco__CharacterString_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gco__CharacterString_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gco__CharacterString_USCOREPropertyType_sequence * soap_new_req___gco__CharacterString_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionCharacterString,
	const union _gco__union_CharacterString_USCOREPropertyType& union_CharacterString_USCOREPropertyType)
{
	__gco__CharacterString_USCOREPropertyType_sequence *_p = soap_new___gco__CharacterString_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__CharacterString_USCOREPropertyType_sequence::__unionCharacterString = __unionCharacterString;
		_p->__gco__CharacterString_USCOREPropertyType_sequence::union_CharacterString_USCOREPropertyType = union_CharacterString_USCOREPropertyType;
	}
	return _p;
}

inline __gco__CharacterString_USCOREPropertyType_sequence * soap_new_set___gco__CharacterString_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionCharacterString,
	const union _gco__union_CharacterString_USCOREPropertyType& union_CharacterString_USCOREPropertyType)
{
	__gco__CharacterString_USCOREPropertyType_sequence *_p = soap_new___gco__CharacterString_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__CharacterString_USCOREPropertyType_sequence::__unionCharacterString = __unionCharacterString;
		_p->__gco__CharacterString_USCOREPropertyType_sequence::union_CharacterString_USCOREPropertyType = union_CharacterString_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gco__CharacterString_USCOREPropertyType_sequence(struct soap *soap, __gco__CharacterString_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gco:CharacterString_PropertyType-sequence", "-gco:CharacterString_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gco__CharacterString_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, __gco__CharacterString_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gco__CharacterString_USCOREPropertyType_sequence(struct soap *soap, __gco__CharacterString_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gco__CharacterString_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, const char*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * soap_new___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * soap_new_req___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractTimePrimitive,
	const union _gts__union_TM_USCOREPrimitive_USCOREPropertyType& union_TM_USCOREPrimitive_USCOREPropertyType)
{
	__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *_p = soap_new___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence::__unionAbstractTimePrimitive = __unionAbstractTimePrimitive;
		_p->__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence::union_TM_USCOREPrimitive_USCOREPropertyType = union_TM_USCOREPrimitive_USCOREPropertyType;
	}
	return _p;
}

inline __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * soap_new_set___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractTimePrimitive,
	const union _gts__union_TM_USCOREPrimitive_USCOREPropertyType& union_TM_USCOREPrimitive_USCOREPropertyType)
{
	__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *_p = soap_new___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence::__unionAbstractTimePrimitive = __unionAbstractTimePrimitive;
		_p->__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence::union_TM_USCOREPrimitive_USCOREPropertyType = union_TM_USCOREPrimitive_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap *soap, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gts:TM_Primitive_PropertyType-sequence", "-gts:TM_Primitive_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap *soap, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * soap_new___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * soap_new_req___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractDQ_USCOREResult,
	const union _gmd__union_DQ_USCOREResult_USCOREPropertyType& union_DQ_USCOREResult_USCOREPropertyType)
{
	__gmd__DQ_USCOREResult_USCOREPropertyType_sequence *_p = soap_new___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__DQ_USCOREResult_USCOREPropertyType_sequence::__unionAbstractDQ_USCOREResult = __unionAbstractDQ_USCOREResult;
		_p->__gmd__DQ_USCOREResult_USCOREPropertyType_sequence::union_DQ_USCOREResult_USCOREPropertyType = union_DQ_USCOREResult_USCOREPropertyType;
	}
	return _p;
}

inline __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * soap_new_set___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractDQ_USCOREResult,
	const union _gmd__union_DQ_USCOREResult_USCOREPropertyType& union_DQ_USCOREResult_USCOREPropertyType)
{
	__gmd__DQ_USCOREResult_USCOREPropertyType_sequence *_p = soap_new___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__DQ_USCOREResult_USCOREPropertyType_sequence::__unionAbstractDQ_USCOREResult = __unionAbstractDQ_USCOREResult;
		_p->__gmd__DQ_USCOREResult_USCOREPropertyType_sequence::union_DQ_USCOREResult_USCOREPropertyType = union_DQ_USCOREResult_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap *soap, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:DQ_Result_PropertyType-sequence", "-gmd:DQ_Result_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap *soap, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * soap_new___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * soap_new_req___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *DQ_USCOREEvaluationMethodTypeCode)
{
	__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *_p = soap_new___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence::DQ_USCOREEvaluationMethodTypeCode = DQ_USCOREEvaluationMethodTypeCode;
	}
	return _p;
}

inline __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * soap_new_set___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *DQ_USCOREEvaluationMethodTypeCode)
{
	__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *_p = soap_new___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence::DQ_USCOREEvaluationMethodTypeCode = DQ_USCOREEvaluationMethodTypeCode;
	}
	return _p;
}

inline int soap_write___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:DQ_EvaluationMethodTypeCode_PropertyType-sequence", "-gmd:DQ_EvaluationMethodTypeCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCORESeries_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCORESeries_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCORESeries_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCORESeries_USCOREPropertyType_sequence * soap_new___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCORESeries_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCORESeries_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCORESeries_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORESeries_USCOREType *CI_USCORESeries)
{
	__gmd__CI_USCORESeries_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORESeries_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORESeries_USCOREPropertyType_sequence::CI_USCORESeries = CI_USCORESeries;
	}
	return _p;
}

inline __gmd__CI_USCORESeries_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCORESeries_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORESeries_USCOREType *CI_USCORESeries)
{
	__gmd__CI_USCORESeries_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORESeries_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORESeries_USCOREPropertyType_sequence::CI_USCORESeries = CI_USCORESeries;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORESeries_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Series_PropertyType-sequence", "-gmd:CI_Series_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCORESeries_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCORESeries_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREPresentationFormCode)
{
	__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence::CI_USCOREPresentationFormCode = CI_USCOREPresentationFormCode;
	}
	return _p;
}

inline __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREPresentationFormCode)
{
	__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence::CI_USCOREPresentationFormCode = CI_USCOREPresentationFormCode;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_PresentationFormCode_PropertyType-sequence", "-gmd:CI_PresentationFormCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * soap_new___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCORERoleCode)
{
	__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence::CI_USCORERoleCode = CI_USCORERoleCode;
	}
	return _p;
}

inline __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCORERoleCode)
{
	__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence::CI_USCORERoleCode = CI_USCORERoleCode;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_RoleCode_PropertyType-sequence", "-gmd:CI_RoleCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREOnLineFunctionCode)
{
	__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence::CI_USCOREOnLineFunctionCode = CI_USCOREOnLineFunctionCode;
	}
	return _p;
}

inline __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREOnLineFunctionCode)
{
	__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence::CI_USCOREOnLineFunctionCode = CI_USCOREOnLineFunctionCode;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_OnLineFunctionCode_PropertyType-sequence", "-gmd:CI_OnLineFunctionCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__URL_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__URL_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__URL_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__URL_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__URL_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__URL_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__URL_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__URL_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__URL_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__URL_USCOREPropertyType_sequence * soap_new___gmd__URL_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__URL_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__URL_USCOREPropertyType_sequence * soap_new_req___gmd__URL_USCOREPropertyType_sequence(
	struct soap *soap,
	const std::string& URL)
{
	__gmd__URL_USCOREPropertyType_sequence *_p = soap_new___gmd__URL_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__URL_USCOREPropertyType_sequence::URL = URL;
	}
	return _p;
}

inline __gmd__URL_USCOREPropertyType_sequence * soap_new_set___gmd__URL_USCOREPropertyType_sequence(
	struct soap *soap,
	const std::string& URL)
{
	__gmd__URL_USCOREPropertyType_sequence *_p = soap_new___gmd__URL_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__URL_USCOREPropertyType_sequence::URL = URL;
	}
	return _p;
}

inline int soap_write___gmd__URL_USCOREPropertyType_sequence(struct soap *soap, __gmd__URL_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:URL_PropertyType-sequence", "-gmd:URL_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__URL_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__URL_USCOREPropertyType_sequence(struct soap*, __gmd__URL_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__URL_USCOREPropertyType_sequence(struct soap *soap, __gmd__URL_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__URL_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREOnlineResource_USCOREType *CI_USCOREOnlineResource)
{
	__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence::CI_USCOREOnlineResource = CI_USCOREOnlineResource;
	}
	return _p;
}

inline __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREOnlineResource_USCOREType *CI_USCOREOnlineResource)
{
	__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence::CI_USCOREOnlineResource = CI_USCOREOnlineResource;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_OnlineResource_PropertyType-sequence", "-gmd:CI_OnlineResource_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREAddress_USCOREType *CI_USCOREAddress)
{
	__gmd__CI_USCOREAddress_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREAddress_USCOREPropertyType_sequence::CI_USCOREAddress = CI_USCOREAddress;
	}
	return _p;
}

inline __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREAddress_USCOREType *CI_USCOREAddress)
{
	__gmd__CI_USCOREAddress_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREAddress_USCOREPropertyType_sequence::CI_USCOREAddress = CI_USCOREAddress;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Address_PropertyType-sequence", "-gmd:CI_Address_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * soap_new___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORETelephone_USCOREType *CI_USCORETelephone)
{
	__gmd__CI_USCORETelephone_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORETelephone_USCOREPropertyType_sequence::CI_USCORETelephone = CI_USCORETelephone;
	}
	return _p;
}

inline __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORETelephone_USCOREType *CI_USCORETelephone)
{
	__gmd__CI_USCORETelephone_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORETelephone_USCOREPropertyType_sequence::CI_USCORETelephone = CI_USCORETelephone;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Telephone_PropertyType-sequence", "-gmd:CI_Telephone_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREContact_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREContact_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREContact_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREContact_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREContact_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREContact_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREContact_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREContact_USCOREType *CI_USCOREContact)
{
	__gmd__CI_USCOREContact_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREContact_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREContact_USCOREPropertyType_sequence::CI_USCOREContact = CI_USCOREContact;
	}
	return _p;
}

inline __gmd__CI_USCOREContact_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREContact_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREContact_USCOREType *CI_USCOREContact)
{
	__gmd__CI_USCOREContact_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREContact_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREContact_USCOREPropertyType_sequence::CI_USCOREContact = CI_USCOREContact;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREContact_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Contact_PropertyType-sequence", "-gmd:CI_Contact_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREContact_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREContact_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREResponsibleParty_USCOREType *CI_USCOREResponsibleParty)
{
	__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence::CI_USCOREResponsibleParty = CI_USCOREResponsibleParty;
	}
	return _p;
}

inline __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREResponsibleParty_USCOREType *CI_USCOREResponsibleParty)
{
	__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence::CI_USCOREResponsibleParty = CI_USCOREResponsibleParty;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_ResponsibleParty_PropertyType-sequence", "-gmd:CI_ResponsibleParty_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREDateTypeCode)
{
	__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence::CI_USCOREDateTypeCode = CI_USCOREDateTypeCode;
	}
	return _p;
}

inline __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREDateTypeCode)
{
	__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence::CI_USCOREDateTypeCode = CI_USCOREDateTypeCode;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_DateTypeCode_PropertyType-sequence", "-gmd:CI_DateTypeCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREDate_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREDate_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREDate_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREDate_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREDate_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREDate_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREDate_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREDate_USCOREType *CI_USCOREDate)
{
	__gmd__CI_USCOREDate_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREDate_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREDate_USCOREPropertyType_sequence::CI_USCOREDate = CI_USCOREDate;
	}
	return _p;
}

inline __gmd__CI_USCOREDate_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREDate_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREDate_USCOREType *CI_USCOREDate)
{
	__gmd__CI_USCOREDate_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREDate_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREDate_USCOREPropertyType_sequence::CI_USCOREDate = CI_USCOREDate;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREDate_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Date_PropertyType-sequence", "-gmd:CI_Date_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREDate_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREDate_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCORECitation_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCORECitation_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCORECitation_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCORECitation_USCOREPropertyType_sequence * soap_new___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCORECitation_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCORECitation_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCORECitation_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORECitation_USCOREType *CI_USCORECitation)
{
	__gmd__CI_USCORECitation_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORECitation_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORECitation_USCOREPropertyType_sequence::CI_USCORECitation = CI_USCORECitation;
	}
	return _p;
}

inline __gmd__CI_USCORECitation_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCORECitation_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORECitation_USCOREType *CI_USCORECitation)
{
	__gmd__CI_USCORECitation_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORECitation_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORECitation_USCOREPropertyType_sequence::CI_USCORECitation = CI_USCORECitation;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORECitation_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Citation_PropertyType-sequence", "-gmd:CI_Citation_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCORECitation_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCORECitation_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * soap_new___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * soap_new_req___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__MD_USCOREIdentifier_USCOREType *MD_USCOREIdentifier)
{
	__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *_p = soap_new___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence::MD_USCOREIdentifier = MD_USCOREIdentifier;
	}
	return _p;
}

inline __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * soap_new_set___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__MD_USCOREIdentifier_USCOREType *MD_USCOREIdentifier)
{
	__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *_p = soap_new___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence::MD_USCOREIdentifier = MD_USCOREIdentifier;
	}
	return _p;
}

inline int soap_write___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap *soap, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:MD_Identifier_PropertyType-sequence", "-gmd:MD_Identifier_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap *soap, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * soap_new___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * soap_new_req___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__EX_USCOREVerticalExtent_USCOREType *EX_USCOREVerticalExtent)
{
	__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence::EX_USCOREVerticalExtent = EX_USCOREVerticalExtent;
	}
	return _p;
}

inline __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * soap_new_set___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__EX_USCOREVerticalExtent_USCOREType *EX_USCOREVerticalExtent)
{
	__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence::EX_USCOREVerticalExtent = EX_USCOREVerticalExtent;
	}
	return _p;
}

inline int soap_write___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:EX_VerticalExtent_PropertyType-sequence", "-gmd:EX_VerticalExtent_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * soap_new___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * soap_new_req___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__EX_USCORETemporalExtent_USCOREType *EX_USCORETemporalExtent)
{
	__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence::EX_USCORETemporalExtent = EX_USCORETemporalExtent;
	}
	return _p;
}

inline __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * soap_new_set___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__EX_USCORETemporalExtent_USCOREType *EX_USCORETemporalExtent)
{
	__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence::EX_USCORETemporalExtent = EX_USCORETemporalExtent;
	}
	return _p;
}

inline int soap_write___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:EX_TemporalExtent_PropertyType-sequence", "-gmd:EX_TemporalExtent_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * soap_new___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * soap_new_req___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractEX_USCOREGeographicExtent,
	const union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType& union_EX_USCOREGeographicExtent_USCOREPropertyType)
{
	__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence::__unionAbstractEX_USCOREGeographicExtent = __unionAbstractEX_USCOREGeographicExtent;
		_p->__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence::union_EX_USCOREGeographicExtent_USCOREPropertyType = union_EX_USCOREGeographicExtent_USCOREPropertyType;
	}
	return _p;
}

inline __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * soap_new_set___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractEX_USCOREGeographicExtent,
	const union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType& union_EX_USCOREGeographicExtent_USCOREPropertyType)
{
	__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence::__unionAbstractEX_USCOREGeographicExtent = __unionAbstractEX_USCOREGeographicExtent;
		_p->__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence::union_EX_USCOREGeographicExtent_USCOREPropertyType = union_EX_USCOREGeographicExtent_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:EX_GeographicExtent_PropertyType-sequence", "-gmd:EX_GeographicExtent_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__coordinateOperationAccuracy_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__coordinateOperationAccuracy_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__coordinateOperationAccuracy_sequence(struct soap*, const char*, int, const __gml__coordinateOperationAccuracy_sequence *, const char*);
SOAP_FMAC3 __gml__coordinateOperationAccuracy_sequence * SOAP_FMAC4 soap_in___gml__coordinateOperationAccuracy_sequence(struct soap*, const char*, __gml__coordinateOperationAccuracy_sequence *, const char*);
SOAP_FMAC1 __gml__coordinateOperationAccuracy_sequence * SOAP_FMAC2 soap_instantiate___gml__coordinateOperationAccuracy_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__coordinateOperationAccuracy_sequence * soap_new___gml__coordinateOperationAccuracy_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__coordinateOperationAccuracy_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__coordinateOperationAccuracy_sequence * soap_new_req___gml__coordinateOperationAccuracy_sequence(
	struct soap *soap,
	int __unionAbstractDQ_USCOREPositionalAccuracy,
	const union _gml__union_coordinateOperationAccuracy& union_coordinateOperationAccuracy)
{
	__gml__coordinateOperationAccuracy_sequence *_p = soap_new___gml__coordinateOperationAccuracy_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__coordinateOperationAccuracy_sequence::__unionAbstractDQ_USCOREPositionalAccuracy = __unionAbstractDQ_USCOREPositionalAccuracy;
		_p->__gml__coordinateOperationAccuracy_sequence::union_coordinateOperationAccuracy = union_coordinateOperationAccuracy;
	}
	return _p;
}

inline __gml__coordinateOperationAccuracy_sequence * soap_new_set___gml__coordinateOperationAccuracy_sequence(
	struct soap *soap,
	int __unionAbstractDQ_USCOREPositionalAccuracy,
	const union _gml__union_coordinateOperationAccuracy& union_coordinateOperationAccuracy)
{
	__gml__coordinateOperationAccuracy_sequence *_p = soap_new___gml__coordinateOperationAccuracy_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__coordinateOperationAccuracy_sequence::__unionAbstractDQ_USCOREPositionalAccuracy = __unionAbstractDQ_USCOREPositionalAccuracy;
		_p->__gml__coordinateOperationAccuracy_sequence::union_coordinateOperationAccuracy = union_coordinateOperationAccuracy;
	}
	return _p;
}

inline int soap_write___gml__coordinateOperationAccuracy_sequence(struct soap *soap, __gml__coordinateOperationAccuracy_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:coordinateOperationAccuracy-sequence", "-gml:coordinateOperationAccuracy-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__coordinateOperationAccuracy_sequence * SOAP_FMAC4 soap_get___gml__coordinateOperationAccuracy_sequence(struct soap*, __gml__coordinateOperationAccuracy_sequence *, const char*, const char*);

inline int soap_read___gml__coordinateOperationAccuracy_sequence(struct soap *soap, __gml__coordinateOperationAccuracy_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__coordinateOperationAccuracy_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__domainOfValidity_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__domainOfValidity_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__domainOfValidity_sequence(struct soap*, const char*, int, const __gml__domainOfValidity_sequence *, const char*);
SOAP_FMAC3 __gml__domainOfValidity_sequence * SOAP_FMAC4 soap_in___gml__domainOfValidity_sequence(struct soap*, const char*, __gml__domainOfValidity_sequence *, const char*);
SOAP_FMAC1 __gml__domainOfValidity_sequence * SOAP_FMAC2 soap_instantiate___gml__domainOfValidity_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__domainOfValidity_sequence * soap_new___gml__domainOfValidity_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__domainOfValidity_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__domainOfValidity_sequence * soap_new_req___gml__domainOfValidity_sequence(
	struct soap *soap,
	gmd__EX_USCOREExtent_USCOREType *gmd__EX_USCOREExtent)
{
	__gml__domainOfValidity_sequence *_p = soap_new___gml__domainOfValidity_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__domainOfValidity_sequence::gmd__EX_USCOREExtent = gmd__EX_USCOREExtent;
	}
	return _p;
}

inline __gml__domainOfValidity_sequence * soap_new_set___gml__domainOfValidity_sequence(
	struct soap *soap,
	gmd__EX_USCOREExtent_USCOREType *gmd__EX_USCOREExtent)
{
	__gml__domainOfValidity_sequence *_p = soap_new___gml__domainOfValidity_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__domainOfValidity_sequence::gmd__EX_USCOREExtent = gmd__EX_USCOREExtent;
	}
	return _p;
}

inline int soap_write___gml__domainOfValidity_sequence(struct soap *soap, __gml__domainOfValidity_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:domainOfValidity-sequence", "-gml:domainOfValidity-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__domainOfValidity_sequence * SOAP_FMAC4 soap_get___gml__domainOfValidity_sequence(struct soap*, __gml__domainOfValidity_sequence *, const char*, const char*);

inline int soap_read___gml__domainOfValidity_sequence(struct soap *soap, __gml__domainOfValidity_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__domainOfValidity_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalDatumPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalDatumPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__VerticalDatumPropertyType_sequence(struct soap*, const char*, int, const __gml__VerticalDatumPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__VerticalDatumPropertyType_sequence * SOAP_FMAC4 soap_in___gml__VerticalDatumPropertyType_sequence(struct soap*, const char*, __gml__VerticalDatumPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__VerticalDatumPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__VerticalDatumPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__VerticalDatumPropertyType_sequence * soap_new___gml__VerticalDatumPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__VerticalDatumPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__VerticalDatumPropertyType_sequence * soap_new_req___gml__VerticalDatumPropertyType_sequence(
	struct soap *soap,
	gml__VerticalDatumType *VerticalDatum)
{
	__gml__VerticalDatumPropertyType_sequence *_p = soap_new___gml__VerticalDatumPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__VerticalDatumPropertyType_sequence::VerticalDatum = VerticalDatum;
	}
	return _p;
}

inline __gml__VerticalDatumPropertyType_sequence * soap_new_set___gml__VerticalDatumPropertyType_sequence(
	struct soap *soap,
	gml__VerticalDatumType *VerticalDatum)
{
	__gml__VerticalDatumPropertyType_sequence *_p = soap_new___gml__VerticalDatumPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__VerticalDatumPropertyType_sequence::VerticalDatum = VerticalDatum;
	}
	return _p;
}

inline int soap_write___gml__VerticalDatumPropertyType_sequence(struct soap *soap, __gml__VerticalDatumPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:VerticalDatumPropertyType-sequence", "-gml:VerticalDatumPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__VerticalDatumPropertyType_sequence * SOAP_FMAC4 soap_get___gml__VerticalDatumPropertyType_sequence(struct soap*, __gml__VerticalDatumPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__VerticalDatumPropertyType_sequence(struct soap *soap, __gml__VerticalDatumPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__VerticalDatumPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__VerticalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__VerticalCSPropertyType_sequence(struct soap*, const char*, int, const __gml__VerticalCSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__VerticalCSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__VerticalCSPropertyType_sequence(struct soap*, const char*, __gml__VerticalCSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__VerticalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__VerticalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__VerticalCSPropertyType_sequence * soap_new___gml__VerticalCSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__VerticalCSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__VerticalCSPropertyType_sequence * soap_new_req___gml__VerticalCSPropertyType_sequence(
	struct soap *soap,
	gml__VerticalCSType *VerticalCS)
{
	__gml__VerticalCSPropertyType_sequence *_p = soap_new___gml__VerticalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__VerticalCSPropertyType_sequence::VerticalCS = VerticalCS;
	}
	return _p;
}

inline __gml__VerticalCSPropertyType_sequence * soap_new_set___gml__VerticalCSPropertyType_sequence(
	struct soap *soap,
	gml__VerticalCSType *VerticalCS)
{
	__gml__VerticalCSPropertyType_sequence *_p = soap_new___gml__VerticalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__VerticalCSPropertyType_sequence::VerticalCS = VerticalCS;
	}
	return _p;
}

inline int soap_write___gml__VerticalCSPropertyType_sequence(struct soap *soap, __gml__VerticalCSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:VerticalCSPropertyType-sequence", "-gml:VerticalCSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__VerticalCSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__VerticalCSPropertyType_sequence(struct soap*, __gml__VerticalCSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__VerticalCSPropertyType_sequence(struct soap *soap, __gml__VerticalCSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__VerticalCSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticCRSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticCRSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__GeodeticCRSPropertyType_sequence(struct soap*, const char*, int, const __gml__GeodeticCRSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__GeodeticCRSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__GeodeticCRSPropertyType_sequence(struct soap*, const char*, __gml__GeodeticCRSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__GeodeticCRSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeodeticCRSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__GeodeticCRSPropertyType_sequence * soap_new___gml__GeodeticCRSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__GeodeticCRSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__GeodeticCRSPropertyType_sequence * soap_new_req___gml__GeodeticCRSPropertyType_sequence(
	struct soap *soap,
	gml__GeodeticCRSType *GeodeticCRS)
{
	__gml__GeodeticCRSPropertyType_sequence *_p = soap_new___gml__GeodeticCRSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeodeticCRSPropertyType_sequence::GeodeticCRS = GeodeticCRS;
	}
	return _p;
}

inline __gml__GeodeticCRSPropertyType_sequence * soap_new_set___gml__GeodeticCRSPropertyType_sequence(
	struct soap *soap,
	gml__GeodeticCRSType *GeodeticCRS)
{
	__gml__GeodeticCRSPropertyType_sequence *_p = soap_new___gml__GeodeticCRSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeodeticCRSPropertyType_sequence::GeodeticCRS = GeodeticCRS;
	}
	return _p;
}

inline int soap_write___gml__GeodeticCRSPropertyType_sequence(struct soap *soap, __gml__GeodeticCRSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:GeodeticCRSPropertyType-sequence", "-gml:GeodeticCRSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__GeodeticCRSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__GeodeticCRSPropertyType_sequence(struct soap*, __gml__GeodeticCRSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__GeodeticCRSPropertyType_sequence(struct soap *soap, __gml__GeodeticCRSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__GeodeticCRSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CRSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CRSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__CRSPropertyType_sequence(struct soap*, const char*, int, const __gml__CRSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__CRSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__CRSPropertyType_sequence(struct soap*, const char*, __gml__CRSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__CRSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CRSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__CRSPropertyType_sequence * soap_new___gml__CRSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__CRSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__CRSPropertyType_sequence * soap_new_req___gml__CRSPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractCRS,
	const union _gml__union_CRSPropertyType& union_CRSPropertyType)
{
	__gml__CRSPropertyType_sequence *_p = soap_new___gml__CRSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CRSPropertyType_sequence::__unionAbstractCRS = __unionAbstractCRS;
		_p->__gml__CRSPropertyType_sequence::union_CRSPropertyType = union_CRSPropertyType;
	}
	return _p;
}

inline __gml__CRSPropertyType_sequence * soap_new_set___gml__CRSPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractCRS,
	const union _gml__union_CRSPropertyType& union_CRSPropertyType)
{
	__gml__CRSPropertyType_sequence *_p = soap_new___gml__CRSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CRSPropertyType_sequence::__unionAbstractCRS = __unionAbstractCRS;
		_p->__gml__CRSPropertyType_sequence::union_CRSPropertyType = union_CRSPropertyType;
	}
	return _p;
}

inline int soap_write___gml__CRSPropertyType_sequence(struct soap *soap, __gml__CRSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:CRSPropertyType-sequence", "-gml:CRSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__CRSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__CRSPropertyType_sequence(struct soap*, __gml__CRSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__CRSPropertyType_sequence(struct soap *soap, __gml__CRSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__CRSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeneralConversionPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeneralConversionPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__GeneralConversionPropertyType_sequence(struct soap*, const char*, int, const __gml__GeneralConversionPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__GeneralConversionPropertyType_sequence * SOAP_FMAC4 soap_in___gml__GeneralConversionPropertyType_sequence(struct soap*, const char*, __gml__GeneralConversionPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__GeneralConversionPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeneralConversionPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__GeneralConversionPropertyType_sequence * soap_new___gml__GeneralConversionPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__GeneralConversionPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__GeneralConversionPropertyType_sequence * soap_new_req___gml__GeneralConversionPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractGeneralConversion,
	const union _gml__union_GeneralConversionPropertyType& union_GeneralConversionPropertyType)
{
	__gml__GeneralConversionPropertyType_sequence *_p = soap_new___gml__GeneralConversionPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeneralConversionPropertyType_sequence::__unionAbstractGeneralConversion = __unionAbstractGeneralConversion;
		_p->__gml__GeneralConversionPropertyType_sequence::union_GeneralConversionPropertyType = union_GeneralConversionPropertyType;
	}
	return _p;
}

inline __gml__GeneralConversionPropertyType_sequence * soap_new_set___gml__GeneralConversionPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractGeneralConversion,
	const union _gml__union_GeneralConversionPropertyType& union_GeneralConversionPropertyType)
{
	__gml__GeneralConversionPropertyType_sequence *_p = soap_new___gml__GeneralConversionPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeneralConversionPropertyType_sequence::__unionAbstractGeneralConversion = __unionAbstractGeneralConversion;
		_p->__gml__GeneralConversionPropertyType_sequence::union_GeneralConversionPropertyType = union_GeneralConversionPropertyType;
	}
	return _p;
}

inline int soap_write___gml__GeneralConversionPropertyType_sequence(struct soap *soap, __gml__GeneralConversionPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:GeneralConversionPropertyType-sequence", "-gml:GeneralConversionPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__GeneralConversionPropertyType_sequence * SOAP_FMAC4 soap_get___gml__GeneralConversionPropertyType_sequence(struct soap*, __gml__GeneralConversionPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__GeneralConversionPropertyType_sequence(struct soap *soap, __gml__GeneralConversionPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__GeneralConversionPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__EllipsoidPropertyType_sequence(struct soap*, const char*, int, const __gml__EllipsoidPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__EllipsoidPropertyType_sequence * SOAP_FMAC4 soap_in___gml__EllipsoidPropertyType_sequence(struct soap*, const char*, __gml__EllipsoidPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__EllipsoidPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__EllipsoidPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__EllipsoidPropertyType_sequence * soap_new___gml__EllipsoidPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__EllipsoidPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__EllipsoidPropertyType_sequence * soap_new_req___gml__EllipsoidPropertyType_sequence(
	struct soap *soap,
	gml__EllipsoidType *Ellipsoid)
{
	__gml__EllipsoidPropertyType_sequence *_p = soap_new___gml__EllipsoidPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__EllipsoidPropertyType_sequence::Ellipsoid = Ellipsoid;
	}
	return _p;
}

inline __gml__EllipsoidPropertyType_sequence * soap_new_set___gml__EllipsoidPropertyType_sequence(
	struct soap *soap,
	gml__EllipsoidType *Ellipsoid)
{
	__gml__EllipsoidPropertyType_sequence *_p = soap_new___gml__EllipsoidPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__EllipsoidPropertyType_sequence::Ellipsoid = Ellipsoid;
	}
	return _p;
}

inline int soap_write___gml__EllipsoidPropertyType_sequence(struct soap *soap, __gml__EllipsoidPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:EllipsoidPropertyType-sequence", "-gml:EllipsoidPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__EllipsoidPropertyType_sequence * SOAP_FMAC4 soap_get___gml__EllipsoidPropertyType_sequence(struct soap*, __gml__EllipsoidPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__EllipsoidPropertyType_sequence(struct soap *soap, __gml__EllipsoidPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__EllipsoidPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__PrimeMeridianPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__PrimeMeridianPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__PrimeMeridianPropertyType_sequence(struct soap*, const char*, int, const __gml__PrimeMeridianPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__PrimeMeridianPropertyType_sequence * SOAP_FMAC4 soap_in___gml__PrimeMeridianPropertyType_sequence(struct soap*, const char*, __gml__PrimeMeridianPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__PrimeMeridianPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__PrimeMeridianPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__PrimeMeridianPropertyType_sequence * soap_new___gml__PrimeMeridianPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__PrimeMeridianPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__PrimeMeridianPropertyType_sequence * soap_new_req___gml__PrimeMeridianPropertyType_sequence(
	struct soap *soap,
	gml__PrimeMeridianType *PrimeMeridian)
{
	__gml__PrimeMeridianPropertyType_sequence *_p = soap_new___gml__PrimeMeridianPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__PrimeMeridianPropertyType_sequence::PrimeMeridian = PrimeMeridian;
	}
	return _p;
}

inline __gml__PrimeMeridianPropertyType_sequence * soap_new_set___gml__PrimeMeridianPropertyType_sequence(
	struct soap *soap,
	gml__PrimeMeridianType *PrimeMeridian)
{
	__gml__PrimeMeridianPropertyType_sequence *_p = soap_new___gml__PrimeMeridianPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__PrimeMeridianPropertyType_sequence::PrimeMeridian = PrimeMeridian;
	}
	return _p;
}

inline int soap_write___gml__PrimeMeridianPropertyType_sequence(struct soap *soap, __gml__PrimeMeridianPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:PrimeMeridianPropertyType-sequence", "-gml:PrimeMeridianPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__PrimeMeridianPropertyType_sequence * SOAP_FMAC4 soap_get___gml__PrimeMeridianPropertyType_sequence(struct soap*, __gml__PrimeMeridianPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__PrimeMeridianPropertyType_sequence(struct soap *soap, __gml__PrimeMeridianPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__PrimeMeridianPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticDatumPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__GeodeticDatumPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__GeodeticDatumPropertyType_sequence(struct soap*, const char*, int, const __gml__GeodeticDatumPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__GeodeticDatumPropertyType_sequence * SOAP_FMAC4 soap_in___gml__GeodeticDatumPropertyType_sequence(struct soap*, const char*, __gml__GeodeticDatumPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__GeodeticDatumPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeodeticDatumPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__GeodeticDatumPropertyType_sequence * soap_new___gml__GeodeticDatumPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__GeodeticDatumPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__GeodeticDatumPropertyType_sequence * soap_new_req___gml__GeodeticDatumPropertyType_sequence(
	struct soap *soap,
	gml__GeodeticDatumType *GeodeticDatum)
{
	__gml__GeodeticDatumPropertyType_sequence *_p = soap_new___gml__GeodeticDatumPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeodeticDatumPropertyType_sequence::GeodeticDatum = GeodeticDatum;
	}
	return _p;
}

inline __gml__GeodeticDatumPropertyType_sequence * soap_new_set___gml__GeodeticDatumPropertyType_sequence(
	struct soap *soap,
	gml__GeodeticDatumType *GeodeticDatum)
{
	__gml__GeodeticDatumPropertyType_sequence *_p = soap_new___gml__GeodeticDatumPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeodeticDatumPropertyType_sequence::GeodeticDatum = GeodeticDatum;
	}
	return _p;
}

inline int soap_write___gml__GeodeticDatumPropertyType_sequence(struct soap *soap, __gml__GeodeticDatumPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:GeodeticDatumPropertyType-sequence", "-gml:GeodeticDatumPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__GeodeticDatumPropertyType_sequence * SOAP_FMAC4 soap_get___gml__GeodeticDatumPropertyType_sequence(struct soap*, __gml__GeodeticDatumPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__GeodeticDatumPropertyType_sequence(struct soap *soap, __gml__GeodeticDatumPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__GeodeticDatumPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__SphericalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__SphericalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__SphericalCSPropertyType_sequence(struct soap*, const char*, int, const __gml__SphericalCSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__SphericalCSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__SphericalCSPropertyType_sequence(struct soap*, const char*, __gml__SphericalCSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__SphericalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__SphericalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__SphericalCSPropertyType_sequence * soap_new___gml__SphericalCSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__SphericalCSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__SphericalCSPropertyType_sequence * soap_new_req___gml__SphericalCSPropertyType_sequence(
	struct soap *soap,
	gml__SphericalCSType *SphericalCS)
{
	__gml__SphericalCSPropertyType_sequence *_p = soap_new___gml__SphericalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__SphericalCSPropertyType_sequence::SphericalCS = SphericalCS;
	}
	return _p;
}

inline __gml__SphericalCSPropertyType_sequence * soap_new_set___gml__SphericalCSPropertyType_sequence(
	struct soap *soap,
	gml__SphericalCSType *SphericalCS)
{
	__gml__SphericalCSPropertyType_sequence *_p = soap_new___gml__SphericalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__SphericalCSPropertyType_sequence::SphericalCS = SphericalCS;
	}
	return _p;
}

inline int soap_write___gml__SphericalCSPropertyType_sequence(struct soap *soap, __gml__SphericalCSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:SphericalCSPropertyType-sequence", "-gml:SphericalCSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__SphericalCSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__SphericalCSPropertyType_sequence(struct soap*, __gml__SphericalCSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__SphericalCSPropertyType_sequence(struct soap *soap, __gml__SphericalCSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__SphericalCSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CartesianCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CartesianCSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__CartesianCSPropertyType_sequence(struct soap*, const char*, int, const __gml__CartesianCSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__CartesianCSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__CartesianCSPropertyType_sequence(struct soap*, const char*, __gml__CartesianCSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__CartesianCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CartesianCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__CartesianCSPropertyType_sequence * soap_new___gml__CartesianCSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__CartesianCSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__CartesianCSPropertyType_sequence * soap_new_req___gml__CartesianCSPropertyType_sequence(
	struct soap *soap,
	gml__CartesianCSType *CartesianCS)
{
	__gml__CartesianCSPropertyType_sequence *_p = soap_new___gml__CartesianCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CartesianCSPropertyType_sequence::CartesianCS = CartesianCS;
	}
	return _p;
}

inline __gml__CartesianCSPropertyType_sequence * soap_new_set___gml__CartesianCSPropertyType_sequence(
	struct soap *soap,
	gml__CartesianCSType *CartesianCS)
{
	__gml__CartesianCSPropertyType_sequence *_p = soap_new___gml__CartesianCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CartesianCSPropertyType_sequence::CartesianCS = CartesianCS;
	}
	return _p;
}

inline int soap_write___gml__CartesianCSPropertyType_sequence(struct soap *soap, __gml__CartesianCSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:CartesianCSPropertyType-sequence", "-gml:CartesianCSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__CartesianCSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__CartesianCSPropertyType_sequence(struct soap*, __gml__CartesianCSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__CartesianCSPropertyType_sequence(struct soap *soap, __gml__CartesianCSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__CartesianCSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CoordinateSystemAxisPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__CoordinateSystemAxisPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, const char*, int, const __gml__CoordinateSystemAxisPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__CoordinateSystemAxisPropertyType_sequence * SOAP_FMAC4 soap_in___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, const char*, __gml__CoordinateSystemAxisPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__CoordinateSystemAxisPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__CoordinateSystemAxisPropertyType_sequence * soap_new___gml__CoordinateSystemAxisPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__CoordinateSystemAxisPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__CoordinateSystemAxisPropertyType_sequence * soap_new_req___gml__CoordinateSystemAxisPropertyType_sequence(
	struct soap *soap,
	gml__CoordinateSystemAxisType *CoordinateSystemAxis)
{
	__gml__CoordinateSystemAxisPropertyType_sequence *_p = soap_new___gml__CoordinateSystemAxisPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CoordinateSystemAxisPropertyType_sequence::CoordinateSystemAxis = CoordinateSystemAxis;
	}
	return _p;
}

inline __gml__CoordinateSystemAxisPropertyType_sequence * soap_new_set___gml__CoordinateSystemAxisPropertyType_sequence(
	struct soap *soap,
	gml__CoordinateSystemAxisType *CoordinateSystemAxis)
{
	__gml__CoordinateSystemAxisPropertyType_sequence *_p = soap_new___gml__CoordinateSystemAxisPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CoordinateSystemAxisPropertyType_sequence::CoordinateSystemAxis = CoordinateSystemAxis;
	}
	return _p;
}

inline int soap_write___gml__CoordinateSystemAxisPropertyType_sequence(struct soap *soap, __gml__CoordinateSystemAxisPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:CoordinateSystemAxisPropertyType-sequence", "-gml:CoordinateSystemAxisPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__CoordinateSystemAxisPropertyType_sequence * SOAP_FMAC4 soap_get___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, __gml__CoordinateSystemAxisPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__CoordinateSystemAxisPropertyType_sequence(struct soap *soap, __gml__CoordinateSystemAxisPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__CoordinateSystemAxisPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__EllipsoidalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__EllipsoidalCSPropertyType_sequence(struct soap*, const char*, int, const __gml__EllipsoidalCSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__EllipsoidalCSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__EllipsoidalCSPropertyType_sequence(struct soap*, const char*, __gml__EllipsoidalCSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__EllipsoidalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__EllipsoidalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__EllipsoidalCSPropertyType_sequence * soap_new___gml__EllipsoidalCSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__EllipsoidalCSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__EllipsoidalCSPropertyType_sequence * soap_new_req___gml__EllipsoidalCSPropertyType_sequence(
	struct soap *soap,
	gml__EllipsoidalCSType *EllipsoidalCS)
{
	__gml__EllipsoidalCSPropertyType_sequence *_p = soap_new___gml__EllipsoidalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__EllipsoidalCSPropertyType_sequence::EllipsoidalCS = EllipsoidalCS;
	}
	return _p;
}

inline __gml__EllipsoidalCSPropertyType_sequence * soap_new_set___gml__EllipsoidalCSPropertyType_sequence(
	struct soap *soap,
	gml__EllipsoidalCSType *EllipsoidalCS)
{
	__gml__EllipsoidalCSPropertyType_sequence *_p = soap_new___gml__EllipsoidalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__EllipsoidalCSPropertyType_sequence::EllipsoidalCS = EllipsoidalCS;
	}
	return _p;
}

inline int soap_write___gml__EllipsoidalCSPropertyType_sequence(struct soap *soap, __gml__EllipsoidalCSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:EllipsoidalCSPropertyType-sequence", "-gml:EllipsoidalCSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__EllipsoidalCSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__EllipsoidalCSPropertyType_sequence(struct soap*, __gml__EllipsoidalCSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__EllipsoidalCSPropertyType_sequence(struct soap *soap, __gml__EllipsoidalCSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__EllipsoidalCSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___gml__TimePrimitivePropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___gml__TimePrimitivePropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__TimePrimitivePropertyType_sequence(struct soap*, const char*, int, const __gml__TimePrimitivePropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__TimePrimitivePropertyType_sequence * SOAP_FMAC4 soap_in___gml__TimePrimitivePropertyType_sequence(struct soap*, const char*, __gml__TimePrimitivePropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__TimePrimitivePropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__TimePrimitivePropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__TimePrimitivePropertyType_sequence * soap_new___gml__TimePrimitivePropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__TimePrimitivePropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__TimePrimitivePropertyType_sequence * soap_new_req___gml__TimePrimitivePropertyType_sequence(
	struct soap *soap,
	int __unionAbstractTimePrimitive,
	const union _gml__union_TimePrimitivePropertyType& union_TimePrimitivePropertyType)
{
	__gml__TimePrimitivePropertyType_sequence *_p = soap_new___gml__TimePrimitivePropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__TimePrimitivePropertyType_sequence::__unionAbstractTimePrimitive = __unionAbstractTimePrimitive;
		_p->__gml__TimePrimitivePropertyType_sequence::union_TimePrimitivePropertyType = union_TimePrimitivePropertyType;
	}
	return _p;
}

inline __gml__TimePrimitivePropertyType_sequence * soap_new_set___gml__TimePrimitivePropertyType_sequence(
	struct soap *soap,
	int __unionAbstractTimePrimitive,
	const union _gml__union_TimePrimitivePropertyType& union_TimePrimitivePropertyType)
{
	__gml__TimePrimitivePropertyType_sequence *_p = soap_new___gml__TimePrimitivePropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__TimePrimitivePropertyType_sequence::__unionAbstractTimePrimitive = __unionAbstractTimePrimitive;
		_p->__gml__TimePrimitivePropertyType_sequence::union_TimePrimitivePropertyType = union_TimePrimitivePropertyType;
	}
	return _p;
}

inline int soap_write___gml__TimePrimitivePropertyType_sequence(struct soap *soap, __gml__TimePrimitivePropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:TimePrimitivePropertyType-sequence", "-gml:TimePrimitivePropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__TimePrimitivePropertyType_sequence * SOAP_FMAC4 soap_get___gml__TimePrimitivePropertyType_sequence(struct soap*, __gml__TimePrimitivePropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__TimePrimitivePropertyType_sequence(struct soap *soap, __gml__TimePrimitivePropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__TimePrimitivePropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREcoordinateReferenceSystem_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREcoordinateReferenceSystem_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, const char*, int, const __witsml1__obj_USCOREcoordinateReferenceSystem_sequence *, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREcoordinateReferenceSystem_sequence * SOAP_FMAC4 soap_in___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, const char*, __witsml1__obj_USCOREcoordinateReferenceSystem_sequence *, const char*);
SOAP_FMAC1 __witsml1__obj_USCOREcoordinateReferenceSystem_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __witsml1__obj_USCOREcoordinateReferenceSystem_sequence * soap_new___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(soap, n, NULL, NULL, NULL);
}

inline __witsml1__obj_USCOREcoordinateReferenceSystem_sequence * soap_new_req___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(
	struct soap *soap,
	int __union_obj_USCOREcoordinateReferenceSystem,
	const union _witsml1__union_obj_USCOREcoordinateReferenceSystem& union_obj_USCOREcoordinateReferenceSystem)
{
	__witsml1__obj_USCOREcoordinateReferenceSystem_sequence *_p = soap_new___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCOREcoordinateReferenceSystem_sequence::__union_obj_USCOREcoordinateReferenceSystem = __union_obj_USCOREcoordinateReferenceSystem;
		_p->__witsml1__obj_USCOREcoordinateReferenceSystem_sequence::union_obj_USCOREcoordinateReferenceSystem = union_obj_USCOREcoordinateReferenceSystem;
	}
	return _p;
}

inline __witsml1__obj_USCOREcoordinateReferenceSystem_sequence * soap_new_set___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(
	struct soap *soap,
	int __union_obj_USCOREcoordinateReferenceSystem,
	const union _witsml1__union_obj_USCOREcoordinateReferenceSystem& union_obj_USCOREcoordinateReferenceSystem)
{
	__witsml1__obj_USCOREcoordinateReferenceSystem_sequence *_p = soap_new___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCOREcoordinateReferenceSystem_sequence::__union_obj_USCOREcoordinateReferenceSystem = __union_obj_USCOREcoordinateReferenceSystem;
		_p->__witsml1__obj_USCOREcoordinateReferenceSystem_sequence::union_obj_USCOREcoordinateReferenceSystem = union_obj_USCOREcoordinateReferenceSystem;
	}
	return _p;
}

inline int soap_write___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap *soap, __witsml1__obj_USCOREcoordinateReferenceSystem_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-witsml1:obj_coordinateReferenceSystem-sequence", "-witsml1:obj_coordinateReferenceSystem-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __witsml1__obj_USCOREcoordinateReferenceSystem_sequence * SOAP_FMAC4 soap_get___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, __witsml1__obj_USCOREcoordinateReferenceSystem_sequence *, const char*, const char*);

inline int soap_read___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap *soap, __witsml1__obj_USCOREcoordinateReferenceSystem_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___witsml1__obj_USCOREcoordinateReferenceSystem_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREformationMarker_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREformationMarker_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___witsml1__obj_USCOREformationMarker_sequence(struct soap*, const char*, int, const __witsml1__obj_USCOREformationMarker_sequence *, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREformationMarker_sequence * SOAP_FMAC4 soap_in___witsml1__obj_USCOREformationMarker_sequence(struct soap*, const char*, __witsml1__obj_USCOREformationMarker_sequence *, const char*);
SOAP_FMAC1 __witsml1__obj_USCOREformationMarker_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREformationMarker_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __witsml1__obj_USCOREformationMarker_sequence * soap_new___witsml1__obj_USCOREformationMarker_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___witsml1__obj_USCOREformationMarker_sequence(soap, n, NULL, NULL, NULL);
}

inline __witsml1__obj_USCOREformationMarker_sequence * soap_new_req___witsml1__obj_USCOREformationMarker_sequence(
	struct soap *soap,
	witsml1__measuredDepthCoord *mdTopSample)
{
	__witsml1__obj_USCOREformationMarker_sequence *_p = soap_new___witsml1__obj_USCOREformationMarker_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCOREformationMarker_sequence::mdTopSample = mdTopSample;
	}
	return _p;
}

inline __witsml1__obj_USCOREformationMarker_sequence * soap_new_set___witsml1__obj_USCOREformationMarker_sequence(
	struct soap *soap,
	witsml1__measuredDepthCoord *mdPrognosed,
	witsml1__wellVerticalDepthCoord *tvdPrognosed,
	witsml1__measuredDepthCoord *mdTopSample,
	witsml1__wellVerticalDepthCoord *tvdTopSample,
	witsml1__lengthMeasure *thicknessBed,
	witsml1__lengthMeasure *thicknessApparent,
	witsml1__lengthMeasure *thicknessPerpen,
	witsml1__measuredDepthCoord *mdLogSample,
	witsml1__wellVerticalDepthCoord *tvdLogSample,
	witsml1__planeAngleMeasure *dip,
	witsml1__planeAngleMeasure *dipDirection,
	witsml1__lithostratigraphyStruct *lithostratigraphic,
	witsml1__chronostratigraphyStruct *chronostratigraphic,
	std::string *nameFormation,
	std::string *description)
{
	__witsml1__obj_USCOREformationMarker_sequence *_p = soap_new___witsml1__obj_USCOREformationMarker_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCOREformationMarker_sequence::mdPrognosed = mdPrognosed;
		_p->__witsml1__obj_USCOREformationMarker_sequence::tvdPrognosed = tvdPrognosed;
		_p->__witsml1__obj_USCOREformationMarker_sequence::mdTopSample = mdTopSample;
		_p->__witsml1__obj_USCOREformationMarker_sequence::tvdTopSample = tvdTopSample;
		_p->__witsml1__obj_USCOREformationMarker_sequence::thicknessBed = thicknessBed;
		_p->__witsml1__obj_USCOREformationMarker_sequence::thicknessApparent = thicknessApparent;
		_p->__witsml1__obj_USCOREformationMarker_sequence::thicknessPerpen = thicknessPerpen;
		_p->__witsml1__obj_USCOREformationMarker_sequence::mdLogSample = mdLogSample;
		_p->__witsml1__obj_USCOREformationMarker_sequence::tvdLogSample = tvdLogSample;
		_p->__witsml1__obj_USCOREformationMarker_sequence::dip = dip;
		_p->__witsml1__obj_USCOREformationMarker_sequence::dipDirection = dipDirection;
		_p->__witsml1__obj_USCOREformationMarker_sequence::lithostratigraphic = lithostratigraphic;
		_p->__witsml1__obj_USCOREformationMarker_sequence::chronostratigraphic = chronostratigraphic;
		_p->__witsml1__obj_USCOREformationMarker_sequence::nameFormation = nameFormation;
		_p->__witsml1__obj_USCOREformationMarker_sequence::description = description;
	}
	return _p;
}

inline int soap_write___witsml1__obj_USCOREformationMarker_sequence(struct soap *soap, __witsml1__obj_USCOREformationMarker_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-witsml1:obj_formationMarker-sequence", "-witsml1:obj_formationMarker-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __witsml1__obj_USCOREformationMarker_sequence * SOAP_FMAC4 soap_get___witsml1__obj_USCOREformationMarker_sequence(struct soap*, __witsml1__obj_USCOREformationMarker_sequence *, const char*, const char*);

inline int soap_read___witsml1__obj_USCOREformationMarker_sequence(struct soap *soap, __witsml1__obj_USCOREformationMarker_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___witsml1__obj_USCOREformationMarker_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCORElog_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCORElog_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___witsml1__obj_USCORElog_sequence(struct soap*, const char*, int, const __witsml1__obj_USCORElog_sequence *, const char*);
SOAP_FMAC3 __witsml1__obj_USCORElog_sequence * SOAP_FMAC4 soap_in___witsml1__obj_USCORElog_sequence(struct soap*, const char*, __witsml1__obj_USCORElog_sequence *, const char*);
SOAP_FMAC1 __witsml1__obj_USCORElog_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCORElog_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __witsml1__obj_USCORElog_sequence * soap_new___witsml1__obj_USCORElog_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___witsml1__obj_USCORElog_sequence(soap, n, NULL, NULL, NULL);
}

inline __witsml1__obj_USCORElog_sequence * soap_new_req___witsml1__obj_USCORElog_sequence(
	struct soap *soap,
	enum witsml1__LogIndexType indexType,
	const std::string& indexCurve)
{
	__witsml1__obj_USCORElog_sequence *_p = soap_new___witsml1__obj_USCORElog_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCORElog_sequence::indexType = indexType;
		_p->__witsml1__obj_USCORElog_sequence::indexCurve = indexCurve;
	}
	return _p;
}

inline __witsml1__obj_USCORElog_sequence * soap_new_set___witsml1__obj_USCORElog_sequence(
	struct soap *soap,
	bool *objectGrowing,
	int *dataUpateRate,
	bool *curveSensorsAligned,
	std::string *dataGroup,
	std::string *serviceCompany,
	std::string *runNumber,
	short *bhaRunNumber,
	std::string *pass,
	time_t *creationDate,
	std::string *description,
	std::string *dataDelimiter,
	enum witsml1__LogIndexType indexType,
	witsml1__genericMeasure *startIndex,
	witsml1__genericMeasure *endIndex,
	witsml1__ratioGenericMeasure *stepIncrement,
	time_t *startDateTimeIndex,
	time_t *endDateTimeIndex,
	enum witsml1__LogIndexDirection *direction,
	const std::string& indexCurve,
	std::string *nullValue,
	const std::vector<witsml1__indexedObject *> & logParam,
	const std::vector<witsml1__cs_USCORElogCurveInfo *> & logCurveInfo,
	const std::vector<witsml1__cs_USCORElogData *> & logData)
{
	__witsml1__obj_USCORElog_sequence *_p = soap_new___witsml1__obj_USCORElog_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCORElog_sequence::objectGrowing = objectGrowing;
		_p->__witsml1__obj_USCORElog_sequence::dataUpateRate = dataUpateRate;
		_p->__witsml1__obj_USCORElog_sequence::curveSensorsAligned = curveSensorsAligned;
		_p->__witsml1__obj_USCORElog_sequence::dataGroup = dataGroup;
		_p->__witsml1__obj_USCORElog_sequence::serviceCompany = serviceCompany;
		_p->__witsml1__obj_USCORElog_sequence::runNumber = runNumber;
		_p->__witsml1__obj_USCORElog_sequence::bhaRunNumber = bhaRunNumber;
		_p->__witsml1__obj_USCORElog_sequence::pass = pass;
		_p->__witsml1__obj_USCORElog_sequence::creationDate = creationDate;
		_p->__witsml1__obj_USCORElog_sequence::description = description;
		_p->__witsml1__obj_USCORElog_sequence::dataDelimiter = dataDelimiter;
		_p->__witsml1__obj_USCORElog_sequence::indexType = indexType;
		_p->__witsml1__obj_USCORElog_sequence::startIndex = startIndex;
		_p->__witsml1__obj_USCORElog_sequence::endIndex = endIndex;
		_p->__witsml1__obj_USCORElog_sequence::stepIncrement = stepIncrement;
		_p->__witsml1__obj_USCORElog_sequence::startDateTimeIndex = startDateTimeIndex;
		_p->__witsml1__obj_USCORElog_sequence::endDateTimeIndex = endDateTimeIndex;
		_p->__witsml1__obj_USCORElog_sequence::direction = direction;
		_p->__witsml1__obj_USCORElog_sequence::indexCurve = indexCurve;
		_p->__witsml1__obj_USCORElog_sequence::nullValue = nullValue;
		_p->__witsml1__obj_USCORElog_sequence::logParam = logParam;
		_p->__witsml1__obj_USCORElog_sequence::logCurveInfo = logCurveInfo;
		_p->__witsml1__obj_USCORElog_sequence::logData = logData;
	}
	return _p;
}

inline int soap_write___witsml1__obj_USCORElog_sequence(struct soap *soap, __witsml1__obj_USCORElog_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-witsml1:obj_log-sequence", "-witsml1:obj_log-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __witsml1__obj_USCORElog_sequence * SOAP_FMAC4 soap_get___witsml1__obj_USCORElog_sequence(struct soap*, __witsml1__obj_USCORElog_sequence *, const char*, const char*);

inline int soap_read___witsml1__obj_USCORElog_sequence(struct soap *soap, __witsml1__obj_USCORElog_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___witsml1__obj_USCORElog_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREtrajectory_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREtrajectory_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___witsml1__obj_USCOREtrajectory_sequence(struct soap*, const char*, int, const __witsml1__obj_USCOREtrajectory_sequence *, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREtrajectory_sequence * SOAP_FMAC4 soap_in___witsml1__obj_USCOREtrajectory_sequence(struct soap*, const char*, __witsml1__obj_USCOREtrajectory_sequence *, const char*);
SOAP_FMAC1 __witsml1__obj_USCOREtrajectory_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREtrajectory_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __witsml1__obj_USCOREtrajectory_sequence * soap_new___witsml1__obj_USCOREtrajectory_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___witsml1__obj_USCOREtrajectory_sequence(soap, n, NULL, NULL, NULL);
}

inline __witsml1__obj_USCOREtrajectory_sequence * soap_new_req___witsml1__obj_USCOREtrajectory_sequence(
	struct soap *soap)
{
	__witsml1__obj_USCOREtrajectory_sequence *_p = soap_new___witsml1__obj_USCOREtrajectory_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline __witsml1__obj_USCOREtrajectory_sequence * soap_new_set___witsml1__obj_USCOREtrajectory_sequence(
	struct soap *soap,
	bool *objectGrowing,
	witsml1__cs_USCORErefWellboreTrajectory *parentTrajectory,
	time_t *dTimTrajStart,
	time_t *dTimTrajEnd,
	witsml1__measuredDepthCoord *mdMn,
	witsml1__measuredDepthCoord *mdMx,
	std::string *serviceCompany,
	witsml1__planeAngleMeasure *magDeclUsed,
	witsml1__planeAngleMeasure *gridCorUsed,
	witsml1__planeAngleMeasure *gridConUsed,
	witsml1__planeAngleMeasure *aziVertSect,
	witsml1__lengthMeasure *dispNsVertSectOrig,
	witsml1__lengthMeasure *dispEwVertSectOrig,
	bool *definitive,
	bool *memory,
	bool *finalTraj,
	enum witsml1__AziRef *aziRef,
	const std::vector<witsml1__cs_USCOREtrajectoryStation *> & trajectoryStation)
{
	__witsml1__obj_USCOREtrajectory_sequence *_p = soap_new___witsml1__obj_USCOREtrajectory_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCOREtrajectory_sequence::objectGrowing = objectGrowing;
		_p->__witsml1__obj_USCOREtrajectory_sequence::parentTrajectory = parentTrajectory;
		_p->__witsml1__obj_USCOREtrajectory_sequence::dTimTrajStart = dTimTrajStart;
		_p->__witsml1__obj_USCOREtrajectory_sequence::dTimTrajEnd = dTimTrajEnd;
		_p->__witsml1__obj_USCOREtrajectory_sequence::mdMn = mdMn;
		_p->__witsml1__obj_USCOREtrajectory_sequence::mdMx = mdMx;
		_p->__witsml1__obj_USCOREtrajectory_sequence::serviceCompany = serviceCompany;
		_p->__witsml1__obj_USCOREtrajectory_sequence::magDeclUsed = magDeclUsed;
		_p->__witsml1__obj_USCOREtrajectory_sequence::gridCorUsed = gridCorUsed;
		_p->__witsml1__obj_USCOREtrajectory_sequence::gridConUsed = gridConUsed;
		_p->__witsml1__obj_USCOREtrajectory_sequence::aziVertSect = aziVertSect;
		_p->__witsml1__obj_USCOREtrajectory_sequence::dispNsVertSectOrig = dispNsVertSectOrig;
		_p->__witsml1__obj_USCOREtrajectory_sequence::dispEwVertSectOrig = dispEwVertSectOrig;
		_p->__witsml1__obj_USCOREtrajectory_sequence::definitive = definitive;
		_p->__witsml1__obj_USCOREtrajectory_sequence::memory = memory;
		_p->__witsml1__obj_USCOREtrajectory_sequence::finalTraj = finalTraj;
		_p->__witsml1__obj_USCOREtrajectory_sequence::aziRef = aziRef;
		_p->__witsml1__obj_USCOREtrajectory_sequence::trajectoryStation = trajectoryStation;
	}
	return _p;
}

inline int soap_write___witsml1__obj_USCOREtrajectory_sequence(struct soap *soap, __witsml1__obj_USCOREtrajectory_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-witsml1:obj_trajectory-sequence", "-witsml1:obj_trajectory-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __witsml1__obj_USCOREtrajectory_sequence * SOAP_FMAC4 soap_get___witsml1__obj_USCOREtrajectory_sequence(struct soap*, __witsml1__obj_USCOREtrajectory_sequence *, const char*, const char*);

inline int soap_read___witsml1__obj_USCOREtrajectory_sequence(struct soap *soap, __witsml1__obj_USCOREtrajectory_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___witsml1__obj_USCOREtrajectory_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwellbore_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwellbore_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___witsml1__obj_USCOREwellbore_sequence(struct soap*, const char*, int, const __witsml1__obj_USCOREwellbore_sequence *, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREwellbore_sequence * SOAP_FMAC4 soap_in___witsml1__obj_USCOREwellbore_sequence(struct soap*, const char*, __witsml1__obj_USCOREwellbore_sequence *, const char*);
SOAP_FMAC1 __witsml1__obj_USCOREwellbore_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREwellbore_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __witsml1__obj_USCOREwellbore_sequence * soap_new___witsml1__obj_USCOREwellbore_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___witsml1__obj_USCOREwellbore_sequence(soap, n, NULL, NULL, NULL);
}

inline __witsml1__obj_USCOREwellbore_sequence * soap_new_req___witsml1__obj_USCOREwellbore_sequence(
	struct soap *soap)
{
	__witsml1__obj_USCOREwellbore_sequence *_p = soap_new___witsml1__obj_USCOREwellbore_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline __witsml1__obj_USCOREwellbore_sequence * soap_new_set___witsml1__obj_USCOREwellbore_sequence(
	struct soap *soap,
	witsml1__refNameString *parentWellbore,
	std::string *number,
	std::string *suffixAPI,
	std::string *numGovt,
	enum witsml1__WellStatus *statusWellbore,
	bool *isActive,
	enum witsml1__WellPurpose *purposeWellbore,
	enum witsml1__WellboreType *typeWellbore,
	enum witsml1__WellboreShape *shape,
	time_t *dTimKickoff,
	bool *achievedTD,
	witsml1__measuredDepthCoord *md,
	witsml1__wellVerticalDepthCoord *tvd,
	witsml1__measuredDepthCoord *mdBit,
	witsml1__wellVerticalDepthCoord *tvdBit,
	witsml1__measuredDepthCoord *mdKickoff,
	witsml1__wellVerticalDepthCoord *tvdKickoff,
	witsml1__measuredDepthCoord *mdPlanned,
	witsml1__wellVerticalDepthCoord *tvdPlanned,
	witsml1__measuredDepthCoord *mdSubSeaPlanned,
	witsml1__wellVerticalDepthCoord *tvdSubSeaPlanned,
	witsml1__timeMeasure *dayTarget)
{
	__witsml1__obj_USCOREwellbore_sequence *_p = soap_new___witsml1__obj_USCOREwellbore_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCOREwellbore_sequence::parentWellbore = parentWellbore;
		_p->__witsml1__obj_USCOREwellbore_sequence::number = number;
		_p->__witsml1__obj_USCOREwellbore_sequence::suffixAPI = suffixAPI;
		_p->__witsml1__obj_USCOREwellbore_sequence::numGovt = numGovt;
		_p->__witsml1__obj_USCOREwellbore_sequence::statusWellbore = statusWellbore;
		_p->__witsml1__obj_USCOREwellbore_sequence::isActive = isActive;
		_p->__witsml1__obj_USCOREwellbore_sequence::purposeWellbore = purposeWellbore;
		_p->__witsml1__obj_USCOREwellbore_sequence::typeWellbore = typeWellbore;
		_p->__witsml1__obj_USCOREwellbore_sequence::shape = shape;
		_p->__witsml1__obj_USCOREwellbore_sequence::dTimKickoff = dTimKickoff;
		_p->__witsml1__obj_USCOREwellbore_sequence::achievedTD = achievedTD;
		_p->__witsml1__obj_USCOREwellbore_sequence::md = md;
		_p->__witsml1__obj_USCOREwellbore_sequence::tvd = tvd;
		_p->__witsml1__obj_USCOREwellbore_sequence::mdBit = mdBit;
		_p->__witsml1__obj_USCOREwellbore_sequence::tvdBit = tvdBit;
		_p->__witsml1__obj_USCOREwellbore_sequence::mdKickoff = mdKickoff;
		_p->__witsml1__obj_USCOREwellbore_sequence::tvdKickoff = tvdKickoff;
		_p->__witsml1__obj_USCOREwellbore_sequence::mdPlanned = mdPlanned;
		_p->__witsml1__obj_USCOREwellbore_sequence::tvdPlanned = tvdPlanned;
		_p->__witsml1__obj_USCOREwellbore_sequence::mdSubSeaPlanned = mdSubSeaPlanned;
		_p->__witsml1__obj_USCOREwellbore_sequence::tvdSubSeaPlanned = tvdSubSeaPlanned;
		_p->__witsml1__obj_USCOREwellbore_sequence::dayTarget = dayTarget;
	}
	return _p;
}

inline int soap_write___witsml1__obj_USCOREwellbore_sequence(struct soap *soap, __witsml1__obj_USCOREwellbore_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-witsml1:obj_wellbore-sequence", "-witsml1:obj_wellbore-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __witsml1__obj_USCOREwellbore_sequence * SOAP_FMAC4 soap_get___witsml1__obj_USCOREwellbore_sequence(struct soap*, __witsml1__obj_USCOREwellbore_sequence *, const char*, const char*);

inline int soap_read___witsml1__obj_USCOREwellbore_sequence(struct soap *soap, __witsml1__obj_USCOREwellbore_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___witsml1__obj_USCOREwellbore_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwell_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1___witsml1__obj_USCOREwell_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___witsml1__obj_USCOREwell_sequence(struct soap*, const char*, int, const __witsml1__obj_USCOREwell_sequence *, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREwell_sequence * SOAP_FMAC4 soap_in___witsml1__obj_USCOREwell_sequence(struct soap*, const char*, __witsml1__obj_USCOREwell_sequence *, const char*);
SOAP_FMAC1 __witsml1__obj_USCOREwell_sequence * SOAP_FMAC2 soap_instantiate___witsml1__obj_USCOREwell_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __witsml1__obj_USCOREwell_sequence * soap_new___witsml1__obj_USCOREwell_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___witsml1__obj_USCOREwell_sequence(soap, n, NULL, NULL, NULL);
}

inline __witsml1__obj_USCOREwell_sequence * soap_new_req___witsml1__obj_USCOREwell_sequence(
	struct soap *soap,
	const std::string& timeZone)
{
	__witsml1__obj_USCOREwell_sequence *_p = soap_new___witsml1__obj_USCOREwell_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCOREwell_sequence::timeZone = timeZone;
	}
	return _p;
}

inline __witsml1__obj_USCOREwell_sequence * soap_new_set___witsml1__obj_USCOREwell_sequence(
	struct soap *soap,
	std::string *nameLegal,
	std::string *numLicense,
	std::string *numGovt,
	time_t *dTimLicense,
	std::string *field,
	std::string *country,
	std::string *state,
	std::string *county,
	std::string *region,
	std::string *district,
	std::string *block,
	const std::string& timeZone,
	std::string *operator_,
	std::string *operatorDiv,
	witsml1__dimensionlessMeasure *pcInterest,
	std::string *numAPI,
	enum witsml1__WellStatus *statusWell,
	enum witsml1__WellPurpose *purposeWell,
	enum witsml1__WellFluid *fluidWell,
	enum witsml1__WellDirection *directionWell,
	time_t *dTimSpud,
	time_t *dTimPa,
	witsml1__wellElevationCoord *wellheadElevation,
	const std::vector<witsml1__cs_USCOREwellDatum *> & wellDatum,
	witsml1__wellElevationCoord *groundElevation,
	witsml1__lengthMeasure *waterDepth,
	const std::vector<witsml1__cs_USCORElocation *> & wellLocation,
	witsml1__cs_USCOREpublicLandSurveySystem *wellPublicLandSurveySystemLocation,
	const std::vector<witsml1__cs_USCOREreferencePoint *> & referencePoint,
	const std::vector<witsml1__cs_USCOREwellCRS *> & wellCRS)
{
	__witsml1__obj_USCOREwell_sequence *_p = soap_new___witsml1__obj_USCOREwell_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__witsml1__obj_USCOREwell_sequence::nameLegal = nameLegal;
		_p->__witsml1__obj_USCOREwell_sequence::numLicense = numLicense;
		_p->__witsml1__obj_USCOREwell_sequence::numGovt = numGovt;
		_p->__witsml1__obj_USCOREwell_sequence::dTimLicense = dTimLicense;
		_p->__witsml1__obj_USCOREwell_sequence::field = field;
		_p->__witsml1__obj_USCOREwell_sequence::country = country;
		_p->__witsml1__obj_USCOREwell_sequence::state = state;
		_p->__witsml1__obj_USCOREwell_sequence::county = county;
		_p->__witsml1__obj_USCOREwell_sequence::region = region;
		_p->__witsml1__obj_USCOREwell_sequence::district = district;
		_p->__witsml1__obj_USCOREwell_sequence::block = block;
		_p->__witsml1__obj_USCOREwell_sequence::timeZone = timeZone;
		_p->__witsml1__obj_USCOREwell_sequence::operator_ = operator_;
		_p->__witsml1__obj_USCOREwell_sequence::operatorDiv = operatorDiv;
		_p->__witsml1__obj_USCOREwell_sequence::pcInterest = pcInterest;
		_p->__witsml1__obj_USCOREwell_sequence::numAPI = numAPI;
		_p->__witsml1__obj_USCOREwell_sequence::statusWell = statusWell;
		_p->__witsml1__obj_USCOREwell_sequence::purposeWell = purposeWell;
		_p->__witsml1__obj_USCOREwell_sequence::fluidWell = fluidWell;
		_p->__witsml1__obj_USCOREwell_sequence::directionWell = directionWell;
		_p->__witsml1__obj_USCOREwell_sequence::dTimSpud = dTimSpud;
		_p->__witsml1__obj_USCOREwell_sequence::dTimPa = dTimPa;
		_p->__witsml1__obj_USCOREwell_sequence::wellheadElevation = wellheadElevation;
		_p->__witsml1__obj_USCOREwell_sequence::wellDatum = wellDatum;
		_p->__witsml1__obj_USCOREwell_sequence::groundElevation = groundElevation;
		_p->__witsml1__obj_USCOREwell_sequence::waterDepth = waterDepth;
		_p->__witsml1__obj_USCOREwell_sequence::wellLocation = wellLocation;
		_p->__witsml1__obj_USCOREwell_sequence::wellPublicLandSurveySystemLocation = wellPublicLandSurveySystemLocation;
		_p->__witsml1__obj_USCOREwell_sequence::referencePoint = referencePoint;
		_p->__witsml1__obj_USCOREwell_sequence::wellCRS = wellCRS;
	}
	return _p;
}

inline int soap_write___witsml1__obj_USCOREwell_sequence(struct soap *soap, __witsml1__obj_USCOREwell_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-witsml1:obj_well-sequence", "-witsml1:obj_well-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __witsml1__obj_USCOREwell_sequence * SOAP_FMAC4 soap_get___witsml1__obj_USCOREwell_sequence(struct soap*, __witsml1__obj_USCOREwell_sequence *, const char*, const char*);

inline int soap_read___witsml1__obj_USCOREwell_sequence(struct soap *soap, __witsml1__obj_USCOREwell_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___witsml1__obj_USCOREwell_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* witsml1__commentString is a typedef synonym for witsml1__abstractCommentString */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__commentString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__commentString_DEFINED

#define soap_default_witsml1__commentString(soap, a) soap_default_witsml1__abstractCommentString(soap, a)


#define soap_serialize_witsml1__commentString soap_serialize_witsml1__abstractCommentString


#define soap_witsml1__commentString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__commentString soap_out_witsml1__abstractCommentString


#define soap_s2witsml1__commentString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 4000, NULL)

#define soap_in_witsml1__commentString soap_in_witsml1__abstractCommentString


#define soap_instantiate_witsml1__commentString soap_instantiate_witsml1__abstractCommentString


#define soap_new_witsml1__commentString soap_new_witsml1__abstractCommentString


#define soap_put_witsml1__commentString soap_put_witsml1__abstractCommentString


#define soap_write_witsml1__commentString soap_write_witsml1__abstractCommentString


#define soap_get_witsml1__commentString soap_get_witsml1__abstractCommentString


#define soap_read_witsml1__commentString soap_read_witsml1__abstractCommentString

#endif
/* witsml1__TypeSurveyTool is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TypeSurveyTool_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TypeSurveyTool_DEFINED

#define soap_default_witsml1__TypeSurveyTool(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__TypeSurveyTool soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__TypeSurveyTool2s(soap, a) ((a).c_str())

#define soap_out_witsml1__TypeSurveyTool soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__TypeSurveyTool(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__TypeSurveyTool soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__TypeSurveyTool soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__TypeSurveyTool soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__TypeSurveyTool soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__TypeSurveyTool soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__TypeSurveyTool soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__TypeSurveyTool soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__TrajStnCalcAlgorithm is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStnCalcAlgorithm_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__TrajStnCalcAlgorithm_DEFINED

#define soap_default_witsml1__TrajStnCalcAlgorithm(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__TrajStnCalcAlgorithm soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__TrajStnCalcAlgorithm2s(soap, a) ((a).c_str())

#define soap_out_witsml1__TrajStnCalcAlgorithm soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__TrajStnCalcAlgorithm(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__TrajStnCalcAlgorithm soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__TrajStnCalcAlgorithm soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__TrajStnCalcAlgorithm soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__TrajStnCalcAlgorithm soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__TrajStnCalcAlgorithm soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__TrajStnCalcAlgorithm soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__TrajStnCalcAlgorithm soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__QualifierType is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__QualifierType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__QualifierType_DEFINED

#define soap_default_witsml1__QualifierType(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__QualifierType soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__QualifierType2s(soap, a) ((a).c_str())

#define soap_out_witsml1__QualifierType soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__QualifierType(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__QualifierType soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__QualifierType soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__QualifierType soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__QualifierType soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__QualifierType soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__QualifierType soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__QualifierType soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__NameTagTechnology is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagTechnology_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagTechnology_DEFINED

#define soap_default_witsml1__NameTagTechnology(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__NameTagTechnology soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__NameTagTechnology2s(soap, a) ((a).c_str())

#define soap_out_witsml1__NameTagTechnology soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__NameTagTechnology(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__NameTagTechnology soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__NameTagTechnology soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__NameTagTechnology soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__NameTagTechnology soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__NameTagTechnology soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__NameTagTechnology soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__NameTagTechnology soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__NameTagNumberingScheme is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagNumberingScheme_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagNumberingScheme_DEFINED

#define soap_default_witsml1__NameTagNumberingScheme(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__NameTagNumberingScheme soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__NameTagNumberingScheme2s(soap, a) ((a).c_str())

#define soap_out_witsml1__NameTagNumberingScheme soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__NameTagNumberingScheme(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__NameTagNumberingScheme soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__NameTagNumberingScheme soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__NameTagNumberingScheme soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__NameTagNumberingScheme soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__NameTagNumberingScheme soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__NameTagNumberingScheme soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__NameTagNumberingScheme soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__NameTagLocation is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagLocation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__NameTagLocation_DEFINED

#define soap_default_witsml1__NameTagLocation(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__NameTagLocation soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__NameTagLocation2s(soap, a) ((a).c_str())

#define soap_out_witsml1__NameTagLocation soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__NameTagLocation(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__NameTagLocation soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__NameTagLocation soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__NameTagLocation soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__NameTagLocation soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__NameTagLocation soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__NameTagLocation soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__NameTagLocation soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__MudSubClass is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudSubClass_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MudSubClass_DEFINED

#define soap_default_witsml1__MudSubClass(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__MudSubClass soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__MudSubClass2s(soap, a) ((a).c_str())

#define soap_out_witsml1__MudSubClass soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__MudSubClass(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__MudSubClass soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__MudSubClass soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__MudSubClass soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__MudSubClass soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__MudSubClass soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__MudSubClass soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__MudSubClass soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__MeasureClass is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasureClass_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MeasureClass_DEFINED

#define soap_default_witsml1__MeasureClass(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__MeasureClass soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__MeasureClass2s(soap, a) ((a).c_str())

#define soap_out_witsml1__MeasureClass soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__MeasureClass(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__MeasureClass soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__MeasureClass soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__MeasureClass soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__MeasureClass soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__MeasureClass soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__MeasureClass soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__MeasureClass soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__MatrixCementType is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MatrixCementType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__MatrixCementType_DEFINED

#define soap_default_witsml1__MatrixCementType(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__MatrixCementType soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__MatrixCementType2s(soap, a) ((a).c_str())

#define soap_out_witsml1__MatrixCementType soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__MatrixCementType(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__MatrixCementType soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__MatrixCementType soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__MatrixCementType soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__MatrixCementType soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__MatrixCementType soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__MatrixCementType soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__MatrixCementType soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__LithologyType is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__LithologyType_DEFINED

#define soap_default_witsml1__LithologyType(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__LithologyType soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__LithologyType2s(soap, a) ((a).c_str())

#define soap_out_witsml1__LithologyType soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__LithologyType(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__LithologyType soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__LithologyType soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__LithologyType soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__LithologyType soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__LithologyType soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__LithologyType soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__LithologyType soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__ExtensionName is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ExtensionName_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ExtensionName_DEFINED

#define soap_default_witsml1__ExtensionName(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__ExtensionName soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__ExtensionName2s(soap, a) ((a).c_str())

#define soap_out_witsml1__ExtensionName soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__ExtensionName(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__ExtensionName soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__ExtensionName soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__ExtensionName soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__ExtensionName soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__ExtensionName soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__ExtensionName soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__ExtensionName soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__ActivityCode is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ActivityCode_DEFINED

#define soap_default_witsml1__ActivityCode(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__ActivityCode soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__ActivityCode2s(soap, a) ((a).c_str())

#define soap_out_witsml1__ActivityCode soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__ActivityCode(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__ActivityCode soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__ActivityCode soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__ActivityCode soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__ActivityCode soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__ActivityCode soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__ActivityCode soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__ActivityCode soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__abstractCommentString is a typedef synonym for witsml1__abstractMaximumLengthString */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractCommentString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractCommentString_DEFINED

#define soap_default_witsml1__abstractCommentString(soap, a) soap_default_witsml1__abstractMaximumLengthString(soap, a)


#define soap_serialize_witsml1__abstractCommentString soap_serialize_witsml1__abstractMaximumLengthString


#define soap_witsml1__abstractCommentString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__abstractCommentString soap_out_witsml1__abstractMaximumLengthString


#define soap_s2witsml1__abstractCommentString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 4000, NULL)

#define soap_in_witsml1__abstractCommentString soap_in_witsml1__abstractMaximumLengthString


#define soap_instantiate_witsml1__abstractCommentString soap_instantiate_witsml1__abstractMaximumLengthString


#define soap_new_witsml1__abstractCommentString soap_new_witsml1__abstractMaximumLengthString


#define soap_put_witsml1__abstractCommentString soap_put_witsml1__abstractMaximumLengthString


#define soap_write_witsml1__abstractCommentString soap_write_witsml1__abstractMaximumLengthString


#define soap_get_witsml1__abstractCommentString soap_get_witsml1__abstractMaximumLengthString


#define soap_read_witsml1__abstractCommentString soap_read_witsml1__abstractMaximumLengthString

#endif
/* witsml1__str32 is a typedef synonym for witsml1__abstractString32 */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str32_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str32_DEFINED

#define soap_default_witsml1__str32(soap, a) soap_default_witsml1__abstractString32(soap, a)


#define soap_serialize_witsml1__str32 soap_serialize_witsml1__abstractString32


#define soap_witsml1__str322s(soap, a) ((a).c_str())

#define soap_out_witsml1__str32 soap_out_witsml1__abstractString32


#define soap_s2witsml1__str32(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 32, NULL)

#define soap_in_witsml1__str32 soap_in_witsml1__abstractString32


#define soap_instantiate_witsml1__str32 soap_instantiate_witsml1__abstractString32


#define soap_new_witsml1__str32 soap_new_witsml1__abstractString32


#define soap_put_witsml1__str32 soap_put_witsml1__abstractString32


#define soap_write_witsml1__str32 soap_write_witsml1__abstractString32


#define soap_get_witsml1__str32 soap_get_witsml1__abstractString32


#define soap_read_witsml1__str32 soap_read_witsml1__abstractString32

#endif
/* witsml1__uomString is a typedef synonym for witsml1__abstractUomEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uomString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uomString_DEFINED

#define soap_default_witsml1__uomString(soap, a) soap_default_witsml1__abstractUomEnum(soap, a)


#define soap_serialize_witsml1__uomString soap_serialize_witsml1__abstractUomEnum


#define soap_witsml1__uomString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__uomString soap_out_witsml1__abstractUomEnum


#define soap_s2witsml1__uomString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 24, NULL)

#define soap_in_witsml1__uomString soap_in_witsml1__abstractUomEnum


#define soap_instantiate_witsml1__uomString soap_instantiate_witsml1__abstractUomEnum


#define soap_new_witsml1__uomString soap_new_witsml1__abstractUomEnum


#define soap_put_witsml1__uomString soap_put_witsml1__abstractUomEnum


#define soap_write_witsml1__uomString soap_write_witsml1__abstractUomEnum


#define soap_get_witsml1__uomString soap_get_witsml1__abstractUomEnum


#define soap_read_witsml1__uomString soap_read_witsml1__abstractUomEnum

#endif
/* witsml1__kindString is a typedef synonym for witsml1__abstractTypeEnum */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__kindString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__kindString_DEFINED

#define soap_default_witsml1__kindString(soap, a) soap_default_witsml1__abstractTypeEnum(soap, a)


#define soap_serialize_witsml1__kindString soap_serialize_witsml1__abstractTypeEnum


#define soap_witsml1__kindString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__kindString soap_out_witsml1__abstractTypeEnum


#define soap_s2witsml1__kindString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)

#define soap_in_witsml1__kindString soap_in_witsml1__abstractTypeEnum


#define soap_instantiate_witsml1__kindString soap_instantiate_witsml1__abstractTypeEnum


#define soap_new_witsml1__kindString soap_new_witsml1__abstractTypeEnum


#define soap_put_witsml1__kindString soap_put_witsml1__abstractTypeEnum


#define soap_write_witsml1__kindString soap_write_witsml1__abstractTypeEnum


#define soap_get_witsml1__kindString soap_get_witsml1__abstractTypeEnum


#define soap_read_witsml1__kindString soap_read_witsml1__abstractTypeEnum

#endif
/* witsml1__encodedValueString is a typedef synonym for witsml1__abstractString32 */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__encodedValueString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__encodedValueString_DEFINED

#define soap_default_witsml1__encodedValueString(soap, a) soap_default_witsml1__abstractString32(soap, a)


#define soap_serialize_witsml1__encodedValueString soap_serialize_witsml1__abstractString32


#define soap_witsml1__encodedValueString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__encodedValueString soap_out_witsml1__abstractString32


#define soap_s2witsml1__encodedValueString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 32, NULL)

#define soap_in_witsml1__encodedValueString soap_in_witsml1__abstractString32


#define soap_instantiate_witsml1__encodedValueString soap_instantiate_witsml1__abstractString32


#define soap_new_witsml1__encodedValueString soap_new_witsml1__abstractString32


#define soap_put_witsml1__encodedValueString soap_put_witsml1__abstractString32


#define soap_write_witsml1__encodedValueString soap_write_witsml1__abstractString32


#define soap_get_witsml1__encodedValueString soap_get_witsml1__abstractString32


#define soap_read_witsml1__encodedValueString soap_read_witsml1__abstractString32

#endif
/* witsml1__descriptionString is a typedef synonym for witsml1__abstractDescriptionString */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__descriptionString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__descriptionString_DEFINED

#define soap_default_witsml1__descriptionString(soap, a) soap_default_witsml1__abstractDescriptionString(soap, a)


#define soap_serialize_witsml1__descriptionString soap_serialize_witsml1__abstractDescriptionString


#define soap_witsml1__descriptionString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__descriptionString soap_out_witsml1__abstractDescriptionString


#define soap_s2witsml1__descriptionString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 256, NULL)

#define soap_in_witsml1__descriptionString soap_in_witsml1__abstractDescriptionString


#define soap_instantiate_witsml1__descriptionString soap_instantiate_witsml1__abstractDescriptionString


#define soap_new_witsml1__descriptionString soap_new_witsml1__abstractDescriptionString


#define soap_put_witsml1__descriptionString soap_put_witsml1__abstractDescriptionString


#define soap_write_witsml1__descriptionString soap_write_witsml1__abstractDescriptionString


#define soap_get_witsml1__descriptionString soap_get_witsml1__abstractDescriptionString


#define soap_read_witsml1__descriptionString soap_read_witsml1__abstractDescriptionString

#endif
/* witsml1__nameString is a typedef synonym for witsml1__abstractNameString */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameString_DEFINED

#define soap_default_witsml1__nameString(soap, a) soap_default_witsml1__abstractNameString(soap, a)


#define soap_serialize_witsml1__nameString soap_serialize_witsml1__abstractNameString


#define soap_witsml1__nameString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__nameString soap_out_witsml1__abstractNameString


#define soap_s2witsml1__nameString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, NULL)

#define soap_in_witsml1__nameString soap_in_witsml1__abstractNameString


#define soap_instantiate_witsml1__nameString soap_instantiate_witsml1__abstractNameString


#define soap_new_witsml1__nameString soap_new_witsml1__abstractNameString


#define soap_put_witsml1__nameString soap_put_witsml1__abstractNameString


#define soap_write_witsml1__nameString soap_write_witsml1__abstractNameString


#define soap_get_witsml1__nameString soap_get_witsml1__abstractNameString


#define soap_read_witsml1__nameString soap_read_witsml1__abstractNameString

#endif
/* witsml1__refWellDatum is a typedef synonym for witsml1__abstractUidString */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refWellDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refWellDatum_DEFINED

#define soap_default_witsml1__refWellDatum(soap, a) soap_default_witsml1__abstractUidString(soap, a)


#define soap_serialize_witsml1__refWellDatum soap_serialize_witsml1__abstractUidString


#define soap_witsml1__refWellDatum2s(soap, a) ((a).c_str())

#define soap_out_witsml1__refWellDatum soap_out_witsml1__abstractUidString


#define soap_s2witsml1__refWellDatum(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, "[^ ]*")

#define soap_in_witsml1__refWellDatum soap_in_witsml1__abstractUidString


#define soap_instantiate_witsml1__refWellDatum soap_instantiate_witsml1__abstractUidString


#define soap_new_witsml1__refWellDatum soap_new_witsml1__abstractUidString


#define soap_put_witsml1__refWellDatum soap_put_witsml1__abstractUidString


#define soap_write_witsml1__refWellDatum soap_write_witsml1__abstractUidString


#define soap_get_witsml1__refWellDatum soap_get_witsml1__abstractUidString


#define soap_read_witsml1__refWellDatum soap_read_witsml1__abstractUidString

#endif
/* witsml1__refString is a typedef synonym for witsml1__abstractUidString */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refString_DEFINED

#define soap_default_witsml1__refString(soap, a) soap_default_witsml1__abstractUidString(soap, a)


#define soap_serialize_witsml1__refString soap_serialize_witsml1__abstractUidString


#define soap_witsml1__refString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__refString soap_out_witsml1__abstractUidString


#define soap_s2witsml1__refString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, "[^ ]*")

#define soap_in_witsml1__refString soap_in_witsml1__abstractUidString


#define soap_instantiate_witsml1__refString soap_instantiate_witsml1__abstractUidString


#define soap_new_witsml1__refString soap_new_witsml1__abstractUidString


#define soap_put_witsml1__refString soap_put_witsml1__abstractUidString


#define soap_write_witsml1__refString soap_write_witsml1__abstractUidString


#define soap_get_witsml1__refString soap_get_witsml1__abstractUidString


#define soap_read_witsml1__refString soap_read_witsml1__abstractUidString

#endif
/* witsml1__uidParentString is a typedef synonym for witsml1__abstractUidString */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidParentString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidParentString_DEFINED

#define soap_default_witsml1__uidParentString(soap, a) soap_default_witsml1__abstractUidString(soap, a)


#define soap_serialize_witsml1__uidParentString soap_serialize_witsml1__abstractUidString


#define soap_witsml1__uidParentString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__uidParentString soap_out_witsml1__abstractUidString


#define soap_s2witsml1__uidParentString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, "[^ ]*")

#define soap_in_witsml1__uidParentString soap_in_witsml1__abstractUidString


#define soap_instantiate_witsml1__uidParentString soap_instantiate_witsml1__abstractUidString


#define soap_new_witsml1__uidParentString soap_new_witsml1__abstractUidString


#define soap_put_witsml1__uidParentString soap_put_witsml1__abstractUidString


#define soap_write_witsml1__uidParentString soap_write_witsml1__abstractUidString


#define soap_get_witsml1__uidParentString soap_get_witsml1__abstractUidString


#define soap_read_witsml1__uidParentString soap_read_witsml1__abstractUidString

#endif
/* witsml1__uidString is a typedef synonym for witsml1__abstractUidString */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uidString_DEFINED

#define soap_default_witsml1__uidString(soap, a) soap_default_witsml1__abstractUidString(soap, a)


#define soap_serialize_witsml1__uidString soap_serialize_witsml1__abstractUidString


#define soap_witsml1__uidString2s(soap, a) ((a).c_str())

#define soap_out_witsml1__uidString soap_out_witsml1__abstractUidString


#define soap_s2witsml1__uidString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, "[^ ]*")

#define soap_in_witsml1__uidString soap_in_witsml1__abstractUidString


#define soap_instantiate_witsml1__uidString soap_instantiate_witsml1__abstractUidString


#define soap_new_witsml1__uidString soap_new_witsml1__abstractUidString


#define soap_put_witsml1__uidString soap_put_witsml1__abstractUidString


#define soap_write_witsml1__uidString soap_write_witsml1__abstractUidString


#define soap_get_witsml1__uidString soap_get_witsml1__abstractUidString


#define soap_read_witsml1__uidString soap_read_witsml1__abstractUidString

#endif
/* witsml1__timeZone is a typedef synonym for witsml1__abstractTimeZone */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeZone_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeZone_DEFINED

#define soap_default_witsml1__timeZone(soap, a) soap_default_witsml1__abstractTimeZone(soap, a)


#define soap_serialize_witsml1__timeZone soap_serialize_witsml1__abstractTimeZone


#define soap_witsml1__timeZone2s(soap, a) ((a).c_str())

#define soap_out_witsml1__timeZone soap_out_witsml1__abstractTimeZone


#define soap_s2witsml1__timeZone(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, -1, "[Z]|([\\-+](([01][0-9])|(2[0-3])):[0-5][0-9])")

#define soap_in_witsml1__timeZone soap_in_witsml1__abstractTimeZone


#define soap_instantiate_witsml1__timeZone soap_instantiate_witsml1__abstractTimeZone


#define soap_new_witsml1__timeZone soap_new_witsml1__abstractTimeZone


#define soap_put_witsml1__timeZone soap_put_witsml1__abstractTimeZone


#define soap_write_witsml1__timeZone soap_write_witsml1__abstractTimeZone


#define soap_get_witsml1__timeZone soap_get_witsml1__abstractTimeZone


#define soap_read_witsml1__timeZone soap_read_witsml1__abstractTimeZone

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUomEnum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUomEnum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractUomEnum(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractUomEnum(struct soap*, const std::string *);

#define soap_witsml1__abstractUomEnum2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractUomEnum(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractUomEnum(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 24, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractUomEnum(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractUomEnum soap_instantiate_std__string


#define soap_new_witsml1__abstractUomEnum soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractUomEnum(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractUomEnum(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractUomEnum(soap, p, "witsml1:abstractUomEnum", "witsml1:abstractUomEnum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractUomEnum(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractUomEnum(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractUomEnum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTypeEnum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTypeEnum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractTypeEnum(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractTypeEnum(struct soap*, const std::string *);

#define soap_witsml1__abstractTypeEnum2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractTypeEnum(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractTypeEnum(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractTypeEnum(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractTypeEnum soap_instantiate_std__string


#define soap_new_witsml1__abstractTypeEnum soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractTypeEnum(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractTypeEnum(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractTypeEnum(soap, p, "witsml1:abstractTypeEnum", "witsml1:abstractTypeEnum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractTypeEnum(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractTypeEnum(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractTypeEnum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString32_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString32_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractString32(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractString32(struct soap*, const std::string *);

#define soap_witsml1__abstractString322s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractString32(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractString32(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 32, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractString32(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractString32 soap_instantiate_std__string


#define soap_new_witsml1__abstractString32 soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractString32(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractString32(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractString32(soap, p, "witsml1:abstractString32", "witsml1:abstractString32") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractString32(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractString32(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractString32(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDescriptionString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDescriptionString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractDescriptionString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractDescriptionString(struct soap*, const std::string *);

#define soap_witsml1__abstractDescriptionString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractDescriptionString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractDescriptionString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 256, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractDescriptionString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractDescriptionString soap_instantiate_std__string


#define soap_new_witsml1__abstractDescriptionString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractDescriptionString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractDescriptionString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractDescriptionString(soap, p, "witsml1:abstractDescriptionString", "witsml1:abstractDescriptionString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractDescriptionString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractDescriptionString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractDescriptionString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUidString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUidString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractUidString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractUidString(struct soap*, const std::string *);

#define soap_witsml1__abstractUidString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractUidString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractUidString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, "[^ ]*")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractUidString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractUidString soap_instantiate_std__string


#define soap_new_witsml1__abstractUidString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractUidString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractUidString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractUidString(soap, p, "witsml1:abstractUidString", "witsml1:abstractUidString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractUidString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractUidString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractUidString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractNameString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractNameString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractNameString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractNameString(struct soap*, const std::string *);

#define soap_witsml1__abstractNameString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractNameString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractNameString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractNameString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractNameString soap_instantiate_std__string


#define soap_new_witsml1__abstractNameString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractNameString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractNameString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractNameString(soap, p, "witsml1:abstractNameString", "witsml1:abstractNameString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractNameString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractNameString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractNameString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTimeZone_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractTimeZone_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractTimeZone(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractTimeZone(struct soap*, const std::string *);

#define soap_witsml1__abstractTimeZone2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractTimeZone(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractTimeZone(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, -1, "[Z]|([\\-+](([01][0-9])|(2[0-3])):[0-5][0-9])")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractTimeZone(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractTimeZone soap_instantiate_std__string


#define soap_new_witsml1__abstractTimeZone soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractTimeZone(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractTimeZone(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractTimeZone(soap, p, "witsml1:abstractTimeZone", "witsml1:abstractTimeZone") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractTimeZone(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractTimeZone(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractTimeZone(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMaximumLengthString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMaximumLengthString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractMaximumLengthString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractMaximumLengthString(struct soap*, const std::string *);

#define soap_witsml1__abstractMaximumLengthString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractMaximumLengthString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractMaximumLengthString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 4000, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractMaximumLengthString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractMaximumLengthString soap_instantiate_std__string


#define soap_new_witsml1__abstractMaximumLengthString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractMaximumLengthString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractMaximumLengthString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractMaximumLengthString(soap, p, "witsml1:abstractMaximumLengthString", "witsml1:abstractMaximumLengthString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractMaximumLengthString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractMaximumLengthString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractMaximumLengthString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str16_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str16_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__str16(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__str16(struct soap*, const std::string *);

#define soap_witsml1__str162s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__str16(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__str16(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 16, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__str16(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__str16 soap_instantiate_std__string


#define soap_new_witsml1__str16 soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__str16(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__str16(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__str16(soap, p, "witsml1:str16", "witsml1:str16") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__str16(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__str16(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__str16(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str2_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__str2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__str2(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__str2(struct soap*, const std::string *);

#define soap_witsml1__str22s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__str2(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__str2(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 2, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__str2(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__str2 soap_instantiate_std__string


#define soap_new_witsml1__str2 soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__str2(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__str2(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__str2(soap, p, "witsml1:str2", "witsml1:str2") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__str2(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__str2(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__str2(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterSection_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterSection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__publicLandSurveySystemQuarterSection(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__publicLandSurveySystemQuarterSection(struct soap*, const std::string *);

#define soap_witsml1__publicLandSurveySystemQuarterSection2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__publicLandSurveySystemQuarterSection(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__publicLandSurveySystemQuarterSection(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 12, "(NE|NW|SW|SE|N2|S2|E2|W2|C|LT[0-9]{2,2}|TR[a-zA-Z0-9]{1,2}){1,3}")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__publicLandSurveySystemQuarterSection(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__publicLandSurveySystemQuarterSection soap_instantiate_std__string


#define soap_new_witsml1__publicLandSurveySystemQuarterSection soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__publicLandSurveySystemQuarterSection(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__publicLandSurveySystemQuarterSection(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__publicLandSurveySystemQuarterSection(soap, p, "witsml1:publicLandSurveySystemQuarterSection", "witsml1:publicLandSurveySystemQuarterSection") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__publicLandSurveySystemQuarterSection(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__publicLandSurveySystemQuarterSection(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__publicLandSurveySystemQuarterSection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterTownship_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__publicLandSurveySystemQuarterTownship_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__publicLandSurveySystemQuarterTownship(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__publicLandSurveySystemQuarterTownship(struct soap*, const std::string *);

#define soap_witsml1__publicLandSurveySystemQuarterTownship2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__publicLandSurveySystemQuarterTownship(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__publicLandSurveySystemQuarterTownship(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 12, "NE|NW|SW|SE")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__publicLandSurveySystemQuarterTownship(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__publicLandSurveySystemQuarterTownship soap_instantiate_std__string


#define soap_new_witsml1__publicLandSurveySystemQuarterTownship soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__publicLandSurveySystemQuarterTownship(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__publicLandSurveySystemQuarterTownship(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__publicLandSurveySystemQuarterTownship(soap, p, "witsml1:publicLandSurveySystemQuarterTownship", "witsml1:publicLandSurveySystemQuarterTownship") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__publicLandSurveySystemQuarterTownship(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__publicLandSurveySystemQuarterTownship(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__publicLandSurveySystemQuarterTownship(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__sectionNumber_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__sectionNumber_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__sectionNumber(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__sectionNumber(struct soap*, const std::string *);

#define soap_witsml1__sectionNumber2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__sectionNumber(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__sectionNumber(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, -1, "[+]?([1-9]|[1-2][0-9]|3[0-6])\\.?[0-9]?")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__sectionNumber(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__sectionNumber soap_instantiate_std__string


#define soap_new_witsml1__sectionNumber soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__sectionNumber(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__sectionNumber(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__sectionNumber(soap, p, "witsml1:sectionNumber", "witsml1:sectionNumber") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__sectionNumber(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__sectionNumber(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__sectionNumber(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__geodeticZoneString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__geodeticZoneString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__geodeticZoneString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__geodeticZoneString(struct soap*, const std::string *);

#define soap_witsml1__geodeticZoneString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__geodeticZoneString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__geodeticZoneString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 3, "([1-9]|[1-5][0-9]|60)[NS]")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__geodeticZoneString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__geodeticZoneString soap_instantiate_std__string


#define soap_new_witsml1__geodeticZoneString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__geodeticZoneString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__geodeticZoneString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__geodeticZoneString(soap, p, "witsml1:geodeticZoneString", "witsml1:geodeticZoneString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__geodeticZoneString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__geodeticZoneString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__geodeticZoneString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcBearingWearCode_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__iadcBearingWearCode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__iadcBearingWearCode(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__iadcBearingWearCode(struct soap*, const std::string *);

#define soap_witsml1__iadcBearingWearCode2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__iadcBearingWearCode(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__iadcBearingWearCode(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 1, "[0-8EFNX]")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__iadcBearingWearCode(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__iadcBearingWearCode soap_instantiate_std__string


#define soap_new_witsml1__iadcBearingWearCode soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__iadcBearingWearCode(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__iadcBearingWearCode(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__iadcBearingWearCode(soap, p, "witsml1:iadcBearingWearCode", "witsml1:iadcBearingWearCode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__iadcBearingWearCode(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__iadcBearingWearCode(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__iadcBearingWearCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uncollapsedString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__uncollapsedString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__uncollapsedString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__uncollapsedString(struct soap*, const std::string *);

#define soap_witsml1__uncollapsedString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__uncollapsedString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__uncollapsedString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 256, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__uncollapsedString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__uncollapsedString soap_instantiate_std__string


#define soap_new_witsml1__uncollapsedString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__uncollapsedString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__uncollapsedString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__uncollapsedString(soap, p, "witsml1:uncollapsedString", "witsml1:uncollapsedString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__uncollapsedString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__uncollapsedString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__uncollapsedString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__schemaVersionString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__schemaVersionString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__schemaVersionString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__schemaVersionString(struct soap*, const std::string *);

#define soap_witsml1__schemaVersionString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__schemaVersionString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__schemaVersionString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 16, "1\\.[4-9]\\.[0-9]\\.([0-9]|([1-9][0-9]))")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__schemaVersionString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__schemaVersionString soap_instantiate_std__string


#define soap_new_witsml1__schemaVersionString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__schemaVersionString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__schemaVersionString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__schemaVersionString(soap, p, "witsml1:schemaVersionString", "witsml1:schemaVersionString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__schemaVersionString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__schemaVersionString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__schemaVersionString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortDescriptionString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortDescriptionString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__shortDescriptionString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__shortDescriptionString(struct soap*, const std::string *);

#define soap_witsml1__shortDescriptionString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__shortDescriptionString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__shortDescriptionString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__shortDescriptionString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__shortDescriptionString soap_instantiate_std__string


#define soap_new_witsml1__shortDescriptionString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__shortDescriptionString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__shortDescriptionString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__shortDescriptionString(soap, p, "witsml1:shortDescriptionString", "witsml1:shortDescriptionString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__shortDescriptionString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__shortDescriptionString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__shortDescriptionString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* witsml1__date is a typedef synonym for witsml1__abstractDate */

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__date_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__date_DEFINED

#define soap_default_witsml1__date(soap, a) soap_default_witsml1__abstractDate(soap, a)


#define soap_serialize_witsml1__date soap_serialize_witsml1__abstractDate


#define soap_witsml1__date2s(soap, a) ((a).c_str())

#define soap_out_witsml1__date soap_out_witsml1__abstractDate


#define soap_s2witsml1__date(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, ".+")

#define soap_in_witsml1__date soap_in_witsml1__abstractDate


#define soap_instantiate_witsml1__date soap_instantiate_witsml1__abstractDate


#define soap_new_witsml1__date soap_new_witsml1__abstractDate


#define soap_put_witsml1__date soap_put_witsml1__abstractDate


#define soap_write_witsml1__date soap_write_witsml1__abstractDate


#define soap_get_witsml1__date soap_get_witsml1__abstractDate


#define soap_read_witsml1__date soap_read_witsml1__abstractDate

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomURI_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomURI_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__UomURI(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__UomURI(struct soap*, const std::string *);

#define soap_gml__UomURI2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__UomURI(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__UomURI(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, "([a-zA-Z][a-zA-Z0-9\\-\\+\\.]*:|\\.\\./|\\./|#).*")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__UomURI(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__UomURI soap_instantiate_std__string


#define soap_new_gml__UomURI soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__UomURI(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__UomURI(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__UomURI(soap, p, "gml:UomURI", "gml:UomURI") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__UomURI(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__UomURI(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__UomURI(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomSymbol_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomSymbol_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__UomSymbol(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__UomSymbol(struct soap*, const std::string *);

#define soap_gml__UomSymbol2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__UomSymbol(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__UomSymbol(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, "[^: \\n\\r\\t]+")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__UomSymbol(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__UomSymbol soap_instantiate_std__string


#define soap_new_gml__UomSymbol soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__UomSymbol(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__UomSymbol(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__UomSymbol(soap, p, "gml:UomSymbol", "gml:UomSymbol") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__UomSymbol(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__UomSymbol(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__UomSymbol(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUncollapsedString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractUncollapsedString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractUncollapsedString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractUncollapsedString(struct soap*, const std::string *);

#define soap_witsml1__abstractUncollapsedString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractUncollapsedString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractUncollapsedString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractUncollapsedString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractUncollapsedString soap_instantiate_std__string


#define soap_new_witsml1__abstractUncollapsedString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractUncollapsedString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractUncollapsedString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractUncollapsedString(soap, p, "witsml1:abstractUncollapsedString", "witsml1:abstractUncollapsedString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractUncollapsedString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractUncollapsedString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractUncollapsedString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractString(struct soap*, const std::string *);

#define soap_witsml1__abstractString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractString soap_instantiate_std__string


#define soap_new_witsml1__abstractString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractString(soap, p, "witsml1:abstractString", "witsml1:abstractString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDate_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractDate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__abstractDate(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__abstractDate(struct soap*, const std::string *);

#define soap_witsml1__abstractDate2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractDate(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__abstractDate(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, ".+")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__abstractDate(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__abstractDate soap_instantiate_std__string


#define soap_new_witsml1__abstractDate soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__abstractDate(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__abstractDate(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__abstractDate(soap, p, "witsml1:abstractDate", "witsml1:abstractDate") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__abstractDate(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__abstractDate(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__abstractDate(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gco__Date_USCOREType(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gco__Date_USCOREType(struct soap*, const std::string *);

#define soap_gco__Date_USCOREType2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__Date_USCOREType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gco__Date_USCOREType(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gco__Date_USCOREType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gco__Date_USCOREType soap_instantiate_std__string


#define soap_new_gco__Date_USCOREType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gco__Date_USCOREType(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gco__Date_USCOREType(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gco__Date_USCOREType(soap, p, "gco:Date_Type", "gco:Date_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gco__Date_USCOREType(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gco__Date_USCOREType(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gco__Date_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomIdentifier_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__UomIdentifier_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__UomIdentifier(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__UomIdentifier(struct soap*, const std::string *);

#define soap_gml__UomIdentifier2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__UomIdentifier(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__UomIdentifier(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__UomIdentifier(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__UomIdentifier soap_instantiate_std__string


#define soap_new_gml__UomIdentifier soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__UomIdentifier(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__UomIdentifier(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__UomIdentifier(soap, p, "gml:UomIdentifier", "gml:UomIdentifier") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__UomIdentifier(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__UomIdentifier(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__UomIdentifier(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonEnumeration_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonEnumeration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__NilReasonEnumeration(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__NilReasonEnumeration(struct soap*, const std::string *);

#define soap_gml__NilReasonEnumeration2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__NilReasonEnumeration(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__NilReasonEnumeration(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__NilReasonEnumeration(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__NilReasonEnumeration soap_instantiate_std__string


#define soap_new_gml__NilReasonEnumeration soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__NilReasonEnumeration(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__NilReasonEnumeration(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__NilReasonEnumeration(soap, p, "gml:NilReasonEnumeration", "gml:NilReasonEnumeration") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__NilReasonEnumeration(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__NilReasonEnumeration(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__NilReasonEnumeration(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__NilReasonType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__NilReasonType(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__NilReasonType(struct soap*, const std::string *);

#define soap_gml__NilReasonType2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__NilReasonType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__NilReasonType(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__NilReasonType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__NilReasonType soap_instantiate_std__string


#define soap_new_gml__NilReasonType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__NilReasonType(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__NilReasonType(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__NilReasonType(soap, p, "gml:NilReasonType", "gml:NilReasonType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__NilReasonType(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__NilReasonType(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__NilReasonType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__listOfString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__listOfString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_witsml1__listOfString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_witsml1__listOfString(struct soap*, const std::string *);

#define soap_witsml1__listOfString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__listOfString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2witsml1__listOfString(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_witsml1__listOfString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_witsml1__listOfString soap_instantiate_std__string


#define soap_new_witsml1__listOfString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_witsml1__listOfString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_witsml1__listOfString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_witsml1__listOfString(soap, p, "witsml1:listOfString", "witsml1:listOfString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_witsml1__listOfString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_witsml1__listOfString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_witsml1__listOfString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gsr__SC_USCORECRS_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gsr__SC_USCORECRS_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, const char*, int, const gsr__SC_USCORECRS_USCOREPropertyType *, const char*);
SOAP_FMAC3 gsr__SC_USCORECRS_USCOREPropertyType * SOAP_FMAC4 soap_in_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, const char*, gsr__SC_USCORECRS_USCOREPropertyType *, const char*);
SOAP_FMAC1 gsr__SC_USCORECRS_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gsr__SC_USCORECRS_USCOREPropertyType * soap_new_gsr__SC_USCORECRS_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gsr__SC_USCORECRS_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gsr__SC_USCORECRS_USCOREPropertyType * soap_new_req_gsr__SC_USCORECRS_USCOREPropertyType(
	struct soap *soap)
{
	gsr__SC_USCORECRS_USCOREPropertyType *_p = soap_new_gsr__SC_USCORECRS_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gsr__SC_USCORECRS_USCOREPropertyType * soap_new_set_gsr__SC_USCORECRS_USCOREPropertyType(
	struct soap *soap,
	__gsr__SC_USCORECRS_USCOREPropertyType_sequence *__SC_USCORECRS_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gsr__SC_USCORECRS_USCOREPropertyType *_p = soap_new_gsr__SC_USCORECRS_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gsr__SC_USCORECRS_USCOREPropertyType::__SC_USCORECRS_USCOREPropertyType_sequence = __SC_USCORECRS_USCOREPropertyType_sequence;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::uuidref = uuidref;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__type = xlink__type;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__href = xlink__href;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__role = xlink__role;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__title = xlink__title;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__show = xlink__show;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gsr__SC_USCORECRS_USCOREPropertyType(struct soap *soap, gsr__SC_USCORECRS_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gsr:SC_CRS_PropertyType", "gsr:SC_CRS_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gsr__SC_USCORECRS_USCOREPropertyType * SOAP_FMAC4 soap_get_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, gsr__SC_USCORECRS_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gsr__SC_USCORECRS_USCOREPropertyType(struct soap *soap, gsr__SC_USCORECRS_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gsr__SC_USCORECRS_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__DateTime_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__DateTime_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__DateTime_USCOREPropertyType(struct soap*, const char*, int, const gco__DateTime_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__DateTime_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__DateTime_USCOREPropertyType(struct soap*, const char*, gco__DateTime_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__DateTime_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__DateTime_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__DateTime_USCOREPropertyType * soap_new_gco__DateTime_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__DateTime_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__DateTime_USCOREPropertyType * soap_new_req_gco__DateTime_USCOREPropertyType(
	struct soap *soap)
{
	gco__DateTime_USCOREPropertyType *_p = soap_new_gco__DateTime_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__DateTime_USCOREPropertyType * soap_new_set_gco__DateTime_USCOREPropertyType(
	struct soap *soap,
	__gco__DateTime_USCOREPropertyType_sequence *__DateTime_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gco__DateTime_USCOREPropertyType *_p = soap_new_gco__DateTime_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__DateTime_USCOREPropertyType::__DateTime_USCOREPropertyType_sequence = __DateTime_USCOREPropertyType_sequence;
		_p->gco__DateTime_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__DateTime_USCOREPropertyType(struct soap *soap, gco__DateTime_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:DateTime_PropertyType", "gco:DateTime_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__DateTime_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__DateTime_USCOREPropertyType(struct soap*, gco__DateTime_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__DateTime_USCOREPropertyType(struct soap *soap, gco__DateTime_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__DateTime_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CodeListValue_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CodeListValue_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__CodeListValue_USCOREType(struct soap*, const char*, int, const gco__CodeListValue_USCOREType *, const char*);
SOAP_FMAC3 gco__CodeListValue_USCOREType * SOAP_FMAC4 soap_in_gco__CodeListValue_USCOREType(struct soap*, const char*, gco__CodeListValue_USCOREType *, const char*);
SOAP_FMAC1 gco__CodeListValue_USCOREType * SOAP_FMAC2 soap_instantiate_gco__CodeListValue_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gco__CodeListValue_USCOREType * soap_new_gco__CodeListValue_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__CodeListValue_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gco__CodeListValue_USCOREType * soap_new_req_gco__CodeListValue_USCOREType(
	struct soap *soap,
	const std::string& __item,
	const std::string& codeList,
	const std::string& codeListValue)
{
	gco__CodeListValue_USCOREType *_p = soap_new_gco__CodeListValue_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__CodeListValue_USCOREType::__item = __item;
		_p->gco__CodeListValue_USCOREType::codeList = codeList;
		_p->gco__CodeListValue_USCOREType::codeListValue = codeListValue;
	}
	return _p;
}

inline gco__CodeListValue_USCOREType * soap_new_set_gco__CodeListValue_USCOREType(
	struct soap *soap,
	const std::string& __item,
	const std::string& codeList,
	const std::string& codeListValue,
	std::string *codeSpace)
{
	gco__CodeListValue_USCOREType *_p = soap_new_gco__CodeListValue_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__CodeListValue_USCOREType::__item = __item;
		_p->gco__CodeListValue_USCOREType::codeList = codeList;
		_p->gco__CodeListValue_USCOREType::codeListValue = codeListValue;
		_p->gco__CodeListValue_USCOREType::codeSpace = codeSpace;
	}
	return _p;
}

inline int soap_write_gco__CodeListValue_USCOREType(struct soap *soap, gco__CodeListValue_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:CodeListValue_Type", "gco:CodeListValue_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__CodeListValue_USCOREType * SOAP_FMAC4 soap_get_gco__CodeListValue_USCOREType(struct soap*, gco__CodeListValue_USCOREType *, const char*, const char*);

inline int soap_read_gco__CodeListValue_USCOREType(struct soap *soap, gco__CodeListValue_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__CodeListValue_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Date_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__Date_USCOREPropertyType(struct soap*, const char*, int, const gco__Date_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__Date_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__Date_USCOREPropertyType(struct soap*, const char*, gco__Date_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__Date_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Date_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__Date_USCOREPropertyType * soap_new_gco__Date_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__Date_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__Date_USCOREPropertyType * soap_new_req_gco__Date_USCOREPropertyType(
	struct soap *soap,
	const union _gco__union_Date_USCOREPropertyType& union_Date_USCOREPropertyType)
{
	gco__Date_USCOREPropertyType *_p = soap_new_gco__Date_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__Date_USCOREPropertyType::union_Date_USCOREPropertyType = union_Date_USCOREPropertyType;
	}
	return _p;
}

inline gco__Date_USCOREPropertyType * soap_new_set_gco__Date_USCOREPropertyType(
	struct soap *soap,
	int __union_Date_USCOREPropertyType,
	const union _gco__union_Date_USCOREPropertyType& union_Date_USCOREPropertyType,
	std::string *gco__nilReason)
{
	gco__Date_USCOREPropertyType *_p = soap_new_gco__Date_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__Date_USCOREPropertyType::__union_Date_USCOREPropertyType = __union_Date_USCOREPropertyType;
		_p->gco__Date_USCOREPropertyType::union_Date_USCOREPropertyType = union_Date_USCOREPropertyType;
		_p->gco__Date_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__Date_USCOREPropertyType(struct soap *soap, gco__Date_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:Date_PropertyType", "gco:Date_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__Date_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__Date_USCOREPropertyType(struct soap*, gco__Date_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__Date_USCOREPropertyType(struct soap *soap, gco__Date_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__Date_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Real_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Real_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__Real_USCOREPropertyType(struct soap*, const char*, int, const gco__Real_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__Real_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__Real_USCOREPropertyType(struct soap*, const char*, gco__Real_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__Real_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Real_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__Real_USCOREPropertyType * soap_new_gco__Real_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__Real_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__Real_USCOREPropertyType * soap_new_req_gco__Real_USCOREPropertyType(
	struct soap *soap)
{
	gco__Real_USCOREPropertyType *_p = soap_new_gco__Real_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__Real_USCOREPropertyType * soap_new_set_gco__Real_USCOREPropertyType(
	struct soap *soap,
	__gco__Real_USCOREPropertyType_sequence *__Real_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gco__Real_USCOREPropertyType *_p = soap_new_gco__Real_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__Real_USCOREPropertyType::__Real_USCOREPropertyType_sequence = __Real_USCOREPropertyType_sequence;
		_p->gco__Real_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__Real_USCOREPropertyType(struct soap *soap, gco__Real_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:Real_PropertyType", "gco:Real_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__Real_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__Real_USCOREPropertyType(struct soap*, gco__Real_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__Real_USCOREPropertyType(struct soap *soap, gco__Real_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__Real_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Boolean_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__Boolean_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__Boolean_USCOREPropertyType(struct soap*, const char*, int, const gco__Boolean_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__Boolean_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__Boolean_USCOREPropertyType(struct soap*, const char*, gco__Boolean_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__Boolean_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Boolean_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__Boolean_USCOREPropertyType * soap_new_gco__Boolean_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__Boolean_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__Boolean_USCOREPropertyType * soap_new_req_gco__Boolean_USCOREPropertyType(
	struct soap *soap)
{
	gco__Boolean_USCOREPropertyType *_p = soap_new_gco__Boolean_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__Boolean_USCOREPropertyType * soap_new_set_gco__Boolean_USCOREPropertyType(
	struct soap *soap,
	__gco__Boolean_USCOREPropertyType_sequence *__Boolean_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gco__Boolean_USCOREPropertyType *_p = soap_new_gco__Boolean_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__Boolean_USCOREPropertyType::__Boolean_USCOREPropertyType_sequence = __Boolean_USCOREPropertyType_sequence;
		_p->gco__Boolean_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__Boolean_USCOREPropertyType(struct soap *soap, gco__Boolean_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:Boolean_PropertyType", "gco:Boolean_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__Boolean_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__Boolean_USCOREPropertyType(struct soap*, gco__Boolean_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__Boolean_USCOREPropertyType(struct soap *soap, gco__Boolean_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__Boolean_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CharacterString_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__CharacterString_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__CharacterString_USCOREPropertyType(struct soap*, const char*, int, const gco__CharacterString_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__CharacterString_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__CharacterString_USCOREPropertyType(struct soap*, const char*, gco__CharacterString_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__CharacterString_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__CharacterString_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__CharacterString_USCOREPropertyType * soap_new_gco__CharacterString_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__CharacterString_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__CharacterString_USCOREPropertyType * soap_new_req_gco__CharacterString_USCOREPropertyType(
	struct soap *soap)
{
	gco__CharacterString_USCOREPropertyType *_p = soap_new_gco__CharacterString_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__CharacterString_USCOREPropertyType * soap_new_set_gco__CharacterString_USCOREPropertyType(
	struct soap *soap,
	__gco__CharacterString_USCOREPropertyType_sequence *__CharacterString_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gco__CharacterString_USCOREPropertyType *_p = soap_new_gco__CharacterString_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__CharacterString_USCOREPropertyType::__CharacterString_USCOREPropertyType_sequence = __CharacterString_USCOREPropertyType_sequence;
		_p->gco__CharacterString_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__CharacterString_USCOREPropertyType(struct soap *soap, gco__CharacterString_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:CharacterString_PropertyType", "gco:CharacterString_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__CharacterString_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__CharacterString_USCOREPropertyType(struct soap*, gco__CharacterString_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__CharacterString_USCOREPropertyType(struct soap *soap, gco__CharacterString_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__CharacterString_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gco__AbstractObject_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gco__AbstractObject_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__AbstractObject_USCOREType(struct soap*, const char*, int, const gco__AbstractObject_USCOREType *, const char*);
SOAP_FMAC3 gco__AbstractObject_USCOREType * SOAP_FMAC4 soap_in_gco__AbstractObject_USCOREType(struct soap*, const char*, gco__AbstractObject_USCOREType *, const char*);
SOAP_FMAC1 gco__AbstractObject_USCOREType * SOAP_FMAC2 soap_instantiate_gco__AbstractObject_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gco__AbstractObject_USCOREType * soap_new_gco__AbstractObject_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__AbstractObject_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gco__AbstractObject_USCOREType * soap_new_req_gco__AbstractObject_USCOREType(
	struct soap *soap)
{
	gco__AbstractObject_USCOREType *_p = soap_new_gco__AbstractObject_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__AbstractObject_USCOREType * soap_new_set_gco__AbstractObject_USCOREType(
	struct soap *soap,
	std::string *id,
	std::string *uuid)
{
	gco__AbstractObject_USCOREType *_p = soap_new_gco__AbstractObject_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__AbstractObject_USCOREType::id = id;
		_p->gco__AbstractObject_USCOREType::uuid = uuid;
	}
	return _p;
}

inline int soap_write_gco__AbstractObject_USCOREType(struct soap *soap, gco__AbstractObject_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:AbstractObject_Type", "gco:AbstractObject_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__AbstractObject_USCOREType * SOAP_FMAC4 soap_get_gco__AbstractObject_USCOREType(struct soap*, gco__AbstractObject_USCOREType *, const char*, const char*);

inline int soap_read_gco__AbstractObject_USCOREType(struct soap *soap, gco__AbstractObject_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__AbstractObject_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gts__TM_USCOREPrimitive_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gts__TM_USCOREPrimitive_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, const char*, int, const gts__TM_USCOREPrimitive_USCOREPropertyType *, const char*);
SOAP_FMAC3 gts__TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC4 soap_in_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, const char*, gts__TM_USCOREPrimitive_USCOREPropertyType *, const char*);
SOAP_FMAC1 gts__TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gts__TM_USCOREPrimitive_USCOREPropertyType * soap_new_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gts__TM_USCOREPrimitive_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gts__TM_USCOREPrimitive_USCOREPropertyType * soap_new_req_gts__TM_USCOREPrimitive_USCOREPropertyType(
	struct soap *soap)
{
	gts__TM_USCOREPrimitive_USCOREPropertyType *_p = soap_new_gts__TM_USCOREPrimitive_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gts__TM_USCOREPrimitive_USCOREPropertyType * soap_new_set_gts__TM_USCOREPrimitive_USCOREPropertyType(
	struct soap *soap,
	__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *__TM_USCOREPrimitive_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gts__TM_USCOREPrimitive_USCOREPropertyType *_p = soap_new_gts__TM_USCOREPrimitive_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::__TM_USCOREPrimitive_USCOREPropertyType_sequence = __TM_USCOREPrimitive_USCOREPropertyType_sequence;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::uuidref = uuidref;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__type = xlink__type;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__href = xlink__href;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__role = xlink__role;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__title = xlink__title;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__show = xlink__show;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap *soap, gts__TM_USCOREPrimitive_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gts:TM_Primitive_PropertyType", "gts:TM_Primitive_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gts__TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC4 soap_get_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, gts__TM_USCOREPrimitive_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap *soap, gts__TM_USCOREPrimitive_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gts__TM_USCOREPrimitive_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREResult_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREResult_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, const char*, int, const gmd__AbstractDQ_USCOREResult_USCOREType *, const char*);
SOAP_FMAC3 gmd__AbstractDQ_USCOREResult_USCOREType * SOAP_FMAC4 soap_in_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, const char*, gmd__AbstractDQ_USCOREResult_USCOREType *, const char*);
SOAP_FMAC1 gmd__AbstractDQ_USCOREResult_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__AbstractDQ_USCOREResult_USCOREType * soap_new_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__AbstractDQ_USCOREResult_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__AbstractDQ_USCOREResult_USCOREType * soap_new_req_gmd__AbstractDQ_USCOREResult_USCOREType(
	struct soap *soap)
{
	gmd__AbstractDQ_USCOREResult_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREResult_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__AbstractDQ_USCOREResult_USCOREType * soap_new_set_gmd__AbstractDQ_USCOREResult_USCOREType(
	struct soap *soap,
	std::string *id1,
	std::string *uuid1)
{
	gmd__AbstractDQ_USCOREResult_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREResult_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREResult_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:AbstractDQ_Result_Type", "gmd:AbstractDQ_Result_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__AbstractDQ_USCOREResult_USCOREType * SOAP_FMAC4 soap_get_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, gmd__AbstractDQ_USCOREResult_USCOREType *, const char*, const char*);

inline int soap_read_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREResult_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__AbstractDQ_USCOREResult_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, int, const gmd__DQ_USCOREResult_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, gmd__DQ_USCOREResult_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__DQ_USCOREResult_USCOREPropertyType * soap_new_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__DQ_USCOREResult_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__DQ_USCOREResult_USCOREPropertyType * soap_new_req_gmd__DQ_USCOREResult_USCOREPropertyType(
	struct soap *soap)
{
	gmd__DQ_USCOREResult_USCOREPropertyType *_p = soap_new_gmd__DQ_USCOREResult_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__DQ_USCOREResult_USCOREPropertyType * soap_new_set_gmd__DQ_USCOREResult_USCOREPropertyType(
	struct soap *soap,
	__gmd__DQ_USCOREResult_USCOREPropertyType_sequence *__DQ_USCOREResult_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__DQ_USCOREResult_USCOREPropertyType *_p = soap_new_gmd__DQ_USCOREResult_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::__DQ_USCOREResult_USCOREPropertyType_sequence = __DQ_USCOREResult_USCOREPropertyType_sequence;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap *soap, gmd__DQ_USCOREResult_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:DQ_Result_PropertyType", "gmd:DQ_Result_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, gmd__DQ_USCOREResult_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap *soap, gmd__DQ_USCOREResult_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__DQ_USCOREResult_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, const char*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * soap_new_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * soap_new_req_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *_p = soap_new_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * soap_new_set_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *_p = soap_new_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType::__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence = __DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence;
		_p->gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap *soap, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:DQ_EvaluationMethodTypeCode_PropertyType", "gmd:DQ_EvaluationMethodTypeCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap *soap, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORESeries_USCOREType(struct soap*, const char*, int, const gmd__CI_USCORESeries_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCORESeries_USCOREType(struct soap*, const char*, gmd__CI_USCORESeries_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCORESeries_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORESeries_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORESeries_USCOREType * soap_new_gmd__CI_USCORESeries_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORESeries_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORESeries_USCOREType * soap_new_req_gmd__CI_USCORESeries_USCOREType(
	struct soap *soap)
{
	gmd__CI_USCORESeries_USCOREType *_p = soap_new_gmd__CI_USCORESeries_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORESeries_USCOREType * soap_new_set_gmd__CI_USCORESeries_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *name,
	gco__CharacterString_USCOREPropertyType *issueIdentification,
	gco__CharacterString_USCOREPropertyType *page,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCORESeries_USCOREType *_p = soap_new_gmd__CI_USCORESeries_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORESeries_USCOREType::name = name;
		_p->gmd__CI_USCORESeries_USCOREType::issueIdentification = issueIdentification;
		_p->gmd__CI_USCORESeries_USCOREType::page = page;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORESeries_USCOREType(struct soap *soap, gmd__CI_USCORESeries_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Series_Type", "gmd:CI_Series_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCORESeries_USCOREType(struct soap*, gmd__CI_USCORESeries_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORESeries_USCOREType(struct soap *soap, gmd__CI_USCORESeries_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORESeries_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORESeries_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCORESeries_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORESeries_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCORESeries_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORESeries_USCOREPropertyType * soap_new_gmd__CI_USCORESeries_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORESeries_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORESeries_USCOREPropertyType * soap_new_req_gmd__CI_USCORESeries_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCORESeries_USCOREPropertyType *_p = soap_new_gmd__CI_USCORESeries_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORESeries_USCOREPropertyType * soap_new_set_gmd__CI_USCORESeries_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCORESeries_USCOREPropertyType_sequence *__CI_USCORESeries_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCORESeries_USCOREPropertyType *_p = soap_new_gmd__CI_USCORESeries_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORESeries_USCOREPropertyType::__CI_USCORESeries_USCOREPropertyType_sequence = __CI_USCORESeries_USCOREPropertyType_sequence;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORESeries_USCOREPropertyType(struct soap *soap, gmd__CI_USCORESeries_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Series_PropertyType", "gmd:CI_Series_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, gmd__CI_USCORESeries_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORESeries_USCOREPropertyType(struct soap *soap, gmd__CI_USCORESeries_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORESeries_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * soap_new_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * soap_new_req_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * soap_new_set_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREPresentationFormCode_USCOREPropertyType::__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence = __CI_USCOREPresentationFormCode_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREPresentationFormCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_PresentationFormCode_PropertyType", "gmd:CI_PresentationFormCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORERoleCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORERoleCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCORERoleCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCORERoleCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORERoleCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCORERoleCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORERoleCode_USCOREPropertyType * soap_new_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORERoleCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORERoleCode_USCOREPropertyType * soap_new_req_gmd__CI_USCORERoleCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCORERoleCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCORERoleCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORERoleCode_USCOREPropertyType * soap_new_set_gmd__CI_USCORERoleCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *__CI_USCORERoleCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__CI_USCORERoleCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCORERoleCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORERoleCode_USCOREPropertyType::__CI_USCORERoleCode_USCOREPropertyType_sequence = __CI_USCORERoleCode_USCOREPropertyType_sequence;
		_p->gmd__CI_USCORERoleCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCORERoleCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_RoleCode_PropertyType", "gmd:CI_RoleCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORERoleCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, gmd__CI_USCORERoleCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCORERoleCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORERoleCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * soap_new_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * soap_new_req_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * soap_new_set_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType::__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence = __CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_OnLineFunctionCode_PropertyType", "gmd:CI_OnLineFunctionCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__URL_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__URL_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__URL_USCOREPropertyType(struct soap*, const char*, int, const gmd__URL_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__URL_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__URL_USCOREPropertyType(struct soap*, const char*, gmd__URL_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__URL_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__URL_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__URL_USCOREPropertyType * soap_new_gmd__URL_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__URL_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__URL_USCOREPropertyType * soap_new_req_gmd__URL_USCOREPropertyType(
	struct soap *soap)
{
	gmd__URL_USCOREPropertyType *_p = soap_new_gmd__URL_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__URL_USCOREPropertyType * soap_new_set_gmd__URL_USCOREPropertyType(
	struct soap *soap,
	__gmd__URL_USCOREPropertyType_sequence *__URL_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__URL_USCOREPropertyType *_p = soap_new_gmd__URL_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__URL_USCOREPropertyType::__URL_USCOREPropertyType_sequence = __URL_USCOREPropertyType_sequence;
		_p->gmd__URL_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__URL_USCOREPropertyType(struct soap *soap, gmd__URL_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:URL_PropertyType", "gmd:URL_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__URL_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__URL_USCOREPropertyType(struct soap*, gmd__URL_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__URL_USCOREPropertyType(struct soap *soap, gmd__URL_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__URL_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREOnlineResource_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, const char*, gmd__CI_USCOREOnlineResource_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREOnlineResource_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREOnlineResource_USCOREType * soap_new_gmd__CI_USCOREOnlineResource_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREOnlineResource_USCOREType * soap_new_req_gmd__CI_USCOREOnlineResource_USCOREType(
	struct soap *soap,
	gmd__URL_USCOREPropertyType *linkage)
{
	gmd__CI_USCOREOnlineResource_USCOREType *_p = soap_new_gmd__CI_USCOREOnlineResource_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREOnlineResource_USCOREType::linkage = linkage;
	}
	return _p;
}

inline gmd__CI_USCOREOnlineResource_USCOREType * soap_new_set_gmd__CI_USCOREOnlineResource_USCOREType(
	struct soap *soap,
	gmd__URL_USCOREPropertyType *linkage,
	gco__CharacterString_USCOREPropertyType *protocol,
	gco__CharacterString_USCOREPropertyType *applicationProfile,
	gco__CharacterString_USCOREPropertyType *name,
	gco__CharacterString_USCOREPropertyType *description,
	gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *function,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREOnlineResource_USCOREType *_p = soap_new_gmd__CI_USCOREOnlineResource_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREOnlineResource_USCOREType::linkage = linkage;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::protocol = protocol;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::applicationProfile = applicationProfile;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::name = name;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::description = description;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::function = function;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREOnlineResource_USCOREType(struct soap *soap, gmd__CI_USCOREOnlineResource_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_OnlineResource_Type", "gmd:CI_OnlineResource_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREOnlineResource_USCOREType(struct soap *soap, gmd__CI_USCOREOnlineResource_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREOnlineResource_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREOnlineResource_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREOnlineResource_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREOnlineResource_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREOnlineResource_USCOREPropertyType * soap_new_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREOnlineResource_USCOREPropertyType * soap_new_req_gmd__CI_USCOREOnlineResource_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREOnlineResource_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREOnlineResource_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREOnlineResource_USCOREPropertyType * soap_new_set_gmd__CI_USCOREOnlineResource_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *__CI_USCOREOnlineResource_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREOnlineResource_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREOnlineResource_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::__CI_USCOREOnlineResource_USCOREPropertyType_sequence = __CI_USCOREOnlineResource_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREOnlineResource_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_OnlineResource_PropertyType", "gmd:CI_OnlineResource_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREOnlineResource_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREOnlineResource_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREAddress_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREAddress_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREAddress_USCOREType(struct soap*, const char*, gmd__CI_USCOREAddress_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREAddress_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREAddress_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREAddress_USCOREType * soap_new_gmd__CI_USCOREAddress_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREAddress_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREAddress_USCOREType * soap_new_req_gmd__CI_USCOREAddress_USCOREType(
	struct soap *soap)
{
	gmd__CI_USCOREAddress_USCOREType *_p = soap_new_gmd__CI_USCOREAddress_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREAddress_USCOREType * soap_new_set_gmd__CI_USCOREAddress_USCOREType(
	struct soap *soap,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & deliveryPoint,
	gco__CharacterString_USCOREPropertyType *city,
	gco__CharacterString_USCOREPropertyType *administrativeArea,
	gco__CharacterString_USCOREPropertyType *postalCode,
	gco__CharacterString_USCOREPropertyType *country,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & electronicMailAddress,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREAddress_USCOREType *_p = soap_new_gmd__CI_USCOREAddress_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREAddress_USCOREType::deliveryPoint = deliveryPoint;
		_p->gmd__CI_USCOREAddress_USCOREType::city = city;
		_p->gmd__CI_USCOREAddress_USCOREType::administrativeArea = administrativeArea;
		_p->gmd__CI_USCOREAddress_USCOREType::postalCode = postalCode;
		_p->gmd__CI_USCOREAddress_USCOREType::country = country;
		_p->gmd__CI_USCOREAddress_USCOREType::electronicMailAddress = electronicMailAddress;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREAddress_USCOREType(struct soap *soap, gmd__CI_USCOREAddress_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Address_Type", "gmd:CI_Address_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREAddress_USCOREType(struct soap*, gmd__CI_USCOREAddress_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREAddress_USCOREType(struct soap *soap, gmd__CI_USCOREAddress_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREAddress_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREAddress_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREAddress_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREAddress_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREAddress_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREAddress_USCOREPropertyType * soap_new_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREAddress_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREAddress_USCOREPropertyType * soap_new_req_gmd__CI_USCOREAddress_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREAddress_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREAddress_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREAddress_USCOREPropertyType * soap_new_set_gmd__CI_USCOREAddress_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREAddress_USCOREPropertyType_sequence *__CI_USCOREAddress_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREAddress_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREAddress_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::__CI_USCOREAddress_USCOREPropertyType_sequence = __CI_USCOREAddress_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREAddress_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Address_PropertyType", "gmd:CI_Address_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, gmd__CI_USCOREAddress_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREAddress_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREAddress_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORETelephone_USCOREType(struct soap*, const char*, int, const gmd__CI_USCORETelephone_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCORETelephone_USCOREType(struct soap*, const char*, gmd__CI_USCORETelephone_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCORETelephone_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORETelephone_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORETelephone_USCOREType * soap_new_gmd__CI_USCORETelephone_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORETelephone_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORETelephone_USCOREType * soap_new_req_gmd__CI_USCORETelephone_USCOREType(
	struct soap *soap)
{
	gmd__CI_USCORETelephone_USCOREType *_p = soap_new_gmd__CI_USCORETelephone_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORETelephone_USCOREType * soap_new_set_gmd__CI_USCORETelephone_USCOREType(
	struct soap *soap,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & voice,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & facsimile,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCORETelephone_USCOREType *_p = soap_new_gmd__CI_USCORETelephone_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORETelephone_USCOREType::voice = voice;
		_p->gmd__CI_USCORETelephone_USCOREType::facsimile = facsimile;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORETelephone_USCOREType(struct soap *soap, gmd__CI_USCORETelephone_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Telephone_Type", "gmd:CI_Telephone_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCORETelephone_USCOREType(struct soap*, gmd__CI_USCORETelephone_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORETelephone_USCOREType(struct soap *soap, gmd__CI_USCORETelephone_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORETelephone_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORETelephone_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCORETelephone_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORETelephone_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCORETelephone_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORETelephone_USCOREPropertyType * soap_new_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORETelephone_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORETelephone_USCOREPropertyType * soap_new_req_gmd__CI_USCORETelephone_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCORETelephone_USCOREPropertyType *_p = soap_new_gmd__CI_USCORETelephone_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORETelephone_USCOREPropertyType * soap_new_set_gmd__CI_USCORETelephone_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCORETelephone_USCOREPropertyType_sequence *__CI_USCORETelephone_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCORETelephone_USCOREPropertyType *_p = soap_new_gmd__CI_USCORETelephone_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::__CI_USCORETelephone_USCOREPropertyType_sequence = __CI_USCORETelephone_USCOREPropertyType_sequence;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap *soap, gmd__CI_USCORETelephone_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Telephone_PropertyType", "gmd:CI_Telephone_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, gmd__CI_USCORETelephone_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap *soap, gmd__CI_USCORETelephone_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORETelephone_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREContact_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREContact_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREContact_USCOREType(struct soap*, const char*, gmd__CI_USCOREContact_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREContact_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREContact_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREContact_USCOREType * soap_new_gmd__CI_USCOREContact_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREContact_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREContact_USCOREType * soap_new_req_gmd__CI_USCOREContact_USCOREType(
	struct soap *soap)
{
	gmd__CI_USCOREContact_USCOREType *_p = soap_new_gmd__CI_USCOREContact_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREContact_USCOREType * soap_new_set_gmd__CI_USCOREContact_USCOREType(
	struct soap *soap,
	gmd__CI_USCORETelephone_USCOREPropertyType *phone,
	gmd__CI_USCOREAddress_USCOREPropertyType *address,
	gmd__CI_USCOREOnlineResource_USCOREPropertyType *onlineResource,
	gco__CharacterString_USCOREPropertyType *hoursOfService,
	gco__CharacterString_USCOREPropertyType *contactInstructions,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREContact_USCOREType *_p = soap_new_gmd__CI_USCOREContact_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREContact_USCOREType::phone = phone;
		_p->gmd__CI_USCOREContact_USCOREType::address = address;
		_p->gmd__CI_USCOREContact_USCOREType::onlineResource = onlineResource;
		_p->gmd__CI_USCOREContact_USCOREType::hoursOfService = hoursOfService;
		_p->gmd__CI_USCOREContact_USCOREType::contactInstructions = contactInstructions;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREContact_USCOREType(struct soap *soap, gmd__CI_USCOREContact_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Contact_Type", "gmd:CI_Contact_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREContact_USCOREType(struct soap*, gmd__CI_USCOREContact_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREContact_USCOREType(struct soap *soap, gmd__CI_USCOREContact_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREContact_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREContact_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREContact_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREContact_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREContact_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREContact_USCOREPropertyType * soap_new_gmd__CI_USCOREContact_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREContact_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREContact_USCOREPropertyType * soap_new_req_gmd__CI_USCOREContact_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREContact_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREContact_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREContact_USCOREPropertyType * soap_new_set_gmd__CI_USCOREContact_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREContact_USCOREPropertyType_sequence *__CI_USCOREContact_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREContact_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREContact_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREContact_USCOREPropertyType::__CI_USCOREContact_USCOREPropertyType_sequence = __CI_USCOREContact_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREContact_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREContact_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Contact_PropertyType", "gmd:CI_Contact_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, gmd__CI_USCOREContact_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREContact_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREContact_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREContact_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREResponsibleParty_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, const char*, gmd__CI_USCOREResponsibleParty_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREResponsibleParty_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREResponsibleParty_USCOREType * soap_new_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREResponsibleParty_USCOREType * soap_new_req_gmd__CI_USCOREResponsibleParty_USCOREType(
	struct soap *soap,
	gmd__CI_USCORERoleCode_USCOREPropertyType *role)
{
	gmd__CI_USCOREResponsibleParty_USCOREType *_p = soap_new_gmd__CI_USCOREResponsibleParty_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::role = role;
	}
	return _p;
}

inline gmd__CI_USCOREResponsibleParty_USCOREType * soap_new_set_gmd__CI_USCOREResponsibleParty_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *individualName,
	gco__CharacterString_USCOREPropertyType *organisationName,
	gco__CharacterString_USCOREPropertyType *positionName,
	gmd__CI_USCOREContact_USCOREPropertyType *contactInfo,
	gmd__CI_USCORERoleCode_USCOREPropertyType *role,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREResponsibleParty_USCOREType *_p = soap_new_gmd__CI_USCOREResponsibleParty_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::individualName = individualName;
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::organisationName = organisationName;
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::positionName = positionName;
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::contactInfo = contactInfo;
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::role = role;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap *soap, gmd__CI_USCOREResponsibleParty_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_ResponsibleParty_Type", "gmd:CI_ResponsibleParty_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap *soap, gmd__CI_USCOREResponsibleParty_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREResponsibleParty_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREResponsibleParty_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREResponsibleParty_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREResponsibleParty_USCOREPropertyType * soap_new_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREResponsibleParty_USCOREPropertyType * soap_new_req_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREResponsibleParty_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREResponsibleParty_USCOREPropertyType * soap_new_set_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *__CI_USCOREResponsibleParty_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREResponsibleParty_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::__CI_USCOREResponsibleParty_USCOREPropertyType_sequence = __CI_USCOREResponsibleParty_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREResponsibleParty_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_ResponsibleParty_PropertyType", "gmd:CI_ResponsibleParty_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREDateTypeCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREDateTypeCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREDateTypeCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREDateTypeCode_USCOREPropertyType * soap_new_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREDateTypeCode_USCOREPropertyType * soap_new_req_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREDateTypeCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREDateTypeCode_USCOREPropertyType * soap_new_set_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *__CI_USCOREDateTypeCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__CI_USCOREDateTypeCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREDateTypeCode_USCOREPropertyType::__CI_USCOREDateTypeCode_USCOREPropertyType_sequence = __CI_USCOREDateTypeCode_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREDateTypeCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREDateTypeCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_DateTypeCode_PropertyType", "gmd:CI_DateTypeCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREDateTypeCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREDate_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREDate_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREDate_USCOREType(struct soap*, const char*, gmd__CI_USCOREDate_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREDate_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDate_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREDate_USCOREType * soap_new_gmd__CI_USCOREDate_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREDate_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREDate_USCOREType * soap_new_req_gmd__CI_USCOREDate_USCOREType(
	struct soap *soap,
	gco__Date_USCOREPropertyType *date,
	gmd__CI_USCOREDateTypeCode_USCOREPropertyType *dateType)
{
	gmd__CI_USCOREDate_USCOREType *_p = soap_new_gmd__CI_USCOREDate_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREDate_USCOREType::date = date;
		_p->gmd__CI_USCOREDate_USCOREType::dateType = dateType;
	}
	return _p;
}

inline gmd__CI_USCOREDate_USCOREType * soap_new_set_gmd__CI_USCOREDate_USCOREType(
	struct soap *soap,
	gco__Date_USCOREPropertyType *date,
	gmd__CI_USCOREDateTypeCode_USCOREPropertyType *dateType,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREDate_USCOREType *_p = soap_new_gmd__CI_USCOREDate_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREDate_USCOREType::date = date;
		_p->gmd__CI_USCOREDate_USCOREType::dateType = dateType;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREDate_USCOREType(struct soap *soap, gmd__CI_USCOREDate_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Date_Type", "gmd:CI_Date_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREDate_USCOREType(struct soap*, gmd__CI_USCOREDate_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREDate_USCOREType(struct soap *soap, gmd__CI_USCOREDate_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREDate_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCOREDate_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREDate_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREDate_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREDate_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREDate_USCOREPropertyType * soap_new_gmd__CI_USCOREDate_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREDate_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREDate_USCOREPropertyType * soap_new_req_gmd__CI_USCOREDate_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREDate_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREDate_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREDate_USCOREPropertyType * soap_new_set_gmd__CI_USCOREDate_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREDate_USCOREPropertyType_sequence *__CI_USCOREDate_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREDate_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREDate_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREDate_USCOREPropertyType::__CI_USCOREDate_USCOREPropertyType_sequence = __CI_USCOREDate_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREDate_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREDate_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Date_PropertyType", "gmd:CI_Date_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, gmd__CI_USCOREDate_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREDate_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREDate_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREDate_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORECitation_USCOREType(struct soap*, const char*, int, const gmd__CI_USCORECitation_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCORECitation_USCOREType(struct soap*, const char*, gmd__CI_USCORECitation_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCORECitation_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORECitation_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORECitation_USCOREType * soap_new_gmd__CI_USCORECitation_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORECitation_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORECitation_USCOREType * soap_new_req_gmd__CI_USCORECitation_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *title,
	const std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> & date)
{
	gmd__CI_USCORECitation_USCOREType *_p = soap_new_gmd__CI_USCORECitation_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORECitation_USCOREType::title = title;
		_p->gmd__CI_USCORECitation_USCOREType::date = date;
	}
	return _p;
}

inline gmd__CI_USCORECitation_USCOREType * soap_new_set_gmd__CI_USCORECitation_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *title,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & alternateTitle,
	const std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> & date,
	gco__CharacterString_USCOREPropertyType *edition,
	gco__Date_USCOREPropertyType *editionDate,
	const std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> & identifier,
	const std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> & citedResponsibleParty,
	const std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> & presentationForm,
	gmd__CI_USCORESeries_USCOREPropertyType *series,
	gco__CharacterString_USCOREPropertyType *otherCitationDetails,
	gco__CharacterString_USCOREPropertyType *collectiveTitle,
	gco__CharacterString_USCOREPropertyType *ISBN,
	gco__CharacterString_USCOREPropertyType *ISSN,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCORECitation_USCOREType *_p = soap_new_gmd__CI_USCORECitation_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORECitation_USCOREType::title = title;
		_p->gmd__CI_USCORECitation_USCOREType::alternateTitle = alternateTitle;
		_p->gmd__CI_USCORECitation_USCOREType::date = date;
		_p->gmd__CI_USCORECitation_USCOREType::edition = edition;
		_p->gmd__CI_USCORECitation_USCOREType::editionDate = editionDate;
		_p->gmd__CI_USCORECitation_USCOREType::identifier = identifier;
		_p->gmd__CI_USCORECitation_USCOREType::citedResponsibleParty = citedResponsibleParty;
		_p->gmd__CI_USCORECitation_USCOREType::presentationForm = presentationForm;
		_p->gmd__CI_USCORECitation_USCOREType::series = series;
		_p->gmd__CI_USCORECitation_USCOREType::otherCitationDetails = otherCitationDetails;
		_p->gmd__CI_USCORECitation_USCOREType::collectiveTitle = collectiveTitle;
		_p->gmd__CI_USCORECitation_USCOREType::ISBN = ISBN;
		_p->gmd__CI_USCORECitation_USCOREType::ISSN = ISSN;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORECitation_USCOREType(struct soap *soap, gmd__CI_USCORECitation_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Citation_Type", "gmd:CI_Citation_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCORECitation_USCOREType(struct soap*, gmd__CI_USCORECitation_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORECitation_USCOREType(struct soap *soap, gmd__CI_USCORECitation_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORECitation_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__CI_USCORECitation_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCORECitation_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORECitation_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCORECitation_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORECitation_USCOREPropertyType * soap_new_gmd__CI_USCORECitation_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORECitation_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORECitation_USCOREPropertyType * soap_new_req_gmd__CI_USCORECitation_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCORECitation_USCOREPropertyType *_p = soap_new_gmd__CI_USCORECitation_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORECitation_USCOREPropertyType * soap_new_set_gmd__CI_USCORECitation_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCORECitation_USCOREPropertyType_sequence *__CI_USCORECitation_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCORECitation_USCOREPropertyType *_p = soap_new_gmd__CI_USCORECitation_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORECitation_USCOREPropertyType::__CI_USCORECitation_USCOREPropertyType_sequence = __CI_USCORECitation_USCOREPropertyType_sequence;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORECitation_USCOREPropertyType(struct soap *soap, gmd__CI_USCORECitation_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Citation_PropertyType", "gmd:CI_Citation_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, gmd__CI_USCORECitation_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORECitation_USCOREPropertyType(struct soap *soap, gmd__CI_USCORECitation_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORECitation_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, const char*, int, const gmd__MD_USCOREIdentifier_USCOREType *, const char*);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREType * SOAP_FMAC4 soap_in_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, const char*, gmd__MD_USCOREIdentifier_USCOREType *, const char*);
SOAP_FMAC1 gmd__MD_USCOREIdentifier_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__MD_USCOREIdentifier_USCOREType * soap_new_gmd__MD_USCOREIdentifier_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__MD_USCOREIdentifier_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__MD_USCOREIdentifier_USCOREType * soap_new_req_gmd__MD_USCOREIdentifier_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *code)
{
	gmd__MD_USCOREIdentifier_USCOREType *_p = soap_new_gmd__MD_USCOREIdentifier_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__MD_USCOREIdentifier_USCOREType::code = code;
	}
	return _p;
}

inline gmd__MD_USCOREIdentifier_USCOREType * soap_new_set_gmd__MD_USCOREIdentifier_USCOREType(
	struct soap *soap,
	gmd__CI_USCORECitation_USCOREPropertyType *authority,
	gco__CharacterString_USCOREPropertyType *code,
	std::string *id1,
	std::string *uuid1)
{
	gmd__MD_USCOREIdentifier_USCOREType *_p = soap_new_gmd__MD_USCOREIdentifier_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__MD_USCOREIdentifier_USCOREType::authority = authority;
		_p->gmd__MD_USCOREIdentifier_USCOREType::code = code;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__MD_USCOREIdentifier_USCOREType(struct soap *soap, gmd__MD_USCOREIdentifier_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:MD_Identifier_Type", "gmd:MD_Identifier_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREType * SOAP_FMAC4 soap_get_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, gmd__MD_USCOREIdentifier_USCOREType *, const char*, const char*);

inline int soap_read_gmd__MD_USCOREIdentifier_USCOREType(struct soap *soap, gmd__MD_USCOREIdentifier_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__MD_USCOREIdentifier_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, int, const gmd__MD_USCOREIdentifier_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, gmd__MD_USCOREIdentifier_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__MD_USCOREIdentifier_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__MD_USCOREIdentifier_USCOREPropertyType * soap_new_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__MD_USCOREIdentifier_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__MD_USCOREIdentifier_USCOREPropertyType * soap_new_req_gmd__MD_USCOREIdentifier_USCOREPropertyType(
	struct soap *soap)
{
	gmd__MD_USCOREIdentifier_USCOREPropertyType *_p = soap_new_gmd__MD_USCOREIdentifier_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__MD_USCOREIdentifier_USCOREPropertyType * soap_new_set_gmd__MD_USCOREIdentifier_USCOREPropertyType(
	struct soap *soap,
	__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *__MD_USCOREIdentifier_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__MD_USCOREIdentifier_USCOREPropertyType *_p = soap_new_gmd__MD_USCOREIdentifier_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::__MD_USCOREIdentifier_USCOREPropertyType_sequence = __MD_USCOREIdentifier_USCOREPropertyType_sequence;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap *soap, gmd__MD_USCOREIdentifier_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:MD_Identifier_PropertyType", "gmd:MD_Identifier_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, gmd__MD_USCOREIdentifier_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap *soap, gmd__MD_USCOREIdentifier_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__MD_USCOREIdentifier_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREElement_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREElement_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, const char*, int, const gmd__AbstractDQ_USCOREElement_USCOREType *, const char*);
SOAP_FMAC3 gmd__AbstractDQ_USCOREElement_USCOREType * SOAP_FMAC4 soap_in_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, const char*, gmd__AbstractDQ_USCOREElement_USCOREType *, const char*);
SOAP_FMAC1 gmd__AbstractDQ_USCOREElement_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__AbstractDQ_USCOREElement_USCOREType * soap_new_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__AbstractDQ_USCOREElement_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__AbstractDQ_USCOREElement_USCOREType * soap_new_req_gmd__AbstractDQ_USCOREElement_USCOREType(
	struct soap *soap,
	const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> & result)
{
	gmd__AbstractDQ_USCOREElement_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREElement_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::result = result;
	}
	return _p;
}

inline gmd__AbstractDQ_USCOREElement_USCOREType * soap_new_set_gmd__AbstractDQ_USCOREElement_USCOREType(
	struct soap *soap,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & nameOfMeasure,
	gmd__MD_USCOREIdentifier_USCOREPropertyType *measureIdentification,
	gco__CharacterString_USCOREPropertyType *measureDescription,
	gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *evaluationMethodType,
	gco__CharacterString_USCOREPropertyType *evaluationMethodDescription,
	gmd__CI_USCORECitation_USCOREPropertyType *evaluationProcedure,
	const std::vector<gco__DateTime_USCOREPropertyType *> & dateTime,
	const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> & result,
	std::string *id1,
	std::string *uuid1)
{
	gmd__AbstractDQ_USCOREElement_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREElement_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::nameOfMeasure = nameOfMeasure;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::measureIdentification = measureIdentification;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::measureDescription = measureDescription;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationMethodType = evaluationMethodType;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationMethodDescription = evaluationMethodDescription;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationProcedure = evaluationProcedure;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::dateTime = dateTime;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::result = result;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREElement_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:AbstractDQ_Element_Type", "gmd:AbstractDQ_Element_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__AbstractDQ_USCOREElement_USCOREType * SOAP_FMAC4 soap_get_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, gmd__AbstractDQ_USCOREElement_USCOREType *, const char*, const char*);

inline int soap_read_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREElement_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__AbstractDQ_USCOREElement_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, const char*, int, const gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *, const char*);
SOAP_FMAC3 gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * SOAP_FMAC4 soap_in_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, const char*, gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *, const char*);
SOAP_FMAC1 gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * soap_new_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * soap_new_req_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(
	struct soap *soap,
	const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> & result1)
{
	gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::result = result1;
	}
	return _p;
}

inline gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * soap_new_set_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(
	struct soap *soap,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & nameOfMeasure1,
	gmd__MD_USCOREIdentifier_USCOREPropertyType *measureIdentification1,
	gco__CharacterString_USCOREPropertyType *measureDescription1,
	gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *evaluationMethodType1,
	gco__CharacterString_USCOREPropertyType *evaluationMethodDescription1,
	gmd__CI_USCORECitation_USCOREPropertyType *evaluationProcedure1,
	const std::vector<gco__DateTime_USCOREPropertyType *> & dateTime1,
	const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> & result1,
	std::string *id2,
	std::string *uuid2)
{
	gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::nameOfMeasure = nameOfMeasure1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::measureIdentification = measureIdentification1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::measureDescription = measureDescription1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationMethodType = evaluationMethodType1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationMethodDescription = evaluationMethodDescription1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationProcedure = evaluationProcedure1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::dateTime = dateTime1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::result = result1;
		_p->gco__AbstractObject_USCOREType::id = id2;
		_p->gco__AbstractObject_USCOREType::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:AbstractDQ_PositionalAccuracy_Type", "gmd:AbstractDQ_PositionalAccuracy_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * SOAP_FMAC4 soap_get_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *, const char*, const char*);

inline int soap_read_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, const char*, int, const gmd__EX_USCOREVerticalExtent_USCOREType *, const char*);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREType * SOAP_FMAC4 soap_in_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, const char*, gmd__EX_USCOREVerticalExtent_USCOREType *, const char*);
SOAP_FMAC1 gmd__EX_USCOREVerticalExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCOREVerticalExtent_USCOREType * soap_new_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCOREVerticalExtent_USCOREType * soap_new_req_gmd__EX_USCOREVerticalExtent_USCOREType(
	struct soap *soap,
	gco__Real_USCOREPropertyType *minimumValue,
	gco__Real_USCOREPropertyType *maximumValue,
	gsr__SC_USCORECRS_USCOREPropertyType *verticalCRS)
{
	gmd__EX_USCOREVerticalExtent_USCOREType *_p = soap_new_gmd__EX_USCOREVerticalExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::minimumValue = minimumValue;
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::maximumValue = maximumValue;
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::verticalCRS = verticalCRS;
	}
	return _p;
}

inline gmd__EX_USCOREVerticalExtent_USCOREType * soap_new_set_gmd__EX_USCOREVerticalExtent_USCOREType(
	struct soap *soap,
	gco__Real_USCOREPropertyType *minimumValue,
	gco__Real_USCOREPropertyType *maximumValue,
	gsr__SC_USCORECRS_USCOREPropertyType *verticalCRS,
	std::string *id1,
	std::string *uuid1)
{
	gmd__EX_USCOREVerticalExtent_USCOREType *_p = soap_new_gmd__EX_USCOREVerticalExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::minimumValue = minimumValue;
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::maximumValue = maximumValue;
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::verticalCRS = verticalCRS;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap *soap, gmd__EX_USCOREVerticalExtent_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_VerticalExtent_Type", "gmd:EX_VerticalExtent_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREType * SOAP_FMAC4 soap_get_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREType *, const char*, const char*);

inline int soap_read_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap *soap, gmd__EX_USCOREVerticalExtent_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCOREVerticalExtent_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, int, const gmd__EX_USCOREVerticalExtent_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__EX_USCOREVerticalExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCOREVerticalExtent_USCOREPropertyType * soap_new_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCOREVerticalExtent_USCOREPropertyType * soap_new_req_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(
	struct soap *soap)
{
	gmd__EX_USCOREVerticalExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__EX_USCOREVerticalExtent_USCOREPropertyType * soap_new_set_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(
	struct soap *soap,
	__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *__EX_USCOREVerticalExtent_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__EX_USCOREVerticalExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::__EX_USCOREVerticalExtent_USCOREPropertyType_sequence = __EX_USCOREVerticalExtent_USCOREPropertyType_sequence;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCOREVerticalExtent_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_VerticalExtent_PropertyType", "gmd:EX_VerticalExtent_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, const char*, int, const gmd__EX_USCORETemporalExtent_USCOREType *, const char*);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREType * SOAP_FMAC4 soap_in_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, const char*, gmd__EX_USCORETemporalExtent_USCOREType *, const char*);
SOAP_FMAC1 gmd__EX_USCORETemporalExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCORETemporalExtent_USCOREType * soap_new_gmd__EX_USCORETemporalExtent_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCORETemporalExtent_USCOREType * soap_new_req_gmd__EX_USCORETemporalExtent_USCOREType(
	struct soap *soap,
	gts__TM_USCOREPrimitive_USCOREPropertyType *extent)
{
	gmd__EX_USCORETemporalExtent_USCOREType *_p = soap_new_gmd__EX_USCORETemporalExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCORETemporalExtent_USCOREType::extent = extent;
	}
	return _p;
}

inline gmd__EX_USCORETemporalExtent_USCOREType * soap_new_set_gmd__EX_USCORETemporalExtent_USCOREType(
	struct soap *soap,
	gts__TM_USCOREPrimitive_USCOREPropertyType *extent,
	std::string *id1,
	std::string *uuid1)
{
	gmd__EX_USCORETemporalExtent_USCOREType *_p = soap_new_gmd__EX_USCORETemporalExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCORETemporalExtent_USCOREType::extent = extent;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCORETemporalExtent_USCOREType(struct soap *soap, gmd__EX_USCORETemporalExtent_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_TemporalExtent_Type", "gmd:EX_TemporalExtent_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREType * SOAP_FMAC4 soap_get_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREType *, const char*, const char*);

inline int soap_read_gmd__EX_USCORETemporalExtent_USCOREType(struct soap *soap, gmd__EX_USCORETemporalExtent_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCORETemporalExtent_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, int, const gmd__EX_USCORETemporalExtent_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCORETemporalExtent_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__EX_USCORETemporalExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCORETemporalExtent_USCOREPropertyType * soap_new_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCORETemporalExtent_USCOREPropertyType * soap_new_req_gmd__EX_USCORETemporalExtent_USCOREPropertyType(
	struct soap *soap)
{
	gmd__EX_USCORETemporalExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCORETemporalExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__EX_USCORETemporalExtent_USCOREPropertyType * soap_new_set_gmd__EX_USCORETemporalExtent_USCOREPropertyType(
	struct soap *soap,
	__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *__EX_USCORETemporalExtent_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__EX_USCORETemporalExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCORETemporalExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::__EX_USCORETemporalExtent_USCOREPropertyType_sequence = __EX_USCORETemporalExtent_USCOREPropertyType_sequence;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCORETemporalExtent_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_TemporalExtent_PropertyType", "gmd:EX_TemporalExtent_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCORETemporalExtent_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCORETemporalExtent_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, const char*, int, const gmd__AbstractEX_USCOREGeographicExtent_USCOREType *, const char*);
SOAP_FMAC3 gmd__AbstractEX_USCOREGeographicExtent_USCOREType * SOAP_FMAC4 soap_in_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, const char*, gmd__AbstractEX_USCOREGeographicExtent_USCOREType *, const char*);
SOAP_FMAC1 gmd__AbstractEX_USCOREGeographicExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__AbstractEX_USCOREGeographicExtent_USCOREType * soap_new_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__AbstractEX_USCOREGeographicExtent_USCOREType * soap_new_req_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(
	struct soap *soap)
{
	gmd__AbstractEX_USCOREGeographicExtent_USCOREType *_p = soap_new_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__AbstractEX_USCOREGeographicExtent_USCOREType * soap_new_set_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(
	struct soap *soap,
	gco__Boolean_USCOREPropertyType *extentTypeCode,
	std::string *id1,
	std::string *uuid1)
{
	gmd__AbstractEX_USCOREGeographicExtent_USCOREType *_p = soap_new_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractEX_USCOREGeographicExtent_USCOREType::extentTypeCode = extentTypeCode;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap *soap, gmd__AbstractEX_USCOREGeographicExtent_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:AbstractEX_GeographicExtent_Type", "gmd:AbstractEX_GeographicExtent_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__AbstractEX_USCOREGeographicExtent_USCOREType * SOAP_FMAC4 soap_get_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, gmd__AbstractEX_USCOREGeographicExtent_USCOREType *, const char*, const char*);

inline int soap_read_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap *soap, gmd__AbstractEX_USCOREGeographicExtent_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, int, const gmd__EX_USCOREGeographicExtent_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCOREGeographicExtent_USCOREPropertyType * soap_new_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCOREGeographicExtent_USCOREPropertyType * soap_new_req_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(
	struct soap *soap)
{
	gmd__EX_USCOREGeographicExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__EX_USCOREGeographicExtent_USCOREPropertyType * soap_new_set_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(
	struct soap *soap,
	__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *__EX_USCOREGeographicExtent_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__EX_USCOREGeographicExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::__EX_USCOREGeographicExtent_USCOREPropertyType_sequence = __EX_USCOREGeographicExtent_USCOREPropertyType_sequence;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCOREGeographicExtent_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_GeographicExtent_PropertyType", "gmd:EX_GeographicExtent_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gmd__EX_USCOREExtent_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCOREExtent_USCOREType(struct soap*, const char*, int, const gmd__EX_USCOREExtent_USCOREType *, const char*);
SOAP_FMAC3 gmd__EX_USCOREExtent_USCOREType * SOAP_FMAC4 soap_in_gmd__EX_USCOREExtent_USCOREType(struct soap*, const char*, gmd__EX_USCOREExtent_USCOREType *, const char*);
SOAP_FMAC1 gmd__EX_USCOREExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCOREExtent_USCOREType * soap_new_gmd__EX_USCOREExtent_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCOREExtent_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCOREExtent_USCOREType * soap_new_req_gmd__EX_USCOREExtent_USCOREType(
	struct soap *soap)
{
	gmd__EX_USCOREExtent_USCOREType *_p = soap_new_gmd__EX_USCOREExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__EX_USCOREExtent_USCOREType * soap_new_set_gmd__EX_USCOREExtent_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *description,
	const std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> & geographicElement,
	const std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> & temporalElement,
	const std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> & verticalElement,
	std::string *id1,
	std::string *uuid1)
{
	gmd__EX_USCOREExtent_USCOREType *_p = soap_new_gmd__EX_USCOREExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREExtent_USCOREType::description = description;
		_p->gmd__EX_USCOREExtent_USCOREType::geographicElement = geographicElement;
		_p->gmd__EX_USCOREExtent_USCOREType::temporalElement = temporalElement;
		_p->gmd__EX_USCOREExtent_USCOREType::verticalElement = verticalElement;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCOREExtent_USCOREType(struct soap *soap, gmd__EX_USCOREExtent_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_Extent_Type", "gmd:EX_Extent_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCOREExtent_USCOREType * SOAP_FMAC4 soap_get_gmd__EX_USCOREExtent_USCOREType(struct soap*, gmd__EX_USCOREExtent_USCOREType *, const char*, const char*);

inline int soap_read_gmd__EX_USCOREExtent_USCOREType(struct soap *soap, gmd__EX_USCOREExtent_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCOREExtent_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__coordinateOperationAccuracy_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__coordinateOperationAccuracy_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__coordinateOperationAccuracy(struct soap*, const char*, int, const _gml__coordinateOperationAccuracy *, const char*);
SOAP_FMAC3 _gml__coordinateOperationAccuracy * SOAP_FMAC4 soap_in__gml__coordinateOperationAccuracy(struct soap*, const char*, _gml__coordinateOperationAccuracy *, const char*);
SOAP_FMAC1 _gml__coordinateOperationAccuracy * SOAP_FMAC2 soap_instantiate__gml__coordinateOperationAccuracy(struct soap*, int, const char*, const char*, size_t*);

inline _gml__coordinateOperationAccuracy * soap_new__gml__coordinateOperationAccuracy(struct soap *soap, int n = -1)
{
	return soap_instantiate__gml__coordinateOperationAccuracy(soap, n, NULL, NULL, NULL);
}

inline _gml__coordinateOperationAccuracy * soap_new_req__gml__coordinateOperationAccuracy(
	struct soap *soap)
{
	_gml__coordinateOperationAccuracy *_p = soap_new__gml__coordinateOperationAccuracy(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _gml__coordinateOperationAccuracy * soap_new_set__gml__coordinateOperationAccuracy(
	struct soap *soap,
	__gml__coordinateOperationAccuracy_sequence *__coordinateOperationAccuracy_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	_gml__coordinateOperationAccuracy *_p = soap_new__gml__coordinateOperationAccuracy(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__coordinateOperationAccuracy::__coordinateOperationAccuracy_sequence = __coordinateOperationAccuracy_sequence;
		_p->_gml__coordinateOperationAccuracy::nilReason = nilReason;
		_p->_gml__coordinateOperationAccuracy::xlink__type = xlink__type;
		_p->_gml__coordinateOperationAccuracy::xlink__href = xlink__href;
		_p->_gml__coordinateOperationAccuracy::xlink__role = xlink__role;
		_p->_gml__coordinateOperationAccuracy::xlink__arcrole = xlink__arcrole;
		_p->_gml__coordinateOperationAccuracy::xlink__title = xlink__title;
		_p->_gml__coordinateOperationAccuracy::xlink__show = xlink__show;
		_p->_gml__coordinateOperationAccuracy::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write__gml__coordinateOperationAccuracy(struct soap *soap, _gml__coordinateOperationAccuracy const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:coordinateOperationAccuracy", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _gml__coordinateOperationAccuracy * SOAP_FMAC4 soap_get__gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy *, const char*, const char*);

inline int soap_read__gml__coordinateOperationAccuracy(struct soap *soap, _gml__coordinateOperationAccuracy *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__gml__coordinateOperationAccuracy(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SecondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__SecondDefiningParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__SecondDefiningParameter(struct soap*, const char*, int, const _gml__SecondDefiningParameter *, const char*);
SOAP_FMAC3 _gml__SecondDefiningParameter * SOAP_FMAC4 soap_in__gml__SecondDefiningParameter(struct soap*, const char*, _gml__SecondDefiningParameter *, const char*);
SOAP_FMAC1 _gml__SecondDefiningParameter * SOAP_FMAC2 soap_instantiate__gml__SecondDefiningParameter(struct soap*, int, const char*, const char*, size_t*);

inline _gml__SecondDefiningParameter * soap_new__gml__SecondDefiningParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate__gml__SecondDefiningParameter(soap, n, NULL, NULL, NULL);
}

inline _gml__SecondDefiningParameter * soap_new_req__gml__SecondDefiningParameter(
	struct soap *soap,
	int __union_SecondDefiningParameter,
	const union _gml__union_SecondDefiningParameter& union_SecondDefiningParameter)
{
	_gml__SecondDefiningParameter *_p = soap_new__gml__SecondDefiningParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__SecondDefiningParameter::__union_SecondDefiningParameter = __union_SecondDefiningParameter;
		_p->_gml__SecondDefiningParameter::union_SecondDefiningParameter = union_SecondDefiningParameter;
	}
	return _p;
}

inline _gml__SecondDefiningParameter * soap_new_set__gml__SecondDefiningParameter(
	struct soap *soap,
	int __union_SecondDefiningParameter,
	const union _gml__union_SecondDefiningParameter& union_SecondDefiningParameter)
{
	_gml__SecondDefiningParameter *_p = soap_new__gml__SecondDefiningParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__SecondDefiningParameter::__union_SecondDefiningParameter = __union_SecondDefiningParameter;
		_p->_gml__SecondDefiningParameter::union_SecondDefiningParameter = union_SecondDefiningParameter;
	}
	return _p;
}

inline int soap_write__gml__SecondDefiningParameter(struct soap *soap, _gml__SecondDefiningParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:SecondDefiningParameter", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _gml__SecondDefiningParameter * SOAP_FMAC4 soap_get__gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter *, const char*, const char*);

inline int soap_read__gml__SecondDefiningParameter(struct soap *soap, _gml__SecondDefiningParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__gml__SecondDefiningParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__secondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__secondDefiningParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__secondDefiningParameter(struct soap*, const char*, int, const _gml__secondDefiningParameter *, const char*);
SOAP_FMAC3 _gml__secondDefiningParameter * SOAP_FMAC4 soap_in__gml__secondDefiningParameter(struct soap*, const char*, _gml__secondDefiningParameter *, const char*);
SOAP_FMAC1 _gml__secondDefiningParameter * SOAP_FMAC2 soap_instantiate__gml__secondDefiningParameter(struct soap*, int, const char*, const char*, size_t*);

inline _gml__secondDefiningParameter * soap_new__gml__secondDefiningParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate__gml__secondDefiningParameter(soap, n, NULL, NULL, NULL);
}

inline _gml__secondDefiningParameter * soap_new_req__gml__secondDefiningParameter(
	struct soap *soap,
	_gml__SecondDefiningParameter *SecondDefiningParameter)
{
	_gml__secondDefiningParameter *_p = soap_new__gml__secondDefiningParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__secondDefiningParameter::SecondDefiningParameter = SecondDefiningParameter;
	}
	return _p;
}

inline _gml__secondDefiningParameter * soap_new_set__gml__secondDefiningParameter(
	struct soap *soap,
	_gml__SecondDefiningParameter *SecondDefiningParameter)
{
	_gml__secondDefiningParameter *_p = soap_new__gml__secondDefiningParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__secondDefiningParameter::SecondDefiningParameter = SecondDefiningParameter;
	}
	return _p;
}

inline int soap_write__gml__secondDefiningParameter(struct soap *soap, _gml__secondDefiningParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:secondDefiningParameter", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _gml__secondDefiningParameter * SOAP_FMAC4 soap_get__gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter *, const char*, const char*);

inline int soap_read__gml__secondDefiningParameter(struct soap *soap, _gml__secondDefiningParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__gml__secondDefiningParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__domainOfValidity_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__domainOfValidity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__domainOfValidity(struct soap*, const char*, int, const _gml__domainOfValidity *, const char*);
SOAP_FMAC3 _gml__domainOfValidity * SOAP_FMAC4 soap_in__gml__domainOfValidity(struct soap*, const char*, _gml__domainOfValidity *, const char*);
SOAP_FMAC1 _gml__domainOfValidity * SOAP_FMAC2 soap_instantiate__gml__domainOfValidity(struct soap*, int, const char*, const char*, size_t*);

inline _gml__domainOfValidity * soap_new__gml__domainOfValidity(struct soap *soap, int n = -1)
{
	return soap_instantiate__gml__domainOfValidity(soap, n, NULL, NULL, NULL);
}

inline _gml__domainOfValidity * soap_new_req__gml__domainOfValidity(
	struct soap *soap)
{
	_gml__domainOfValidity *_p = soap_new__gml__domainOfValidity(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _gml__domainOfValidity * soap_new_set__gml__domainOfValidity(
	struct soap *soap,
	__gml__domainOfValidity_sequence *__domainOfValidity_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	_gml__domainOfValidity *_p = soap_new__gml__domainOfValidity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__domainOfValidity::__domainOfValidity_sequence = __domainOfValidity_sequence;
		_p->_gml__domainOfValidity::nilReason = nilReason;
		_p->_gml__domainOfValidity::xlink__type = xlink__type;
		_p->_gml__domainOfValidity::xlink__href = xlink__href;
		_p->_gml__domainOfValidity::xlink__role = xlink__role;
		_p->_gml__domainOfValidity::xlink__arcrole = xlink__arcrole;
		_p->_gml__domainOfValidity::xlink__title = xlink__title;
		_p->_gml__domainOfValidity::xlink__show = xlink__show;
		_p->_gml__domainOfValidity::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write__gml__domainOfValidity(struct soap *soap, _gml__domainOfValidity const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:domainOfValidity", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _gml__domainOfValidity * SOAP_FMAC4 soap_get__gml__domainOfValidity(struct soap*, _gml__domainOfValidity *, const char*, const char*);

inline int soap_read__gml__domainOfValidity(struct soap *soap, _gml__domainOfValidity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__gml__domainOfValidity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalDatumType(struct soap*, const char*, int, const gml__VerticalDatumType *, const char*);
SOAP_FMAC3 gml__VerticalDatumType * SOAP_FMAC4 soap_in_gml__VerticalDatumType(struct soap*, const char*, gml__VerticalDatumType *, const char*);
SOAP_FMAC1 gml__VerticalDatumType * SOAP_FMAC2 soap_instantiate_gml__VerticalDatumType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalDatumType * soap_new_gml__VerticalDatumType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalDatumType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalDatumType * soap_new_req_gml__VerticalDatumType(
	struct soap *soap,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__VerticalDatumType *_p = soap_new_gml__VerticalDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractDatumType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__VerticalDatumType * soap_new_set_gml__VerticalDatumType(
	struct soap *soap,
	_gml__domainOfValidity *domainOfValidity1,
	const std::vector<std::string> & scope1,
	gml__CodeType *anchorDefinition1,
	std::string *realizationEpoch1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__VerticalDatumType *_p = soap_new_gml__VerticalDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractDatumType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractDatumType::scope = scope1;
		_p->gml__AbstractDatumType::anchorDefinition = anchorDefinition1;
		_p->gml__AbstractDatumType::realizationEpoch = realizationEpoch1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__VerticalDatumType(struct soap *soap, gml__VerticalDatumType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalDatumType", "gml:VerticalDatumType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalDatumType * SOAP_FMAC4 soap_get_gml__VerticalDatumType(struct soap*, gml__VerticalDatumType *, const char*, const char*);

inline int soap_read_gml__VerticalDatumType(struct soap *soap, gml__VerticalDatumType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalDatumType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalDatumPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalDatumPropertyType(struct soap*, const char*, int, const gml__VerticalDatumPropertyType *, const char*);
SOAP_FMAC3 gml__VerticalDatumPropertyType * SOAP_FMAC4 soap_in_gml__VerticalDatumPropertyType(struct soap*, const char*, gml__VerticalDatumPropertyType *, const char*);
SOAP_FMAC1 gml__VerticalDatumPropertyType * SOAP_FMAC2 soap_instantiate_gml__VerticalDatumPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalDatumPropertyType * soap_new_gml__VerticalDatumPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalDatumPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalDatumPropertyType * soap_new_req_gml__VerticalDatumPropertyType(
	struct soap *soap)
{
	gml__VerticalDatumPropertyType *_p = soap_new_gml__VerticalDatumPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__VerticalDatumPropertyType * soap_new_set_gml__VerticalDatumPropertyType(
	struct soap *soap,
	__gml__VerticalDatumPropertyType_sequence *__VerticalDatumPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__VerticalDatumPropertyType *_p = soap_new_gml__VerticalDatumPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__VerticalDatumPropertyType::__VerticalDatumPropertyType_sequence = __VerticalDatumPropertyType_sequence;
		_p->gml__VerticalDatumPropertyType::nilReason = nilReason;
		_p->gml__VerticalDatumPropertyType::xlink__type = xlink__type;
		_p->gml__VerticalDatumPropertyType::xlink__href = xlink__href;
		_p->gml__VerticalDatumPropertyType::xlink__role = xlink__role;
		_p->gml__VerticalDatumPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__VerticalDatumPropertyType::xlink__title = xlink__title;
		_p->gml__VerticalDatumPropertyType::xlink__show = xlink__show;
		_p->gml__VerticalDatumPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__VerticalDatumPropertyType(struct soap *soap, gml__VerticalDatumPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalDatumPropertyType", "gml:VerticalDatumPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalDatumPropertyType * SOAP_FMAC4 soap_get_gml__VerticalDatumPropertyType(struct soap*, gml__VerticalDatumPropertyType *, const char*, const char*);

inline int soap_read_gml__VerticalDatumPropertyType(struct soap *soap, gml__VerticalDatumPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalDatumPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalCSType(struct soap*, const char*, int, const gml__VerticalCSType *, const char*);
SOAP_FMAC3 gml__VerticalCSType * SOAP_FMAC4 soap_in_gml__VerticalCSType(struct soap*, const char*, gml__VerticalCSType *, const char*);
SOAP_FMAC1 gml__VerticalCSType * SOAP_FMAC2 soap_instantiate_gml__VerticalCSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalCSType * soap_new_gml__VerticalCSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalCSType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalCSType * soap_new_req_gml__VerticalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__VerticalCSType *_p = soap_new_gml__VerticalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__VerticalCSType * soap_new_set_gml__VerticalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	enum gml__AggregationType *aggregationType1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__VerticalCSType *_p = soap_new_gml__VerticalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__VerticalCSType(struct soap *soap, gml__VerticalCSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalCSType", "gml:VerticalCSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalCSType * SOAP_FMAC4 soap_get_gml__VerticalCSType(struct soap*, gml__VerticalCSType *, const char*, const char*);

inline int soap_read_gml__VerticalCSType(struct soap *soap, gml__VerticalCSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalCSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalCSPropertyType(struct soap*, const char*, int, const gml__VerticalCSPropertyType *, const char*);
SOAP_FMAC3 gml__VerticalCSPropertyType * SOAP_FMAC4 soap_in_gml__VerticalCSPropertyType(struct soap*, const char*, gml__VerticalCSPropertyType *, const char*);
SOAP_FMAC1 gml__VerticalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__VerticalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalCSPropertyType * soap_new_gml__VerticalCSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalCSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalCSPropertyType * soap_new_req_gml__VerticalCSPropertyType(
	struct soap *soap)
{
	gml__VerticalCSPropertyType *_p = soap_new_gml__VerticalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__VerticalCSPropertyType * soap_new_set_gml__VerticalCSPropertyType(
	struct soap *soap,
	__gml__VerticalCSPropertyType_sequence *__VerticalCSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__VerticalCSPropertyType *_p = soap_new_gml__VerticalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__VerticalCSPropertyType::__VerticalCSPropertyType_sequence = __VerticalCSPropertyType_sequence;
		_p->gml__VerticalCSPropertyType::nilReason = nilReason;
		_p->gml__VerticalCSPropertyType::xlink__type = xlink__type;
		_p->gml__VerticalCSPropertyType::xlink__href = xlink__href;
		_p->gml__VerticalCSPropertyType::xlink__role = xlink__role;
		_p->gml__VerticalCSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__VerticalCSPropertyType::xlink__title = xlink__title;
		_p->gml__VerticalCSPropertyType::xlink__show = xlink__show;
		_p->gml__VerticalCSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__VerticalCSPropertyType(struct soap *soap, gml__VerticalCSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalCSPropertyType", "gml:VerticalCSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalCSPropertyType * SOAP_FMAC4 soap_get_gml__VerticalCSPropertyType(struct soap*, gml__VerticalCSPropertyType *, const char*, const char*);

inline int soap_read_gml__VerticalCSPropertyType(struct soap *soap, gml__VerticalCSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalCSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__VerticalCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalCRSType(struct soap*, const char*, int, const gml__VerticalCRSType *, const char*);
SOAP_FMAC3 gml__VerticalCRSType * SOAP_FMAC4 soap_in_gml__VerticalCRSType(struct soap*, const char*, gml__VerticalCRSType *, const char*);
SOAP_FMAC1 gml__VerticalCRSType * SOAP_FMAC2 soap_instantiate_gml__VerticalCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalCRSType * soap_new_gml__VerticalCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalCRSType * soap_new_req_gml__VerticalCRSType(
	struct soap *soap,
	gml__VerticalCSPropertyType *verticalCS,
	gml__VerticalDatumPropertyType *verticalDatum,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__VerticalCRSType *_p = soap_new_gml__VerticalCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__VerticalCRSType::verticalCS = verticalCS;
		_p->gml__VerticalCRSType::verticalDatum = verticalDatum;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__VerticalCRSType * soap_new_set_gml__VerticalCRSType(
	struct soap *soap,
	gml__VerticalCSPropertyType *verticalCS,
	gml__VerticalDatumPropertyType *verticalDatum,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity1,
	const std::vector<std::string> & scope1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__VerticalCRSType *_p = soap_new_gml__VerticalCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__VerticalCRSType::verticalCS = verticalCS;
		_p->gml__VerticalCRSType::verticalDatum = verticalDatum;
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__VerticalCRSType(struct soap *soap, gml__VerticalCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalCRSType", "gml:VerticalCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalCRSType * SOAP_FMAC4 soap_get_gml__VerticalCRSType(struct soap*, gml__VerticalCRSType *, const char*, const char*);

inline int soap_read_gml__VerticalCRSType(struct soap *soap, gml__VerticalCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeodeticCRSPropertyType(struct soap*, const char*, int, const gml__GeodeticCRSPropertyType *, const char*);
SOAP_FMAC3 gml__GeodeticCRSPropertyType * SOAP_FMAC4 soap_in_gml__GeodeticCRSPropertyType(struct soap*, const char*, gml__GeodeticCRSPropertyType *, const char*);
SOAP_FMAC1 gml__GeodeticCRSPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeodeticCRSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeodeticCRSPropertyType * soap_new_gml__GeodeticCRSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeodeticCRSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__GeodeticCRSPropertyType * soap_new_req_gml__GeodeticCRSPropertyType(
	struct soap *soap)
{
	gml__GeodeticCRSPropertyType *_p = soap_new_gml__GeodeticCRSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__GeodeticCRSPropertyType * soap_new_set_gml__GeodeticCRSPropertyType(
	struct soap *soap,
	__gml__GeodeticCRSPropertyType_sequence *__GeodeticCRSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__GeodeticCRSPropertyType *_p = soap_new_gml__GeodeticCRSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticCRSPropertyType::__GeodeticCRSPropertyType_sequence = __GeodeticCRSPropertyType_sequence;
		_p->gml__GeodeticCRSPropertyType::nilReason = nilReason;
		_p->gml__GeodeticCRSPropertyType::xlink__type = xlink__type;
		_p->gml__GeodeticCRSPropertyType::xlink__href = xlink__href;
		_p->gml__GeodeticCRSPropertyType::xlink__role = xlink__role;
		_p->gml__GeodeticCRSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__GeodeticCRSPropertyType::xlink__title = xlink__title;
		_p->gml__GeodeticCRSPropertyType::xlink__show = xlink__show;
		_p->gml__GeodeticCRSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__GeodeticCRSPropertyType(struct soap *soap, gml__GeodeticCRSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeodeticCRSPropertyType", "gml:GeodeticCRSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeodeticCRSPropertyType * SOAP_FMAC4 soap_get_gml__GeodeticCRSPropertyType(struct soap*, gml__GeodeticCRSPropertyType *, const char*, const char*);

inline int soap_read_gml__GeodeticCRSPropertyType(struct soap *soap, gml__GeodeticCRSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeodeticCRSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CRSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CRSPropertyType(struct soap*, const char*, int, const gml__CRSPropertyType *, const char*);
SOAP_FMAC3 gml__CRSPropertyType * SOAP_FMAC4 soap_in_gml__CRSPropertyType(struct soap*, const char*, gml__CRSPropertyType *, const char*);
SOAP_FMAC1 gml__CRSPropertyType * SOAP_FMAC2 soap_instantiate_gml__CRSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CRSPropertyType * soap_new_gml__CRSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CRSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__CRSPropertyType * soap_new_req_gml__CRSPropertyType(
	struct soap *soap)
{
	gml__CRSPropertyType *_p = soap_new_gml__CRSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__CRSPropertyType * soap_new_set_gml__CRSPropertyType(
	struct soap *soap,
	__gml__CRSPropertyType_sequence *__CRSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__CRSPropertyType *_p = soap_new_gml__CRSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CRSPropertyType::__CRSPropertyType_sequence = __CRSPropertyType_sequence;
		_p->gml__CRSPropertyType::nilReason = nilReason;
		_p->gml__CRSPropertyType::xlink__type = xlink__type;
		_p->gml__CRSPropertyType::xlink__href = xlink__href;
		_p->gml__CRSPropertyType::xlink__role = xlink__role;
		_p->gml__CRSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__CRSPropertyType::xlink__title = xlink__title;
		_p->gml__CRSPropertyType::xlink__show = xlink__show;
		_p->gml__CRSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__CRSPropertyType(struct soap *soap, gml__CRSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CRSPropertyType", "gml:CRSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CRSPropertyType * SOAP_FMAC4 soap_get_gml__CRSPropertyType(struct soap*, gml__CRSPropertyType *, const char*, const char*);

inline int soap_read_gml__CRSPropertyType(struct soap *soap, gml__CRSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CRSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateOperationType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateOperationType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractCoordinateOperationType(struct soap*, const char*, int, const gml__AbstractCoordinateOperationType *, const char*);
SOAP_FMAC3 gml__AbstractCoordinateOperationType * SOAP_FMAC4 soap_in_gml__AbstractCoordinateOperationType(struct soap*, const char*, gml__AbstractCoordinateOperationType *, const char*);
SOAP_FMAC1 gml__AbstractCoordinateOperationType * SOAP_FMAC2 soap_instantiate_gml__AbstractCoordinateOperationType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractCoordinateOperationType * soap_new_gml__AbstractCoordinateOperationType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractCoordinateOperationType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractCoordinateOperationType * soap_new_req_gml__AbstractCoordinateOperationType(
	struct soap *soap,
	const std::vector<std::string> & scope,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__AbstractCoordinateOperationType *_p = soap_new_gml__AbstractCoordinateOperationType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateOperationType::scope = scope;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__AbstractCoordinateOperationType * soap_new_set_gml__AbstractCoordinateOperationType(
	struct soap *soap,
	_gml__domainOfValidity *domainOfValidity,
	const std::vector<std::string> & scope,
	std::string *operationVersion,
	const std::vector<_gml__coordinateOperationAccuracy *> & coordinateOperationAccuracy,
	gml__CRSPropertyType *sourceCRS,
	gml__CRSPropertyType *targetCRS,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__AbstractCoordinateOperationType *_p = soap_new_gml__AbstractCoordinateOperationType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateOperationType::domainOfValidity = domainOfValidity;
		_p->gml__AbstractCoordinateOperationType::scope = scope;
		_p->gml__AbstractCoordinateOperationType::operationVersion = operationVersion;
		_p->gml__AbstractCoordinateOperationType::coordinateOperationAccuracy = coordinateOperationAccuracy;
		_p->gml__AbstractCoordinateOperationType::sourceCRS = sourceCRS;
		_p->gml__AbstractCoordinateOperationType::targetCRS = targetCRS;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__AbstractCoordinateOperationType(struct soap *soap, gml__AbstractCoordinateOperationType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractCoordinateOperationType", "gml:AbstractCoordinateOperationType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractCoordinateOperationType * SOAP_FMAC4 soap_get_gml__AbstractCoordinateOperationType(struct soap*, gml__AbstractCoordinateOperationType *, const char*, const char*);

inline int soap_read_gml__AbstractCoordinateOperationType(struct soap *soap, gml__AbstractCoordinateOperationType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractCoordinateOperationType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralConversionType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralConversionType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractGeneralConversionType(struct soap*, const char*, int, const gml__AbstractGeneralConversionType *, const char*);
SOAP_FMAC3 gml__AbstractGeneralConversionType * SOAP_FMAC4 soap_in_gml__AbstractGeneralConversionType(struct soap*, const char*, gml__AbstractGeneralConversionType *, const char*);
SOAP_FMAC1 gml__AbstractGeneralConversionType * SOAP_FMAC2 soap_instantiate_gml__AbstractGeneralConversionType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractGeneralConversionType * soap_new_gml__AbstractGeneralConversionType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractGeneralConversionType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractGeneralConversionType * soap_new_req_gml__AbstractGeneralConversionType(
	struct soap *soap,
	gml__CodeWithAuthorityType *identifier,
	const std::vector<std::string> & scope,
	const std::string& gml__id)
{
	gml__AbstractGeneralConversionType *_p = soap_new_gml__AbstractGeneralConversionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGeneralConversionType::identifier = identifier;
		_p->gml__AbstractGeneralConversionType::scope = scope;
		_p->gml__AbstractGeneralConversionType::gml__id = gml__id;
	}
	return _p;
}

inline gml__AbstractGeneralConversionType * soap_new_set_gml__AbstractGeneralConversionType(
	struct soap *soap,
	gml__StringOrRefType *description,
	gml__ReferenceType *descriptionReference,
	gml__CodeWithAuthorityType *identifier,
	const std::vector<gml__CodeType *> & name,
	std::string *remarks,
	_gml__domainOfValidity *domainOfValidity,
	const std::vector<std::string> & scope,
	const std::vector<_gml__coordinateOperationAccuracy *> & coordinateOperationAccuracy,
	const std::string& gml__id)
{
	gml__AbstractGeneralConversionType *_p = soap_new_gml__AbstractGeneralConversionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGeneralConversionType::description = description;
		_p->gml__AbstractGeneralConversionType::descriptionReference = descriptionReference;
		_p->gml__AbstractGeneralConversionType::identifier = identifier;
		_p->gml__AbstractGeneralConversionType::name = name;
		_p->gml__AbstractGeneralConversionType::remarks = remarks;
		_p->gml__AbstractGeneralConversionType::domainOfValidity = domainOfValidity;
		_p->gml__AbstractGeneralConversionType::scope = scope;
		_p->gml__AbstractGeneralConversionType::coordinateOperationAccuracy = coordinateOperationAccuracy;
		_p->gml__AbstractGeneralConversionType::gml__id = gml__id;
	}
	return _p;
}

inline int soap_write_gml__AbstractGeneralConversionType(struct soap *soap, gml__AbstractGeneralConversionType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractGeneralConversionType", "gml:AbstractGeneralConversionType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractGeneralConversionType * SOAP_FMAC4 soap_get_gml__AbstractGeneralConversionType(struct soap*, gml__AbstractGeneralConversionType *, const char*, const char*);

inline int soap_read_gml__AbstractGeneralConversionType(struct soap *soap, gml__AbstractGeneralConversionType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractGeneralConversionType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeneralConversionPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeneralConversionPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeneralConversionPropertyType(struct soap*, const char*, int, const gml__GeneralConversionPropertyType *, const char*);
SOAP_FMAC3 gml__GeneralConversionPropertyType * SOAP_FMAC4 soap_in_gml__GeneralConversionPropertyType(struct soap*, const char*, gml__GeneralConversionPropertyType *, const char*);
SOAP_FMAC1 gml__GeneralConversionPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeneralConversionPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeneralConversionPropertyType * soap_new_gml__GeneralConversionPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeneralConversionPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__GeneralConversionPropertyType * soap_new_req_gml__GeneralConversionPropertyType(
	struct soap *soap)
{
	gml__GeneralConversionPropertyType *_p = soap_new_gml__GeneralConversionPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__GeneralConversionPropertyType * soap_new_set_gml__GeneralConversionPropertyType(
	struct soap *soap,
	__gml__GeneralConversionPropertyType_sequence *__GeneralConversionPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__GeneralConversionPropertyType *_p = soap_new_gml__GeneralConversionPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeneralConversionPropertyType::__GeneralConversionPropertyType_sequence = __GeneralConversionPropertyType_sequence;
		_p->gml__GeneralConversionPropertyType::nilReason = nilReason;
		_p->gml__GeneralConversionPropertyType::xlink__type = xlink__type;
		_p->gml__GeneralConversionPropertyType::xlink__href = xlink__href;
		_p->gml__GeneralConversionPropertyType::xlink__role = xlink__role;
		_p->gml__GeneralConversionPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__GeneralConversionPropertyType::xlink__title = xlink__title;
		_p->gml__GeneralConversionPropertyType::xlink__show = xlink__show;
		_p->gml__GeneralConversionPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__GeneralConversionPropertyType(struct soap *soap, gml__GeneralConversionPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeneralConversionPropertyType", "gml:GeneralConversionPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeneralConversionPropertyType * SOAP_FMAC4 soap_get_gml__GeneralConversionPropertyType(struct soap*, gml__GeneralConversionPropertyType *, const char*, const char*);

inline int soap_read_gml__GeneralConversionPropertyType(struct soap *soap, gml__GeneralConversionPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeneralConversionPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralDerivedCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGeneralDerivedCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractGeneralDerivedCRSType(struct soap*, const char*, int, const gml__AbstractGeneralDerivedCRSType *, const char*);
SOAP_FMAC3 gml__AbstractGeneralDerivedCRSType * SOAP_FMAC4 soap_in_gml__AbstractGeneralDerivedCRSType(struct soap*, const char*, gml__AbstractGeneralDerivedCRSType *, const char*);
SOAP_FMAC1 gml__AbstractGeneralDerivedCRSType * SOAP_FMAC2 soap_instantiate_gml__AbstractGeneralDerivedCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractGeneralDerivedCRSType * soap_new_gml__AbstractGeneralDerivedCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractGeneralDerivedCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractGeneralDerivedCRSType * soap_new_req_gml__AbstractGeneralDerivedCRSType(
	struct soap *soap,
	gml__GeneralConversionPropertyType *conversion,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__AbstractGeneralDerivedCRSType *_p = soap_new_gml__AbstractGeneralDerivedCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGeneralDerivedCRSType::conversion = conversion;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__AbstractGeneralDerivedCRSType * soap_new_set_gml__AbstractGeneralDerivedCRSType(
	struct soap *soap,
	gml__GeneralConversionPropertyType *conversion,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity1,
	const std::vector<std::string> & scope1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__AbstractGeneralDerivedCRSType *_p = soap_new_gml__AbstractGeneralDerivedCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGeneralDerivedCRSType::conversion = conversion;
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__AbstractGeneralDerivedCRSType(struct soap *soap, gml__AbstractGeneralDerivedCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractGeneralDerivedCRSType", "gml:AbstractGeneralDerivedCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractGeneralDerivedCRSType * SOAP_FMAC4 soap_get_gml__AbstractGeneralDerivedCRSType(struct soap*, gml__AbstractGeneralDerivedCRSType *, const char*, const char*);

inline int soap_read_gml__AbstractGeneralDerivedCRSType(struct soap *soap, gml__AbstractGeneralDerivedCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractGeneralDerivedCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ProjectedCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ProjectedCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__ProjectedCRSType(struct soap*, const char*, int, const gml__ProjectedCRSType *, const char*);
SOAP_FMAC3 gml__ProjectedCRSType * SOAP_FMAC4 soap_in_gml__ProjectedCRSType(struct soap*, const char*, gml__ProjectedCRSType *, const char*);
SOAP_FMAC1 gml__ProjectedCRSType * SOAP_FMAC2 soap_instantiate_gml__ProjectedCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__ProjectedCRSType * soap_new_gml__ProjectedCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__ProjectedCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__ProjectedCRSType * soap_new_req_gml__ProjectedCRSType(
	struct soap *soap,
	int __union_ProjectedCRSType,
	const union _gml__union_ProjectedCRSType& union_ProjectedCRSType,
	gml__CartesianCSPropertyType *cartesianCS,
	gml__GeneralConversionPropertyType *conversion1,
	const std::vector<std::string> & scope2,
	gml__CodeWithAuthorityType *identifier5,
	const std::string& gml__id5)
{
	gml__ProjectedCRSType *_p = soap_new_gml__ProjectedCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__ProjectedCRSType::__union_ProjectedCRSType = __union_ProjectedCRSType;
		_p->gml__ProjectedCRSType::union_ProjectedCRSType = union_ProjectedCRSType;
		_p->gml__ProjectedCRSType::cartesianCS = cartesianCS;
		_p->gml__AbstractGeneralDerivedCRSType::conversion = conversion1;
		_p->gml__AbstractCRSType::scope = scope2;
		_p->gml__DefinitionBaseType::identifier = identifier5;
		_p->gml__DefinitionBaseType::gml__id = gml__id5;
	}
	return _p;
}

inline gml__ProjectedCRSType * soap_new_set_gml__ProjectedCRSType(
	struct soap *soap,
	int __union_ProjectedCRSType,
	const union _gml__union_ProjectedCRSType& union_ProjectedCRSType,
	gml__CartesianCSPropertyType *cartesianCS,
	gml__GeneralConversionPropertyType *conversion1,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity2,
	const std::vector<std::string> & scope2,
	std::string *remarks4,
	gml__StringOrRefType *description5,
	gml__ReferenceType *descriptionReference5,
	gml__CodeWithAuthorityType *identifier5,
	const std::vector<gml__CodeType *> & name5,
	const std::string& gml__id5)
{
	gml__ProjectedCRSType *_p = soap_new_gml__ProjectedCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__ProjectedCRSType::__union_ProjectedCRSType = __union_ProjectedCRSType;
		_p->gml__ProjectedCRSType::union_ProjectedCRSType = union_ProjectedCRSType;
		_p->gml__ProjectedCRSType::cartesianCS = cartesianCS;
		_p->gml__AbstractGeneralDerivedCRSType::conversion = conversion1;
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity2;
		_p->gml__AbstractCRSType::scope = scope2;
		_p->gml__DefinitionType::remarks = remarks4;
		_p->gml__DefinitionBaseType::description = description5;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference5;
		_p->gml__DefinitionBaseType::identifier = identifier5;
		_p->gml__DefinitionBaseType::name = name5;
		_p->gml__DefinitionBaseType::gml__id = gml__id5;
	}
	return _p;
}

inline int soap_write_gml__ProjectedCRSType(struct soap *soap, gml__ProjectedCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:ProjectedCRSType", "gml:ProjectedCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__ProjectedCRSType * SOAP_FMAC4 soap_get_gml__ProjectedCRSType(struct soap*, gml__ProjectedCRSType *, const char*, const char*);

inline int soap_read_gml__ProjectedCRSType(struct soap *soap, gml__ProjectedCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__ProjectedCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__LengthType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__LengthType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__LengthType(struct soap*, const char*, int, const gml__LengthType *, const char*);
SOAP_FMAC3 gml__LengthType * SOAP_FMAC4 soap_in_gml__LengthType(struct soap*, const char*, gml__LengthType *, const char*);
SOAP_FMAC1 gml__LengthType * SOAP_FMAC2 soap_instantiate_gml__LengthType(struct soap*, int, const char*, const char*, size_t*);

inline gml__LengthType * soap_new_gml__LengthType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__LengthType(soap, n, NULL, NULL, NULL);
}

inline gml__LengthType * soap_new_req_gml__LengthType(
	struct soap *soap,
	double __item1)
{
	gml__LengthType *_p = soap_new_gml__LengthType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item1;
	}
	return _p;
}

inline gml__LengthType * soap_new_set_gml__LengthType(
	struct soap *soap,
	double __item1)
{
	gml__LengthType *_p = soap_new_gml__LengthType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item1;
	}
	return _p;
}

inline int soap_write_gml__LengthType(struct soap *soap, gml__LengthType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:LengthType", "gml:LengthType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__LengthType * SOAP_FMAC4 soap_get_gml__LengthType(struct soap*, gml__LengthType *, const char*, const char*);

inline int soap_read_gml__LengthType(struct soap *soap, gml__LengthType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__LengthType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__EllipsoidType(struct soap*, const char*, int, const gml__EllipsoidType *, const char*);
SOAP_FMAC3 gml__EllipsoidType * SOAP_FMAC4 soap_in_gml__EllipsoidType(struct soap*, const char*, gml__EllipsoidType *, const char*);
SOAP_FMAC1 gml__EllipsoidType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidType(struct soap*, int, const char*, const char*, size_t*);

inline gml__EllipsoidType * soap_new_gml__EllipsoidType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__EllipsoidType(soap, n, NULL, NULL, NULL);
}

inline gml__EllipsoidType * soap_new_req_gml__EllipsoidType(
	struct soap *soap,
	gml__MeasureType *semiMajorAxis,
	_gml__secondDefiningParameter *secondDefiningParameter,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__EllipsoidType *_p = soap_new_gml__EllipsoidType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__EllipsoidType::semiMajorAxis = semiMajorAxis;
		_p->gml__EllipsoidType::secondDefiningParameter = secondDefiningParameter;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__EllipsoidType * soap_new_set_gml__EllipsoidType(
	struct soap *soap,
	gml__MeasureType *semiMajorAxis,
	_gml__secondDefiningParameter *secondDefiningParameter,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__EllipsoidType *_p = soap_new_gml__EllipsoidType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__EllipsoidType::semiMajorAxis = semiMajorAxis;
		_p->gml__EllipsoidType::secondDefiningParameter = secondDefiningParameter;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__EllipsoidType(struct soap *soap, gml__EllipsoidType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:EllipsoidType", "gml:EllipsoidType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__EllipsoidType * SOAP_FMAC4 soap_get_gml__EllipsoidType(struct soap*, gml__EllipsoidType *, const char*, const char*);

inline int soap_read_gml__EllipsoidType(struct soap *soap, gml__EllipsoidType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__EllipsoidType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__EllipsoidPropertyType(struct soap*, const char*, int, const gml__EllipsoidPropertyType *, const char*);
SOAP_FMAC3 gml__EllipsoidPropertyType * SOAP_FMAC4 soap_in_gml__EllipsoidPropertyType(struct soap*, const char*, gml__EllipsoidPropertyType *, const char*);
SOAP_FMAC1 gml__EllipsoidPropertyType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__EllipsoidPropertyType * soap_new_gml__EllipsoidPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__EllipsoidPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__EllipsoidPropertyType * soap_new_req_gml__EllipsoidPropertyType(
	struct soap *soap)
{
	gml__EllipsoidPropertyType *_p = soap_new_gml__EllipsoidPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__EllipsoidPropertyType * soap_new_set_gml__EllipsoidPropertyType(
	struct soap *soap,
	__gml__EllipsoidPropertyType_sequence *__EllipsoidPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__EllipsoidPropertyType *_p = soap_new_gml__EllipsoidPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__EllipsoidPropertyType::__EllipsoidPropertyType_sequence = __EllipsoidPropertyType_sequence;
		_p->gml__EllipsoidPropertyType::nilReason = nilReason;
		_p->gml__EllipsoidPropertyType::xlink__type = xlink__type;
		_p->gml__EllipsoidPropertyType::xlink__href = xlink__href;
		_p->gml__EllipsoidPropertyType::xlink__role = xlink__role;
		_p->gml__EllipsoidPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__EllipsoidPropertyType::xlink__title = xlink__title;
		_p->gml__EllipsoidPropertyType::xlink__show = xlink__show;
		_p->gml__EllipsoidPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__EllipsoidPropertyType(struct soap *soap, gml__EllipsoidPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:EllipsoidPropertyType", "gml:EllipsoidPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__EllipsoidPropertyType * SOAP_FMAC4 soap_get_gml__EllipsoidPropertyType(struct soap*, gml__EllipsoidPropertyType *, const char*, const char*);

inline int soap_read_gml__EllipsoidPropertyType(struct soap *soap, gml__EllipsoidPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__EllipsoidPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__MeasureType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__MeasureType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__MeasureType(struct soap*, const char*, int, const gml__MeasureType *, const char*);
SOAP_FMAC3 gml__MeasureType * SOAP_FMAC4 soap_in_gml__MeasureType(struct soap*, const char*, gml__MeasureType *, const char*);
SOAP_FMAC1 gml__MeasureType * SOAP_FMAC2 soap_instantiate_gml__MeasureType(struct soap*, int, const char*, const char*, size_t*);

inline gml__MeasureType * soap_new_gml__MeasureType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__MeasureType(soap, n, NULL, NULL, NULL);
}

inline gml__MeasureType * soap_new_req_gml__MeasureType(
	struct soap *soap,
	double __item)
{
	gml__MeasureType *_p = soap_new_gml__MeasureType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item;
	}
	return _p;
}

inline gml__MeasureType * soap_new_set_gml__MeasureType(
	struct soap *soap,
	double __item)
{
	gml__MeasureType *_p = soap_new_gml__MeasureType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item;
	}
	return _p;
}

inline int soap_write_gml__MeasureType(struct soap *soap, gml__MeasureType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:MeasureType", "gml:MeasureType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__MeasureType * SOAP_FMAC4 soap_get_gml__MeasureType(struct soap*, gml__MeasureType *, const char*, const char*);

inline int soap_read_gml__MeasureType(struct soap *soap, gml__MeasureType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__MeasureType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AngleType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AngleType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AngleType(struct soap*, const char*, int, const gml__AngleType *, const char*);
SOAP_FMAC3 gml__AngleType * SOAP_FMAC4 soap_in_gml__AngleType(struct soap*, const char*, gml__AngleType *, const char*);
SOAP_FMAC1 gml__AngleType * SOAP_FMAC2 soap_instantiate_gml__AngleType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AngleType * soap_new_gml__AngleType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AngleType(soap, n, NULL, NULL, NULL);
}

inline gml__AngleType * soap_new_req_gml__AngleType(
	struct soap *soap,
	double __item1)
{
	gml__AngleType *_p = soap_new_gml__AngleType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item1;
	}
	return _p;
}

inline gml__AngleType * soap_new_set_gml__AngleType(
	struct soap *soap,
	double __item1)
{
	gml__AngleType *_p = soap_new_gml__AngleType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item1;
	}
	return _p;
}

inline int soap_write_gml__AngleType(struct soap *soap, gml__AngleType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AngleType", "gml:AngleType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AngleType * SOAP_FMAC4 soap_get_gml__AngleType(struct soap*, gml__AngleType *, const char*, const char*);

inline int soap_read_gml__AngleType(struct soap *soap, gml__AngleType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AngleType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__PrimeMeridianType(struct soap*, const char*, int, const gml__PrimeMeridianType *, const char*);
SOAP_FMAC3 gml__PrimeMeridianType * SOAP_FMAC4 soap_in_gml__PrimeMeridianType(struct soap*, const char*, gml__PrimeMeridianType *, const char*);
SOAP_FMAC1 gml__PrimeMeridianType * SOAP_FMAC2 soap_instantiate_gml__PrimeMeridianType(struct soap*, int, const char*, const char*, size_t*);

inline gml__PrimeMeridianType * soap_new_gml__PrimeMeridianType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__PrimeMeridianType(soap, n, NULL, NULL, NULL);
}

inline gml__PrimeMeridianType * soap_new_req_gml__PrimeMeridianType(
	struct soap *soap,
	gml__AngleType *greenwichLongitude,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__PrimeMeridianType *_p = soap_new_gml__PrimeMeridianType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__PrimeMeridianType::greenwichLongitude = greenwichLongitude;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__PrimeMeridianType * soap_new_set_gml__PrimeMeridianType(
	struct soap *soap,
	gml__AngleType *greenwichLongitude,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__PrimeMeridianType *_p = soap_new_gml__PrimeMeridianType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__PrimeMeridianType::greenwichLongitude = greenwichLongitude;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__PrimeMeridianType(struct soap *soap, gml__PrimeMeridianType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:PrimeMeridianType", "gml:PrimeMeridianType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__PrimeMeridianType * SOAP_FMAC4 soap_get_gml__PrimeMeridianType(struct soap*, gml__PrimeMeridianType *, const char*, const char*);

inline int soap_read_gml__PrimeMeridianType(struct soap *soap, gml__PrimeMeridianType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__PrimeMeridianType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__PrimeMeridianPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__PrimeMeridianPropertyType(struct soap*, const char*, int, const gml__PrimeMeridianPropertyType *, const char*);
SOAP_FMAC3 gml__PrimeMeridianPropertyType * SOAP_FMAC4 soap_in_gml__PrimeMeridianPropertyType(struct soap*, const char*, gml__PrimeMeridianPropertyType *, const char*);
SOAP_FMAC1 gml__PrimeMeridianPropertyType * SOAP_FMAC2 soap_instantiate_gml__PrimeMeridianPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__PrimeMeridianPropertyType * soap_new_gml__PrimeMeridianPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__PrimeMeridianPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__PrimeMeridianPropertyType * soap_new_req_gml__PrimeMeridianPropertyType(
	struct soap *soap)
{
	gml__PrimeMeridianPropertyType *_p = soap_new_gml__PrimeMeridianPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__PrimeMeridianPropertyType * soap_new_set_gml__PrimeMeridianPropertyType(
	struct soap *soap,
	__gml__PrimeMeridianPropertyType_sequence *__PrimeMeridianPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__PrimeMeridianPropertyType *_p = soap_new_gml__PrimeMeridianPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__PrimeMeridianPropertyType::__PrimeMeridianPropertyType_sequence = __PrimeMeridianPropertyType_sequence;
		_p->gml__PrimeMeridianPropertyType::nilReason = nilReason;
		_p->gml__PrimeMeridianPropertyType::xlink__type = xlink__type;
		_p->gml__PrimeMeridianPropertyType::xlink__href = xlink__href;
		_p->gml__PrimeMeridianPropertyType::xlink__role = xlink__role;
		_p->gml__PrimeMeridianPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__PrimeMeridianPropertyType::xlink__title = xlink__title;
		_p->gml__PrimeMeridianPropertyType::xlink__show = xlink__show;
		_p->gml__PrimeMeridianPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__PrimeMeridianPropertyType(struct soap *soap, gml__PrimeMeridianPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:PrimeMeridianPropertyType", "gml:PrimeMeridianPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__PrimeMeridianPropertyType * SOAP_FMAC4 soap_get_gml__PrimeMeridianPropertyType(struct soap*, gml__PrimeMeridianPropertyType *, const char*, const char*);

inline int soap_read_gml__PrimeMeridianPropertyType(struct soap *soap, gml__PrimeMeridianPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__PrimeMeridianPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractDatumType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractDatumType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractDatumType(struct soap*, const char*, int, const gml__AbstractDatumType *, const char*);
SOAP_FMAC3 gml__AbstractDatumType * SOAP_FMAC4 soap_in_gml__AbstractDatumType(struct soap*, const char*, gml__AbstractDatumType *, const char*);
SOAP_FMAC1 gml__AbstractDatumType * SOAP_FMAC2 soap_instantiate_gml__AbstractDatumType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractDatumType * soap_new_gml__AbstractDatumType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractDatumType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractDatumType * soap_new_req_gml__AbstractDatumType(
	struct soap *soap,
	const std::vector<std::string> & scope,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__AbstractDatumType *_p = soap_new_gml__AbstractDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractDatumType::scope = scope;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__AbstractDatumType * soap_new_set_gml__AbstractDatumType(
	struct soap *soap,
	_gml__domainOfValidity *domainOfValidity,
	const std::vector<std::string> & scope,
	gml__CodeType *anchorDefinition,
	std::string *realizationEpoch,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__AbstractDatumType *_p = soap_new_gml__AbstractDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractDatumType::domainOfValidity = domainOfValidity;
		_p->gml__AbstractDatumType::scope = scope;
		_p->gml__AbstractDatumType::anchorDefinition = anchorDefinition;
		_p->gml__AbstractDatumType::realizationEpoch = realizationEpoch;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__AbstractDatumType(struct soap *soap, gml__AbstractDatumType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractDatumType", "gml:AbstractDatumType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractDatumType * SOAP_FMAC4 soap_get_gml__AbstractDatumType(struct soap*, gml__AbstractDatumType *, const char*, const char*);

inline int soap_read_gml__AbstractDatumType(struct soap *soap, gml__AbstractDatumType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractDatumType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeodeticDatumType(struct soap*, const char*, int, const gml__GeodeticDatumType *, const char*);
SOAP_FMAC3 gml__GeodeticDatumType * SOAP_FMAC4 soap_in_gml__GeodeticDatumType(struct soap*, const char*, gml__GeodeticDatumType *, const char*);
SOAP_FMAC1 gml__GeodeticDatumType * SOAP_FMAC2 soap_instantiate_gml__GeodeticDatumType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeodeticDatumType * soap_new_gml__GeodeticDatumType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeodeticDatumType(soap, n, NULL, NULL, NULL);
}

inline gml__GeodeticDatumType * soap_new_req_gml__GeodeticDatumType(
	struct soap *soap,
	gml__PrimeMeridianPropertyType *primeMeridian,
	gml__EllipsoidPropertyType *ellipsoid,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__GeodeticDatumType *_p = soap_new_gml__GeodeticDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticDatumType::primeMeridian = primeMeridian;
		_p->gml__GeodeticDatumType::ellipsoid = ellipsoid;
		_p->gml__AbstractDatumType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__GeodeticDatumType * soap_new_set_gml__GeodeticDatumType(
	struct soap *soap,
	gml__PrimeMeridianPropertyType *primeMeridian,
	gml__EllipsoidPropertyType *ellipsoid,
	_gml__domainOfValidity *domainOfValidity1,
	const std::vector<std::string> & scope1,
	gml__CodeType *anchorDefinition1,
	std::string *realizationEpoch1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__GeodeticDatumType *_p = soap_new_gml__GeodeticDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticDatumType::primeMeridian = primeMeridian;
		_p->gml__GeodeticDatumType::ellipsoid = ellipsoid;
		_p->gml__AbstractDatumType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractDatumType::scope = scope1;
		_p->gml__AbstractDatumType::anchorDefinition = anchorDefinition1;
		_p->gml__AbstractDatumType::realizationEpoch = realizationEpoch1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__GeodeticDatumType(struct soap *soap, gml__GeodeticDatumType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeodeticDatumType", "gml:GeodeticDatumType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeodeticDatumType * SOAP_FMAC4 soap_get_gml__GeodeticDatumType(struct soap*, gml__GeodeticDatumType *, const char*, const char*);

inline int soap_read_gml__GeodeticDatumType(struct soap *soap, gml__GeodeticDatumType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeodeticDatumType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticDatumPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeodeticDatumPropertyType(struct soap*, const char*, int, const gml__GeodeticDatumPropertyType *, const char*);
SOAP_FMAC3 gml__GeodeticDatumPropertyType * SOAP_FMAC4 soap_in_gml__GeodeticDatumPropertyType(struct soap*, const char*, gml__GeodeticDatumPropertyType *, const char*);
SOAP_FMAC1 gml__GeodeticDatumPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeodeticDatumPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeodeticDatumPropertyType * soap_new_gml__GeodeticDatumPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeodeticDatumPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__GeodeticDatumPropertyType * soap_new_req_gml__GeodeticDatumPropertyType(
	struct soap *soap)
{
	gml__GeodeticDatumPropertyType *_p = soap_new_gml__GeodeticDatumPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__GeodeticDatumPropertyType * soap_new_set_gml__GeodeticDatumPropertyType(
	struct soap *soap,
	__gml__GeodeticDatumPropertyType_sequence *__GeodeticDatumPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__GeodeticDatumPropertyType *_p = soap_new_gml__GeodeticDatumPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticDatumPropertyType::__GeodeticDatumPropertyType_sequence = __GeodeticDatumPropertyType_sequence;
		_p->gml__GeodeticDatumPropertyType::nilReason = nilReason;
		_p->gml__GeodeticDatumPropertyType::xlink__type = xlink__type;
		_p->gml__GeodeticDatumPropertyType::xlink__href = xlink__href;
		_p->gml__GeodeticDatumPropertyType::xlink__role = xlink__role;
		_p->gml__GeodeticDatumPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__GeodeticDatumPropertyType::xlink__title = xlink__title;
		_p->gml__GeodeticDatumPropertyType::xlink__show = xlink__show;
		_p->gml__GeodeticDatumPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__GeodeticDatumPropertyType(struct soap *soap, gml__GeodeticDatumPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeodeticDatumPropertyType", "gml:GeodeticDatumPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeodeticDatumPropertyType * SOAP_FMAC4 soap_get_gml__GeodeticDatumPropertyType(struct soap*, gml__GeodeticDatumPropertyType *, const char*, const char*);

inline int soap_read_gml__GeodeticDatumPropertyType(struct soap *soap, gml__GeodeticDatumPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeodeticDatumPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__SphericalCSType(struct soap*, const char*, int, const gml__SphericalCSType *, const char*);
SOAP_FMAC3 gml__SphericalCSType * SOAP_FMAC4 soap_in_gml__SphericalCSType(struct soap*, const char*, gml__SphericalCSType *, const char*);
SOAP_FMAC1 gml__SphericalCSType * SOAP_FMAC2 soap_instantiate_gml__SphericalCSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__SphericalCSType * soap_new_gml__SphericalCSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__SphericalCSType(soap, n, NULL, NULL, NULL);
}

inline gml__SphericalCSType * soap_new_req_gml__SphericalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__SphericalCSType *_p = soap_new_gml__SphericalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__SphericalCSType * soap_new_set_gml__SphericalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	enum gml__AggregationType *aggregationType1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__SphericalCSType *_p = soap_new_gml__SphericalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__SphericalCSType(struct soap *soap, gml__SphericalCSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:SphericalCSType", "gml:SphericalCSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__SphericalCSType * SOAP_FMAC4 soap_get_gml__SphericalCSType(struct soap*, gml__SphericalCSType *, const char*, const char*);

inline int soap_read_gml__SphericalCSType(struct soap *soap, gml__SphericalCSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__SphericalCSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__SphericalCSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__SphericalCSPropertyType(struct soap*, const char*, int, const gml__SphericalCSPropertyType *, const char*);
SOAP_FMAC3 gml__SphericalCSPropertyType * SOAP_FMAC4 soap_in_gml__SphericalCSPropertyType(struct soap*, const char*, gml__SphericalCSPropertyType *, const char*);
SOAP_FMAC1 gml__SphericalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__SphericalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__SphericalCSPropertyType * soap_new_gml__SphericalCSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__SphericalCSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__SphericalCSPropertyType * soap_new_req_gml__SphericalCSPropertyType(
	struct soap *soap)
{
	gml__SphericalCSPropertyType *_p = soap_new_gml__SphericalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__SphericalCSPropertyType * soap_new_set_gml__SphericalCSPropertyType(
	struct soap *soap,
	__gml__SphericalCSPropertyType_sequence *__SphericalCSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__SphericalCSPropertyType *_p = soap_new_gml__SphericalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__SphericalCSPropertyType::__SphericalCSPropertyType_sequence = __SphericalCSPropertyType_sequence;
		_p->gml__SphericalCSPropertyType::nilReason = nilReason;
		_p->gml__SphericalCSPropertyType::xlink__type = xlink__type;
		_p->gml__SphericalCSPropertyType::xlink__href = xlink__href;
		_p->gml__SphericalCSPropertyType::xlink__role = xlink__role;
		_p->gml__SphericalCSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__SphericalCSPropertyType::xlink__title = xlink__title;
		_p->gml__SphericalCSPropertyType::xlink__show = xlink__show;
		_p->gml__SphericalCSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__SphericalCSPropertyType(struct soap *soap, gml__SphericalCSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:SphericalCSPropertyType", "gml:SphericalCSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__SphericalCSPropertyType * SOAP_FMAC4 soap_get_gml__SphericalCSPropertyType(struct soap*, gml__SphericalCSPropertyType *, const char*, const char*);

inline int soap_read_gml__SphericalCSPropertyType(struct soap *soap, gml__SphericalCSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__SphericalCSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CartesianCSType(struct soap*, const char*, int, const gml__CartesianCSType *, const char*);
SOAP_FMAC3 gml__CartesianCSType * SOAP_FMAC4 soap_in_gml__CartesianCSType(struct soap*, const char*, gml__CartesianCSType *, const char*);
SOAP_FMAC1 gml__CartesianCSType * SOAP_FMAC2 soap_instantiate_gml__CartesianCSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CartesianCSType * soap_new_gml__CartesianCSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CartesianCSType(soap, n, NULL, NULL, NULL);
}

inline gml__CartesianCSType * soap_new_req_gml__CartesianCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__CartesianCSType *_p = soap_new_gml__CartesianCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__CartesianCSType * soap_new_set_gml__CartesianCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	enum gml__AggregationType *aggregationType1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__CartesianCSType *_p = soap_new_gml__CartesianCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__CartesianCSType(struct soap *soap, gml__CartesianCSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CartesianCSType", "gml:CartesianCSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CartesianCSType * SOAP_FMAC4 soap_get_gml__CartesianCSType(struct soap*, gml__CartesianCSType *, const char*, const char*);

inline int soap_read_gml__CartesianCSType(struct soap *soap, gml__CartesianCSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CartesianCSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CartesianCSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CartesianCSPropertyType(struct soap*, const char*, int, const gml__CartesianCSPropertyType *, const char*);
SOAP_FMAC3 gml__CartesianCSPropertyType * SOAP_FMAC4 soap_in_gml__CartesianCSPropertyType(struct soap*, const char*, gml__CartesianCSPropertyType *, const char*);
SOAP_FMAC1 gml__CartesianCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__CartesianCSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CartesianCSPropertyType * soap_new_gml__CartesianCSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CartesianCSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__CartesianCSPropertyType * soap_new_req_gml__CartesianCSPropertyType(
	struct soap *soap)
{
	gml__CartesianCSPropertyType *_p = soap_new_gml__CartesianCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__CartesianCSPropertyType * soap_new_set_gml__CartesianCSPropertyType(
	struct soap *soap,
	__gml__CartesianCSPropertyType_sequence *__CartesianCSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__CartesianCSPropertyType *_p = soap_new_gml__CartesianCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CartesianCSPropertyType::__CartesianCSPropertyType_sequence = __CartesianCSPropertyType_sequence;
		_p->gml__CartesianCSPropertyType::nilReason = nilReason;
		_p->gml__CartesianCSPropertyType::xlink__type = xlink__type;
		_p->gml__CartesianCSPropertyType::xlink__href = xlink__href;
		_p->gml__CartesianCSPropertyType::xlink__role = xlink__role;
		_p->gml__CartesianCSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__CartesianCSPropertyType::xlink__title = xlink__title;
		_p->gml__CartesianCSPropertyType::xlink__show = xlink__show;
		_p->gml__CartesianCSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__CartesianCSPropertyType(struct soap *soap, gml__CartesianCSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CartesianCSPropertyType", "gml:CartesianCSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CartesianCSPropertyType * SOAP_FMAC4 soap_get_gml__CartesianCSPropertyType(struct soap*, gml__CartesianCSPropertyType *, const char*, const char*);

inline int soap_read_gml__CartesianCSPropertyType(struct soap *soap, gml__CartesianCSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CartesianCSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CoordinateSystemAxisType(struct soap*, const char*, int, const gml__CoordinateSystemAxisType *, const char*);
SOAP_FMAC3 gml__CoordinateSystemAxisType * SOAP_FMAC4 soap_in_gml__CoordinateSystemAxisType(struct soap*, const char*, gml__CoordinateSystemAxisType *, const char*);
SOAP_FMAC1 gml__CoordinateSystemAxisType * SOAP_FMAC2 soap_instantiate_gml__CoordinateSystemAxisType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CoordinateSystemAxisType * soap_new_gml__CoordinateSystemAxisType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CoordinateSystemAxisType(soap, n, NULL, NULL, NULL);
}

inline gml__CoordinateSystemAxisType * soap_new_req_gml__CoordinateSystemAxisType(
	struct soap *soap,
	gml__CodeType *axisAbbrev,
	gml__CodeWithAuthorityType *axisDirection,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__CoordinateSystemAxisType *_p = soap_new_gml__CoordinateSystemAxisType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CoordinateSystemAxisType::axisAbbrev = axisAbbrev;
		_p->gml__CoordinateSystemAxisType::axisDirection = axisDirection;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__CoordinateSystemAxisType * soap_new_set_gml__CoordinateSystemAxisType(
	struct soap *soap,
	gml__CodeType *axisAbbrev,
	gml__CodeWithAuthorityType *axisDirection,
	double *minimumValue,
	double *maximumValue,
	gml__CodeWithAuthorityType *rangeMeaning,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__CoordinateSystemAxisType *_p = soap_new_gml__CoordinateSystemAxisType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CoordinateSystemAxisType::axisAbbrev = axisAbbrev;
		_p->gml__CoordinateSystemAxisType::axisDirection = axisDirection;
		_p->gml__CoordinateSystemAxisType::minimumValue = minimumValue;
		_p->gml__CoordinateSystemAxisType::maximumValue = maximumValue;
		_p->gml__CoordinateSystemAxisType::rangeMeaning = rangeMeaning;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__CoordinateSystemAxisType(struct soap *soap, gml__CoordinateSystemAxisType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CoordinateSystemAxisType", "gml:CoordinateSystemAxisType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CoordinateSystemAxisType * SOAP_FMAC4 soap_get_gml__CoordinateSystemAxisType(struct soap*, gml__CoordinateSystemAxisType *, const char*, const char*);

inline int soap_read_gml__CoordinateSystemAxisType(struct soap *soap, gml__CoordinateSystemAxisType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CoordinateSystemAxisType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CoordinateSystemAxisPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CoordinateSystemAxisPropertyType(struct soap*, const char*, int, const gml__CoordinateSystemAxisPropertyType *, const char*);
SOAP_FMAC3 gml__CoordinateSystemAxisPropertyType * SOAP_FMAC4 soap_in_gml__CoordinateSystemAxisPropertyType(struct soap*, const char*, gml__CoordinateSystemAxisPropertyType *, const char*);
SOAP_FMAC1 gml__CoordinateSystemAxisPropertyType * SOAP_FMAC2 soap_instantiate_gml__CoordinateSystemAxisPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CoordinateSystemAxisPropertyType * soap_new_gml__CoordinateSystemAxisPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CoordinateSystemAxisPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__CoordinateSystemAxisPropertyType * soap_new_req_gml__CoordinateSystemAxisPropertyType(
	struct soap *soap)
{
	gml__CoordinateSystemAxisPropertyType *_p = soap_new_gml__CoordinateSystemAxisPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__CoordinateSystemAxisPropertyType * soap_new_set_gml__CoordinateSystemAxisPropertyType(
	struct soap *soap,
	__gml__CoordinateSystemAxisPropertyType_sequence *__CoordinateSystemAxisPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__CoordinateSystemAxisPropertyType *_p = soap_new_gml__CoordinateSystemAxisPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CoordinateSystemAxisPropertyType::__CoordinateSystemAxisPropertyType_sequence = __CoordinateSystemAxisPropertyType_sequence;
		_p->gml__CoordinateSystemAxisPropertyType::nilReason = nilReason;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__type = xlink__type;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__href = xlink__href;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__role = xlink__role;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__title = xlink__title;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__show = xlink__show;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__CoordinateSystemAxisPropertyType(struct soap *soap, gml__CoordinateSystemAxisPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CoordinateSystemAxisPropertyType", "gml:CoordinateSystemAxisPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CoordinateSystemAxisPropertyType * SOAP_FMAC4 soap_get_gml__CoordinateSystemAxisPropertyType(struct soap*, gml__CoordinateSystemAxisPropertyType *, const char*, const char*);

inline int soap_read_gml__CoordinateSystemAxisPropertyType(struct soap *soap, gml__CoordinateSystemAxisPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CoordinateSystemAxisPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateSystemType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCoordinateSystemType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractCoordinateSystemType(struct soap*, const char*, int, const gml__AbstractCoordinateSystemType *, const char*);
SOAP_FMAC3 gml__AbstractCoordinateSystemType * SOAP_FMAC4 soap_in_gml__AbstractCoordinateSystemType(struct soap*, const char*, gml__AbstractCoordinateSystemType *, const char*);
SOAP_FMAC1 gml__AbstractCoordinateSystemType * SOAP_FMAC2 soap_instantiate_gml__AbstractCoordinateSystemType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractCoordinateSystemType * soap_new_gml__AbstractCoordinateSystemType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractCoordinateSystemType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractCoordinateSystemType * soap_new_req_gml__AbstractCoordinateSystemType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__AbstractCoordinateSystemType *_p = soap_new_gml__AbstractCoordinateSystemType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__AbstractCoordinateSystemType * soap_new_set_gml__AbstractCoordinateSystemType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis,
	enum gml__AggregationType *aggregationType,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__AbstractCoordinateSystemType *_p = soap_new_gml__AbstractCoordinateSystemType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__AbstractCoordinateSystemType(struct soap *soap, gml__AbstractCoordinateSystemType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractCoordinateSystemType", "gml:AbstractCoordinateSystemType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractCoordinateSystemType * SOAP_FMAC4 soap_get_gml__AbstractCoordinateSystemType(struct soap*, gml__AbstractCoordinateSystemType *, const char*, const char*);

inline int soap_read_gml__AbstractCoordinateSystemType(struct soap *soap, gml__AbstractCoordinateSystemType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractCoordinateSystemType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__EllipsoidalCSType(struct soap*, const char*, int, const gml__EllipsoidalCSType *, const char*);
SOAP_FMAC3 gml__EllipsoidalCSType * SOAP_FMAC4 soap_in_gml__EllipsoidalCSType(struct soap*, const char*, gml__EllipsoidalCSType *, const char*);
SOAP_FMAC1 gml__EllipsoidalCSType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidalCSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__EllipsoidalCSType * soap_new_gml__EllipsoidalCSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__EllipsoidalCSType(soap, n, NULL, NULL, NULL);
}

inline gml__EllipsoidalCSType * soap_new_req_gml__EllipsoidalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__EllipsoidalCSType *_p = soap_new_gml__EllipsoidalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__EllipsoidalCSType * soap_new_set_gml__EllipsoidalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	enum gml__AggregationType *aggregationType1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__EllipsoidalCSType *_p = soap_new_gml__EllipsoidalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__EllipsoidalCSType(struct soap *soap, gml__EllipsoidalCSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:EllipsoidalCSType", "gml:EllipsoidalCSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__EllipsoidalCSType * SOAP_FMAC4 soap_get_gml__EllipsoidalCSType(struct soap*, gml__EllipsoidalCSType *, const char*, const char*);

inline int soap_read_gml__EllipsoidalCSType(struct soap *soap, gml__EllipsoidalCSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__EllipsoidalCSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__EllipsoidalCSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__EllipsoidalCSPropertyType(struct soap*, const char*, int, const gml__EllipsoidalCSPropertyType *, const char*);
SOAP_FMAC3 gml__EllipsoidalCSPropertyType * SOAP_FMAC4 soap_in_gml__EllipsoidalCSPropertyType(struct soap*, const char*, gml__EllipsoidalCSPropertyType *, const char*);
SOAP_FMAC1 gml__EllipsoidalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__EllipsoidalCSPropertyType * soap_new_gml__EllipsoidalCSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__EllipsoidalCSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__EllipsoidalCSPropertyType * soap_new_req_gml__EllipsoidalCSPropertyType(
	struct soap *soap)
{
	gml__EllipsoidalCSPropertyType *_p = soap_new_gml__EllipsoidalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__EllipsoidalCSPropertyType * soap_new_set_gml__EllipsoidalCSPropertyType(
	struct soap *soap,
	__gml__EllipsoidalCSPropertyType_sequence *__EllipsoidalCSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__EllipsoidalCSPropertyType *_p = soap_new_gml__EllipsoidalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__EllipsoidalCSPropertyType::__EllipsoidalCSPropertyType_sequence = __EllipsoidalCSPropertyType_sequence;
		_p->gml__EllipsoidalCSPropertyType::nilReason = nilReason;
		_p->gml__EllipsoidalCSPropertyType::xlink__type = xlink__type;
		_p->gml__EllipsoidalCSPropertyType::xlink__href = xlink__href;
		_p->gml__EllipsoidalCSPropertyType::xlink__role = xlink__role;
		_p->gml__EllipsoidalCSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__EllipsoidalCSPropertyType::xlink__title = xlink__title;
		_p->gml__EllipsoidalCSPropertyType::xlink__show = xlink__show;
		_p->gml__EllipsoidalCSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__EllipsoidalCSPropertyType(struct soap *soap, gml__EllipsoidalCSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:EllipsoidalCSPropertyType", "gml:EllipsoidalCSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__EllipsoidalCSPropertyType * SOAP_FMAC4 soap_get_gml__EllipsoidalCSPropertyType(struct soap*, gml__EllipsoidalCSPropertyType *, const char*, const char*);

inline int soap_read_gml__EllipsoidalCSPropertyType(struct soap *soap, gml__EllipsoidalCSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__EllipsoidalCSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__TimePrimitivePropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__TimePrimitivePropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__TimePrimitivePropertyType(struct soap*, const char*, int, const gml__TimePrimitivePropertyType *, const char*);
SOAP_FMAC3 gml__TimePrimitivePropertyType * SOAP_FMAC4 soap_in_gml__TimePrimitivePropertyType(struct soap*, const char*, gml__TimePrimitivePropertyType *, const char*);
SOAP_FMAC1 gml__TimePrimitivePropertyType * SOAP_FMAC2 soap_instantiate_gml__TimePrimitivePropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__TimePrimitivePropertyType * soap_new_gml__TimePrimitivePropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__TimePrimitivePropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__TimePrimitivePropertyType * soap_new_req_gml__TimePrimitivePropertyType(
	struct soap *soap)
{
	gml__TimePrimitivePropertyType *_p = soap_new_gml__TimePrimitivePropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__TimePrimitivePropertyType * soap_new_set_gml__TimePrimitivePropertyType(
	struct soap *soap,
	__gml__TimePrimitivePropertyType_sequence *__TimePrimitivePropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate,
	bool owns)
{
	gml__TimePrimitivePropertyType *_p = soap_new_gml__TimePrimitivePropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__TimePrimitivePropertyType::__TimePrimitivePropertyType_sequence = __TimePrimitivePropertyType_sequence;
		_p->gml__TimePrimitivePropertyType::nilReason = nilReason;
		_p->gml__TimePrimitivePropertyType::xlink__type = xlink__type;
		_p->gml__TimePrimitivePropertyType::xlink__href = xlink__href;
		_p->gml__TimePrimitivePropertyType::xlink__role = xlink__role;
		_p->gml__TimePrimitivePropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__TimePrimitivePropertyType::xlink__title = xlink__title;
		_p->gml__TimePrimitivePropertyType::xlink__show = xlink__show;
		_p->gml__TimePrimitivePropertyType::xlink__actuate = xlink__actuate;
		_p->gml__TimePrimitivePropertyType::owns = owns;
	}
	return _p;
}

inline int soap_write_gml__TimePrimitivePropertyType(struct soap *soap, gml__TimePrimitivePropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:TimePrimitivePropertyType", "gml:TimePrimitivePropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__TimePrimitivePropertyType * SOAP_FMAC4 soap_get_gml__TimePrimitivePropertyType(struct soap*, gml__TimePrimitivePropertyType *, const char*, const char*);

inline int soap_read_gml__TimePrimitivePropertyType(struct soap *soap, gml__TimePrimitivePropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__TimePrimitivePropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__RelatedTimeType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__RelatedTimeType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__RelatedTimeType(struct soap*, const char*, int, const gml__RelatedTimeType *, const char*);
SOAP_FMAC3 gml__RelatedTimeType * SOAP_FMAC4 soap_in_gml__RelatedTimeType(struct soap*, const char*, gml__RelatedTimeType *, const char*);
SOAP_FMAC1 gml__RelatedTimeType * SOAP_FMAC2 soap_instantiate_gml__RelatedTimeType(struct soap*, int, const char*, const char*, size_t*);

inline gml__RelatedTimeType * soap_new_gml__RelatedTimeType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__RelatedTimeType(soap, n, NULL, NULL, NULL);
}

inline gml__RelatedTimeType * soap_new_req_gml__RelatedTimeType(
	struct soap *soap)
{
	gml__RelatedTimeType *_p = soap_new_gml__RelatedTimeType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__RelatedTimeType * soap_new_set_gml__RelatedTimeType(
	struct soap *soap,
	enum _gml__RelatedTimeType_relativePosition *relativePosition,
	__gml__TimePrimitivePropertyType_sequence *__TimePrimitivePropertyType_sequence1,
	std::string *nilReason1,
	std::string *xlink__type1,
	std::string *xlink__href1,
	std::string *xlink__role1,
	std::string *xlink__arcrole1,
	std::string *xlink__title1,
	enum _xlink__show *xlink__show1,
	enum _xlink__actuate *xlink__actuate1,
	bool owns1)
{
	gml__RelatedTimeType *_p = soap_new_gml__RelatedTimeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__RelatedTimeType::relativePosition = relativePosition;
		_p->gml__TimePrimitivePropertyType::__TimePrimitivePropertyType_sequence = __TimePrimitivePropertyType_sequence1;
		_p->gml__TimePrimitivePropertyType::nilReason = nilReason1;
		_p->gml__TimePrimitivePropertyType::xlink__type = xlink__type1;
		_p->gml__TimePrimitivePropertyType::xlink__href = xlink__href1;
		_p->gml__TimePrimitivePropertyType::xlink__role = xlink__role1;
		_p->gml__TimePrimitivePropertyType::xlink__arcrole = xlink__arcrole1;
		_p->gml__TimePrimitivePropertyType::xlink__title = xlink__title1;
		_p->gml__TimePrimitivePropertyType::xlink__show = xlink__show1;
		_p->gml__TimePrimitivePropertyType::xlink__actuate = xlink__actuate1;
		_p->gml__TimePrimitivePropertyType::owns = owns1;
	}
	return _p;
}

inline int soap_write_gml__RelatedTimeType(struct soap *soap, gml__RelatedTimeType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:RelatedTimeType", "gml:RelatedTimeType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__RelatedTimeType * SOAP_FMAC4 soap_get_gml__RelatedTimeType(struct soap*, gml__RelatedTimeType *, const char*, const char*);

inline int soap_read_gml__RelatedTimeType(struct soap *soap, gml__RelatedTimeType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__RelatedTimeType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimeObjectType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimeObjectType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractTimeObjectType(struct soap*, const char*, int, const gml__AbstractTimeObjectType *, const char*);
SOAP_FMAC3 gml__AbstractTimeObjectType * SOAP_FMAC4 soap_in_gml__AbstractTimeObjectType(struct soap*, const char*, gml__AbstractTimeObjectType *, const char*);
SOAP_FMAC1 gml__AbstractTimeObjectType * SOAP_FMAC2 soap_instantiate_gml__AbstractTimeObjectType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractTimeObjectType * soap_new_gml__AbstractTimeObjectType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractTimeObjectType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractTimeObjectType * soap_new_req_gml__AbstractTimeObjectType(
	struct soap *soap,
	const std::string& gml__id1)
{
	gml__AbstractTimeObjectType *_p = soap_new_gml__AbstractTimeObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::gml__id = gml__id1;
	}
	return _p;
}

inline gml__AbstractTimeObjectType * soap_new_set_gml__AbstractTimeObjectType(
	struct soap *soap,
	gml__StringOrRefType *description1,
	gml__ReferenceType *descriptionReference1,
	gml__CodeWithAuthorityType *identifier1,
	const std::vector<gml__CodeType *> & name1,
	const std::string& gml__id1)
{
	gml__AbstractTimeObjectType *_p = soap_new_gml__AbstractTimeObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::description = description1;
		_p->gml__AbstractGMLType::descriptionReference = descriptionReference1;
		_p->gml__AbstractGMLType::identifier = identifier1;
		_p->gml__AbstractGMLType::name = name1;
		_p->gml__AbstractGMLType::gml__id = gml__id1;
	}
	return _p;
}

inline int soap_write_gml__AbstractTimeObjectType(struct soap *soap, gml__AbstractTimeObjectType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractTimeObjectType", "gml:AbstractTimeObjectType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractTimeObjectType * SOAP_FMAC4 soap_get_gml__AbstractTimeObjectType(struct soap*, gml__AbstractTimeObjectType *, const char*, const char*);

inline int soap_read_gml__AbstractTimeObjectType(struct soap *soap, gml__AbstractTimeObjectType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractTimeObjectType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimePrimitiveType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractTimePrimitiveType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractTimePrimitiveType(struct soap*, const char*, int, const gml__AbstractTimePrimitiveType *, const char*);
SOAP_FMAC3 gml__AbstractTimePrimitiveType * SOAP_FMAC4 soap_in_gml__AbstractTimePrimitiveType(struct soap*, const char*, gml__AbstractTimePrimitiveType *, const char*);
SOAP_FMAC1 gml__AbstractTimePrimitiveType * SOAP_FMAC2 soap_instantiate_gml__AbstractTimePrimitiveType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractTimePrimitiveType * soap_new_gml__AbstractTimePrimitiveType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractTimePrimitiveType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractTimePrimitiveType * soap_new_req_gml__AbstractTimePrimitiveType(
	struct soap *soap,
	const std::string& gml__id2)
{
	gml__AbstractTimePrimitiveType *_p = soap_new_gml__AbstractTimePrimitiveType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::gml__id = gml__id2;
	}
	return _p;
}

inline gml__AbstractTimePrimitiveType * soap_new_set_gml__AbstractTimePrimitiveType(
	struct soap *soap,
	const std::vector<gml__RelatedTimeType *> & relatedTime,
	gml__StringOrRefType *description2,
	gml__ReferenceType *descriptionReference2,
	gml__CodeWithAuthorityType *identifier2,
	const std::vector<gml__CodeType *> & name2,
	const std::string& gml__id2)
{
	gml__AbstractTimePrimitiveType *_p = soap_new_gml__AbstractTimePrimitiveType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractTimePrimitiveType::relatedTime = relatedTime;
		_p->gml__AbstractGMLType::description = description2;
		_p->gml__AbstractGMLType::descriptionReference = descriptionReference2;
		_p->gml__AbstractGMLType::identifier = identifier2;
		_p->gml__AbstractGMLType::name = name2;
		_p->gml__AbstractGMLType::gml__id = gml__id2;
	}
	return _p;
}

inline int soap_write_gml__AbstractTimePrimitiveType(struct soap *soap, gml__AbstractTimePrimitiveType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractTimePrimitiveType", "gml:AbstractTimePrimitiveType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractTimePrimitiveType * SOAP_FMAC4 soap_get_gml__AbstractTimePrimitiveType(struct soap*, gml__AbstractTimePrimitiveType *, const char*, const char*);

inline int soap_read_gml__AbstractTimePrimitiveType(struct soap *soap, gml__AbstractTimePrimitiveType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractTimePrimitiveType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CodeType(struct soap*, const char*, int, const gml__CodeType *, const char*);
SOAP_FMAC3 gml__CodeType * SOAP_FMAC4 soap_in_gml__CodeType(struct soap*, const char*, gml__CodeType *, const char*);
SOAP_FMAC1 gml__CodeType * SOAP_FMAC2 soap_instantiate_gml__CodeType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CodeType * soap_new_gml__CodeType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CodeType(soap, n, NULL, NULL, NULL);
}

inline gml__CodeType * soap_new_req_gml__CodeType(
	struct soap *soap,
	const std::string& __item)
{
	gml__CodeType *_p = soap_new_gml__CodeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CodeType::__item = __item;
	}
	return _p;
}

inline gml__CodeType * soap_new_set_gml__CodeType(
	struct soap *soap,
	const std::string& __item,
	std::string *codeSpace)
{
	gml__CodeType *_p = soap_new_gml__CodeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CodeType::__item = __item;
		_p->gml__CodeType::codeSpace = codeSpace;
	}
	return _p;
}

inline int soap_write_gml__CodeType(struct soap *soap, gml__CodeType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CodeType", "gml:CodeType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CodeType * SOAP_FMAC4 soap_get_gml__CodeType(struct soap*, gml__CodeType *, const char*, const char*);

inline int soap_read_gml__CodeType(struct soap *soap, gml__CodeType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CodeType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeWithAuthorityType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__CodeWithAuthorityType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CodeWithAuthorityType(struct soap*, const char*, int, const gml__CodeWithAuthorityType *, const char*);
SOAP_FMAC3 gml__CodeWithAuthorityType * SOAP_FMAC4 soap_in_gml__CodeWithAuthorityType(struct soap*, const char*, gml__CodeWithAuthorityType *, const char*);
SOAP_FMAC1 gml__CodeWithAuthorityType * SOAP_FMAC2 soap_instantiate_gml__CodeWithAuthorityType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CodeWithAuthorityType * soap_new_gml__CodeWithAuthorityType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CodeWithAuthorityType(soap, n, NULL, NULL, NULL);
}

inline gml__CodeWithAuthorityType * soap_new_req_gml__CodeWithAuthorityType(
	struct soap *soap,
	const std::string& __item,
	const std::string& codeSpace)
{
	gml__CodeWithAuthorityType *_p = soap_new_gml__CodeWithAuthorityType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CodeWithAuthorityType::__item = __item;
		_p->gml__CodeWithAuthorityType::codeSpace = codeSpace;
	}
	return _p;
}

inline gml__CodeWithAuthorityType * soap_new_set_gml__CodeWithAuthorityType(
	struct soap *soap,
	const std::string& __item,
	const std::string& codeSpace,
	std::string *codeSpace_)
{
	gml__CodeWithAuthorityType *_p = soap_new_gml__CodeWithAuthorityType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CodeWithAuthorityType::__item = __item;
		_p->gml__CodeWithAuthorityType::codeSpace = codeSpace;
		_p->gml__CodeWithAuthorityType::codeSpace_ = codeSpace_;
	}
	return _p;
}

inline int soap_write_gml__CodeWithAuthorityType(struct soap *soap, gml__CodeWithAuthorityType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CodeWithAuthorityType", "gml:CodeWithAuthorityType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CodeWithAuthorityType * SOAP_FMAC4 soap_get_gml__CodeWithAuthorityType(struct soap*, gml__CodeWithAuthorityType *, const char*, const char*);

inline int soap_read_gml__CodeWithAuthorityType(struct soap *soap, gml__CodeWithAuthorityType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CodeWithAuthorityType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ReferenceType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__ReferenceType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__ReferenceType(struct soap*, const char*, int, const gml__ReferenceType *, const char*);
SOAP_FMAC3 gml__ReferenceType * SOAP_FMAC4 soap_in_gml__ReferenceType(struct soap*, const char*, gml__ReferenceType *, const char*);
SOAP_FMAC1 gml__ReferenceType * SOAP_FMAC2 soap_instantiate_gml__ReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline gml__ReferenceType * soap_new_gml__ReferenceType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__ReferenceType(soap, n, NULL, NULL, NULL);
}

inline gml__ReferenceType * soap_new_req_gml__ReferenceType(
	struct soap *soap)
{
	gml__ReferenceType *_p = soap_new_gml__ReferenceType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__ReferenceType * soap_new_set_gml__ReferenceType(
	struct soap *soap,
	bool owns,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__ReferenceType *_p = soap_new_gml__ReferenceType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__ReferenceType::owns = owns;
		_p->gml__ReferenceType::nilReason = nilReason;
		_p->gml__ReferenceType::xlink__type = xlink__type;
		_p->gml__ReferenceType::xlink__href = xlink__href;
		_p->gml__ReferenceType::xlink__role = xlink__role;
		_p->gml__ReferenceType::xlink__arcrole = xlink__arcrole;
		_p->gml__ReferenceType::xlink__title = xlink__title;
		_p->gml__ReferenceType::xlink__show = xlink__show;
		_p->gml__ReferenceType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__ReferenceType(struct soap *soap, gml__ReferenceType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:ReferenceType", "gml:ReferenceType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__ReferenceType * SOAP_FMAC4 soap_get_gml__ReferenceType(struct soap*, gml__ReferenceType *, const char*, const char*);

inline int soap_read_gml__ReferenceType(struct soap *soap, gml__ReferenceType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__ReferenceType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__StringOrRefType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__StringOrRefType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__StringOrRefType(struct soap*, const char*, int, const gml__StringOrRefType *, const char*);
SOAP_FMAC3 gml__StringOrRefType * SOAP_FMAC4 soap_in_gml__StringOrRefType(struct soap*, const char*, gml__StringOrRefType *, const char*);
SOAP_FMAC1 gml__StringOrRefType * SOAP_FMAC2 soap_instantiate_gml__StringOrRefType(struct soap*, int, const char*, const char*, size_t*);

inline gml__StringOrRefType * soap_new_gml__StringOrRefType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__StringOrRefType(soap, n, NULL, NULL, NULL);
}

inline gml__StringOrRefType * soap_new_req_gml__StringOrRefType(
	struct soap *soap,
	const std::string& __item)
{
	gml__StringOrRefType *_p = soap_new_gml__StringOrRefType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__StringOrRefType::__item = __item;
	}
	return _p;
}

inline gml__StringOrRefType * soap_new_set_gml__StringOrRefType(
	struct soap *soap,
	const std::string& __item,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__StringOrRefType *_p = soap_new_gml__StringOrRefType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__StringOrRefType::__item = __item;
		_p->gml__StringOrRefType::nilReason = nilReason;
		_p->gml__StringOrRefType::xlink__type = xlink__type;
		_p->gml__StringOrRefType::xlink__href = xlink__href;
		_p->gml__StringOrRefType::xlink__role = xlink__role;
		_p->gml__StringOrRefType::xlink__arcrole = xlink__arcrole;
		_p->gml__StringOrRefType::xlink__title = xlink__title;
		_p->gml__StringOrRefType::xlink__show = xlink__show;
		_p->gml__StringOrRefType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__StringOrRefType(struct soap *soap, gml__StringOrRefType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:StringOrRefType", "gml:StringOrRefType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__StringOrRefType * SOAP_FMAC4 soap_get_gml__StringOrRefType(struct soap*, gml__StringOrRefType *, const char*, const char*);

inline int soap_read_gml__StringOrRefType(struct soap *soap, gml__StringOrRefType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__StringOrRefType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGMLType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractGMLType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractGMLType(struct soap*, const char*, int, const gml__AbstractGMLType *, const char*);
SOAP_FMAC3 gml__AbstractGMLType * SOAP_FMAC4 soap_in_gml__AbstractGMLType(struct soap*, const char*, gml__AbstractGMLType *, const char*);
SOAP_FMAC1 gml__AbstractGMLType * SOAP_FMAC2 soap_instantiate_gml__AbstractGMLType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractGMLType * soap_new_gml__AbstractGMLType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractGMLType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractGMLType * soap_new_req_gml__AbstractGMLType(
	struct soap *soap,
	const std::string& gml__id)
{
	gml__AbstractGMLType *_p = soap_new_gml__AbstractGMLType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::gml__id = gml__id;
	}
	return _p;
}

inline gml__AbstractGMLType * soap_new_set_gml__AbstractGMLType(
	struct soap *soap,
	gml__StringOrRefType *description,
	gml__ReferenceType *descriptionReference,
	gml__CodeWithAuthorityType *identifier,
	const std::vector<gml__CodeType *> & name,
	const std::string& gml__id)
{
	gml__AbstractGMLType *_p = soap_new_gml__AbstractGMLType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::description = description;
		_p->gml__AbstractGMLType::descriptionReference = descriptionReference;
		_p->gml__AbstractGMLType::identifier = identifier;
		_p->gml__AbstractGMLType::name = name;
		_p->gml__AbstractGMLType::gml__id = gml__id;
	}
	return _p;
}

inline int soap_write_gml__AbstractGMLType(struct soap *soap, gml__AbstractGMLType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractGMLType", "gml:AbstractGMLType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractGMLType * SOAP_FMAC4 soap_get_gml__AbstractGMLType(struct soap*, gml__AbstractGMLType *, const char*, const char*);

inline int soap_read_gml__AbstractGMLType(struct soap *soap, gml__AbstractGMLType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractGMLType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionBaseType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionBaseType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__DefinitionBaseType(struct soap*, const char*, int, const gml__DefinitionBaseType *, const char*);
SOAP_FMAC3 gml__DefinitionBaseType * SOAP_FMAC4 soap_in_gml__DefinitionBaseType(struct soap*, const char*, gml__DefinitionBaseType *, const char*);
SOAP_FMAC1 gml__DefinitionBaseType * SOAP_FMAC2 soap_instantiate_gml__DefinitionBaseType(struct soap*, int, const char*, const char*, size_t*);

inline gml__DefinitionBaseType * soap_new_gml__DefinitionBaseType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__DefinitionBaseType(soap, n, NULL, NULL, NULL);
}

inline gml__DefinitionBaseType * soap_new_req_gml__DefinitionBaseType(
	struct soap *soap,
	gml__CodeWithAuthorityType *identifier,
	const std::string& gml__id)
{
	gml__DefinitionBaseType *_p = soap_new_gml__DefinitionBaseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionBaseType::identifier = identifier;
		_p->gml__DefinitionBaseType::gml__id = gml__id;
	}
	return _p;
}

inline gml__DefinitionBaseType * soap_new_set_gml__DefinitionBaseType(
	struct soap *soap,
	gml__StringOrRefType *description,
	gml__ReferenceType *descriptionReference,
	gml__CodeWithAuthorityType *identifier,
	const std::vector<gml__CodeType *> & name,
	const std::string& gml__id)
{
	gml__DefinitionBaseType *_p = soap_new_gml__DefinitionBaseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionBaseType::description = description;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference;
		_p->gml__DefinitionBaseType::identifier = identifier;
		_p->gml__DefinitionBaseType::name = name;
		_p->gml__DefinitionBaseType::gml__id = gml__id;
	}
	return _p;
}

inline int soap_write_gml__DefinitionBaseType(struct soap *soap, gml__DefinitionBaseType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:DefinitionBaseType", "gml:DefinitionBaseType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__DefinitionBaseType * SOAP_FMAC4 soap_get_gml__DefinitionBaseType(struct soap*, gml__DefinitionBaseType *, const char*, const char*);

inline int soap_read_gml__DefinitionBaseType(struct soap *soap, gml__DefinitionBaseType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__DefinitionBaseType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__DefinitionType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__DefinitionType(struct soap*, const char*, int, const gml__DefinitionType *, const char*);
SOAP_FMAC3 gml__DefinitionType * SOAP_FMAC4 soap_in_gml__DefinitionType(struct soap*, const char*, gml__DefinitionType *, const char*);
SOAP_FMAC1 gml__DefinitionType * SOAP_FMAC2 soap_instantiate_gml__DefinitionType(struct soap*, int, const char*, const char*, size_t*);

inline gml__DefinitionType * soap_new_gml__DefinitionType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__DefinitionType(soap, n, NULL, NULL, NULL);
}

inline gml__DefinitionType * soap_new_req_gml__DefinitionType(
	struct soap *soap,
	gml__CodeWithAuthorityType *identifier1,
	const std::string& gml__id1)
{
	gml__DefinitionType *_p = soap_new_gml__DefinitionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionBaseType::identifier = identifier1;
		_p->gml__DefinitionBaseType::gml__id = gml__id1;
	}
	return _p;
}

inline gml__DefinitionType * soap_new_set_gml__DefinitionType(
	struct soap *soap,
	std::string *remarks,
	gml__StringOrRefType *description1,
	gml__ReferenceType *descriptionReference1,
	gml__CodeWithAuthorityType *identifier1,
	const std::vector<gml__CodeType *> & name1,
	const std::string& gml__id1)
{
	gml__DefinitionType *_p = soap_new_gml__DefinitionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionType::remarks = remarks;
		_p->gml__DefinitionBaseType::description = description1;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference1;
		_p->gml__DefinitionBaseType::identifier = identifier1;
		_p->gml__DefinitionBaseType::name = name1;
		_p->gml__DefinitionBaseType::gml__id = gml__id1;
	}
	return _p;
}

inline int soap_write_gml__DefinitionType(struct soap *soap, gml__DefinitionType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:DefinitionType", "gml:DefinitionType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__DefinitionType * SOAP_FMAC4 soap_get_gml__DefinitionType(struct soap*, gml__DefinitionType *, const char*, const char*);

inline int soap_read_gml__DefinitionType(struct soap *soap, gml__DefinitionType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__DefinitionType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__IdentifiedObjectType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__IdentifiedObjectType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__IdentifiedObjectType(struct soap*, const char*, int, const gml__IdentifiedObjectType *, const char*);
SOAP_FMAC3 gml__IdentifiedObjectType * SOAP_FMAC4 soap_in_gml__IdentifiedObjectType(struct soap*, const char*, gml__IdentifiedObjectType *, const char*);
SOAP_FMAC1 gml__IdentifiedObjectType * SOAP_FMAC2 soap_instantiate_gml__IdentifiedObjectType(struct soap*, int, const char*, const char*, size_t*);

inline gml__IdentifiedObjectType * soap_new_gml__IdentifiedObjectType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__IdentifiedObjectType(soap, n, NULL, NULL, NULL);
}

inline gml__IdentifiedObjectType * soap_new_req_gml__IdentifiedObjectType(
	struct soap *soap,
	gml__CodeWithAuthorityType *identifier2,
	const std::string& gml__id2)
{
	gml__IdentifiedObjectType *_p = soap_new_gml__IdentifiedObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionBaseType::identifier = identifier2;
		_p->gml__DefinitionBaseType::gml__id = gml__id2;
	}
	return _p;
}

inline gml__IdentifiedObjectType * soap_new_set_gml__IdentifiedObjectType(
	struct soap *soap,
	std::string *remarks1,
	gml__StringOrRefType *description2,
	gml__ReferenceType *descriptionReference2,
	gml__CodeWithAuthorityType *identifier2,
	const std::vector<gml__CodeType *> & name2,
	const std::string& gml__id2)
{
	gml__IdentifiedObjectType *_p = soap_new_gml__IdentifiedObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionType::remarks = remarks1;
		_p->gml__DefinitionBaseType::description = description2;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference2;
		_p->gml__DefinitionBaseType::identifier = identifier2;
		_p->gml__DefinitionBaseType::name = name2;
		_p->gml__DefinitionBaseType::gml__id = gml__id2;
	}
	return _p;
}

inline int soap_write_gml__IdentifiedObjectType(struct soap *soap, gml__IdentifiedObjectType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:IdentifiedObjectType", "gml:IdentifiedObjectType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__IdentifiedObjectType * SOAP_FMAC4 soap_get_gml__IdentifiedObjectType(struct soap*, gml__IdentifiedObjectType *, const char*, const char*);

inline int soap_read_gml__IdentifiedObjectType(struct soap *soap, gml__IdentifiedObjectType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__IdentifiedObjectType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__AbstractCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractCRSType(struct soap*, const char*, int, const gml__AbstractCRSType *, const char*);
SOAP_FMAC3 gml__AbstractCRSType * SOAP_FMAC4 soap_in_gml__AbstractCRSType(struct soap*, const char*, gml__AbstractCRSType *, const char*);
SOAP_FMAC1 gml__AbstractCRSType * SOAP_FMAC2 soap_instantiate_gml__AbstractCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractCRSType * soap_new_gml__AbstractCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractCRSType * soap_new_req_gml__AbstractCRSType(
	struct soap *soap,
	const std::vector<std::string> & scope,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__AbstractCRSType *_p = soap_new_gml__AbstractCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCRSType::scope = scope;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__AbstractCRSType * soap_new_set_gml__AbstractCRSType(
	struct soap *soap,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity,
	const std::vector<std::string> & scope,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__AbstractCRSType *_p = soap_new_gml__AbstractCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity;
		_p->gml__AbstractCRSType::scope = scope;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__AbstractCRSType(struct soap *soap, gml__AbstractCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractCRSType", "gml:AbstractCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractCRSType * SOAP_FMAC4 soap_get_gml__AbstractCRSType(struct soap*, gml__AbstractCRSType *, const char*, const char*);

inline int soap_read_gml__AbstractCRSType(struct soap *soap, gml__AbstractCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_gml__GeodeticCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeodeticCRSType(struct soap*, const char*, int, const gml__GeodeticCRSType *, const char*);
SOAP_FMAC3 gml__GeodeticCRSType * SOAP_FMAC4 soap_in_gml__GeodeticCRSType(struct soap*, const char*, gml__GeodeticCRSType *, const char*);
SOAP_FMAC1 gml__GeodeticCRSType * SOAP_FMAC2 soap_instantiate_gml__GeodeticCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeodeticCRSType * soap_new_gml__GeodeticCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeodeticCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__GeodeticCRSType * soap_new_req_gml__GeodeticCRSType(
	struct soap *soap,
	int __union_GeodeticCRSType,
	const union _gml__union_GeodeticCRSType& union_GeodeticCRSType,
	gml__GeodeticDatumPropertyType *geodeticDatum,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__GeodeticCRSType *_p = soap_new_gml__GeodeticCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticCRSType::__union_GeodeticCRSType = __union_GeodeticCRSType;
		_p->gml__GeodeticCRSType::union_GeodeticCRSType = union_GeodeticCRSType;
		_p->gml__GeodeticCRSType::geodeticDatum = geodeticDatum;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__GeodeticCRSType * soap_new_set_gml__GeodeticCRSType(
	struct soap *soap,
	int __union_GeodeticCRSType,
	const union _gml__union_GeodeticCRSType& union_GeodeticCRSType,
	gml__GeodeticDatumPropertyType *geodeticDatum,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity1,
	const std::vector<std::string> & scope1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__GeodeticCRSType *_p = soap_new_gml__GeodeticCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticCRSType::__union_GeodeticCRSType = __union_GeodeticCRSType;
		_p->gml__GeodeticCRSType::union_GeodeticCRSType = union_GeodeticCRSType;
		_p->gml__GeodeticCRSType::geodeticDatum = geodeticDatum;
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__GeodeticCRSType(struct soap *soap, gml__GeodeticCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeodeticCRSType", "gml:GeodeticCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeodeticCRSType * SOAP_FMAC4 soap_get_gml__GeodeticCRSType(struct soap*, gml__GeodeticCRSType *, const char*, const char*);

inline int soap_read_gml__GeodeticCRSType(struct soap *soap, gml__GeodeticCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeodeticCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_abstract__abstractObject_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_abstract__abstractObject_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_abstract__abstractObject(struct soap*, const char*, int, const abstract__abstractObject *, const char*);
SOAP_FMAC3 abstract__abstractObject * SOAP_FMAC4 soap_in_abstract__abstractObject(struct soap*, const char*, abstract__abstractObject *, const char*);
SOAP_FMAC1 abstract__abstractObject * SOAP_FMAC2 soap_instantiate_abstract__abstractObject(struct soap*, int, const char*, const char*, size_t*);

inline abstract__abstractObject * soap_new_abstract__abstractObject(struct soap *soap, int n = -1)
{
	return soap_instantiate_abstract__abstractObject(soap, n, NULL, NULL, NULL);
}

inline abstract__abstractObject * soap_new_req_abstract__abstractObject(
	struct soap *soap)
{
	abstract__abstractObject *_p = soap_new_abstract__abstractObject(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline abstract__abstractObject * soap_new_set_abstract__abstractObject(
	struct soap *soap)
{
	abstract__abstractObject *_p = soap_new_abstract__abstractObject(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_abstract__abstractObject(struct soap *soap, abstract__abstractObject const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "abstract:abstractObject", "abstract:abstractObject") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 abstract__abstractObject * SOAP_FMAC4 soap_get_abstract__abstractObject(struct soap*, abstract__abstractObject *, const char*, const char*);

inline int soap_read_abstract__abstractObject(struct soap *soap, abstract__abstractObject *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_abstract__abstractObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardVerticalCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardVerticalCRS_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREstandardVerticalCRS(struct soap*, const char*, int, const witsml1__cs_USCOREstandardVerticalCRS *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstandardVerticalCRS * SOAP_FMAC4 soap_in_witsml1__cs_USCOREstandardVerticalCRS(struct soap*, const char*, witsml1__cs_USCOREstandardVerticalCRS *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREstandardVerticalCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstandardVerticalCRS(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREstandardVerticalCRS * soap_new_witsml1__cs_USCOREstandardVerticalCRS(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREstandardVerticalCRS(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREstandardVerticalCRS * soap_new_req_witsml1__cs_USCOREstandardVerticalCRS(
	struct soap *soap,
	int __union_cs_USCOREstandardVerticalCRS,
	const union _witsml1__union_cs_USCOREstandardVerticalCRS& union_cs_USCOREstandardVerticalCRS)
{
	witsml1__cs_USCOREstandardVerticalCRS *_p = soap_new_witsml1__cs_USCOREstandardVerticalCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstandardVerticalCRS::__union_cs_USCOREstandardVerticalCRS = __union_cs_USCOREstandardVerticalCRS;
		_p->witsml1__cs_USCOREstandardVerticalCRS::union_cs_USCOREstandardVerticalCRS = union_cs_USCOREstandardVerticalCRS;
	}
	return _p;
}

inline witsml1__cs_USCOREstandardVerticalCRS * soap_new_set_witsml1__cs_USCOREstandardVerticalCRS(
	struct soap *soap,
	int __union_cs_USCOREstandardVerticalCRS,
	const union _witsml1__union_cs_USCOREstandardVerticalCRS& union_cs_USCOREstandardVerticalCRS,
	witsml1__refNameString *ellipsoidalDatum)
{
	witsml1__cs_USCOREstandardVerticalCRS *_p = soap_new_witsml1__cs_USCOREstandardVerticalCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstandardVerticalCRS::__union_cs_USCOREstandardVerticalCRS = __union_cs_USCOREstandardVerticalCRS;
		_p->witsml1__cs_USCOREstandardVerticalCRS::union_cs_USCOREstandardVerticalCRS = union_cs_USCOREstandardVerticalCRS;
		_p->witsml1__cs_USCOREstandardVerticalCRS::ellipsoidalDatum = ellipsoidalDatum;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREstandardVerticalCRS(struct soap *soap, witsml1__cs_USCOREstandardVerticalCRS const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_standardVerticalCRS", "witsml1:cs_standardVerticalCRS") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREstandardVerticalCRS * SOAP_FMAC4 soap_get_witsml1__cs_USCOREstandardVerticalCRS(struct soap*, witsml1__cs_USCOREstandardVerticalCRS *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREstandardVerticalCRS(struct soap *soap, witsml1__cs_USCOREstandardVerticalCRS *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREstandardVerticalCRS(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardProjectedCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardProjectedCRS_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREstandardProjectedCRS(struct soap*, const char*, int, const witsml1__cs_USCOREstandardProjectedCRS *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstandardProjectedCRS * SOAP_FMAC4 soap_in_witsml1__cs_USCOREstandardProjectedCRS(struct soap*, const char*, witsml1__cs_USCOREstandardProjectedCRS *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREstandardProjectedCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstandardProjectedCRS(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREstandardProjectedCRS * soap_new_witsml1__cs_USCOREstandardProjectedCRS(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREstandardProjectedCRS(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREstandardProjectedCRS * soap_new_req_witsml1__cs_USCOREstandardProjectedCRS(
	struct soap *soap,
	int __union_cs_USCOREstandardProjectedCRS,
	const union _witsml1__union_cs_USCOREstandardProjectedCRS& union_cs_USCOREstandardProjectedCRS)
{
	witsml1__cs_USCOREstandardProjectedCRS *_p = soap_new_witsml1__cs_USCOREstandardProjectedCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstandardProjectedCRS::__union_cs_USCOREstandardProjectedCRS = __union_cs_USCOREstandardProjectedCRS;
		_p->witsml1__cs_USCOREstandardProjectedCRS::union_cs_USCOREstandardProjectedCRS = union_cs_USCOREstandardProjectedCRS;
	}
	return _p;
}

inline witsml1__cs_USCOREstandardProjectedCRS * soap_new_set_witsml1__cs_USCOREstandardProjectedCRS(
	struct soap *soap,
	int __union_cs_USCOREstandardProjectedCRS,
	const union _witsml1__union_cs_USCOREstandardProjectedCRS& union_cs_USCOREstandardProjectedCRS)
{
	witsml1__cs_USCOREstandardProjectedCRS *_p = soap_new_witsml1__cs_USCOREstandardProjectedCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstandardProjectedCRS::__union_cs_USCOREstandardProjectedCRS = __union_cs_USCOREstandardProjectedCRS;
		_p->witsml1__cs_USCOREstandardProjectedCRS::union_cs_USCOREstandardProjectedCRS = union_cs_USCOREstandardProjectedCRS;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREstandardProjectedCRS(struct soap *soap, witsml1__cs_USCOREstandardProjectedCRS const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_standardProjectedCRS", "witsml1:cs_standardProjectedCRS") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREstandardProjectedCRS * SOAP_FMAC4 soap_get_witsml1__cs_USCOREstandardProjectedCRS(struct soap*, witsml1__cs_USCOREstandardProjectedCRS *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREstandardProjectedCRS(struct soap *soap, witsml1__cs_USCOREstandardProjectedCRS *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREstandardProjectedCRS(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardGeodeticCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstandardGeodeticCRS_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREstandardGeodeticCRS(struct soap*, const char*, int, const witsml1__cs_USCOREstandardGeodeticCRS *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstandardGeodeticCRS * SOAP_FMAC4 soap_in_witsml1__cs_USCOREstandardGeodeticCRS(struct soap*, const char*, witsml1__cs_USCOREstandardGeodeticCRS *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREstandardGeodeticCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstandardGeodeticCRS(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREstandardGeodeticCRS * soap_new_witsml1__cs_USCOREstandardGeodeticCRS(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREstandardGeodeticCRS(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREstandardGeodeticCRS * soap_new_req_witsml1__cs_USCOREstandardGeodeticCRS(
	struct soap *soap,
	int __union_cs_USCOREstandardGeodeticCRS,
	const union _witsml1__union_cs_USCOREstandardGeodeticCRS& union_cs_USCOREstandardGeodeticCRS)
{
	witsml1__cs_USCOREstandardGeodeticCRS *_p = soap_new_witsml1__cs_USCOREstandardGeodeticCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstandardGeodeticCRS::__union_cs_USCOREstandardGeodeticCRS = __union_cs_USCOREstandardGeodeticCRS;
		_p->witsml1__cs_USCOREstandardGeodeticCRS::union_cs_USCOREstandardGeodeticCRS = union_cs_USCOREstandardGeodeticCRS;
	}
	return _p;
}

inline witsml1__cs_USCOREstandardGeodeticCRS * soap_new_set_witsml1__cs_USCOREstandardGeodeticCRS(
	struct soap *soap,
	int __union_cs_USCOREstandardGeodeticCRS,
	const union _witsml1__union_cs_USCOREstandardGeodeticCRS& union_cs_USCOREstandardGeodeticCRS)
{
	witsml1__cs_USCOREstandardGeodeticCRS *_p = soap_new_witsml1__cs_USCOREstandardGeodeticCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstandardGeodeticCRS::__union_cs_USCOREstandardGeodeticCRS = __union_cs_USCOREstandardGeodeticCRS;
		_p->witsml1__cs_USCOREstandardGeodeticCRS::union_cs_USCOREstandardGeodeticCRS = union_cs_USCOREstandardGeodeticCRS;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREstandardGeodeticCRS(struct soap *soap, witsml1__cs_USCOREstandardGeodeticCRS const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_standardGeodeticCRS", "witsml1:cs_standardGeodeticCRS") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREstandardGeodeticCRS * SOAP_FMAC4 soap_get_witsml1__cs_USCOREstandardGeodeticCRS(struct soap*, witsml1__cs_USCOREstandardGeodeticCRS *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREstandardGeodeticCRS(struct soap *soap, witsml1__cs_USCOREstandardGeodeticCRS *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREstandardGeodeticCRS(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystem_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystem_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, const char*, int, const witsml1__obj_USCOREcoordinateReferenceSystem *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREcoordinateReferenceSystem * SOAP_FMAC4 soap_in_witsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, const char*, witsml1__obj_USCOREcoordinateReferenceSystem *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREcoordinateReferenceSystem * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREcoordinateReferenceSystem * soap_new_witsml1__obj_USCOREcoordinateReferenceSystem(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREcoordinateReferenceSystem(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREcoordinateReferenceSystem * soap_new_req_witsml1__obj_USCOREcoordinateReferenceSystem(
	struct soap *soap,
	const std::string& name)
{
	witsml1__obj_USCOREcoordinateReferenceSystem *_p = soap_new_witsml1__obj_USCOREcoordinateReferenceSystem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREcoordinateReferenceSystem::name = name;
	}
	return _p;
}

inline witsml1__obj_USCOREcoordinateReferenceSystem * soap_new_set_witsml1__obj_USCOREcoordinateReferenceSystem(
	struct soap *soap,
	const std::string& name,
	__witsml1__obj_USCOREcoordinateReferenceSystem_sequence *__obj_USCOREcoordinateReferenceSystem_sequence,
	witsml1__cs_USCOREcommonData *commonData,
	witsml1__cs_USCOREcustomData *customData,
	std::string *uid)
{
	witsml1__obj_USCOREcoordinateReferenceSystem *_p = soap_new_witsml1__obj_USCOREcoordinateReferenceSystem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREcoordinateReferenceSystem::name = name;
		_p->witsml1__obj_USCOREcoordinateReferenceSystem::__obj_USCOREcoordinateReferenceSystem_sequence = __obj_USCOREcoordinateReferenceSystem_sequence;
		_p->witsml1__obj_USCOREcoordinateReferenceSystem::commonData = commonData;
		_p->witsml1__obj_USCOREcoordinateReferenceSystem::customData = customData;
		_p->witsml1__obj_USCOREcoordinateReferenceSystem::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREcoordinateReferenceSystem(struct soap *soap, witsml1__obj_USCOREcoordinateReferenceSystem const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_coordinateReferenceSystem", "witsml1:obj_coordinateReferenceSystem") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREcoordinateReferenceSystem * SOAP_FMAC4 soap_get_witsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, witsml1__obj_USCOREcoordinateReferenceSystem *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREcoordinateReferenceSystem(struct soap *soap, witsml1__obj_USCOREcoordinateReferenceSystem *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREcoordinateReferenceSystem(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystems_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREcoordinateReferenceSystems_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREcoordinateReferenceSystems(struct soap*, const char*, int, const witsml1__obj_USCOREcoordinateReferenceSystems *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREcoordinateReferenceSystems * SOAP_FMAC4 soap_in_witsml1__obj_USCOREcoordinateReferenceSystems(struct soap*, const char*, witsml1__obj_USCOREcoordinateReferenceSystems *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREcoordinateReferenceSystems * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREcoordinateReferenceSystems(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREcoordinateReferenceSystems * soap_new_witsml1__obj_USCOREcoordinateReferenceSystems(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREcoordinateReferenceSystems(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREcoordinateReferenceSystems * soap_new_req_witsml1__obj_USCOREcoordinateReferenceSystems(
	struct soap *soap,
	const std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *> & coordinateReferenceSystem,
	const std::string& version)
{
	witsml1__obj_USCOREcoordinateReferenceSystems *_p = soap_new_witsml1__obj_USCOREcoordinateReferenceSystems(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREcoordinateReferenceSystems::coordinateReferenceSystem = coordinateReferenceSystem;
		_p->witsml1__obj_USCOREcoordinateReferenceSystems::version = version;
	}
	return _p;
}

inline witsml1__obj_USCOREcoordinateReferenceSystems * soap_new_set_witsml1__obj_USCOREcoordinateReferenceSystems(
	struct soap *soap,
	witsml1__cs_USCOREdocumentInfo *documentInfo,
	const std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *> & coordinateReferenceSystem,
	const std::string& version)
{
	witsml1__obj_USCOREcoordinateReferenceSystems *_p = soap_new_witsml1__obj_USCOREcoordinateReferenceSystems(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREcoordinateReferenceSystems::documentInfo = documentInfo;
		_p->witsml1__obj_USCOREcoordinateReferenceSystems::coordinateReferenceSystem = coordinateReferenceSystem;
		_p->witsml1__obj_USCOREcoordinateReferenceSystems::version = version;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREcoordinateReferenceSystems(struct soap *soap, witsml1__obj_USCOREcoordinateReferenceSystems const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_coordinateReferenceSystems", "witsml1:obj_coordinateReferenceSystems") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREcoordinateReferenceSystems * SOAP_FMAC4 soap_get_witsml1__obj_USCOREcoordinateReferenceSystems(struct soap*, witsml1__obj_USCOREcoordinateReferenceSystems *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREcoordinateReferenceSystems(struct soap *soap, witsml1__obj_USCOREcoordinateReferenceSystems *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREcoordinateReferenceSystems(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarker_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarker_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREformationMarker(struct soap*, const char*, int, const witsml1__obj_USCOREformationMarker *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREformationMarker * SOAP_FMAC4 soap_in_witsml1__obj_USCOREformationMarker(struct soap*, const char*, witsml1__obj_USCOREformationMarker *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREformationMarker * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREformationMarker(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREformationMarker * soap_new_witsml1__obj_USCOREformationMarker(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREformationMarker(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREformationMarker * soap_new_req_witsml1__obj_USCOREformationMarker(
	struct soap *soap,
	const std::string& nameWell,
	const std::string& nameWellbore,
	const std::string& name)
{
	witsml1__obj_USCOREformationMarker *_p = soap_new_witsml1__obj_USCOREformationMarker(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREformationMarker::nameWell = nameWell;
		_p->witsml1__obj_USCOREformationMarker::nameWellbore = nameWellbore;
		_p->witsml1__obj_USCOREformationMarker::name = name;
	}
	return _p;
}

inline witsml1__obj_USCOREformationMarker * soap_new_set_witsml1__obj_USCOREformationMarker(
	struct soap *soap,
	const std::string& nameWell,
	const std::string& nameWellbore,
	const std::string& name,
	__witsml1__obj_USCOREformationMarker_sequence *__obj_USCOREformationMarker_sequence,
	witsml1__cs_USCOREcommonData *commonData,
	witsml1__cs_USCOREcustomData *customData,
	std::string *uidWell,
	std::string *uidWellbore,
	std::string *uid)
{
	witsml1__obj_USCOREformationMarker *_p = soap_new_witsml1__obj_USCOREformationMarker(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREformationMarker::nameWell = nameWell;
		_p->witsml1__obj_USCOREformationMarker::nameWellbore = nameWellbore;
		_p->witsml1__obj_USCOREformationMarker::name = name;
		_p->witsml1__obj_USCOREformationMarker::__obj_USCOREformationMarker_sequence = __obj_USCOREformationMarker_sequence;
		_p->witsml1__obj_USCOREformationMarker::commonData = commonData;
		_p->witsml1__obj_USCOREformationMarker::customData = customData;
		_p->witsml1__obj_USCOREformationMarker::uidWell = uidWell;
		_p->witsml1__obj_USCOREformationMarker::uidWellbore = uidWellbore;
		_p->witsml1__obj_USCOREformationMarker::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREformationMarker(struct soap *soap, witsml1__obj_USCOREformationMarker const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_formationMarker", "witsml1:obj_formationMarker") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREformationMarker * SOAP_FMAC4 soap_get_witsml1__obj_USCOREformationMarker(struct soap*, witsml1__obj_USCOREformationMarker *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREformationMarker(struct soap *soap, witsml1__obj_USCOREformationMarker *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREformationMarker(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarkers_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREformationMarkers_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREformationMarkers(struct soap*, const char*, int, const witsml1__obj_USCOREformationMarkers *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREformationMarkers * SOAP_FMAC4 soap_in_witsml1__obj_USCOREformationMarkers(struct soap*, const char*, witsml1__obj_USCOREformationMarkers *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREformationMarkers * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREformationMarkers(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREformationMarkers * soap_new_witsml1__obj_USCOREformationMarkers(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREformationMarkers(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREformationMarkers * soap_new_req_witsml1__obj_USCOREformationMarkers(
	struct soap *soap,
	const std::vector<witsml1__obj_USCOREformationMarker *> & formationMarker,
	const std::string& version)
{
	witsml1__obj_USCOREformationMarkers *_p = soap_new_witsml1__obj_USCOREformationMarkers(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREformationMarkers::formationMarker = formationMarker;
		_p->witsml1__obj_USCOREformationMarkers::version = version;
	}
	return _p;
}

inline witsml1__obj_USCOREformationMarkers * soap_new_set_witsml1__obj_USCOREformationMarkers(
	struct soap *soap,
	witsml1__cs_USCOREdocumentInfo *documentInfo,
	const std::vector<witsml1__obj_USCOREformationMarker *> & formationMarker,
	const std::string& version)
{
	witsml1__obj_USCOREformationMarkers *_p = soap_new_witsml1__obj_USCOREformationMarkers(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREformationMarkers::documentInfo = documentInfo;
		_p->witsml1__obj_USCOREformationMarkers::formationMarker = formationMarker;
		_p->witsml1__obj_USCOREformationMarkers::version = version;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREformationMarkers(struct soap *soap, witsml1__obj_USCOREformationMarkers const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_formationMarkers", "witsml1:obj_formationMarkers") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREformationMarkers * SOAP_FMAC4 soap_get_witsml1__obj_USCOREformationMarkers(struct soap*, witsml1__obj_USCOREformationMarkers *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREformationMarkers(struct soap *soap, witsml1__obj_USCOREformationMarkers *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREformationMarkers(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogData_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCORElogData(struct soap*, const char*, int, const witsml1__cs_USCORElogData *, const char*);
SOAP_FMAC3 witsml1__cs_USCORElogData * SOAP_FMAC4 soap_in_witsml1__cs_USCORElogData(struct soap*, const char*, witsml1__cs_USCORElogData *, const char*);
SOAP_FMAC1 witsml1__cs_USCORElogData * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORElogData(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCORElogData * soap_new_witsml1__cs_USCORElogData(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCORElogData(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCORElogData * soap_new_req_witsml1__cs_USCORElogData(
	struct soap *soap,
	const std::string& mnemonicList,
	const std::string& unitList)
{
	witsml1__cs_USCORElogData *_p = soap_new_witsml1__cs_USCORElogData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORElogData::mnemonicList = mnemonicList;
		_p->witsml1__cs_USCORElogData::unitList = unitList;
	}
	return _p;
}

inline witsml1__cs_USCORElogData * soap_new_set_witsml1__cs_USCORElogData(
	struct soap *soap,
	const std::string& mnemonicList,
	const std::string& unitList,
	const std::vector<std::string> & data)
{
	witsml1__cs_USCORElogData *_p = soap_new_witsml1__cs_USCORElogData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORElogData::mnemonicList = mnemonicList;
		_p->witsml1__cs_USCORElogData::unitList = unitList;
		_p->witsml1__cs_USCORElogData::data = data;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCORElogData(struct soap *soap, witsml1__cs_USCORElogData const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_logData", "witsml1:cs_logData") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCORElogData * SOAP_FMAC4 soap_get_witsml1__cs_USCORElogData(struct soap*, witsml1__cs_USCORElogData *, const char*, const char*);

inline int soap_read_witsml1__cs_USCORElogData(struct soap *soap, witsml1__cs_USCORElogData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCORElogData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREaxisDefinition_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREaxisDefinition_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREaxisDefinition(struct soap*, const char*, int, const witsml1__cs_USCOREaxisDefinition *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREaxisDefinition * SOAP_FMAC4 soap_in_witsml1__cs_USCOREaxisDefinition(struct soap*, const char*, witsml1__cs_USCOREaxisDefinition *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREaxisDefinition * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREaxisDefinition(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREaxisDefinition * soap_new_witsml1__cs_USCOREaxisDefinition(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREaxisDefinition(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREaxisDefinition * soap_new_req_witsml1__cs_USCOREaxisDefinition(
	struct soap *soap,
	short order,
	short count,
	int __union_cs_USCOREaxisDefinition,
	const union _witsml1__union_cs_USCOREaxisDefinition& union_cs_USCOREaxisDefinition)
{
	witsml1__cs_USCOREaxisDefinition *_p = soap_new_witsml1__cs_USCOREaxisDefinition(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREaxisDefinition::order = order;
		_p->witsml1__cs_USCOREaxisDefinition::count = count;
		_p->witsml1__cs_USCOREaxisDefinition::__union_cs_USCOREaxisDefinition = __union_cs_USCOREaxisDefinition;
		_p->witsml1__cs_USCOREaxisDefinition::union_cs_USCOREaxisDefinition = union_cs_USCOREaxisDefinition;
	}
	return _p;
}

inline witsml1__cs_USCOREaxisDefinition * soap_new_set_witsml1__cs_USCOREaxisDefinition(
	struct soap *soap,
	short order,
	short count,
	std::string *name,
	std::string *propertyType,
	std::string *uom,
	int __union_cs_USCOREaxisDefinition,
	const union _witsml1__union_cs_USCOREaxisDefinition& union_cs_USCOREaxisDefinition,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue,
	std::string *uid)
{
	witsml1__cs_USCOREaxisDefinition *_p = soap_new_witsml1__cs_USCOREaxisDefinition(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREaxisDefinition::order = order;
		_p->witsml1__cs_USCOREaxisDefinition::count = count;
		_p->witsml1__cs_USCOREaxisDefinition::name = name;
		_p->witsml1__cs_USCOREaxisDefinition::propertyType = propertyType;
		_p->witsml1__cs_USCOREaxisDefinition::uom = uom;
		_p->witsml1__cs_USCOREaxisDefinition::__union_cs_USCOREaxisDefinition = __union_cs_USCOREaxisDefinition;
		_p->witsml1__cs_USCOREaxisDefinition::union_cs_USCOREaxisDefinition = union_cs_USCOREaxisDefinition;
		_p->witsml1__cs_USCOREaxisDefinition::extensionNameValue = extensionNameValue;
		_p->witsml1__cs_USCOREaxisDefinition::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREaxisDefinition(struct soap *soap, witsml1__cs_USCOREaxisDefinition const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_axisDefinition", "witsml1:cs_axisDefinition") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREaxisDefinition * SOAP_FMAC4 soap_get_witsml1__cs_USCOREaxisDefinition(struct soap*, witsml1__cs_USCOREaxisDefinition *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREaxisDefinition(struct soap *soap, witsml1__cs_USCOREaxisDefinition *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREaxisDefinition(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogCurveInfo_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElogCurveInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCORElogCurveInfo(struct soap*, const char*, int, const witsml1__cs_USCORElogCurveInfo *, const char*);
SOAP_FMAC3 witsml1__cs_USCORElogCurveInfo * SOAP_FMAC4 soap_in_witsml1__cs_USCORElogCurveInfo(struct soap*, const char*, witsml1__cs_USCORElogCurveInfo *, const char*);
SOAP_FMAC1 witsml1__cs_USCORElogCurveInfo * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORElogCurveInfo(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCORElogCurveInfo * soap_new_witsml1__cs_USCORElogCurveInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCORElogCurveInfo(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCORElogCurveInfo * soap_new_req_witsml1__cs_USCORElogCurveInfo(
	struct soap *soap,
	witsml1__shortNameStruct *mnemonic,
	enum witsml1__LogDataType typeLogData)
{
	witsml1__cs_USCORElogCurveInfo *_p = soap_new_witsml1__cs_USCORElogCurveInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORElogCurveInfo::mnemonic = mnemonic;
		_p->witsml1__cs_USCORElogCurveInfo::typeLogData = typeLogData;
	}
	return _p;
}

inline witsml1__cs_USCORElogCurveInfo * soap_new_set_witsml1__cs_USCORElogCurveInfo(
	struct soap *soap,
	witsml1__shortNameStruct *mnemonic,
	std::string *classWitsml,
	short *classIndex,
	std::string *unit,
	witsml1__shortNameStruct *mnemAlias,
	std::string *nullValue,
	bool *alternateIndex,
	witsml1__refNameString *wellDatum,
	witsml1__genericMeasure *minIndex,
	witsml1__genericMeasure *maxIndex,
	time_t *minDateTimeIndex,
	time_t *maxDateTimeIndex,
	std::string *curveDescription,
	witsml1__lengthMeasure *sensorOffset,
	std::string *dataSource,
	witsml1__perLengthMeasure *densData,
	enum witsml1__LogTraceState *traceState,
	enum witsml1__LogTraceOrigin *traceOrigin,
	enum witsml1__LogDataType typeLogData,
	const std::vector<witsml1__cs_USCOREaxisDefinition *> & axisDefinition,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue,
	std::string *uid)
{
	witsml1__cs_USCORElogCurveInfo *_p = soap_new_witsml1__cs_USCORElogCurveInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORElogCurveInfo::mnemonic = mnemonic;
		_p->witsml1__cs_USCORElogCurveInfo::classWitsml = classWitsml;
		_p->witsml1__cs_USCORElogCurveInfo::classIndex = classIndex;
		_p->witsml1__cs_USCORElogCurveInfo::unit = unit;
		_p->witsml1__cs_USCORElogCurveInfo::mnemAlias = mnemAlias;
		_p->witsml1__cs_USCORElogCurveInfo::nullValue = nullValue;
		_p->witsml1__cs_USCORElogCurveInfo::alternateIndex = alternateIndex;
		_p->witsml1__cs_USCORElogCurveInfo::wellDatum = wellDatum;
		_p->witsml1__cs_USCORElogCurveInfo::minIndex = minIndex;
		_p->witsml1__cs_USCORElogCurveInfo::maxIndex = maxIndex;
		_p->witsml1__cs_USCORElogCurveInfo::minDateTimeIndex = minDateTimeIndex;
		_p->witsml1__cs_USCORElogCurveInfo::maxDateTimeIndex = maxDateTimeIndex;
		_p->witsml1__cs_USCORElogCurveInfo::curveDescription = curveDescription;
		_p->witsml1__cs_USCORElogCurveInfo::sensorOffset = sensorOffset;
		_p->witsml1__cs_USCORElogCurveInfo::dataSource = dataSource;
		_p->witsml1__cs_USCORElogCurveInfo::densData = densData;
		_p->witsml1__cs_USCORElogCurveInfo::traceState = traceState;
		_p->witsml1__cs_USCORElogCurveInfo::traceOrigin = traceOrigin;
		_p->witsml1__cs_USCORElogCurveInfo::typeLogData = typeLogData;
		_p->witsml1__cs_USCORElogCurveInfo::axisDefinition = axisDefinition;
		_p->witsml1__cs_USCORElogCurveInfo::extensionNameValue = extensionNameValue;
		_p->witsml1__cs_USCORElogCurveInfo::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCORElogCurveInfo(struct soap *soap, witsml1__cs_USCORElogCurveInfo const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_logCurveInfo", "witsml1:cs_logCurveInfo") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCORElogCurveInfo * SOAP_FMAC4 soap_get_witsml1__cs_USCORElogCurveInfo(struct soap*, witsml1__cs_USCORElogCurveInfo *, const char*, const char*);

inline int soap_read_witsml1__cs_USCORElogCurveInfo(struct soap *soap, witsml1__cs_USCORElogCurveInfo *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCORElogCurveInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElog_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElog_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCORElog(struct soap*, const char*, int, const witsml1__obj_USCORElog *, const char*);
SOAP_FMAC3 witsml1__obj_USCORElog * SOAP_FMAC4 soap_in_witsml1__obj_USCORElog(struct soap*, const char*, witsml1__obj_USCORElog *, const char*);
SOAP_FMAC1 witsml1__obj_USCORElog * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCORElog(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCORElog * soap_new_witsml1__obj_USCORElog(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCORElog(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCORElog * soap_new_req_witsml1__obj_USCORElog(
	struct soap *soap,
	const std::string& nameWell,
	const std::string& nameWellbore,
	const std::string& name)
{
	witsml1__obj_USCORElog *_p = soap_new_witsml1__obj_USCORElog(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCORElog::nameWell = nameWell;
		_p->witsml1__obj_USCORElog::nameWellbore = nameWellbore;
		_p->witsml1__obj_USCORElog::name = name;
	}
	return _p;
}

inline witsml1__obj_USCORElog * soap_new_set_witsml1__obj_USCORElog(
	struct soap *soap,
	const std::string& nameWell,
	const std::string& nameWellbore,
	const std::string& name,
	__witsml1__obj_USCORElog_sequence *__obj_USCORElog_sequence,
	witsml1__cs_USCOREcommonData *commonData,
	witsml1__cs_USCOREcustomData *customData,
	std::string *uidWell,
	std::string *uidWellbore,
	std::string *uid)
{
	witsml1__obj_USCORElog *_p = soap_new_witsml1__obj_USCORElog(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCORElog::nameWell = nameWell;
		_p->witsml1__obj_USCORElog::nameWellbore = nameWellbore;
		_p->witsml1__obj_USCORElog::name = name;
		_p->witsml1__obj_USCORElog::__obj_USCORElog_sequence = __obj_USCORElog_sequence;
		_p->witsml1__obj_USCORElog::commonData = commonData;
		_p->witsml1__obj_USCORElog::customData = customData;
		_p->witsml1__obj_USCORElog::uidWell = uidWell;
		_p->witsml1__obj_USCORElog::uidWellbore = uidWellbore;
		_p->witsml1__obj_USCORElog::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCORElog(struct soap *soap, witsml1__obj_USCORElog const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_log", "witsml1:obj_log") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCORElog * SOAP_FMAC4 soap_get_witsml1__obj_USCORElog(struct soap*, witsml1__obj_USCORElog *, const char*, const char*);

inline int soap_read_witsml1__obj_USCORElog(struct soap *soap, witsml1__obj_USCORElog *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCORElog(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElogs_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCORElogs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCORElogs(struct soap*, const char*, int, const witsml1__obj_USCORElogs *, const char*);
SOAP_FMAC3 witsml1__obj_USCORElogs * SOAP_FMAC4 soap_in_witsml1__obj_USCORElogs(struct soap*, const char*, witsml1__obj_USCORElogs *, const char*);
SOAP_FMAC1 witsml1__obj_USCORElogs * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCORElogs(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCORElogs * soap_new_witsml1__obj_USCORElogs(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCORElogs(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCORElogs * soap_new_req_witsml1__obj_USCORElogs(
	struct soap *soap,
	const std::vector<witsml1__obj_USCORElog *> & log,
	const std::string& version)
{
	witsml1__obj_USCORElogs *_p = soap_new_witsml1__obj_USCORElogs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCORElogs::log = log;
		_p->witsml1__obj_USCORElogs::version = version;
	}
	return _p;
}

inline witsml1__obj_USCORElogs * soap_new_set_witsml1__obj_USCORElogs(
	struct soap *soap,
	witsml1__cs_USCOREdocumentInfo *documentInfo,
	const std::vector<witsml1__obj_USCORElog *> & log,
	const std::string& version)
{
	witsml1__obj_USCORElogs *_p = soap_new_witsml1__obj_USCORElogs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCORElogs::documentInfo = documentInfo;
		_p->witsml1__obj_USCORElogs::log = log;
		_p->witsml1__obj_USCORElogs::version = version;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCORElogs(struct soap *soap, witsml1__obj_USCORElogs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_logs", "witsml1:obj_logs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCORElogs * SOAP_FMAC4 soap_get_witsml1__obj_USCORElogs(struct soap*, witsml1__obj_USCORElogs *, const char*, const char*);

inline int soap_read_witsml1__obj_USCORElogs(struct soap *soap, witsml1__obj_USCORElogs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCORElogs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectory_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectory_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCORErefWellboreTrajectory(struct soap*, const char*, int, const witsml1__cs_USCORErefWellboreTrajectory *, const char*);
SOAP_FMAC3 witsml1__cs_USCORErefWellboreTrajectory * SOAP_FMAC4 soap_in_witsml1__cs_USCORErefWellboreTrajectory(struct soap*, const char*, witsml1__cs_USCORErefWellboreTrajectory *, const char*);
SOAP_FMAC1 witsml1__cs_USCORErefWellboreTrajectory * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORErefWellboreTrajectory(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCORErefWellboreTrajectory * soap_new_witsml1__cs_USCORErefWellboreTrajectory(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCORErefWellboreTrajectory(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCORErefWellboreTrajectory * soap_new_req_witsml1__cs_USCORErefWellboreTrajectory(
	struct soap *soap,
	witsml1__refNameString *trajectoryReference)
{
	witsml1__cs_USCORErefWellboreTrajectory *_p = soap_new_witsml1__cs_USCORErefWellboreTrajectory(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORErefWellboreTrajectory::trajectoryReference = trajectoryReference;
	}
	return _p;
}

inline witsml1__cs_USCORErefWellboreTrajectory * soap_new_set_witsml1__cs_USCORErefWellboreTrajectory(
	struct soap *soap,
	witsml1__refNameString *trajectoryReference,
	witsml1__refNameString *wellboreParent)
{
	witsml1__cs_USCORErefWellboreTrajectory *_p = soap_new_witsml1__cs_USCORErefWellboreTrajectory(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORErefWellboreTrajectory::trajectoryReference = trajectoryReference;
		_p->witsml1__cs_USCORErefWellboreTrajectory::wellboreParent = wellboreParent;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCORErefWellboreTrajectory(struct soap *soap, witsml1__cs_USCORErefWellboreTrajectory const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_refWellboreTrajectory", "witsml1:cs_refWellboreTrajectory") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCORErefWellboreTrajectory * SOAP_FMAC4 soap_get_witsml1__cs_USCORErefWellboreTrajectory(struct soap*, witsml1__cs_USCORErefWellboreTrajectory *, const char*, const char*);

inline int soap_read_witsml1__cs_USCORErefWellboreTrajectory(struct soap *soap, witsml1__cs_USCORErefWellboreTrajectory *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCORErefWellboreTrajectory(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectoryStation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellboreTrajectoryStation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, const char*, int, const witsml1__cs_USCORErefWellboreTrajectoryStation *, const char*);
SOAP_FMAC3 witsml1__cs_USCORErefWellboreTrajectoryStation * SOAP_FMAC4 soap_in_witsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, const char*, witsml1__cs_USCORErefWellboreTrajectoryStation *, const char*);
SOAP_FMAC1 witsml1__cs_USCORErefWellboreTrajectoryStation * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCORErefWellboreTrajectoryStation * soap_new_witsml1__cs_USCORErefWellboreTrajectoryStation(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCORErefWellboreTrajectoryStation(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCORErefWellboreTrajectoryStation * soap_new_req_witsml1__cs_USCORErefWellboreTrajectoryStation(
	struct soap *soap,
	const std::string& stationReference,
	witsml1__refNameString *trajectoryParent)
{
	witsml1__cs_USCORErefWellboreTrajectoryStation *_p = soap_new_witsml1__cs_USCORErefWellboreTrajectoryStation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORErefWellboreTrajectoryStation::stationReference = stationReference;
		_p->witsml1__cs_USCORErefWellboreTrajectoryStation::trajectoryParent = trajectoryParent;
	}
	return _p;
}

inline witsml1__cs_USCORErefWellboreTrajectoryStation * soap_new_set_witsml1__cs_USCORErefWellboreTrajectoryStation(
	struct soap *soap,
	const std::string& stationReference,
	witsml1__refNameString *trajectoryParent,
	witsml1__refNameString *wellboreParent)
{
	witsml1__cs_USCORErefWellboreTrajectoryStation *_p = soap_new_witsml1__cs_USCORErefWellboreTrajectoryStation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORErefWellboreTrajectoryStation::stationReference = stationReference;
		_p->witsml1__cs_USCORErefWellboreTrajectoryStation::trajectoryParent = trajectoryParent;
		_p->witsml1__cs_USCORErefWellboreTrajectoryStation::wellboreParent = wellboreParent;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCORErefWellboreTrajectoryStation(struct soap *soap, witsml1__cs_USCORErefWellboreTrajectoryStation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_refWellboreTrajectoryStation", "witsml1:cs_refWellboreTrajectoryStation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCORErefWellboreTrajectoryStation * SOAP_FMAC4 soap_get_witsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, witsml1__cs_USCORErefWellboreTrajectoryStation *, const char*, const char*);

inline int soap_read_witsml1__cs_USCORErefWellboreTrajectoryStation(struct soap *soap, witsml1__cs_USCORErefWellboreTrajectoryStation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCORErefWellboreTrajectoryStation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajMatrixCov_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajMatrixCov_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREstnTrajMatrixCov(struct soap*, const char*, int, const witsml1__cs_USCOREstnTrajMatrixCov *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajMatrixCov * SOAP_FMAC4 soap_in_witsml1__cs_USCOREstnTrajMatrixCov(struct soap*, const char*, witsml1__cs_USCOREstnTrajMatrixCov *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREstnTrajMatrixCov * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstnTrajMatrixCov(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREstnTrajMatrixCov * soap_new_witsml1__cs_USCOREstnTrajMatrixCov(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREstnTrajMatrixCov(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREstnTrajMatrixCov * soap_new_req_witsml1__cs_USCOREstnTrajMatrixCov(
	struct soap *soap)
{
	witsml1__cs_USCOREstnTrajMatrixCov *_p = soap_new_witsml1__cs_USCOREstnTrajMatrixCov(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREstnTrajMatrixCov * soap_new_set_witsml1__cs_USCOREstnTrajMatrixCov(
	struct soap *soap,
	witsml1__areaMeasure *varianceNN,
	witsml1__areaMeasure *varianceNE,
	witsml1__areaMeasure *varianceNVert,
	witsml1__areaMeasure *varianceEE,
	witsml1__areaMeasure *varianceEVert,
	witsml1__areaMeasure *varianceVertVert,
	witsml1__lengthMeasure *biasN,
	witsml1__lengthMeasure *biasE,
	witsml1__lengthMeasure *biasVert)
{
	witsml1__cs_USCOREstnTrajMatrixCov *_p = soap_new_witsml1__cs_USCOREstnTrajMatrixCov(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstnTrajMatrixCov::varianceNN = varianceNN;
		_p->witsml1__cs_USCOREstnTrajMatrixCov::varianceNE = varianceNE;
		_p->witsml1__cs_USCOREstnTrajMatrixCov::varianceNVert = varianceNVert;
		_p->witsml1__cs_USCOREstnTrajMatrixCov::varianceEE = varianceEE;
		_p->witsml1__cs_USCOREstnTrajMatrixCov::varianceEVert = varianceEVert;
		_p->witsml1__cs_USCOREstnTrajMatrixCov::varianceVertVert = varianceVertVert;
		_p->witsml1__cs_USCOREstnTrajMatrixCov::biasN = biasN;
		_p->witsml1__cs_USCOREstnTrajMatrixCov::biasE = biasE;
		_p->witsml1__cs_USCOREstnTrajMatrixCov::biasVert = biasVert;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREstnTrajMatrixCov(struct soap *soap, witsml1__cs_USCOREstnTrajMatrixCov const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_stnTrajMatrixCov", "witsml1:cs_stnTrajMatrixCov") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREstnTrajMatrixCov * SOAP_FMAC4 soap_get_witsml1__cs_USCOREstnTrajMatrixCov(struct soap*, witsml1__cs_USCOREstnTrajMatrixCov *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREstnTrajMatrixCov(struct soap *soap, witsml1__cs_USCOREstnTrajMatrixCov *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREstnTrajMatrixCov(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajValid_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajValid_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREstnTrajValid(struct soap*, const char*, int, const witsml1__cs_USCOREstnTrajValid *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajValid * SOAP_FMAC4 soap_in_witsml1__cs_USCOREstnTrajValid(struct soap*, const char*, witsml1__cs_USCOREstnTrajValid *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREstnTrajValid * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstnTrajValid(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREstnTrajValid * soap_new_witsml1__cs_USCOREstnTrajValid(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREstnTrajValid(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREstnTrajValid * soap_new_req_witsml1__cs_USCOREstnTrajValid(
	struct soap *soap)
{
	witsml1__cs_USCOREstnTrajValid *_p = soap_new_witsml1__cs_USCOREstnTrajValid(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREstnTrajValid * soap_new_set_witsml1__cs_USCOREstnTrajValid(
	struct soap *soap,
	witsml1__magneticInductionMeasure *magTotalFieldCalc,
	witsml1__planeAngleMeasure *magDipAngleCalc,
	witsml1__accelerationLinearMeasure *gravTotalFieldCalc)
{
	witsml1__cs_USCOREstnTrajValid *_p = soap_new_witsml1__cs_USCOREstnTrajValid(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstnTrajValid::magTotalFieldCalc = magTotalFieldCalc;
		_p->witsml1__cs_USCOREstnTrajValid::magDipAngleCalc = magDipAngleCalc;
		_p->witsml1__cs_USCOREstnTrajValid::gravTotalFieldCalc = gravTotalFieldCalc;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREstnTrajValid(struct soap *soap, witsml1__cs_USCOREstnTrajValid const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_stnTrajValid", "witsml1:cs_stnTrajValid") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREstnTrajValid * SOAP_FMAC4 soap_get_witsml1__cs_USCOREstnTrajValid(struct soap*, witsml1__cs_USCOREstnTrajValid *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREstnTrajValid(struct soap *soap, witsml1__cs_USCOREstnTrajValid *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREstnTrajValid(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajCorUsed_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajCorUsed_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREstnTrajCorUsed(struct soap*, const char*, int, const witsml1__cs_USCOREstnTrajCorUsed *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajCorUsed * SOAP_FMAC4 soap_in_witsml1__cs_USCOREstnTrajCorUsed(struct soap*, const char*, witsml1__cs_USCOREstnTrajCorUsed *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREstnTrajCorUsed * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstnTrajCorUsed(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREstnTrajCorUsed * soap_new_witsml1__cs_USCOREstnTrajCorUsed(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREstnTrajCorUsed(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREstnTrajCorUsed * soap_new_req_witsml1__cs_USCOREstnTrajCorUsed(
	struct soap *soap)
{
	witsml1__cs_USCOREstnTrajCorUsed *_p = soap_new_witsml1__cs_USCOREstnTrajCorUsed(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREstnTrajCorUsed * soap_new_set_witsml1__cs_USCOREstnTrajCorUsed(
	struct soap *soap,
	witsml1__accelerationLinearMeasure *gravAxialAccelCor,
	witsml1__accelerationLinearMeasure *gravTran1AccelCor,
	witsml1__accelerationLinearMeasure *gravTran2AccelCor,
	witsml1__magneticInductionMeasure *magAxialDrlstrCor,
	witsml1__magneticInductionMeasure *magTran1DrlstrCor,
	witsml1__magneticInductionMeasure *magTran2DrlstrCor,
	witsml1__magneticInductionMeasure *magTran1MSACor,
	witsml1__magneticInductionMeasure *magTran2MSACor,
	witsml1__magneticInductionMeasure *magAxialMSACor,
	witsml1__planeAngleMeasure *sagIncCor,
	witsml1__planeAngleMeasure *sagAziCor,
	witsml1__planeAngleMeasure *stnMagDeclUsed,
	witsml1__planeAngleMeasure *stnGridCorUsed,
	witsml1__planeAngleMeasure *stnGridConUsed,
	witsml1__lengthMeasure *dirSensorOffset)
{
	witsml1__cs_USCOREstnTrajCorUsed *_p = soap_new_witsml1__cs_USCOREstnTrajCorUsed(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstnTrajCorUsed::gravAxialAccelCor = gravAxialAccelCor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::gravTran1AccelCor = gravTran1AccelCor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::gravTran2AccelCor = gravTran2AccelCor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::magAxialDrlstrCor = magAxialDrlstrCor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::magTran1DrlstrCor = magTran1DrlstrCor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::magTran2DrlstrCor = magTran2DrlstrCor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::magTran1MSACor = magTran1MSACor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::magTran2MSACor = magTran2MSACor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::magAxialMSACor = magAxialMSACor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::sagIncCor = sagIncCor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::sagAziCor = sagAziCor;
		_p->witsml1__cs_USCOREstnTrajCorUsed::stnMagDeclUsed = stnMagDeclUsed;
		_p->witsml1__cs_USCOREstnTrajCorUsed::stnGridCorUsed = stnGridCorUsed;
		_p->witsml1__cs_USCOREstnTrajCorUsed::stnGridConUsed = stnGridConUsed;
		_p->witsml1__cs_USCOREstnTrajCorUsed::dirSensorOffset = dirSensorOffset;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREstnTrajCorUsed(struct soap *soap, witsml1__cs_USCOREstnTrajCorUsed const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_stnTrajCorUsed", "witsml1:cs_stnTrajCorUsed") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREstnTrajCorUsed * SOAP_FMAC4 soap_get_witsml1__cs_USCOREstnTrajCorUsed(struct soap*, witsml1__cs_USCOREstnTrajCorUsed *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREstnTrajCorUsed(struct soap *soap, witsml1__cs_USCOREstnTrajCorUsed *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREstnTrajCorUsed(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajRawData_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREstnTrajRawData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREstnTrajRawData(struct soap*, const char*, int, const witsml1__cs_USCOREstnTrajRawData *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajRawData * SOAP_FMAC4 soap_in_witsml1__cs_USCOREstnTrajRawData(struct soap*, const char*, witsml1__cs_USCOREstnTrajRawData *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREstnTrajRawData * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREstnTrajRawData(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREstnTrajRawData * soap_new_witsml1__cs_USCOREstnTrajRawData(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREstnTrajRawData(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREstnTrajRawData * soap_new_req_witsml1__cs_USCOREstnTrajRawData(
	struct soap *soap)
{
	witsml1__cs_USCOREstnTrajRawData *_p = soap_new_witsml1__cs_USCOREstnTrajRawData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREstnTrajRawData * soap_new_set_witsml1__cs_USCOREstnTrajRawData(
	struct soap *soap,
	witsml1__accelerationLinearMeasure *gravAxialRaw,
	witsml1__accelerationLinearMeasure *gravTran1Raw,
	witsml1__accelerationLinearMeasure *gravTran2Raw,
	witsml1__magneticInductionMeasure *magAxialRaw,
	witsml1__magneticInductionMeasure *magTran1Raw,
	witsml1__magneticInductionMeasure *magTran2Raw)
{
	witsml1__cs_USCOREstnTrajRawData *_p = soap_new_witsml1__cs_USCOREstnTrajRawData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREstnTrajRawData::gravAxialRaw = gravAxialRaw;
		_p->witsml1__cs_USCOREstnTrajRawData::gravTran1Raw = gravTran1Raw;
		_p->witsml1__cs_USCOREstnTrajRawData::gravTran2Raw = gravTran2Raw;
		_p->witsml1__cs_USCOREstnTrajRawData::magAxialRaw = magAxialRaw;
		_p->witsml1__cs_USCOREstnTrajRawData::magTran1Raw = magTran1Raw;
		_p->witsml1__cs_USCOREstnTrajRawData::magTran2Raw = magTran2Raw;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREstnTrajRawData(struct soap *soap, witsml1__cs_USCOREstnTrajRawData const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_stnTrajRawData", "witsml1:cs_stnTrajRawData") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREstnTrajRawData * SOAP_FMAC4 soap_get_witsml1__cs_USCOREstnTrajRawData(struct soap*, witsml1__cs_USCOREstnTrajRawData *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREstnTrajRawData(struct soap *soap, witsml1__cs_USCOREstnTrajRawData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREstnTrajRawData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREtrajectoryStation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREtrajectoryStation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREtrajectoryStation(struct soap*, const char*, int, const witsml1__cs_USCOREtrajectoryStation *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREtrajectoryStation * SOAP_FMAC4 soap_in_witsml1__cs_USCOREtrajectoryStation(struct soap*, const char*, witsml1__cs_USCOREtrajectoryStation *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREtrajectoryStation * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREtrajectoryStation(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREtrajectoryStation * soap_new_witsml1__cs_USCOREtrajectoryStation(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREtrajectoryStation(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREtrajectoryStation * soap_new_req_witsml1__cs_USCOREtrajectoryStation(
	struct soap *soap,
	enum witsml1__TrajStationType typeTrajStation,
	witsml1__measuredDepthCoord *md)
{
	witsml1__cs_USCOREtrajectoryStation *_p = soap_new_witsml1__cs_USCOREtrajectoryStation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREtrajectoryStation::typeTrajStation = typeTrajStation;
		_p->witsml1__cs_USCOREtrajectoryStation::md = md;
	}
	return _p;
}

inline witsml1__cs_USCOREtrajectoryStation * soap_new_set_witsml1__cs_USCOREtrajectoryStation(
	struct soap *soap,
	witsml1__refNameString *target,
	time_t *dTimStn,
	enum witsml1__TrajStationType typeTrajStation,
	std::string *typeSurveyTool,
	std::string *calcAlgorithm,
	witsml1__measuredDepthCoord *md,
	witsml1__wellVerticalDepthCoord *tvd,
	witsml1__planeAngleMeasure *incl,
	witsml1__planeAngleMeasure *azi,
	witsml1__planeAngleMeasure *mtf,
	witsml1__planeAngleMeasure *gtf,
	witsml1__lengthMeasure *dispNs,
	witsml1__lengthMeasure *dispEw,
	witsml1__lengthMeasure *vertSect,
	witsml1__anglePerLengthMeasure *dls,
	witsml1__anglePerLengthMeasure *rateTurn,
	witsml1__anglePerLengthMeasure *rateBuild,
	witsml1__lengthMeasure *mdDelta,
	witsml1__lengthMeasure *tvdDelta,
	std::string *modelToolError,
	witsml1__refNameString *iscwsaToolErrorModel,
	witsml1__accelerationLinearMeasure *gravTotalUncert,
	witsml1__planeAngleMeasure *dipAngleUncert,
	witsml1__magneticInductionMeasure *magTotalUncert,
	bool *gravAccelCorUsed,
	bool *magXAxialCorUsed,
	bool *sagCorUsed,
	bool *magDrlstrCorUsed,
	bool *infieldRefCorUsed,
	bool *interpolatedInfieldRefCorUsed,
	bool *inHoleRefCorUsed,
	bool *axialMagInterferenceCorUsed,
	bool *cosagCorUsed,
	bool *MSACorUsed,
	witsml1__accelerationLinearMeasure *gravTotalFieldReference,
	witsml1__magneticInductionMeasure *magTotalFieldReference,
	witsml1__planeAngleMeasure *magDipAngleReference,
	std::string *magModelUsed,
	std::string *magModelValid,
	std::string *geoModelUsed,
	enum witsml1__TrajStationStatus *statusTrajStation,
	witsml1__cs_USCOREstnTrajRawData *rawData,
	witsml1__cs_USCOREstnTrajCorUsed *corUsed,
	witsml1__cs_USCOREstnTrajValid *valid,
	witsml1__cs_USCOREstnTrajMatrixCov *matrixCov,
	const std::vector<witsml1__cs_USCORElocation *> & location,
	witsml1__cs_USCORErefWellboreTrajectoryStation *sourceStation,
	witsml1__cs_USCOREcommonData *commonData,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue,
	std::string *uid)
{
	witsml1__cs_USCOREtrajectoryStation *_p = soap_new_witsml1__cs_USCOREtrajectoryStation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREtrajectoryStation::target = target;
		_p->witsml1__cs_USCOREtrajectoryStation::dTimStn = dTimStn;
		_p->witsml1__cs_USCOREtrajectoryStation::typeTrajStation = typeTrajStation;
		_p->witsml1__cs_USCOREtrajectoryStation::typeSurveyTool = typeSurveyTool;
		_p->witsml1__cs_USCOREtrajectoryStation::calcAlgorithm = calcAlgorithm;
		_p->witsml1__cs_USCOREtrajectoryStation::md = md;
		_p->witsml1__cs_USCOREtrajectoryStation::tvd = tvd;
		_p->witsml1__cs_USCOREtrajectoryStation::incl = incl;
		_p->witsml1__cs_USCOREtrajectoryStation::azi = azi;
		_p->witsml1__cs_USCOREtrajectoryStation::mtf = mtf;
		_p->witsml1__cs_USCOREtrajectoryStation::gtf = gtf;
		_p->witsml1__cs_USCOREtrajectoryStation::dispNs = dispNs;
		_p->witsml1__cs_USCOREtrajectoryStation::dispEw = dispEw;
		_p->witsml1__cs_USCOREtrajectoryStation::vertSect = vertSect;
		_p->witsml1__cs_USCOREtrajectoryStation::dls = dls;
		_p->witsml1__cs_USCOREtrajectoryStation::rateTurn = rateTurn;
		_p->witsml1__cs_USCOREtrajectoryStation::rateBuild = rateBuild;
		_p->witsml1__cs_USCOREtrajectoryStation::mdDelta = mdDelta;
		_p->witsml1__cs_USCOREtrajectoryStation::tvdDelta = tvdDelta;
		_p->witsml1__cs_USCOREtrajectoryStation::modelToolError = modelToolError;
		_p->witsml1__cs_USCOREtrajectoryStation::iscwsaToolErrorModel = iscwsaToolErrorModel;
		_p->witsml1__cs_USCOREtrajectoryStation::gravTotalUncert = gravTotalUncert;
		_p->witsml1__cs_USCOREtrajectoryStation::dipAngleUncert = dipAngleUncert;
		_p->witsml1__cs_USCOREtrajectoryStation::magTotalUncert = magTotalUncert;
		_p->witsml1__cs_USCOREtrajectoryStation::gravAccelCorUsed = gravAccelCorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::magXAxialCorUsed = magXAxialCorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::sagCorUsed = sagCorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::magDrlstrCorUsed = magDrlstrCorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::infieldRefCorUsed = infieldRefCorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::interpolatedInfieldRefCorUsed = interpolatedInfieldRefCorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::inHoleRefCorUsed = inHoleRefCorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::axialMagInterferenceCorUsed = axialMagInterferenceCorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::cosagCorUsed = cosagCorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::MSACorUsed = MSACorUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::gravTotalFieldReference = gravTotalFieldReference;
		_p->witsml1__cs_USCOREtrajectoryStation::magTotalFieldReference = magTotalFieldReference;
		_p->witsml1__cs_USCOREtrajectoryStation::magDipAngleReference = magDipAngleReference;
		_p->witsml1__cs_USCOREtrajectoryStation::magModelUsed = magModelUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::magModelValid = magModelValid;
		_p->witsml1__cs_USCOREtrajectoryStation::geoModelUsed = geoModelUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::statusTrajStation = statusTrajStation;
		_p->witsml1__cs_USCOREtrajectoryStation::rawData = rawData;
		_p->witsml1__cs_USCOREtrajectoryStation::corUsed = corUsed;
		_p->witsml1__cs_USCOREtrajectoryStation::valid = valid;
		_p->witsml1__cs_USCOREtrajectoryStation::matrixCov = matrixCov;
		_p->witsml1__cs_USCOREtrajectoryStation::location = location;
		_p->witsml1__cs_USCOREtrajectoryStation::sourceStation = sourceStation;
		_p->witsml1__cs_USCOREtrajectoryStation::commonData = commonData;
		_p->witsml1__cs_USCOREtrajectoryStation::extensionNameValue = extensionNameValue;
		_p->witsml1__cs_USCOREtrajectoryStation::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREtrajectoryStation(struct soap *soap, witsml1__cs_USCOREtrajectoryStation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_trajectoryStation", "witsml1:cs_trajectoryStation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREtrajectoryStation * SOAP_FMAC4 soap_get_witsml1__cs_USCOREtrajectoryStation(struct soap*, witsml1__cs_USCOREtrajectoryStation *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREtrajectoryStation(struct soap *soap, witsml1__cs_USCOREtrajectoryStation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREtrajectoryStation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectory_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectory_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREtrajectory(struct soap*, const char*, int, const witsml1__obj_USCOREtrajectory *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREtrajectory * SOAP_FMAC4 soap_in_witsml1__obj_USCOREtrajectory(struct soap*, const char*, witsml1__obj_USCOREtrajectory *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREtrajectory * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREtrajectory(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREtrajectory * soap_new_witsml1__obj_USCOREtrajectory(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREtrajectory(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREtrajectory * soap_new_req_witsml1__obj_USCOREtrajectory(
	struct soap *soap,
	const std::string& nameWell,
	const std::string& nameWellbore,
	const std::string& name)
{
	witsml1__obj_USCOREtrajectory *_p = soap_new_witsml1__obj_USCOREtrajectory(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREtrajectory::nameWell = nameWell;
		_p->witsml1__obj_USCOREtrajectory::nameWellbore = nameWellbore;
		_p->witsml1__obj_USCOREtrajectory::name = name;
	}
	return _p;
}

inline witsml1__obj_USCOREtrajectory * soap_new_set_witsml1__obj_USCOREtrajectory(
	struct soap *soap,
	const std::string& nameWell,
	const std::string& nameWellbore,
	const std::string& name,
	__witsml1__obj_USCOREtrajectory_sequence *__obj_USCOREtrajectory_sequence,
	witsml1__cs_USCOREcommonData *commonData,
	witsml1__cs_USCOREcustomData *customData,
	std::string *uidWell,
	std::string *uidWellbore,
	std::string *uid)
{
	witsml1__obj_USCOREtrajectory *_p = soap_new_witsml1__obj_USCOREtrajectory(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREtrajectory::nameWell = nameWell;
		_p->witsml1__obj_USCOREtrajectory::nameWellbore = nameWellbore;
		_p->witsml1__obj_USCOREtrajectory::name = name;
		_p->witsml1__obj_USCOREtrajectory::__obj_USCOREtrajectory_sequence = __obj_USCOREtrajectory_sequence;
		_p->witsml1__obj_USCOREtrajectory::commonData = commonData;
		_p->witsml1__obj_USCOREtrajectory::customData = customData;
		_p->witsml1__obj_USCOREtrajectory::uidWell = uidWell;
		_p->witsml1__obj_USCOREtrajectory::uidWellbore = uidWellbore;
		_p->witsml1__obj_USCOREtrajectory::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREtrajectory(struct soap *soap, witsml1__obj_USCOREtrajectory const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_trajectory", "witsml1:obj_trajectory") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREtrajectory * SOAP_FMAC4 soap_get_witsml1__obj_USCOREtrajectory(struct soap*, witsml1__obj_USCOREtrajectory *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREtrajectory(struct soap *soap, witsml1__obj_USCOREtrajectory *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREtrajectory(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectorys_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREtrajectorys_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREtrajectorys(struct soap*, const char*, int, const witsml1__obj_USCOREtrajectorys *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREtrajectorys * SOAP_FMAC4 soap_in_witsml1__obj_USCOREtrajectorys(struct soap*, const char*, witsml1__obj_USCOREtrajectorys *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREtrajectorys * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREtrajectorys(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREtrajectorys * soap_new_witsml1__obj_USCOREtrajectorys(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREtrajectorys(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREtrajectorys * soap_new_req_witsml1__obj_USCOREtrajectorys(
	struct soap *soap,
	const std::vector<witsml1__obj_USCOREtrajectory *> & trajectory,
	const std::string& version)
{
	witsml1__obj_USCOREtrajectorys *_p = soap_new_witsml1__obj_USCOREtrajectorys(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREtrajectorys::trajectory = trajectory;
		_p->witsml1__obj_USCOREtrajectorys::version = version;
	}
	return _p;
}

inline witsml1__obj_USCOREtrajectorys * soap_new_set_witsml1__obj_USCOREtrajectorys(
	struct soap *soap,
	witsml1__cs_USCOREdocumentInfo *documentInfo,
	const std::vector<witsml1__obj_USCOREtrajectory *> & trajectory,
	const std::string& version)
{
	witsml1__obj_USCOREtrajectorys *_p = soap_new_witsml1__obj_USCOREtrajectorys(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREtrajectorys::documentInfo = documentInfo;
		_p->witsml1__obj_USCOREtrajectorys::trajectory = trajectory;
		_p->witsml1__obj_USCOREtrajectorys::version = version;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREtrajectorys(struct soap *soap, witsml1__obj_USCOREtrajectorys const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_trajectorys", "witsml1:obj_trajectorys") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREtrajectorys * SOAP_FMAC4 soap_get_witsml1__obj_USCOREtrajectorys(struct soap*, witsml1__obj_USCOREtrajectorys *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREtrajectorys(struct soap *soap, witsml1__obj_USCOREtrajectorys *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREtrajectorys(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbore_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbore_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREwellbore(struct soap*, const char*, int, const witsml1__obj_USCOREwellbore *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREwellbore * SOAP_FMAC4 soap_in_witsml1__obj_USCOREwellbore(struct soap*, const char*, witsml1__obj_USCOREwellbore *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREwellbore * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREwellbore(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREwellbore * soap_new_witsml1__obj_USCOREwellbore(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREwellbore(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREwellbore * soap_new_req_witsml1__obj_USCOREwellbore(
	struct soap *soap,
	const std::string& nameWell,
	const std::string& name)
{
	witsml1__obj_USCOREwellbore *_p = soap_new_witsml1__obj_USCOREwellbore(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREwellbore::nameWell = nameWell;
		_p->witsml1__obj_USCOREwellbore::name = name;
	}
	return _p;
}

inline witsml1__obj_USCOREwellbore * soap_new_set_witsml1__obj_USCOREwellbore(
	struct soap *soap,
	const std::string& nameWell,
	const std::string& name,
	__witsml1__obj_USCOREwellbore_sequence *__obj_USCOREwellbore_sequence,
	witsml1__cs_USCOREcommonData *commonData,
	witsml1__cs_USCOREcustomData *customData,
	std::string *uidWell,
	std::string *uid)
{
	witsml1__obj_USCOREwellbore *_p = soap_new_witsml1__obj_USCOREwellbore(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREwellbore::nameWell = nameWell;
		_p->witsml1__obj_USCOREwellbore::name = name;
		_p->witsml1__obj_USCOREwellbore::__obj_USCOREwellbore_sequence = __obj_USCOREwellbore_sequence;
		_p->witsml1__obj_USCOREwellbore::commonData = commonData;
		_p->witsml1__obj_USCOREwellbore::customData = customData;
		_p->witsml1__obj_USCOREwellbore::uidWell = uidWell;
		_p->witsml1__obj_USCOREwellbore::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREwellbore(struct soap *soap, witsml1__obj_USCOREwellbore const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_wellbore", "witsml1:obj_wellbore") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREwellbore * SOAP_FMAC4 soap_get_witsml1__obj_USCOREwellbore(struct soap*, witsml1__obj_USCOREwellbore *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREwellbore(struct soap *soap, witsml1__obj_USCOREwellbore *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREwellbore(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbores_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwellbores_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREwellbores(struct soap*, const char*, int, const witsml1__obj_USCOREwellbores *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREwellbores * SOAP_FMAC4 soap_in_witsml1__obj_USCOREwellbores(struct soap*, const char*, witsml1__obj_USCOREwellbores *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREwellbores * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREwellbores(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREwellbores * soap_new_witsml1__obj_USCOREwellbores(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREwellbores(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREwellbores * soap_new_req_witsml1__obj_USCOREwellbores(
	struct soap *soap,
	const std::vector<witsml1__obj_USCOREwellbore *> & wellbore,
	const std::string& version)
{
	witsml1__obj_USCOREwellbores *_p = soap_new_witsml1__obj_USCOREwellbores(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREwellbores::wellbore = wellbore;
		_p->witsml1__obj_USCOREwellbores::version = version;
	}
	return _p;
}

inline witsml1__obj_USCOREwellbores * soap_new_set_witsml1__obj_USCOREwellbores(
	struct soap *soap,
	witsml1__cs_USCOREdocumentInfo *documentInfo,
	const std::vector<witsml1__obj_USCOREwellbore *> & wellbore,
	const std::string& version)
{
	witsml1__obj_USCOREwellbores *_p = soap_new_witsml1__obj_USCOREwellbores(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREwellbores::documentInfo = documentInfo;
		_p->witsml1__obj_USCOREwellbores::wellbore = wellbore;
		_p->witsml1__obj_USCOREwellbores::version = version;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREwellbores(struct soap *soap, witsml1__obj_USCOREwellbores const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_wellbores", "witsml1:obj_wellbores") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREwellbores * SOAP_FMAC4 soap_get_witsml1__obj_USCOREwellbores(struct soap*, witsml1__obj_USCOREwellbores *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREwellbores(struct soap *soap, witsml1__obj_USCOREwellbores *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREwellbores(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcustomData_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcustomData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREcustomData(struct soap*, const char*, int, const witsml1__cs_USCOREcustomData *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREcustomData * SOAP_FMAC4 soap_in_witsml1__cs_USCOREcustomData(struct soap*, const char*, witsml1__cs_USCOREcustomData *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREcustomData * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREcustomData(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREcustomData * soap_new_witsml1__cs_USCOREcustomData(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREcustomData(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREcustomData * soap_new_req_witsml1__cs_USCOREcustomData(
	struct soap *soap)
{
	witsml1__cs_USCOREcustomData *_p = soap_new_witsml1__cs_USCOREcustomData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREcustomData * soap_new_set_witsml1__cs_USCOREcustomData(
	struct soap *soap,
	const std::vector<char *> & __any)
{
	witsml1__cs_USCOREcustomData *_p = soap_new_witsml1__cs_USCOREcustomData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREcustomData::__any = __any;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREcustomData(struct soap *soap, witsml1__cs_USCOREcustomData const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_customData", "witsml1:cs_customData") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREcustomData * SOAP_FMAC4 soap_get_witsml1__cs_USCOREcustomData(struct soap*, witsml1__cs_USCOREcustomData *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREcustomData(struct soap *soap, witsml1__cs_USCOREcustomData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREcustomData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionAny_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionAny_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREextensionAny(struct soap*, const char*, int, const witsml1__cs_USCOREextensionAny *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREextensionAny * SOAP_FMAC4 soap_in_witsml1__cs_USCOREextensionAny(struct soap*, const char*, witsml1__cs_USCOREextensionAny *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREextensionAny * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREextensionAny(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREextensionAny * soap_new_witsml1__cs_USCOREextensionAny(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREextensionAny(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREextensionAny * soap_new_req_witsml1__cs_USCOREextensionAny(
	struct soap *soap)
{
	witsml1__cs_USCOREextensionAny *_p = soap_new_witsml1__cs_USCOREextensionAny(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREextensionAny * soap_new_set_witsml1__cs_USCOREextensionAny(
	struct soap *soap,
	const std::vector<char *> & __any)
{
	witsml1__cs_USCOREextensionAny *_p = soap_new_witsml1__cs_USCOREextensionAny(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREextensionAny::__any = __any;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREextensionAny(struct soap *soap, witsml1__cs_USCOREextensionAny const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_extensionAny", "witsml1:cs_extensionAny") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREextensionAny * SOAP_FMAC4 soap_get_witsml1__cs_USCOREextensionAny(struct soap*, witsml1__cs_USCOREextensionAny *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREextensionAny(struct soap *soap, witsml1__cs_USCOREextensionAny *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREextensionAny(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcommonData_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREcommonData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREcommonData(struct soap*, const char*, int, const witsml1__cs_USCOREcommonData *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREcommonData * SOAP_FMAC4 soap_in_witsml1__cs_USCOREcommonData(struct soap*, const char*, witsml1__cs_USCOREcommonData *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREcommonData * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREcommonData(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREcommonData * soap_new_witsml1__cs_USCOREcommonData(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREcommonData(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREcommonData * soap_new_req_witsml1__cs_USCOREcommonData(
	struct soap *soap)
{
	witsml1__cs_USCOREcommonData *_p = soap_new_witsml1__cs_USCOREcommonData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREcommonData * soap_new_set_witsml1__cs_USCOREcommonData(
	struct soap *soap,
	std::string *sourceName,
	time_t *dTimCreation,
	time_t *dTimLastChange,
	enum witsml1__ItemState *itemState,
	std::string *serviceCategory,
	std::string *comments,
	const std::vector<witsml1__timestampedTimeZone *> & acquisitionTimeZone,
	witsml1__refNameString *defaultDatum,
	bool *privateGroupOnly,
	witsml1__cs_USCOREextensionAny *extensionAny,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue)
{
	witsml1__cs_USCOREcommonData *_p = soap_new_witsml1__cs_USCOREcommonData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREcommonData::sourceName = sourceName;
		_p->witsml1__cs_USCOREcommonData::dTimCreation = dTimCreation;
		_p->witsml1__cs_USCOREcommonData::dTimLastChange = dTimLastChange;
		_p->witsml1__cs_USCOREcommonData::itemState = itemState;
		_p->witsml1__cs_USCOREcommonData::serviceCategory = serviceCategory;
		_p->witsml1__cs_USCOREcommonData::comments = comments;
		_p->witsml1__cs_USCOREcommonData::acquisitionTimeZone = acquisitionTimeZone;
		_p->witsml1__cs_USCOREcommonData::defaultDatum = defaultDatum;
		_p->witsml1__cs_USCOREcommonData::privateGroupOnly = privateGroupOnly;
		_p->witsml1__cs_USCOREcommonData::extensionAny = extensionAny;
		_p->witsml1__cs_USCOREcommonData::extensionNameValue = extensionNameValue;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREcommonData(struct soap *soap, witsml1__cs_USCOREcommonData const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_commonData", "witsml1:cs_commonData") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREcommonData * SOAP_FMAC4 soap_get_witsml1__cs_USCOREcommonData(struct soap*, witsml1__cs_USCOREcommonData *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREcommonData(struct soap *soap, witsml1__cs_USCOREcommonData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREcommonData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocalCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocalCRS_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCORElocalCRS(struct soap*, const char*, int, const witsml1__cs_USCORElocalCRS *, const char*);
SOAP_FMAC3 witsml1__cs_USCORElocalCRS * SOAP_FMAC4 soap_in_witsml1__cs_USCORElocalCRS(struct soap*, const char*, witsml1__cs_USCORElocalCRS *, const char*);
SOAP_FMAC1 witsml1__cs_USCORElocalCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORElocalCRS(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCORElocalCRS * soap_new_witsml1__cs_USCORElocalCRS(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCORElocalCRS(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCORElocalCRS * soap_new_req_witsml1__cs_USCORElocalCRS(
	struct soap *soap,
	int __union_cs_USCORElocalCRS,
	const union _witsml1__union_cs_USCORElocalCRS& union_cs_USCORElocalCRS)
{
	witsml1__cs_USCORElocalCRS *_p = soap_new_witsml1__cs_USCORElocalCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORElocalCRS::__union_cs_USCORElocalCRS = __union_cs_USCORElocalCRS;
		_p->witsml1__cs_USCORElocalCRS::union_cs_USCORElocalCRS = union_cs_USCORElocalCRS;
	}
	return _p;
}

inline witsml1__cs_USCORElocalCRS * soap_new_set_witsml1__cs_USCORElocalCRS(
	struct soap *soap,
	int __union_cs_USCORElocalCRS,
	const union _witsml1__union_cs_USCORElocalCRS& union_cs_USCORElocalCRS,
	witsml1__yAxisAzimuth *yAxisAzimuth,
	witsml1__planeAngleMeasure *magneticDeclination,
	witsml1__planeAngleMeasure *gridConvergence,
	std::string *yAxisDescription,
	bool *xRotationCounterClockwise)
{
	witsml1__cs_USCORElocalCRS *_p = soap_new_witsml1__cs_USCORElocalCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORElocalCRS::__union_cs_USCORElocalCRS = __union_cs_USCORElocalCRS;
		_p->witsml1__cs_USCORElocalCRS::union_cs_USCORElocalCRS = union_cs_USCORElocalCRS;
		_p->witsml1__cs_USCORElocalCRS::yAxisAzimuth = yAxisAzimuth;
		_p->witsml1__cs_USCORElocalCRS::magneticDeclination = magneticDeclination;
		_p->witsml1__cs_USCORElocalCRS::gridConvergence = gridConvergence;
		_p->witsml1__cs_USCORElocalCRS::yAxisDescription = yAxisDescription;
		_p->witsml1__cs_USCORElocalCRS::xRotationCounterClockwise = xRotationCounterClockwise;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCORElocalCRS(struct soap *soap, witsml1__cs_USCORElocalCRS const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_localCRS", "witsml1:cs_localCRS") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCORElocalCRS * SOAP_FMAC4 soap_get_witsml1__cs_USCORElocalCRS(struct soap*, witsml1__cs_USCORElocalCRS *, const char*, const char*);

inline int soap_read_witsml1__cs_USCORElocalCRS(struct soap *soap, witsml1__cs_USCORElocalCRS *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCORElocalCRS(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREprojectionx_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREprojectionx_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREprojectionx(struct soap*, const char*, int, const witsml1__cs_USCOREprojectionx *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREprojectionx * SOAP_FMAC4 soap_in_witsml1__cs_USCOREprojectionx(struct soap*, const char*, witsml1__cs_USCOREprojectionx *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREprojectionx * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREprojectionx(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREprojectionx * soap_new_witsml1__cs_USCOREprojectionx(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREprojectionx(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREprojectionx * soap_new_req_witsml1__cs_USCOREprojectionx(
	struct soap *soap)
{
	witsml1__cs_USCOREprojectionx *_p = soap_new_witsml1__cs_USCOREprojectionx(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREprojectionx * soap_new_set_witsml1__cs_USCOREprojectionx(
	struct soap *soap,
	witsml1__wellKnownNameStruct *nameCRS,
	enum witsml1__Projection *projectionCode,
	witsml1__refNameString *projectedFrom,
	witsml1__planeAngleMeasure *stdParallel1,
	witsml1__planeAngleMeasure *stdParallel2,
	witsml1__planeAngleMeasure *centralMeridian,
	witsml1__planeAngleMeasure *originLatitude,
	witsml1__planeAngleMeasure *originLongitude,
	witsml1__planeAngleMeasure *latitude1,
	witsml1__planeAngleMeasure *longitude1,
	witsml1__planeAngleMeasure *latitude2,
	witsml1__planeAngleMeasure *longitude2,
	witsml1__planeAngleMeasure *latitudeForScale,
	witsml1__planeAngleMeasure *longitudeForScale,
	witsml1__planeAngleMeasure *trueScaleLatitude,
	witsml1__lengthMeasure *spheroidRadius,
	double *scaleFactor,
	enum witsml1__ProjectionVariantsObliqueMercator *methodVariant,
	witsml1__lengthMeasure *perspectiveHeight,
	std::string *zone,
	enum witsml1__NADTypes *NADType,
	witsml1__lengthMeasure *falseEasting,
	witsml1__lengthMeasure *falseNorthing,
	witsml1__planeAngleMeasure *bearing,
	enum witsml1__Hemispheres *hemisphere,
	std::string *description,
	const std::vector<witsml1__indexedObject *> & parameter)
{
	witsml1__cs_USCOREprojectionx *_p = soap_new_witsml1__cs_USCOREprojectionx(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREprojectionx::nameCRS = nameCRS;
		_p->witsml1__cs_USCOREprojectionx::projectionCode = projectionCode;
		_p->witsml1__cs_USCOREprojectionx::projectedFrom = projectedFrom;
		_p->witsml1__cs_USCOREprojectionx::stdParallel1 = stdParallel1;
		_p->witsml1__cs_USCOREprojectionx::stdParallel2 = stdParallel2;
		_p->witsml1__cs_USCOREprojectionx::centralMeridian = centralMeridian;
		_p->witsml1__cs_USCOREprojectionx::originLatitude = originLatitude;
		_p->witsml1__cs_USCOREprojectionx::originLongitude = originLongitude;
		_p->witsml1__cs_USCOREprojectionx::latitude1 = latitude1;
		_p->witsml1__cs_USCOREprojectionx::longitude1 = longitude1;
		_p->witsml1__cs_USCOREprojectionx::latitude2 = latitude2;
		_p->witsml1__cs_USCOREprojectionx::longitude2 = longitude2;
		_p->witsml1__cs_USCOREprojectionx::latitudeForScale = latitudeForScale;
		_p->witsml1__cs_USCOREprojectionx::longitudeForScale = longitudeForScale;
		_p->witsml1__cs_USCOREprojectionx::trueScaleLatitude = trueScaleLatitude;
		_p->witsml1__cs_USCOREprojectionx::spheroidRadius = spheroidRadius;
		_p->witsml1__cs_USCOREprojectionx::scaleFactor = scaleFactor;
		_p->witsml1__cs_USCOREprojectionx::methodVariant = methodVariant;
		_p->witsml1__cs_USCOREprojectionx::perspectiveHeight = perspectiveHeight;
		_p->witsml1__cs_USCOREprojectionx::zone = zone;
		_p->witsml1__cs_USCOREprojectionx::NADType = NADType;
		_p->witsml1__cs_USCOREprojectionx::falseEasting = falseEasting;
		_p->witsml1__cs_USCOREprojectionx::falseNorthing = falseNorthing;
		_p->witsml1__cs_USCOREprojectionx::bearing = bearing;
		_p->witsml1__cs_USCOREprojectionx::hemisphere = hemisphere;
		_p->witsml1__cs_USCOREprojectionx::description = description;
		_p->witsml1__cs_USCOREprojectionx::parameter = parameter;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREprojectionx(struct soap *soap, witsml1__cs_USCOREprojectionx const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_projectionx", "witsml1:cs_projectionx") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREprojectionx * SOAP_FMAC4 soap_get_witsml1__cs_USCOREprojectionx(struct soap*, witsml1__cs_USCOREprojectionx *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREprojectionx(struct soap *soap, witsml1__cs_USCOREprojectionx *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREprojectionx(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREgeodeticModel_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREgeodeticModel_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREgeodeticModel(struct soap*, const char*, int, const witsml1__cs_USCOREgeodeticModel *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREgeodeticModel * SOAP_FMAC4 soap_in_witsml1__cs_USCOREgeodeticModel(struct soap*, const char*, witsml1__cs_USCOREgeodeticModel *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREgeodeticModel * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREgeodeticModel(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREgeodeticModel * soap_new_witsml1__cs_USCOREgeodeticModel(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREgeodeticModel(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREgeodeticModel * soap_new_req_witsml1__cs_USCOREgeodeticModel(
	struct soap *soap)
{
	witsml1__cs_USCOREgeodeticModel *_p = soap_new_witsml1__cs_USCOREgeodeticModel(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREgeodeticModel * soap_new_set_witsml1__cs_USCOREgeodeticModel(
	struct soap *soap,
	witsml1__wellKnownNameStruct *nameCRS,
	enum witsml1__GeodeticDatum *geodeticDatumCode,
	witsml1__lengthMeasure *xTranslation,
	witsml1__lengthMeasure *yTranslation,
	witsml1__lengthMeasure *zTranslation,
	witsml1__planeAngleMeasure *xRotation,
	witsml1__planeAngleMeasure *yRotation,
	witsml1__planeAngleMeasure *zRotation,
	double *scaleFactor,
	enum witsml1__Ellipsoid *ellipsoidCode,
	witsml1__lengthMeasure *ellipsoidSemiMajorAxis,
	double *ellipsoidInverseFlattening)
{
	witsml1__cs_USCOREgeodeticModel *_p = soap_new_witsml1__cs_USCOREgeodeticModel(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREgeodeticModel::nameCRS = nameCRS;
		_p->witsml1__cs_USCOREgeodeticModel::geodeticDatumCode = geodeticDatumCode;
		_p->witsml1__cs_USCOREgeodeticModel::xTranslation = xTranslation;
		_p->witsml1__cs_USCOREgeodeticModel::yTranslation = yTranslation;
		_p->witsml1__cs_USCOREgeodeticModel::zTranslation = zTranslation;
		_p->witsml1__cs_USCOREgeodeticModel::xRotation = xRotation;
		_p->witsml1__cs_USCOREgeodeticModel::yRotation = yRotation;
		_p->witsml1__cs_USCOREgeodeticModel::zRotation = zRotation;
		_p->witsml1__cs_USCOREgeodeticModel::scaleFactor = scaleFactor;
		_p->witsml1__cs_USCOREgeodeticModel::ellipsoidCode = ellipsoidCode;
		_p->witsml1__cs_USCOREgeodeticModel::ellipsoidSemiMajorAxis = ellipsoidSemiMajorAxis;
		_p->witsml1__cs_USCOREgeodeticModel::ellipsoidInverseFlattening = ellipsoidInverseFlattening;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREgeodeticModel(struct soap *soap, witsml1__cs_USCOREgeodeticModel const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_geodeticModel", "witsml1:cs_geodeticModel") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREgeodeticModel * SOAP_FMAC4 soap_get_witsml1__cs_USCOREgeodeticModel(struct soap*, witsml1__cs_USCOREgeodeticModel *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREgeodeticModel(struct soap *soap, witsml1__cs_USCOREgeodeticModel *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREgeodeticModel(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellCRS_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREwellCRS(struct soap*, const char*, int, const witsml1__cs_USCOREwellCRS *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREwellCRS * SOAP_FMAC4 soap_in_witsml1__cs_USCOREwellCRS(struct soap*, const char*, witsml1__cs_USCOREwellCRS *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREwellCRS * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREwellCRS(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREwellCRS * soap_new_witsml1__cs_USCOREwellCRS(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREwellCRS(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREwellCRS * soap_new_req_witsml1__cs_USCOREwellCRS(
	struct soap *soap,
	const std::string& name,
	int __union_cs_USCOREwellCRS,
	const union _witsml1__union_cs_USCOREwellCRS& union_cs_USCOREwellCRS)
{
	witsml1__cs_USCOREwellCRS *_p = soap_new_witsml1__cs_USCOREwellCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREwellCRS::name = name;
		_p->witsml1__cs_USCOREwellCRS::__union_cs_USCOREwellCRS = __union_cs_USCOREwellCRS;
		_p->witsml1__cs_USCOREwellCRS::union_cs_USCOREwellCRS = union_cs_USCOREwellCRS;
	}
	return _p;
}

inline witsml1__cs_USCOREwellCRS * soap_new_set_witsml1__cs_USCOREwellCRS(
	struct soap *soap,
	const std::string& name,
	int __union_cs_USCOREwellCRS,
	const union _witsml1__union_cs_USCOREwellCRS& union_cs_USCOREwellCRS,
	std::string *description,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue,
	std::string *uid)
{
	witsml1__cs_USCOREwellCRS *_p = soap_new_witsml1__cs_USCOREwellCRS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREwellCRS::name = name;
		_p->witsml1__cs_USCOREwellCRS::__union_cs_USCOREwellCRS = __union_cs_USCOREwellCRS;
		_p->witsml1__cs_USCOREwellCRS::union_cs_USCOREwellCRS = union_cs_USCOREwellCRS;
		_p->witsml1__cs_USCOREwellCRS::description = description;
		_p->witsml1__cs_USCOREwellCRS::extensionNameValue = extensionNameValue;
		_p->witsml1__cs_USCOREwellCRS::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREwellCRS(struct soap *soap, witsml1__cs_USCOREwellCRS const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_wellCRS", "witsml1:cs_wellCRS") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREwellCRS * SOAP_FMAC4 soap_get_witsml1__cs_USCOREwellCRS(struct soap*, witsml1__cs_USCOREwellCRS *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREwellCRS(struct soap *soap, witsml1__cs_USCOREwellCRS *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREwellCRS(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREreferencePoint_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREreferencePoint_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREreferencePoint(struct soap*, const char*, int, const witsml1__cs_USCOREreferencePoint *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREreferencePoint * SOAP_FMAC4 soap_in_witsml1__cs_USCOREreferencePoint(struct soap*, const char*, witsml1__cs_USCOREreferencePoint *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREreferencePoint * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREreferencePoint(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREreferencePoint * soap_new_witsml1__cs_USCOREreferencePoint(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREreferencePoint(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREreferencePoint * soap_new_req_witsml1__cs_USCOREreferencePoint(
	struct soap *soap,
	const std::string& name,
	const std::vector<witsml1__cs_USCORElocation *> & location)
{
	witsml1__cs_USCOREreferencePoint *_p = soap_new_witsml1__cs_USCOREreferencePoint(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREreferencePoint::name = name;
		_p->witsml1__cs_USCOREreferencePoint::location = location;
	}
	return _p;
}

inline witsml1__cs_USCOREreferencePoint * soap_new_set_witsml1__cs_USCOREreferencePoint(
	struct soap *soap,
	const std::string& name,
	std::string *type,
	witsml1__wellElevationCoord *elevation,
	witsml1__measuredDepthCoord *measuredDepth,
	const std::vector<witsml1__cs_USCORElocation *> & location,
	std::string *description,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue,
	std::string *uid)
{
	witsml1__cs_USCOREreferencePoint *_p = soap_new_witsml1__cs_USCOREreferencePoint(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREreferencePoint::name = name;
		_p->witsml1__cs_USCOREreferencePoint::type = type;
		_p->witsml1__cs_USCOREreferencePoint::elevation = elevation;
		_p->witsml1__cs_USCOREreferencePoint::measuredDepth = measuredDepth;
		_p->witsml1__cs_USCOREreferencePoint::location = location;
		_p->witsml1__cs_USCOREreferencePoint::description = description;
		_p->witsml1__cs_USCOREreferencePoint::extensionNameValue = extensionNameValue;
		_p->witsml1__cs_USCOREreferencePoint::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREreferencePoint(struct soap *soap, witsml1__cs_USCOREreferencePoint const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_referencePoint", "witsml1:cs_referencePoint") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREreferencePoint * SOAP_FMAC4 soap_get_witsml1__cs_USCOREreferencePoint(struct soap*, witsml1__cs_USCOREreferencePoint *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREreferencePoint(struct soap *soap, witsml1__cs_USCOREreferencePoint *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREreferencePoint(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREpublicLandSurveySystem_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREpublicLandSurveySystem_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREpublicLandSurveySystem(struct soap*, const char*, int, const witsml1__cs_USCOREpublicLandSurveySystem *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREpublicLandSurveySystem * SOAP_FMAC4 soap_in_witsml1__cs_USCOREpublicLandSurveySystem(struct soap*, const char*, witsml1__cs_USCOREpublicLandSurveySystem *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREpublicLandSurveySystem * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREpublicLandSurveySystem(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREpublicLandSurveySystem * soap_new_witsml1__cs_USCOREpublicLandSurveySystem(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREpublicLandSurveySystem(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREpublicLandSurveySystem * soap_new_req_witsml1__cs_USCOREpublicLandSurveySystem(
	struct soap *soap)
{
	witsml1__cs_USCOREpublicLandSurveySystem *_p = soap_new_witsml1__cs_USCOREpublicLandSurveySystem(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREpublicLandSurveySystem * soap_new_set_witsml1__cs_USCOREpublicLandSurveySystem(
	struct soap *soap,
	enum witsml1__PrincipalMeridian *principalMeridian,
	short *range,
	enum witsml1__EastOrWest *rangeDir,
	short *township,
	enum witsml1__NorthOrSouth *townshipDir,
	std::string *section,
	std::string *quarterSection,
	std::string *quarterTownship,
	witsml1__footageNorthSouth *footageNS,
	witsml1__footageEastWest *footageEW)
{
	witsml1__cs_USCOREpublicLandSurveySystem *_p = soap_new_witsml1__cs_USCOREpublicLandSurveySystem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREpublicLandSurveySystem::principalMeridian = principalMeridian;
		_p->witsml1__cs_USCOREpublicLandSurveySystem::range = range;
		_p->witsml1__cs_USCOREpublicLandSurveySystem::rangeDir = rangeDir;
		_p->witsml1__cs_USCOREpublicLandSurveySystem::township = township;
		_p->witsml1__cs_USCOREpublicLandSurveySystem::townshipDir = townshipDir;
		_p->witsml1__cs_USCOREpublicLandSurveySystem::section = section;
		_p->witsml1__cs_USCOREpublicLandSurveySystem::quarterSection = quarterSection;
		_p->witsml1__cs_USCOREpublicLandSurveySystem::quarterTownship = quarterTownship;
		_p->witsml1__cs_USCOREpublicLandSurveySystem::footageNS = footageNS;
		_p->witsml1__cs_USCOREpublicLandSurveySystem::footageEW = footageEW;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREpublicLandSurveySystem(struct soap *soap, witsml1__cs_USCOREpublicLandSurveySystem const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_publicLandSurveySystem", "witsml1:cs_publicLandSurveySystem") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREpublicLandSurveySystem * SOAP_FMAC4 soap_get_witsml1__cs_USCOREpublicLandSurveySystem(struct soap*, witsml1__cs_USCOREpublicLandSurveySystem *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREpublicLandSurveySystem(struct soap *soap, witsml1__cs_USCOREpublicLandSurveySystem *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREpublicLandSurveySystem(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellboreRig_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellboreRig_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCORErefWellWellboreRig(struct soap*, const char*, int, const witsml1__cs_USCORErefWellWellboreRig *, const char*);
SOAP_FMAC3 witsml1__cs_USCORErefWellWellboreRig * SOAP_FMAC4 soap_in_witsml1__cs_USCORErefWellWellboreRig(struct soap*, const char*, witsml1__cs_USCORErefWellWellboreRig *, const char*);
SOAP_FMAC1 witsml1__cs_USCORErefWellWellboreRig * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORErefWellWellboreRig(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCORErefWellWellboreRig * soap_new_witsml1__cs_USCORErefWellWellboreRig(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCORErefWellWellboreRig(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCORErefWellWellboreRig * soap_new_req_witsml1__cs_USCORErefWellWellboreRig(
	struct soap *soap,
	witsml1__refNameString *rigReference)
{
	witsml1__cs_USCORErefWellWellboreRig *_p = soap_new_witsml1__cs_USCORErefWellWellboreRig(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORErefWellWellboreRig::rigReference = rigReference;
	}
	return _p;
}

inline witsml1__cs_USCORErefWellWellboreRig * soap_new_set_witsml1__cs_USCORErefWellWellboreRig(
	struct soap *soap,
	witsml1__refNameString *rigReference,
	witsml1__refNameString *wellboreParent,
	witsml1__refNameString *wellParent)
{
	witsml1__cs_USCORErefWellWellboreRig *_p = soap_new_witsml1__cs_USCORErefWellWellboreRig(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORErefWellWellboreRig::rigReference = rigReference;
		_p->witsml1__cs_USCORErefWellWellboreRig::wellboreParent = wellboreParent;
		_p->witsml1__cs_USCORErefWellWellboreRig::wellParent = wellParent;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCORErefWellWellboreRig(struct soap *soap, witsml1__cs_USCORErefWellWellboreRig const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_refWellWellboreRig", "witsml1:cs_refWellWellboreRig") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCORErefWellWellboreRig * SOAP_FMAC4 soap_get_witsml1__cs_USCORErefWellWellboreRig(struct soap*, witsml1__cs_USCORErefWellWellboreRig *, const char*, const char*);

inline int soap_read_witsml1__cs_USCORErefWellWellboreRig(struct soap *soap, witsml1__cs_USCORErefWellWellboreRig *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCORErefWellWellboreRig(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellbore_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORErefWellWellbore_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCORErefWellWellbore(struct soap*, const char*, int, const witsml1__cs_USCORErefWellWellbore *, const char*);
SOAP_FMAC3 witsml1__cs_USCORErefWellWellbore * SOAP_FMAC4 soap_in_witsml1__cs_USCORErefWellWellbore(struct soap*, const char*, witsml1__cs_USCORErefWellWellbore *, const char*);
SOAP_FMAC1 witsml1__cs_USCORErefWellWellbore * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORErefWellWellbore(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCORErefWellWellbore * soap_new_witsml1__cs_USCORErefWellWellbore(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCORErefWellWellbore(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCORErefWellWellbore * soap_new_req_witsml1__cs_USCORErefWellWellbore(
	struct soap *soap,
	witsml1__refNameString *wellboreReference)
{
	witsml1__cs_USCORErefWellWellbore *_p = soap_new_witsml1__cs_USCORErefWellWellbore(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORErefWellWellbore::wellboreReference = wellboreReference;
	}
	return _p;
}

inline witsml1__cs_USCORErefWellWellbore * soap_new_set_witsml1__cs_USCORErefWellWellbore(
	struct soap *soap,
	witsml1__refNameString *wellboreReference,
	witsml1__refNameString *wellParent)
{
	witsml1__cs_USCORErefWellWellbore *_p = soap_new_witsml1__cs_USCORErefWellWellbore(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORErefWellWellbore::wellboreReference = wellboreReference;
		_p->witsml1__cs_USCORErefWellWellbore::wellParent = wellParent;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCORErefWellWellbore(struct soap *soap, witsml1__cs_USCORErefWellWellbore const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_refWellWellbore", "witsml1:cs_refWellWellbore") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCORErefWellWellbore * SOAP_FMAC4 soap_get_witsml1__cs_USCORErefWellWellbore(struct soap*, witsml1__cs_USCORErefWellWellbore *, const char*, const char*);

inline int soap_read_witsml1__cs_USCORErefWellWellbore(struct soap *soap, witsml1__cs_USCORErefWellWellbore *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCORErefWellWellbore(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREwellDatum_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREwellDatum(struct soap*, const char*, int, const witsml1__cs_USCOREwellDatum *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREwellDatum * SOAP_FMAC4 soap_in_witsml1__cs_USCOREwellDatum(struct soap*, const char*, witsml1__cs_USCOREwellDatum *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREwellDatum * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREwellDatum(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREwellDatum * soap_new_witsml1__cs_USCOREwellDatum(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREwellDatum(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREwellDatum * soap_new_req_witsml1__cs_USCOREwellDatum(
	struct soap *soap,
	const std::string& name,
	int __union_cs_USCOREwellDatum,
	const union _witsml1__union_cs_USCOREwellDatum& union_cs_USCOREwellDatum,
	const std::string& uid)
{
	witsml1__cs_USCOREwellDatum *_p = soap_new_witsml1__cs_USCOREwellDatum(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREwellDatum::name = name;
		_p->witsml1__cs_USCOREwellDatum::__union_cs_USCOREwellDatum = __union_cs_USCOREwellDatum;
		_p->witsml1__cs_USCOREwellDatum::union_cs_USCOREwellDatum = union_cs_USCOREwellDatum;
		_p->witsml1__cs_USCOREwellDatum::uid = uid;
	}
	return _p;
}

inline witsml1__cs_USCOREwellDatum * soap_new_set_witsml1__cs_USCOREwellDatum(
	struct soap *soap,
	const std::string& name,
	enum witsml1__ElevCodeEnum *code,
	int __union_cs_USCOREwellDatum,
	const union _witsml1__union_cs_USCOREwellDatum& union_cs_USCOREwellDatum,
	const std::vector<std::string> & kind,
	witsml1__cs_USCORErefWellWellbore *wellbore,
	witsml1__cs_USCORErefWellWellboreRig *rig,
	witsml1__wellElevationCoord *elevation,
	witsml1__measuredDepthCoord *measuredDepth,
	witsml1__cs_USCORElocation *horizontalLocation,
	std::string *comment,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue,
	const std::string& uid)
{
	witsml1__cs_USCOREwellDatum *_p = soap_new_witsml1__cs_USCOREwellDatum(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREwellDatum::name = name;
		_p->witsml1__cs_USCOREwellDatum::code = code;
		_p->witsml1__cs_USCOREwellDatum::__union_cs_USCOREwellDatum = __union_cs_USCOREwellDatum;
		_p->witsml1__cs_USCOREwellDatum::union_cs_USCOREwellDatum = union_cs_USCOREwellDatum;
		_p->witsml1__cs_USCOREwellDatum::kind = kind;
		_p->witsml1__cs_USCOREwellDatum::wellbore = wellbore;
		_p->witsml1__cs_USCOREwellDatum::rig = rig;
		_p->witsml1__cs_USCOREwellDatum::elevation = elevation;
		_p->witsml1__cs_USCOREwellDatum::measuredDepth = measuredDepth;
		_p->witsml1__cs_USCOREwellDatum::horizontalLocation = horizontalLocation;
		_p->witsml1__cs_USCOREwellDatum::comment = comment;
		_p->witsml1__cs_USCOREwellDatum::extensionNameValue = extensionNameValue;
		_p->witsml1__cs_USCOREwellDatum::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREwellDatum(struct soap *soap, witsml1__cs_USCOREwellDatum const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_wellDatum", "witsml1:cs_wellDatum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREwellDatum * SOAP_FMAC4 soap_get_witsml1__cs_USCOREwellDatum(struct soap*, witsml1__cs_USCOREwellDatum *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREwellDatum(struct soap *soap, witsml1__cs_USCOREwellDatum *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREwellDatum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCORElocation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCORElocation(struct soap*, const char*, int, const witsml1__cs_USCORElocation *, const char*);
SOAP_FMAC3 witsml1__cs_USCORElocation * SOAP_FMAC4 soap_in_witsml1__cs_USCORElocation(struct soap*, const char*, witsml1__cs_USCORElocation *, const char*);
SOAP_FMAC1 witsml1__cs_USCORElocation * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCORElocation(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCORElocation * soap_new_witsml1__cs_USCORElocation(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCORElocation(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCORElocation * soap_new_req_witsml1__cs_USCORElocation(
	struct soap *soap)
{
	witsml1__cs_USCORElocation *_p = soap_new_witsml1__cs_USCORElocation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCORElocation * soap_new_set_witsml1__cs_USCORElocation(
	struct soap *soap,
	witsml1__refNameString *wellCRS,
	witsml1__planeAngleMeasure *latitude,
	witsml1__planeAngleMeasure *longitude,
	witsml1__lengthMeasure *easting,
	witsml1__lengthMeasure *northing,
	witsml1__lengthMeasure *westing,
	witsml1__lengthMeasure *southing,
	witsml1__lengthMeasure *projectedX,
	witsml1__lengthMeasure *projectedY,
	witsml1__lengthMeasure *localX,
	witsml1__lengthMeasure *localY,
	bool *original,
	std::string *description,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue,
	std::string *uid)
{
	witsml1__cs_USCORElocation *_p = soap_new_witsml1__cs_USCORElocation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCORElocation::wellCRS = wellCRS;
		_p->witsml1__cs_USCORElocation::latitude = latitude;
		_p->witsml1__cs_USCORElocation::longitude = longitude;
		_p->witsml1__cs_USCORElocation::easting = easting;
		_p->witsml1__cs_USCORElocation::northing = northing;
		_p->witsml1__cs_USCORElocation::westing = westing;
		_p->witsml1__cs_USCORElocation::southing = southing;
		_p->witsml1__cs_USCORElocation::projectedX = projectedX;
		_p->witsml1__cs_USCORElocation::projectedY = projectedY;
		_p->witsml1__cs_USCORElocation::localX = localX;
		_p->witsml1__cs_USCORElocation::localY = localY;
		_p->witsml1__cs_USCORElocation::original = original;
		_p->witsml1__cs_USCORElocation::description = description;
		_p->witsml1__cs_USCORElocation::extensionNameValue = extensionNameValue;
		_p->witsml1__cs_USCORElocation::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCORElocation(struct soap *soap, witsml1__cs_USCORElocation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_location", "witsml1:cs_location") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCORElocation * SOAP_FMAC4 soap_get_witsml1__cs_USCORElocation(struct soap*, witsml1__cs_USCORElocation *, const char*, const char*);

inline int soap_read_witsml1__cs_USCORElocation(struct soap *soap, witsml1__cs_USCORElocation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCORElocation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentEvent_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentEvent_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREdocumentEvent(struct soap*, const char*, int, const witsml1__cs_USCOREdocumentEvent *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentEvent * SOAP_FMAC4 soap_in_witsml1__cs_USCOREdocumentEvent(struct soap*, const char*, witsml1__cs_USCOREdocumentEvent *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREdocumentEvent * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentEvent(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREdocumentEvent * soap_new_witsml1__cs_USCOREdocumentEvent(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREdocumentEvent(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREdocumentEvent * soap_new_req_witsml1__cs_USCOREdocumentEvent(
	struct soap *soap,
	time_t eventDate)
{
	witsml1__cs_USCOREdocumentEvent *_p = soap_new_witsml1__cs_USCOREdocumentEvent(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREdocumentEvent::eventDate = eventDate;
	}
	return _p;
}

inline witsml1__cs_USCOREdocumentEvent * soap_new_set_witsml1__cs_USCOREdocumentEvent(
	struct soap *soap,
	time_t eventDate,
	std::string *eventType,
	std::string *responsibleParty,
	std::string *comment,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue,
	std::string *uid)
{
	witsml1__cs_USCOREdocumentEvent *_p = soap_new_witsml1__cs_USCOREdocumentEvent(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREdocumentEvent::eventDate = eventDate;
		_p->witsml1__cs_USCOREdocumentEvent::eventType = eventType;
		_p->witsml1__cs_USCOREdocumentEvent::responsibleParty = responsibleParty;
		_p->witsml1__cs_USCOREdocumentEvent::comment = comment;
		_p->witsml1__cs_USCOREdocumentEvent::extensionNameValue = extensionNameValue;
		_p->witsml1__cs_USCOREdocumentEvent::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREdocumentEvent(struct soap *soap, witsml1__cs_USCOREdocumentEvent const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_documentEvent", "witsml1:cs_documentEvent") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREdocumentEvent * SOAP_FMAC4 soap_get_witsml1__cs_USCOREdocumentEvent(struct soap*, witsml1__cs_USCOREdocumentEvent *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREdocumentEvent(struct soap *soap, witsml1__cs_USCOREdocumentEvent *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREdocumentEvent(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentAudit_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentAudit_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREdocumentAudit(struct soap*, const char*, int, const witsml1__cs_USCOREdocumentAudit *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentAudit * SOAP_FMAC4 soap_in_witsml1__cs_USCOREdocumentAudit(struct soap*, const char*, witsml1__cs_USCOREdocumentAudit *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREdocumentAudit * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentAudit(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREdocumentAudit * soap_new_witsml1__cs_USCOREdocumentAudit(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREdocumentAudit(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREdocumentAudit * soap_new_req_witsml1__cs_USCOREdocumentAudit(
	struct soap *soap,
	const std::vector<witsml1__cs_USCOREdocumentEvent *> & event)
{
	witsml1__cs_USCOREdocumentAudit *_p = soap_new_witsml1__cs_USCOREdocumentAudit(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREdocumentAudit::event = event;
	}
	return _p;
}

inline witsml1__cs_USCOREdocumentAudit * soap_new_set_witsml1__cs_USCOREdocumentAudit(
	struct soap *soap,
	const std::vector<witsml1__cs_USCOREdocumentEvent *> & event)
{
	witsml1__cs_USCOREdocumentAudit *_p = soap_new_witsml1__cs_USCOREdocumentAudit(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREdocumentAudit::event = event;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREdocumentAudit(struct soap *soap, witsml1__cs_USCOREdocumentAudit const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_documentAudit", "witsml1:cs_documentAudit") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREdocumentAudit * SOAP_FMAC4 soap_get_witsml1__cs_USCOREdocumentAudit(struct soap*, witsml1__cs_USCOREdocumentAudit *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREdocumentAudit(struct soap *soap, witsml1__cs_USCOREdocumentAudit *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREdocumentAudit(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionNameValue_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREextensionNameValue_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREextensionNameValue(struct soap*, const char*, int, const witsml1__cs_USCOREextensionNameValue *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREextensionNameValue * SOAP_FMAC4 soap_in_witsml1__cs_USCOREextensionNameValue(struct soap*, const char*, witsml1__cs_USCOREextensionNameValue *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREextensionNameValue * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREextensionNameValue(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREextensionNameValue * soap_new_witsml1__cs_USCOREextensionNameValue(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREextensionNameValue(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREextensionNameValue * soap_new_req_witsml1__cs_USCOREextensionNameValue(
	struct soap *soap,
	const std::string& name,
	witsml1__extensionvalue *value,
	enum witsml1__PrimitiveType dataType)
{
	witsml1__cs_USCOREextensionNameValue *_p = soap_new_witsml1__cs_USCOREextensionNameValue(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREextensionNameValue::name = name;
		_p->witsml1__cs_USCOREextensionNameValue::value = value;
		_p->witsml1__cs_USCOREextensionNameValue::dataType = dataType;
	}
	return _p;
}

inline witsml1__cs_USCOREextensionNameValue * soap_new_set_witsml1__cs_USCOREextensionNameValue(
	struct soap *soap,
	const std::string& name,
	witsml1__extensionvalue *value,
	enum witsml1__PrimitiveType dataType,
	time_t *dTim,
	witsml1__measuredDepthCoord *md,
	short *index,
	std::string *measureClass,
	std::string *description,
	std::string *uid)
{
	witsml1__cs_USCOREextensionNameValue *_p = soap_new_witsml1__cs_USCOREextensionNameValue(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREextensionNameValue::name = name;
		_p->witsml1__cs_USCOREextensionNameValue::value = value;
		_p->witsml1__cs_USCOREextensionNameValue::dataType = dataType;
		_p->witsml1__cs_USCOREextensionNameValue::dTim = dTim;
		_p->witsml1__cs_USCOREextensionNameValue::md = md;
		_p->witsml1__cs_USCOREextensionNameValue::index = index;
		_p->witsml1__cs_USCOREextensionNameValue::measureClass = measureClass;
		_p->witsml1__cs_USCOREextensionNameValue::description = description;
		_p->witsml1__cs_USCOREextensionNameValue::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREextensionNameValue(struct soap *soap, witsml1__cs_USCOREextensionNameValue const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_extensionNameValue", "witsml1:cs_extensionNameValue") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREextensionNameValue * SOAP_FMAC4 soap_get_witsml1__cs_USCOREextensionNameValue(struct soap*, witsml1__cs_USCOREextensionNameValue *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREextensionNameValue(struct soap *soap, witsml1__cs_USCOREextensionNameValue *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREextensionNameValue(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentSecurityInfo_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentSecurityInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREdocumentSecurityInfo(struct soap*, const char*, int, const witsml1__cs_USCOREdocumentSecurityInfo *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentSecurityInfo * SOAP_FMAC4 soap_in_witsml1__cs_USCOREdocumentSecurityInfo(struct soap*, const char*, witsml1__cs_USCOREdocumentSecurityInfo *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREdocumentSecurityInfo * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentSecurityInfo(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREdocumentSecurityInfo * soap_new_witsml1__cs_USCOREdocumentSecurityInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREdocumentSecurityInfo(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREdocumentSecurityInfo * soap_new_req_witsml1__cs_USCOREdocumentSecurityInfo(
	struct soap *soap)
{
	witsml1__cs_USCOREdocumentSecurityInfo *_p = soap_new_witsml1__cs_USCOREdocumentSecurityInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline witsml1__cs_USCOREdocumentSecurityInfo * soap_new_set_witsml1__cs_USCOREdocumentSecurityInfo(
	struct soap *soap,
	std::string *class_,
	std::string *securitySystem,
	time_t *endDate,
	std::string *comment,
	const std::vector<witsml1__cs_USCOREextensionNameValue *> & extensionNameValue,
	std::string *uid)
{
	witsml1__cs_USCOREdocumentSecurityInfo *_p = soap_new_witsml1__cs_USCOREdocumentSecurityInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREdocumentSecurityInfo::class_ = class_;
		_p->witsml1__cs_USCOREdocumentSecurityInfo::securitySystem = securitySystem;
		_p->witsml1__cs_USCOREdocumentSecurityInfo::endDate = endDate;
		_p->witsml1__cs_USCOREdocumentSecurityInfo::comment = comment;
		_p->witsml1__cs_USCOREdocumentSecurityInfo::extensionNameValue = extensionNameValue;
		_p->witsml1__cs_USCOREdocumentSecurityInfo::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREdocumentSecurityInfo(struct soap *soap, witsml1__cs_USCOREdocumentSecurityInfo const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_documentSecurityInfo", "witsml1:cs_documentSecurityInfo") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREdocumentSecurityInfo * SOAP_FMAC4 soap_get_witsml1__cs_USCOREdocumentSecurityInfo(struct soap*, witsml1__cs_USCOREdocumentSecurityInfo *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREdocumentSecurityInfo(struct soap *soap, witsml1__cs_USCOREdocumentSecurityInfo *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREdocumentSecurityInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__abstractMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__abstractMeasure(struct soap*, const char*, int, const witsml1__abstractMeasure *, const char*);
SOAP_FMAC3 witsml1__abstractMeasure * SOAP_FMAC4 soap_in_witsml1__abstractMeasure(struct soap*, const char*, witsml1__abstractMeasure *, const char*);
SOAP_FMAC1 witsml1__abstractMeasure * SOAP_FMAC2 soap_instantiate_witsml1__abstractMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__abstractMeasure * soap_new_witsml1__abstractMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__abstractMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__abstractMeasure * soap_new_req_witsml1__abstractMeasure(
	struct soap *soap,
	double __item)
{
	witsml1__abstractMeasure *_p = soap_new_witsml1__abstractMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__abstractMeasure::__item = __item;
	}
	return _p;
}

inline witsml1__abstractMeasure * soap_new_set_witsml1__abstractMeasure(
	struct soap *soap,
	double __item)
{
	witsml1__abstractMeasure *_p = soap_new_witsml1__abstractMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__abstractMeasure::__item = __item;
	}
	return _p;
}

inline int soap_write_witsml1__abstractMeasure(struct soap *soap, witsml1__abstractMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:abstractMeasure", "witsml1:abstractMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__abstractMeasure * SOAP_FMAC4 soap_get_witsml1__abstractMeasure(struct soap*, witsml1__abstractMeasure *, const char*, const char*);

inline int soap_read_witsml1__abstractMeasure(struct soap *soap, witsml1__abstractMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__abstractMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__volumePerVolumeMeasure(struct soap*, const char*, int, const witsml1__volumePerVolumeMeasure *, const char*);
SOAP_FMAC3 witsml1__volumePerVolumeMeasure * SOAP_FMAC4 soap_in_witsml1__volumePerVolumeMeasure(struct soap*, const char*, witsml1__volumePerVolumeMeasure *, const char*);
SOAP_FMAC1 witsml1__volumePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__volumePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__volumePerVolumeMeasure * soap_new_witsml1__volumePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__volumePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__volumePerVolumeMeasure * soap_new_req_witsml1__volumePerVolumeMeasure(
	struct soap *soap,
	enum witsml1__VolumePerVolumeUom uom,
	double __item1)
{
	witsml1__volumePerVolumeMeasure *_p = soap_new_witsml1__volumePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumePerVolumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__volumePerVolumeMeasure * soap_new_set_witsml1__volumePerVolumeMeasure(
	struct soap *soap,
	enum witsml1__VolumePerVolumeUom uom,
	double __item1)
{
	witsml1__volumePerVolumeMeasure *_p = soap_new_witsml1__volumePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumePerVolumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__volumePerVolumeMeasure(struct soap *soap, witsml1__volumePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:volumePerVolumeMeasure", "witsml1:volumePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__volumePerVolumeMeasure * SOAP_FMAC4 soap_get_witsml1__volumePerVolumeMeasure(struct soap*, witsml1__volumePerVolumeMeasure *, const char*, const char*);

inline int soap_read_witsml1__volumePerVolumeMeasure(struct soap *soap, witsml1__volumePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__volumePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__volumePerLengthMeasure(struct soap*, const char*, int, const witsml1__volumePerLengthMeasure *, const char*);
SOAP_FMAC3 witsml1__volumePerLengthMeasure * SOAP_FMAC4 soap_in_witsml1__volumePerLengthMeasure(struct soap*, const char*, witsml1__volumePerLengthMeasure *, const char*);
SOAP_FMAC1 witsml1__volumePerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__volumePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__volumePerLengthMeasure * soap_new_witsml1__volumePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__volumePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__volumePerLengthMeasure * soap_new_req_witsml1__volumePerLengthMeasure(
	struct soap *soap,
	enum witsml1__VolumePerLengthUom uom,
	double __item1)
{
	witsml1__volumePerLengthMeasure *_p = soap_new_witsml1__volumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumePerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__volumePerLengthMeasure * soap_new_set_witsml1__volumePerLengthMeasure(
	struct soap *soap,
	enum witsml1__VolumePerLengthUom uom,
	double __item1)
{
	witsml1__volumePerLengthMeasure *_p = soap_new_witsml1__volumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumePerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__volumePerLengthMeasure(struct soap *soap, witsml1__volumePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:volumePerLengthMeasure", "witsml1:volumePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__volumePerLengthMeasure * SOAP_FMAC4 soap_get_witsml1__volumePerLengthMeasure(struct soap*, witsml1__volumePerLengthMeasure *, const char*, const char*);

inline int soap_read_witsml1__volumePerLengthMeasure(struct soap *soap, witsml1__volumePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__volumePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeFlowRateMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeFlowRateMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__volumeFlowRateMeasure(struct soap*, const char*, int, const witsml1__volumeFlowRateMeasure *, const char*);
SOAP_FMAC3 witsml1__volumeFlowRateMeasure * SOAP_FMAC4 soap_in_witsml1__volumeFlowRateMeasure(struct soap*, const char*, witsml1__volumeFlowRateMeasure *, const char*);
SOAP_FMAC1 witsml1__volumeFlowRateMeasure * SOAP_FMAC2 soap_instantiate_witsml1__volumeFlowRateMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__volumeFlowRateMeasure * soap_new_witsml1__volumeFlowRateMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__volumeFlowRateMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__volumeFlowRateMeasure * soap_new_req_witsml1__volumeFlowRateMeasure(
	struct soap *soap,
	enum witsml1__VolumeFlowRateUom uom,
	double __item1)
{
	witsml1__volumeFlowRateMeasure *_p = soap_new_witsml1__volumeFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumeFlowRateMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__volumeFlowRateMeasure * soap_new_set_witsml1__volumeFlowRateMeasure(
	struct soap *soap,
	enum witsml1__VolumeFlowRateUom uom,
	double __item1)
{
	witsml1__volumeFlowRateMeasure *_p = soap_new_witsml1__volumeFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumeFlowRateMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__volumeFlowRateMeasure(struct soap *soap, witsml1__volumeFlowRateMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:volumeFlowRateMeasure", "witsml1:volumeFlowRateMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__volumeFlowRateMeasure * SOAP_FMAC4 soap_get_witsml1__volumeFlowRateMeasure(struct soap*, witsml1__volumeFlowRateMeasure *, const char*, const char*);

inline int soap_read_witsml1__volumeFlowRateMeasure(struct soap *soap, witsml1__volumeFlowRateMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__volumeFlowRateMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__volumeMeasure(struct soap*, const char*, int, const witsml1__volumeMeasure *, const char*);
SOAP_FMAC3 witsml1__volumeMeasure * SOAP_FMAC4 soap_in_witsml1__volumeMeasure(struct soap*, const char*, witsml1__volumeMeasure *, const char*);
SOAP_FMAC1 witsml1__volumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__volumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__volumeMeasure * soap_new_witsml1__volumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__volumeMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__volumeMeasure * soap_new_req_witsml1__volumeMeasure(
	struct soap *soap,
	enum witsml1__VolumeUom uom,
	double __item1)
{
	witsml1__volumeMeasure *_p = soap_new_witsml1__volumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__volumeMeasure * soap_new_set_witsml1__volumeMeasure(
	struct soap *soap,
	enum witsml1__VolumeUom uom,
	double __item1)
{
	witsml1__volumeMeasure *_p = soap_new_witsml1__volumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__volumeMeasure(struct soap *soap, witsml1__volumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:volumeMeasure", "witsml1:volumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__volumeMeasure * SOAP_FMAC4 soap_get_witsml1__volumeMeasure(struct soap*, witsml1__volumeMeasure *, const char*, const char*);

inline int soap_read_witsml1__volumeMeasure(struct soap *soap, witsml1__volumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__volumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__velocityMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__velocityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__velocityMeasure(struct soap*, const char*, int, const witsml1__velocityMeasure *, const char*);
SOAP_FMAC3 witsml1__velocityMeasure * SOAP_FMAC4 soap_in_witsml1__velocityMeasure(struct soap*, const char*, witsml1__velocityMeasure *, const char*);
SOAP_FMAC1 witsml1__velocityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__velocityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__velocityMeasure * soap_new_witsml1__velocityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__velocityMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__velocityMeasure * soap_new_req_witsml1__velocityMeasure(
	struct soap *soap,
	enum witsml1__VelocityUom uom,
	double __item1)
{
	witsml1__velocityMeasure *_p = soap_new_witsml1__velocityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__velocityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__velocityMeasure * soap_new_set_witsml1__velocityMeasure(
	struct soap *soap,
	enum witsml1__VelocityUom uom,
	double __item1)
{
	witsml1__velocityMeasure *_p = soap_new_witsml1__velocityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__velocityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__velocityMeasure(struct soap *soap, witsml1__velocityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:velocityMeasure", "witsml1:velocityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__velocityMeasure * SOAP_FMAC4 soap_get_witsml1__velocityMeasure(struct soap*, witsml1__velocityMeasure *, const char*, const char*);

inline int soap_read_witsml1__velocityMeasure(struct soap *soap, witsml1__velocityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__velocityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__timeMeasure(struct soap*, const char*, int, const witsml1__timeMeasure *, const char*);
SOAP_FMAC3 witsml1__timeMeasure * SOAP_FMAC4 soap_in_witsml1__timeMeasure(struct soap*, const char*, witsml1__timeMeasure *, const char*);
SOAP_FMAC1 witsml1__timeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__timeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__timeMeasure * soap_new_witsml1__timeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__timeMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__timeMeasure * soap_new_req_witsml1__timeMeasure(
	struct soap *soap,
	enum witsml1__TimeUom uom,
	double __item1)
{
	witsml1__timeMeasure *_p = soap_new_witsml1__timeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__timeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__timeMeasure * soap_new_set_witsml1__timeMeasure(
	struct soap *soap,
	enum witsml1__TimeUom uom,
	double __item1)
{
	witsml1__timeMeasure *_p = soap_new_witsml1__timeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__timeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__timeMeasure(struct soap *soap, witsml1__timeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:timeMeasure", "witsml1:timeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__timeMeasure * SOAP_FMAC4 soap_get_witsml1__timeMeasure(struct soap*, witsml1__timeMeasure *, const char*, const char*);

inline int soap_read_witsml1__timeMeasure(struct soap *soap, witsml1__timeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__timeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermodynamicTemperatureMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermodynamicTemperatureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__thermodynamicTemperatureMeasure(struct soap*, const char*, int, const witsml1__thermodynamicTemperatureMeasure *, const char*);
SOAP_FMAC3 witsml1__thermodynamicTemperatureMeasure * SOAP_FMAC4 soap_in_witsml1__thermodynamicTemperatureMeasure(struct soap*, const char*, witsml1__thermodynamicTemperatureMeasure *, const char*);
SOAP_FMAC1 witsml1__thermodynamicTemperatureMeasure * SOAP_FMAC2 soap_instantiate_witsml1__thermodynamicTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__thermodynamicTemperatureMeasure * soap_new_witsml1__thermodynamicTemperatureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__thermodynamicTemperatureMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__thermodynamicTemperatureMeasure * soap_new_req_witsml1__thermodynamicTemperatureMeasure(
	struct soap *soap,
	enum witsml1__ThermodynamicTemperatureUom uom,
	double __item1)
{
	witsml1__thermodynamicTemperatureMeasure *_p = soap_new_witsml1__thermodynamicTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__thermodynamicTemperatureMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__thermodynamicTemperatureMeasure * soap_new_set_witsml1__thermodynamicTemperatureMeasure(
	struct soap *soap,
	enum witsml1__ThermodynamicTemperatureUom uom,
	double __item1)
{
	witsml1__thermodynamicTemperatureMeasure *_p = soap_new_witsml1__thermodynamicTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__thermodynamicTemperatureMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__thermodynamicTemperatureMeasure(struct soap *soap, witsml1__thermodynamicTemperatureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:thermodynamicTemperatureMeasure", "witsml1:thermodynamicTemperatureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__thermodynamicTemperatureMeasure * SOAP_FMAC4 soap_get_witsml1__thermodynamicTemperatureMeasure(struct soap*, witsml1__thermodynamicTemperatureMeasure *, const char*, const char*);

inline int soap_read_witsml1__thermodynamicTemperatureMeasure(struct soap *soap, witsml1__thermodynamicTemperatureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__thermodynamicTemperatureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalVolumetricExpansionMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalVolumetricExpansionMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__thermalVolumetricExpansionMeasure(struct soap*, const char*, int, const witsml1__thermalVolumetricExpansionMeasure *, const char*);
SOAP_FMAC3 witsml1__thermalVolumetricExpansionMeasure * SOAP_FMAC4 soap_in_witsml1__thermalVolumetricExpansionMeasure(struct soap*, const char*, witsml1__thermalVolumetricExpansionMeasure *, const char*);
SOAP_FMAC1 witsml1__thermalVolumetricExpansionMeasure * SOAP_FMAC2 soap_instantiate_witsml1__thermalVolumetricExpansionMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__thermalVolumetricExpansionMeasure * soap_new_witsml1__thermalVolumetricExpansionMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__thermalVolumetricExpansionMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__thermalVolumetricExpansionMeasure * soap_new_req_witsml1__thermalVolumetricExpansionMeasure(
	struct soap *soap,
	enum witsml1__ThermalVolumetricExpansionUom uom,
	double __item1)
{
	witsml1__thermalVolumetricExpansionMeasure *_p = soap_new_witsml1__thermalVolumetricExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__thermalVolumetricExpansionMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__thermalVolumetricExpansionMeasure * soap_new_set_witsml1__thermalVolumetricExpansionMeasure(
	struct soap *soap,
	enum witsml1__ThermalVolumetricExpansionUom uom,
	double __item1)
{
	witsml1__thermalVolumetricExpansionMeasure *_p = soap_new_witsml1__thermalVolumetricExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__thermalVolumetricExpansionMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__thermalVolumetricExpansionMeasure(struct soap *soap, witsml1__thermalVolumetricExpansionMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:thermalVolumetricExpansionMeasure", "witsml1:thermalVolumetricExpansionMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__thermalVolumetricExpansionMeasure * SOAP_FMAC4 soap_get_witsml1__thermalVolumetricExpansionMeasure(struct soap*, witsml1__thermalVolumetricExpansionMeasure *, const char*, const char*);

inline int soap_read_witsml1__thermalVolumetricExpansionMeasure(struct soap *soap, witsml1__thermalVolumetricExpansionMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__thermalVolumetricExpansionMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalConductivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__thermalConductivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__thermalConductivityMeasure(struct soap*, const char*, int, const witsml1__thermalConductivityMeasure *, const char*);
SOAP_FMAC3 witsml1__thermalConductivityMeasure * SOAP_FMAC4 soap_in_witsml1__thermalConductivityMeasure(struct soap*, const char*, witsml1__thermalConductivityMeasure *, const char*);
SOAP_FMAC1 witsml1__thermalConductivityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__thermalConductivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__thermalConductivityMeasure * soap_new_witsml1__thermalConductivityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__thermalConductivityMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__thermalConductivityMeasure * soap_new_req_witsml1__thermalConductivityMeasure(
	struct soap *soap,
	enum witsml1__ThermalConductivityUom uom,
	double __item1)
{
	witsml1__thermalConductivityMeasure *_p = soap_new_witsml1__thermalConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__thermalConductivityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__thermalConductivityMeasure * soap_new_set_witsml1__thermalConductivityMeasure(
	struct soap *soap,
	enum witsml1__ThermalConductivityUom uom,
	double __item1)
{
	witsml1__thermalConductivityMeasure *_p = soap_new_witsml1__thermalConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__thermalConductivityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__thermalConductivityMeasure(struct soap *soap, witsml1__thermalConductivityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:thermalConductivityMeasure", "witsml1:thermalConductivityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__thermalConductivityMeasure * SOAP_FMAC4 soap_get_witsml1__thermalConductivityMeasure(struct soap*, witsml1__thermalConductivityMeasure *, const char*, const char*);

inline int soap_read_witsml1__thermalConductivityMeasure(struct soap *soap, witsml1__thermalConductivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__thermalConductivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__standardVolumePerTimeMeasure(struct soap*, const char*, int, const witsml1__standardVolumePerTimeMeasure *, const char*);
SOAP_FMAC3 witsml1__standardVolumePerTimeMeasure * SOAP_FMAC4 soap_in_witsml1__standardVolumePerTimeMeasure(struct soap*, const char*, witsml1__standardVolumePerTimeMeasure *, const char*);
SOAP_FMAC1 witsml1__standardVolumePerTimeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__standardVolumePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__standardVolumePerTimeMeasure * soap_new_witsml1__standardVolumePerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__standardVolumePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__standardVolumePerTimeMeasure * soap_new_req_witsml1__standardVolumePerTimeMeasure(
	struct soap *soap,
	enum witsml1__StandardVolumePerTimeUom uom,
	double __item1)
{
	witsml1__standardVolumePerTimeMeasure *_p = soap_new_witsml1__standardVolumePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__standardVolumePerTimeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__standardVolumePerTimeMeasure * soap_new_set_witsml1__standardVolumePerTimeMeasure(
	struct soap *soap,
	enum witsml1__StandardVolumePerTimeUom uom,
	double __item1)
{
	witsml1__standardVolumePerTimeMeasure *_p = soap_new_witsml1__standardVolumePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__standardVolumePerTimeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__standardVolumePerTimeMeasure(struct soap *soap, witsml1__standardVolumePerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:standardVolumePerTimeMeasure", "witsml1:standardVolumePerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__standardVolumePerTimeMeasure * SOAP_FMAC4 soap_get_witsml1__standardVolumePerTimeMeasure(struct soap*, witsml1__standardVolumePerTimeMeasure *, const char*, const char*);

inline int soap_read_witsml1__standardVolumePerTimeMeasure(struct soap *soap, witsml1__standardVolumePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__standardVolumePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__standardVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__standardVolumeMeasure(struct soap*, const char*, int, const witsml1__standardVolumeMeasure *, const char*);
SOAP_FMAC3 witsml1__standardVolumeMeasure * SOAP_FMAC4 soap_in_witsml1__standardVolumeMeasure(struct soap*, const char*, witsml1__standardVolumeMeasure *, const char*);
SOAP_FMAC1 witsml1__standardVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__standardVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__standardVolumeMeasure * soap_new_witsml1__standardVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__standardVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__standardVolumeMeasure * soap_new_req_witsml1__standardVolumeMeasure(
	struct soap *soap,
	enum witsml1__StandardVolumeUom uom,
	double __item1)
{
	witsml1__standardVolumeMeasure *_p = soap_new_witsml1__standardVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__standardVolumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__standardVolumeMeasure * soap_new_set_witsml1__standardVolumeMeasure(
	struct soap *soap,
	enum witsml1__StandardVolumeUom uom,
	double __item1)
{
	witsml1__standardVolumeMeasure *_p = soap_new_witsml1__standardVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__standardVolumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__standardVolumeMeasure(struct soap *soap, witsml1__standardVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:standardVolumeMeasure", "witsml1:standardVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__standardVolumeMeasure * SOAP_FMAC4 soap_get_witsml1__standardVolumeMeasure(struct soap*, witsml1__standardVolumeMeasure *, const char*, const char*);

inline int soap_read_witsml1__standardVolumeMeasure(struct soap *soap, witsml1__standardVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__standardVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__specificVolumeMeasure(struct soap*, const char*, int, const witsml1__specificVolumeMeasure *, const char*);
SOAP_FMAC3 witsml1__specificVolumeMeasure * SOAP_FMAC4 soap_in_witsml1__specificVolumeMeasure(struct soap*, const char*, witsml1__specificVolumeMeasure *, const char*);
SOAP_FMAC1 witsml1__specificVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__specificVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__specificVolumeMeasure * soap_new_witsml1__specificVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__specificVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__specificVolumeMeasure * soap_new_req_witsml1__specificVolumeMeasure(
	struct soap *soap,
	enum witsml1__SpecificVolumeUom uom,
	double __item1)
{
	witsml1__specificVolumeMeasure *_p = soap_new_witsml1__specificVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__specificVolumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__specificVolumeMeasure * soap_new_set_witsml1__specificVolumeMeasure(
	struct soap *soap,
	enum witsml1__SpecificVolumeUom uom,
	double __item1)
{
	witsml1__specificVolumeMeasure *_p = soap_new_witsml1__specificVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__specificVolumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__specificVolumeMeasure(struct soap *soap, witsml1__specificVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:specificVolumeMeasure", "witsml1:specificVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__specificVolumeMeasure * SOAP_FMAC4 soap_get_witsml1__specificVolumeMeasure(struct soap*, witsml1__specificVolumeMeasure *, const char*, const char*);

inline int soap_read_witsml1__specificVolumeMeasure(struct soap *soap, witsml1__specificVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__specificVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificHeatCapacityMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__specificHeatCapacityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__specificHeatCapacityMeasure(struct soap*, const char*, int, const witsml1__specificHeatCapacityMeasure *, const char*);
SOAP_FMAC3 witsml1__specificHeatCapacityMeasure * SOAP_FMAC4 soap_in_witsml1__specificHeatCapacityMeasure(struct soap*, const char*, witsml1__specificHeatCapacityMeasure *, const char*);
SOAP_FMAC1 witsml1__specificHeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__specificHeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__specificHeatCapacityMeasure * soap_new_witsml1__specificHeatCapacityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__specificHeatCapacityMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__specificHeatCapacityMeasure * soap_new_req_witsml1__specificHeatCapacityMeasure(
	struct soap *soap,
	enum witsml1__SpecificHeatCapacityUom uom,
	double __item1)
{
	witsml1__specificHeatCapacityMeasure *_p = soap_new_witsml1__specificHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__specificHeatCapacityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__specificHeatCapacityMeasure * soap_new_set_witsml1__specificHeatCapacityMeasure(
	struct soap *soap,
	enum witsml1__SpecificHeatCapacityUom uom,
	double __item1)
{
	witsml1__specificHeatCapacityMeasure *_p = soap_new_witsml1__specificHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__specificHeatCapacityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__specificHeatCapacityMeasure(struct soap *soap, witsml1__specificHeatCapacityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:specificHeatCapacityMeasure", "witsml1:specificHeatCapacityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__specificHeatCapacityMeasure * SOAP_FMAC4 soap_get_witsml1__specificHeatCapacityMeasure(struct soap*, witsml1__specificHeatCapacityMeasure *, const char*, const char*);

inline int soap_read_witsml1__specificHeatCapacityMeasure(struct soap *soap, witsml1__specificHeatCapacityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__specificHeatCapacityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__relativePowerMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__relativePowerMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__relativePowerMeasure(struct soap*, const char*, int, const witsml1__relativePowerMeasure *, const char*);
SOAP_FMAC3 witsml1__relativePowerMeasure * SOAP_FMAC4 soap_in_witsml1__relativePowerMeasure(struct soap*, const char*, witsml1__relativePowerMeasure *, const char*);
SOAP_FMAC1 witsml1__relativePowerMeasure * SOAP_FMAC2 soap_instantiate_witsml1__relativePowerMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__relativePowerMeasure * soap_new_witsml1__relativePowerMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__relativePowerMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__relativePowerMeasure * soap_new_req_witsml1__relativePowerMeasure(
	struct soap *soap,
	enum witsml1__RelativePowerUom uom,
	double __item1)
{
	witsml1__relativePowerMeasure *_p = soap_new_witsml1__relativePowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__relativePowerMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__relativePowerMeasure * soap_new_set_witsml1__relativePowerMeasure(
	struct soap *soap,
	enum witsml1__RelativePowerUom uom,
	double __item1)
{
	witsml1__relativePowerMeasure *_p = soap_new_witsml1__relativePowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__relativePowerMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__relativePowerMeasure(struct soap *soap, witsml1__relativePowerMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:relativePowerMeasure", "witsml1:relativePowerMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__relativePowerMeasure * SOAP_FMAC4 soap_get_witsml1__relativePowerMeasure(struct soap*, witsml1__relativePowerMeasure *, const char*, const char*);

inline int soap_read_witsml1__relativePowerMeasure(struct soap *soap, witsml1__relativePowerMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__relativePowerMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__pressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__pressureMeasure(struct soap*, const char*, int, const witsml1__pressureMeasure *, const char*);
SOAP_FMAC3 witsml1__pressureMeasure * SOAP_FMAC4 soap_in_witsml1__pressureMeasure(struct soap*, const char*, witsml1__pressureMeasure *, const char*);
SOAP_FMAC1 witsml1__pressureMeasure * SOAP_FMAC2 soap_instantiate_witsml1__pressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__pressureMeasure * soap_new_witsml1__pressureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__pressureMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__pressureMeasure * soap_new_req_witsml1__pressureMeasure(
	struct soap *soap,
	enum witsml1__PressureUom uom,
	double __item1)
{
	witsml1__pressureMeasure *_p = soap_new_witsml1__pressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__pressureMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__pressureMeasure * soap_new_set_witsml1__pressureMeasure(
	struct soap *soap,
	enum witsml1__PressureUom uom,
	double __item1)
{
	witsml1__pressureMeasure *_p = soap_new_witsml1__pressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__pressureMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__pressureMeasure(struct soap *soap, witsml1__pressureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:pressureMeasure", "witsml1:pressureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__pressureMeasure * SOAP_FMAC4 soap_get_witsml1__pressureMeasure(struct soap*, witsml1__pressureMeasure *, const char*, const char*);

inline int soap_read_witsml1__pressureMeasure(struct soap *soap, witsml1__pressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__pressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__powerMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__powerMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__powerMeasure(struct soap*, const char*, int, const witsml1__powerMeasure *, const char*);
SOAP_FMAC3 witsml1__powerMeasure * SOAP_FMAC4 soap_in_witsml1__powerMeasure(struct soap*, const char*, witsml1__powerMeasure *, const char*);
SOAP_FMAC1 witsml1__powerMeasure * SOAP_FMAC2 soap_instantiate_witsml1__powerMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__powerMeasure * soap_new_witsml1__powerMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__powerMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__powerMeasure * soap_new_req_witsml1__powerMeasure(
	struct soap *soap,
	enum witsml1__PowerUom uom,
	double __item1)
{
	witsml1__powerMeasure *_p = soap_new_witsml1__powerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__powerMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__powerMeasure * soap_new_set_witsml1__powerMeasure(
	struct soap *soap,
	enum witsml1__PowerUom uom,
	double __item1)
{
	witsml1__powerMeasure *_p = soap_new_witsml1__powerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__powerMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__powerMeasure(struct soap *soap, witsml1__powerMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:powerMeasure", "witsml1:powerMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__powerMeasure * SOAP_FMAC4 soap_get_witsml1__powerMeasure(struct soap*, witsml1__powerMeasure *, const char*, const char*);

inline int soap_read_witsml1__powerMeasure(struct soap *soap, witsml1__powerMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__powerMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__planeAngleMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__planeAngleMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__planeAngleMeasure(struct soap*, const char*, int, const witsml1__planeAngleMeasure *, const char*);
SOAP_FMAC3 witsml1__planeAngleMeasure * SOAP_FMAC4 soap_in_witsml1__planeAngleMeasure(struct soap*, const char*, witsml1__planeAngleMeasure *, const char*);
SOAP_FMAC1 witsml1__planeAngleMeasure * SOAP_FMAC2 soap_instantiate_witsml1__planeAngleMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__planeAngleMeasure * soap_new_witsml1__planeAngleMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__planeAngleMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__planeAngleMeasure * soap_new_req_witsml1__planeAngleMeasure(
	struct soap *soap,
	enum witsml1__PlaneAngleUom uom,
	double __item1)
{
	witsml1__planeAngleMeasure *_p = soap_new_witsml1__planeAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__planeAngleMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__planeAngleMeasure * soap_new_set_witsml1__planeAngleMeasure(
	struct soap *soap,
	enum witsml1__PlaneAngleUom uom,
	double __item1)
{
	witsml1__planeAngleMeasure *_p = soap_new_witsml1__planeAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__planeAngleMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__planeAngleMeasure(struct soap *soap, witsml1__planeAngleMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:planeAngleMeasure", "witsml1:planeAngleMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__planeAngleMeasure * SOAP_FMAC4 soap_get_witsml1__planeAngleMeasure(struct soap*, witsml1__planeAngleMeasure *, const char*, const char*);

inline int soap_read_witsml1__planeAngleMeasure(struct soap *soap, witsml1__planeAngleMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__planeAngleMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__permeabilityRockMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__permeabilityRockMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__permeabilityRockMeasure(struct soap*, const char*, int, const witsml1__permeabilityRockMeasure *, const char*);
SOAP_FMAC3 witsml1__permeabilityRockMeasure * SOAP_FMAC4 soap_in_witsml1__permeabilityRockMeasure(struct soap*, const char*, witsml1__permeabilityRockMeasure *, const char*);
SOAP_FMAC1 witsml1__permeabilityRockMeasure * SOAP_FMAC2 soap_instantiate_witsml1__permeabilityRockMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__permeabilityRockMeasure * soap_new_witsml1__permeabilityRockMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__permeabilityRockMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__permeabilityRockMeasure * soap_new_req_witsml1__permeabilityRockMeasure(
	struct soap *soap,
	enum witsml1__PermeabilityRockUom uom,
	double __item1)
{
	witsml1__permeabilityRockMeasure *_p = soap_new_witsml1__permeabilityRockMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__permeabilityRockMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__permeabilityRockMeasure * soap_new_set_witsml1__permeabilityRockMeasure(
	struct soap *soap,
	enum witsml1__PermeabilityRockUom uom,
	double __item1)
{
	witsml1__permeabilityRockMeasure *_p = soap_new_witsml1__permeabilityRockMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__permeabilityRockMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__permeabilityRockMeasure(struct soap *soap, witsml1__permeabilityRockMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:permeabilityRockMeasure", "witsml1:permeabilityRockMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__permeabilityRockMeasure * SOAP_FMAC4 soap_get_witsml1__permeabilityRockMeasure(struct soap*, witsml1__permeabilityRockMeasure *, const char*, const char*);

inline int soap_read_witsml1__permeabilityRockMeasure(struct soap *soap, witsml1__permeabilityRockMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__permeabilityRockMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__perLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__perLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__perLengthMeasure(struct soap*, const char*, int, const witsml1__perLengthMeasure *, const char*);
SOAP_FMAC3 witsml1__perLengthMeasure * SOAP_FMAC4 soap_in_witsml1__perLengthMeasure(struct soap*, const char*, witsml1__perLengthMeasure *, const char*);
SOAP_FMAC1 witsml1__perLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__perLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__perLengthMeasure * soap_new_witsml1__perLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__perLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__perLengthMeasure * soap_new_req_witsml1__perLengthMeasure(
	struct soap *soap,
	enum witsml1__PerLengthUom uom,
	double __item1)
{
	witsml1__perLengthMeasure *_p = soap_new_witsml1__perLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__perLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__perLengthMeasure * soap_new_set_witsml1__perLengthMeasure(
	struct soap *soap,
	enum witsml1__PerLengthUom uom,
	double __item1)
{
	witsml1__perLengthMeasure *_p = soap_new_witsml1__perLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__perLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__perLengthMeasure(struct soap *soap, witsml1__perLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:perLengthMeasure", "witsml1:perLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__perLengthMeasure * SOAP_FMAC4 soap_get_witsml1__perLengthMeasure(struct soap*, witsml1__perLengthMeasure *, const char*, const char*);

inline int soap_read_witsml1__perLengthMeasure(struct soap *soap, witsml1__perLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__perLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__momentOfForceMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__momentOfForceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__momentOfForceMeasure(struct soap*, const char*, int, const witsml1__momentOfForceMeasure *, const char*);
SOAP_FMAC3 witsml1__momentOfForceMeasure * SOAP_FMAC4 soap_in_witsml1__momentOfForceMeasure(struct soap*, const char*, witsml1__momentOfForceMeasure *, const char*);
SOAP_FMAC1 witsml1__momentOfForceMeasure * SOAP_FMAC2 soap_instantiate_witsml1__momentOfForceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__momentOfForceMeasure * soap_new_witsml1__momentOfForceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__momentOfForceMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__momentOfForceMeasure * soap_new_req_witsml1__momentOfForceMeasure(
	struct soap *soap,
	enum witsml1__MomentOfForceUom uom,
	double __item1)
{
	witsml1__momentOfForceMeasure *_p = soap_new_witsml1__momentOfForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__momentOfForceMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__momentOfForceMeasure * soap_new_set_witsml1__momentOfForceMeasure(
	struct soap *soap,
	enum witsml1__MomentOfForceUom uom,
	double __item1)
{
	witsml1__momentOfForceMeasure *_p = soap_new_witsml1__momentOfForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__momentOfForceMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__momentOfForceMeasure(struct soap *soap, witsml1__momentOfForceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:momentOfForceMeasure", "witsml1:momentOfForceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__momentOfForceMeasure * SOAP_FMAC4 soap_get_witsml1__momentOfForceMeasure(struct soap*, witsml1__momentOfForceMeasure *, const char*, const char*);

inline int soap_read_witsml1__momentOfForceMeasure(struct soap *soap, witsml1__momentOfForceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__momentOfForceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__massPerLengthMeasure(struct soap*, const char*, int, const witsml1__massPerLengthMeasure *, const char*);
SOAP_FMAC3 witsml1__massPerLengthMeasure * SOAP_FMAC4 soap_in_witsml1__massPerLengthMeasure(struct soap*, const char*, witsml1__massPerLengthMeasure *, const char*);
SOAP_FMAC1 witsml1__massPerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__massPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__massPerLengthMeasure * soap_new_witsml1__massPerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__massPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__massPerLengthMeasure * soap_new_req_witsml1__massPerLengthMeasure(
	struct soap *soap,
	enum witsml1__MassPerLengthUom uom,
	double __item1)
{
	witsml1__massPerLengthMeasure *_p = soap_new_witsml1__massPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__massPerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__massPerLengthMeasure * soap_new_set_witsml1__massPerLengthMeasure(
	struct soap *soap,
	enum witsml1__MassPerLengthUom uom,
	double __item1)
{
	witsml1__massPerLengthMeasure *_p = soap_new_witsml1__massPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__massPerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__massPerLengthMeasure(struct soap *soap, witsml1__massPerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:massPerLengthMeasure", "witsml1:massPerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__massPerLengthMeasure * SOAP_FMAC4 soap_get_witsml1__massPerLengthMeasure(struct soap*, witsml1__massPerLengthMeasure *, const char*, const char*);

inline int soap_read_witsml1__massPerLengthMeasure(struct soap *soap, witsml1__massPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__massPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__massMeasure(struct soap*, const char*, int, const witsml1__massMeasure *, const char*);
SOAP_FMAC3 witsml1__massMeasure * SOAP_FMAC4 soap_in_witsml1__massMeasure(struct soap*, const char*, witsml1__massMeasure *, const char*);
SOAP_FMAC1 witsml1__massMeasure * SOAP_FMAC2 soap_instantiate_witsml1__massMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__massMeasure * soap_new_witsml1__massMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__massMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__massMeasure * soap_new_req_witsml1__massMeasure(
	struct soap *soap,
	enum witsml1__MassUom uom,
	double __item1)
{
	witsml1__massMeasure *_p = soap_new_witsml1__massMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__massMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__massMeasure * soap_new_set_witsml1__massMeasure(
	struct soap *soap,
	enum witsml1__MassUom uom,
	double __item1)
{
	witsml1__massMeasure *_p = soap_new_witsml1__massMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__massMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__massMeasure(struct soap *soap, witsml1__massMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:massMeasure", "witsml1:massMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__massMeasure * SOAP_FMAC4 soap_get_witsml1__massMeasure(struct soap*, witsml1__massMeasure *, const char*, const char*);

inline int soap_read_witsml1__massMeasure(struct soap *soap, witsml1__massMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__massMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massConcentrationMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__massConcentrationMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__massConcentrationMeasure(struct soap*, const char*, int, const witsml1__massConcentrationMeasure *, const char*);
SOAP_FMAC3 witsml1__massConcentrationMeasure * SOAP_FMAC4 soap_in_witsml1__massConcentrationMeasure(struct soap*, const char*, witsml1__massConcentrationMeasure *, const char*);
SOAP_FMAC1 witsml1__massConcentrationMeasure * SOAP_FMAC2 soap_instantiate_witsml1__massConcentrationMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__massConcentrationMeasure * soap_new_witsml1__massConcentrationMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__massConcentrationMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__massConcentrationMeasure * soap_new_req_witsml1__massConcentrationMeasure(
	struct soap *soap,
	enum witsml1__MassConcentrationUom uom,
	double __item1)
{
	witsml1__massConcentrationMeasure *_p = soap_new_witsml1__massConcentrationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__massConcentrationMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__massConcentrationMeasure * soap_new_set_witsml1__massConcentrationMeasure(
	struct soap *soap,
	enum witsml1__MassConcentrationUom uom,
	double __item1)
{
	witsml1__massConcentrationMeasure *_p = soap_new_witsml1__massConcentrationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__massConcentrationMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__massConcentrationMeasure(struct soap *soap, witsml1__massConcentrationMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:massConcentrationMeasure", "witsml1:massConcentrationMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__massConcentrationMeasure * SOAP_FMAC4 soap_get_witsml1__massConcentrationMeasure(struct soap*, witsml1__massConcentrationMeasure *, const char*, const char*);

inline int soap_read_witsml1__massConcentrationMeasure(struct soap *soap, witsml1__massConcentrationMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__massConcentrationMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__magneticInductionMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__magneticInductionMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__magneticInductionMeasure(struct soap*, const char*, int, const witsml1__magneticInductionMeasure *, const char*);
SOAP_FMAC3 witsml1__magneticInductionMeasure * SOAP_FMAC4 soap_in_witsml1__magneticInductionMeasure(struct soap*, const char*, witsml1__magneticInductionMeasure *, const char*);
SOAP_FMAC1 witsml1__magneticInductionMeasure * SOAP_FMAC2 soap_instantiate_witsml1__magneticInductionMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__magneticInductionMeasure * soap_new_witsml1__magneticInductionMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__magneticInductionMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__magneticInductionMeasure * soap_new_req_witsml1__magneticInductionMeasure(
	struct soap *soap,
	enum witsml1__MagneticInductionUom uom,
	double __item1)
{
	witsml1__magneticInductionMeasure *_p = soap_new_witsml1__magneticInductionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__magneticInductionMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__magneticInductionMeasure * soap_new_set_witsml1__magneticInductionMeasure(
	struct soap *soap,
	enum witsml1__MagneticInductionUom uom,
	double __item1)
{
	witsml1__magneticInductionMeasure *_p = soap_new_witsml1__magneticInductionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__magneticInductionMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__magneticInductionMeasure(struct soap *soap, witsml1__magneticInductionMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:magneticInductionMeasure", "witsml1:magneticInductionMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__magneticInductionMeasure * SOAP_FMAC4 soap_get_witsml1__magneticInductionMeasure(struct soap*, witsml1__magneticInductionMeasure *, const char*, const char*);

inline int soap_read_witsml1__magneticInductionMeasure(struct soap *soap, witsml1__magneticInductionMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__magneticInductionMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__lengthPerLengthMeasure(struct soap*, const char*, int, const witsml1__lengthPerLengthMeasure *, const char*);
SOAP_FMAC3 witsml1__lengthPerLengthMeasure * SOAP_FMAC4 soap_in_witsml1__lengthPerLengthMeasure(struct soap*, const char*, witsml1__lengthPerLengthMeasure *, const char*);
SOAP_FMAC1 witsml1__lengthPerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__lengthPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__lengthPerLengthMeasure * soap_new_witsml1__lengthPerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__lengthPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__lengthPerLengthMeasure * soap_new_req_witsml1__lengthPerLengthMeasure(
	struct soap *soap,
	enum witsml1__LengthPerLengthUom uom,
	double __item1)
{
	witsml1__lengthPerLengthMeasure *_p = soap_new_witsml1__lengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__lengthPerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__lengthPerLengthMeasure * soap_new_set_witsml1__lengthPerLengthMeasure(
	struct soap *soap,
	enum witsml1__LengthPerLengthUom uom,
	double __item1)
{
	witsml1__lengthPerLengthMeasure *_p = soap_new_witsml1__lengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__lengthPerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__lengthPerLengthMeasure(struct soap *soap, witsml1__lengthPerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:lengthPerLengthMeasure", "witsml1:lengthPerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__lengthPerLengthMeasure * SOAP_FMAC4 soap_get_witsml1__lengthPerLengthMeasure(struct soap*, witsml1__lengthPerLengthMeasure *, const char*, const char*);

inline int soap_read_witsml1__lengthPerLengthMeasure(struct soap *soap, witsml1__lengthPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__lengthPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__lengthMeasure(struct soap*, const char*, int, const witsml1__lengthMeasure *, const char*);
SOAP_FMAC3 witsml1__lengthMeasure * SOAP_FMAC4 soap_in_witsml1__lengthMeasure(struct soap*, const char*, witsml1__lengthMeasure *, const char*);
SOAP_FMAC1 witsml1__lengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__lengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__lengthMeasure * soap_new_witsml1__lengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__lengthMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__lengthMeasure * soap_new_req_witsml1__lengthMeasure(
	struct soap *soap,
	enum witsml1__LengthUom uom,
	double __item1)
{
	witsml1__lengthMeasure *_p = soap_new_witsml1__lengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__lengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__lengthMeasure * soap_new_set_witsml1__lengthMeasure(
	struct soap *soap,
	enum witsml1__LengthUom uom,
	double __item1)
{
	witsml1__lengthMeasure *_p = soap_new_witsml1__lengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__lengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__lengthMeasure(struct soap *soap, witsml1__lengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:lengthMeasure", "witsml1:lengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__lengthMeasure * SOAP_FMAC4 soap_get_witsml1__lengthMeasure(struct soap*, witsml1__lengthMeasure *, const char*, const char*);

inline int soap_read_witsml1__lengthMeasure(struct soap *soap, witsml1__lengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__lengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__illuminanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__illuminanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__illuminanceMeasure(struct soap*, const char*, int, const witsml1__illuminanceMeasure *, const char*);
SOAP_FMAC3 witsml1__illuminanceMeasure * SOAP_FMAC4 soap_in_witsml1__illuminanceMeasure(struct soap*, const char*, witsml1__illuminanceMeasure *, const char*);
SOAP_FMAC1 witsml1__illuminanceMeasure * SOAP_FMAC2 soap_instantiate_witsml1__illuminanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__illuminanceMeasure * soap_new_witsml1__illuminanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__illuminanceMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__illuminanceMeasure * soap_new_req_witsml1__illuminanceMeasure(
	struct soap *soap,
	enum witsml1__IlluminanceUom uom,
	double __item1)
{
	witsml1__illuminanceMeasure *_p = soap_new_witsml1__illuminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__illuminanceMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__illuminanceMeasure * soap_new_set_witsml1__illuminanceMeasure(
	struct soap *soap,
	enum witsml1__IlluminanceUom uom,
	double __item1)
{
	witsml1__illuminanceMeasure *_p = soap_new_witsml1__illuminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__illuminanceMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__illuminanceMeasure(struct soap *soap, witsml1__illuminanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:illuminanceMeasure", "witsml1:illuminanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__illuminanceMeasure * SOAP_FMAC4 soap_get_witsml1__illuminanceMeasure(struct soap*, witsml1__illuminanceMeasure *, const char*, const char*);

inline int soap_read_witsml1__illuminanceMeasure(struct soap *soap, witsml1__illuminanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__illuminanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__forcePerVolumeMeasure(struct soap*, const char*, int, const witsml1__forcePerVolumeMeasure *, const char*);
SOAP_FMAC3 witsml1__forcePerVolumeMeasure * SOAP_FMAC4 soap_in_witsml1__forcePerVolumeMeasure(struct soap*, const char*, witsml1__forcePerVolumeMeasure *, const char*);
SOAP_FMAC1 witsml1__forcePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__forcePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__forcePerVolumeMeasure * soap_new_witsml1__forcePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__forcePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__forcePerVolumeMeasure * soap_new_req_witsml1__forcePerVolumeMeasure(
	struct soap *soap,
	enum witsml1__ForcePerVolumeUom uom,
	double __item1)
{
	witsml1__forcePerVolumeMeasure *_p = soap_new_witsml1__forcePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__forcePerVolumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__forcePerVolumeMeasure * soap_new_set_witsml1__forcePerVolumeMeasure(
	struct soap *soap,
	enum witsml1__ForcePerVolumeUom uom,
	double __item1)
{
	witsml1__forcePerVolumeMeasure *_p = soap_new_witsml1__forcePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__forcePerVolumeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__forcePerVolumeMeasure(struct soap *soap, witsml1__forcePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:forcePerVolumeMeasure", "witsml1:forcePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__forcePerVolumeMeasure * SOAP_FMAC4 soap_get_witsml1__forcePerVolumeMeasure(struct soap*, witsml1__forcePerVolumeMeasure *, const char*, const char*);

inline int soap_read_witsml1__forcePerVolumeMeasure(struct soap *soap, witsml1__forcePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__forcePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forcePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__forcePerLengthMeasure(struct soap*, const char*, int, const witsml1__forcePerLengthMeasure *, const char*);
SOAP_FMAC3 witsml1__forcePerLengthMeasure * SOAP_FMAC4 soap_in_witsml1__forcePerLengthMeasure(struct soap*, const char*, witsml1__forcePerLengthMeasure *, const char*);
SOAP_FMAC1 witsml1__forcePerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__forcePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__forcePerLengthMeasure * soap_new_witsml1__forcePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__forcePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__forcePerLengthMeasure * soap_new_req_witsml1__forcePerLengthMeasure(
	struct soap *soap,
	enum witsml1__ForcePerLengthUom uom,
	double __item1)
{
	witsml1__forcePerLengthMeasure *_p = soap_new_witsml1__forcePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__forcePerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__forcePerLengthMeasure * soap_new_set_witsml1__forcePerLengthMeasure(
	struct soap *soap,
	enum witsml1__ForcePerLengthUom uom,
	double __item1)
{
	witsml1__forcePerLengthMeasure *_p = soap_new_witsml1__forcePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__forcePerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__forcePerLengthMeasure(struct soap *soap, witsml1__forcePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:forcePerLengthMeasure", "witsml1:forcePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__forcePerLengthMeasure * SOAP_FMAC4 soap_get_witsml1__forcePerLengthMeasure(struct soap*, witsml1__forcePerLengthMeasure *, const char*, const char*);

inline int soap_read_witsml1__forcePerLengthMeasure(struct soap *soap, witsml1__forcePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__forcePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forceMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__forceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__forceMeasure(struct soap*, const char*, int, const witsml1__forceMeasure *, const char*);
SOAP_FMAC3 witsml1__forceMeasure * SOAP_FMAC4 soap_in_witsml1__forceMeasure(struct soap*, const char*, witsml1__forceMeasure *, const char*);
SOAP_FMAC1 witsml1__forceMeasure * SOAP_FMAC2 soap_instantiate_witsml1__forceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__forceMeasure * soap_new_witsml1__forceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__forceMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__forceMeasure * soap_new_req_witsml1__forceMeasure(
	struct soap *soap,
	enum witsml1__ForceUom uom,
	double __item1)
{
	witsml1__forceMeasure *_p = soap_new_witsml1__forceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__forceMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__forceMeasure * soap_new_set_witsml1__forceMeasure(
	struct soap *soap,
	enum witsml1__ForceUom uom,
	double __item1)
{
	witsml1__forceMeasure *_p = soap_new_witsml1__forceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__forceMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__forceMeasure(struct soap *soap, witsml1__forceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:forceMeasure", "witsml1:forceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__forceMeasure * SOAP_FMAC4 soap_get_witsml1__forceMeasure(struct soap*, witsml1__forceMeasure *, const char*, const char*);

inline int soap_read_witsml1__forceMeasure(struct soap *soap, witsml1__forceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__forceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__equivalentPerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__equivalentPerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__equivalentPerMassMeasure(struct soap*, const char*, int, const witsml1__equivalentPerMassMeasure *, const char*);
SOAP_FMAC3 witsml1__equivalentPerMassMeasure * SOAP_FMAC4 soap_in_witsml1__equivalentPerMassMeasure(struct soap*, const char*, witsml1__equivalentPerMassMeasure *, const char*);
SOAP_FMAC1 witsml1__equivalentPerMassMeasure * SOAP_FMAC2 soap_instantiate_witsml1__equivalentPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__equivalentPerMassMeasure * soap_new_witsml1__equivalentPerMassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__equivalentPerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__equivalentPerMassMeasure * soap_new_req_witsml1__equivalentPerMassMeasure(
	struct soap *soap,
	enum witsml1__EquivalentPerMassUom uom,
	double __item1)
{
	witsml1__equivalentPerMassMeasure *_p = soap_new_witsml1__equivalentPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__equivalentPerMassMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__equivalentPerMassMeasure * soap_new_set_witsml1__equivalentPerMassMeasure(
	struct soap *soap,
	enum witsml1__EquivalentPerMassUom uom,
	double __item1)
{
	witsml1__equivalentPerMassMeasure *_p = soap_new_witsml1__equivalentPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__equivalentPerMassMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__equivalentPerMassMeasure(struct soap *soap, witsml1__equivalentPerMassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:equivalentPerMassMeasure", "witsml1:equivalentPerMassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__equivalentPerMassMeasure * SOAP_FMAC4 soap_get_witsml1__equivalentPerMassMeasure(struct soap*, witsml1__equivalentPerMassMeasure *, const char*, const char*);

inline int soap_read_witsml1__equivalentPerMassMeasure(struct soap *soap, witsml1__equivalentPerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__equivalentPerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricPotentialMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricPotentialMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__electricPotentialMeasure(struct soap*, const char*, int, const witsml1__electricPotentialMeasure *, const char*);
SOAP_FMAC3 witsml1__electricPotentialMeasure * SOAP_FMAC4 soap_in_witsml1__electricPotentialMeasure(struct soap*, const char*, witsml1__electricPotentialMeasure *, const char*);
SOAP_FMAC1 witsml1__electricPotentialMeasure * SOAP_FMAC2 soap_instantiate_witsml1__electricPotentialMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__electricPotentialMeasure * soap_new_witsml1__electricPotentialMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__electricPotentialMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__electricPotentialMeasure * soap_new_req_witsml1__electricPotentialMeasure(
	struct soap *soap,
	enum witsml1__ElectricPotentialUom uom,
	double __item1)
{
	witsml1__electricPotentialMeasure *_p = soap_new_witsml1__electricPotentialMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__electricPotentialMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__electricPotentialMeasure * soap_new_set_witsml1__electricPotentialMeasure(
	struct soap *soap,
	enum witsml1__ElectricPotentialUom uom,
	double __item1)
{
	witsml1__electricPotentialMeasure *_p = soap_new_witsml1__electricPotentialMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__electricPotentialMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__electricPotentialMeasure(struct soap *soap, witsml1__electricPotentialMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:electricPotentialMeasure", "witsml1:electricPotentialMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__electricPotentialMeasure * SOAP_FMAC4 soap_get_witsml1__electricPotentialMeasure(struct soap*, witsml1__electricPotentialMeasure *, const char*, const char*);

inline int soap_read_witsml1__electricPotentialMeasure(struct soap *soap, witsml1__electricPotentialMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__electricPotentialMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricCurrentMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__electricCurrentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__electricCurrentMeasure(struct soap*, const char*, int, const witsml1__electricCurrentMeasure *, const char*);
SOAP_FMAC3 witsml1__electricCurrentMeasure * SOAP_FMAC4 soap_in_witsml1__electricCurrentMeasure(struct soap*, const char*, witsml1__electricCurrentMeasure *, const char*);
SOAP_FMAC1 witsml1__electricCurrentMeasure * SOAP_FMAC2 soap_instantiate_witsml1__electricCurrentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__electricCurrentMeasure * soap_new_witsml1__electricCurrentMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__electricCurrentMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__electricCurrentMeasure * soap_new_req_witsml1__electricCurrentMeasure(
	struct soap *soap,
	enum witsml1__ElectricCurrentUom uom,
	double __item1)
{
	witsml1__electricCurrentMeasure *_p = soap_new_witsml1__electricCurrentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__electricCurrentMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__electricCurrentMeasure * soap_new_set_witsml1__electricCurrentMeasure(
	struct soap *soap,
	enum witsml1__ElectricCurrentUom uom,
	double __item1)
{
	witsml1__electricCurrentMeasure *_p = soap_new_witsml1__electricCurrentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__electricCurrentMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__electricCurrentMeasure(struct soap *soap, witsml1__electricCurrentMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:electricCurrentMeasure", "witsml1:electricCurrentMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__electricCurrentMeasure * SOAP_FMAC4 soap_get_witsml1__electricCurrentMeasure(struct soap*, witsml1__electricCurrentMeasure *, const char*, const char*);

inline int soap_read_witsml1__electricCurrentMeasure(struct soap *soap, witsml1__electricCurrentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__electricCurrentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dynamicViscosityMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dynamicViscosityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__dynamicViscosityMeasure(struct soap*, const char*, int, const witsml1__dynamicViscosityMeasure *, const char*);
SOAP_FMAC3 witsml1__dynamicViscosityMeasure * SOAP_FMAC4 soap_in_witsml1__dynamicViscosityMeasure(struct soap*, const char*, witsml1__dynamicViscosityMeasure *, const char*);
SOAP_FMAC1 witsml1__dynamicViscosityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__dynamicViscosityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__dynamicViscosityMeasure * soap_new_witsml1__dynamicViscosityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__dynamicViscosityMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__dynamicViscosityMeasure * soap_new_req_witsml1__dynamicViscosityMeasure(
	struct soap *soap,
	enum witsml1__DynamicViscosityUom uom,
	double __item1)
{
	witsml1__dynamicViscosityMeasure *_p = soap_new_witsml1__dynamicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__dynamicViscosityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__dynamicViscosityMeasure * soap_new_set_witsml1__dynamicViscosityMeasure(
	struct soap *soap,
	enum witsml1__DynamicViscosityUom uom,
	double __item1)
{
	witsml1__dynamicViscosityMeasure *_p = soap_new_witsml1__dynamicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__dynamicViscosityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__dynamicViscosityMeasure(struct soap *soap, witsml1__dynamicViscosityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:dynamicViscosityMeasure", "witsml1:dynamicViscosityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__dynamicViscosityMeasure * SOAP_FMAC4 soap_get_witsml1__dynamicViscosityMeasure(struct soap*, witsml1__dynamicViscosityMeasure *, const char*, const char*);

inline int soap_read_witsml1__dynamicViscosityMeasure(struct soap *soap, witsml1__dynamicViscosityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__dynamicViscosityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dimensionlessMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__dimensionlessMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__dimensionlessMeasure(struct soap*, const char*, int, const witsml1__dimensionlessMeasure *, const char*);
SOAP_FMAC3 witsml1__dimensionlessMeasure * SOAP_FMAC4 soap_in_witsml1__dimensionlessMeasure(struct soap*, const char*, witsml1__dimensionlessMeasure *, const char*);
SOAP_FMAC1 witsml1__dimensionlessMeasure * SOAP_FMAC2 soap_instantiate_witsml1__dimensionlessMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__dimensionlessMeasure * soap_new_witsml1__dimensionlessMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__dimensionlessMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__dimensionlessMeasure * soap_new_req_witsml1__dimensionlessMeasure(
	struct soap *soap,
	enum witsml1__DimensionlessUom uom,
	double __item1)
{
	witsml1__dimensionlessMeasure *_p = soap_new_witsml1__dimensionlessMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__dimensionlessMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__dimensionlessMeasure * soap_new_set_witsml1__dimensionlessMeasure(
	struct soap *soap,
	enum witsml1__DimensionlessUom uom,
	double __item1)
{
	witsml1__dimensionlessMeasure *_p = soap_new_witsml1__dimensionlessMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__dimensionlessMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__dimensionlessMeasure(struct soap *soap, witsml1__dimensionlessMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:dimensionlessMeasure", "witsml1:dimensionlessMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__dimensionlessMeasure * SOAP_FMAC4 soap_get_witsml1__dimensionlessMeasure(struct soap*, witsml1__dimensionlessMeasure *, const char*, const char*);

inline int soap_read_witsml1__dimensionlessMeasure(struct soap *soap, witsml1__dimensionlessMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__dimensionlessMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__densityMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__densityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__densityMeasure(struct soap*, const char*, int, const witsml1__densityMeasure *, const char*);
SOAP_FMAC3 witsml1__densityMeasure * SOAP_FMAC4 soap_in_witsml1__densityMeasure(struct soap*, const char*, witsml1__densityMeasure *, const char*);
SOAP_FMAC1 witsml1__densityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__densityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__densityMeasure * soap_new_witsml1__densityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__densityMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__densityMeasure * soap_new_req_witsml1__densityMeasure(
	struct soap *soap,
	enum witsml1__DensityUom uom,
	double __item1)
{
	witsml1__densityMeasure *_p = soap_new_witsml1__densityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__densityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__densityMeasure * soap_new_set_witsml1__densityMeasure(
	struct soap *soap,
	enum witsml1__DensityUom uom,
	double __item1)
{
	witsml1__densityMeasure *_p = soap_new_witsml1__densityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__densityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__densityMeasure(struct soap *soap, witsml1__densityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:densityMeasure", "witsml1:densityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__densityMeasure * SOAP_FMAC4 soap_get_witsml1__densityMeasure(struct soap*, witsml1__densityMeasure *, const char*, const char*);

inline int soap_read_witsml1__densityMeasure(struct soap *soap, witsml1__densityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__densityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__compressibilityMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__compressibilityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__compressibilityMeasure(struct soap*, const char*, int, const witsml1__compressibilityMeasure *, const char*);
SOAP_FMAC3 witsml1__compressibilityMeasure * SOAP_FMAC4 soap_in_witsml1__compressibilityMeasure(struct soap*, const char*, witsml1__compressibilityMeasure *, const char*);
SOAP_FMAC1 witsml1__compressibilityMeasure * SOAP_FMAC2 soap_instantiate_witsml1__compressibilityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__compressibilityMeasure * soap_new_witsml1__compressibilityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__compressibilityMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__compressibilityMeasure * soap_new_req_witsml1__compressibilityMeasure(
	struct soap *soap,
	enum witsml1__CompressibilityUom uom,
	double __item1)
{
	witsml1__compressibilityMeasure *_p = soap_new_witsml1__compressibilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__compressibilityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__compressibilityMeasure * soap_new_set_witsml1__compressibilityMeasure(
	struct soap *soap,
	enum witsml1__CompressibilityUom uom,
	double __item1)
{
	witsml1__compressibilityMeasure *_p = soap_new_witsml1__compressibilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__compressibilityMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__compressibilityMeasure(struct soap *soap, witsml1__compressibilityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:compressibilityMeasure", "witsml1:compressibilityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__compressibilityMeasure * SOAP_FMAC4 soap_get_witsml1__compressibilityMeasure(struct soap*, witsml1__compressibilityMeasure *, const char*, const char*);

inline int soap_read_witsml1__compressibilityMeasure(struct soap *soap, witsml1__compressibilityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__compressibilityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__areaPerAreaMeasure(struct soap*, const char*, int, const witsml1__areaPerAreaMeasure *, const char*);
SOAP_FMAC3 witsml1__areaPerAreaMeasure * SOAP_FMAC4 soap_in_witsml1__areaPerAreaMeasure(struct soap*, const char*, witsml1__areaPerAreaMeasure *, const char*);
SOAP_FMAC1 witsml1__areaPerAreaMeasure * SOAP_FMAC2 soap_instantiate_witsml1__areaPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__areaPerAreaMeasure * soap_new_witsml1__areaPerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__areaPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__areaPerAreaMeasure * soap_new_req_witsml1__areaPerAreaMeasure(
	struct soap *soap,
	enum witsml1__AreaPerAreaUom uom,
	double __item1)
{
	witsml1__areaPerAreaMeasure *_p = soap_new_witsml1__areaPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__areaPerAreaMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__areaPerAreaMeasure * soap_new_set_witsml1__areaPerAreaMeasure(
	struct soap *soap,
	enum witsml1__AreaPerAreaUom uom,
	double __item1)
{
	witsml1__areaPerAreaMeasure *_p = soap_new_witsml1__areaPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__areaPerAreaMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__areaPerAreaMeasure(struct soap *soap, witsml1__areaPerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:areaPerAreaMeasure", "witsml1:areaPerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__areaPerAreaMeasure * SOAP_FMAC4 soap_get_witsml1__areaPerAreaMeasure(struct soap*, witsml1__areaPerAreaMeasure *, const char*, const char*);

inline int soap_read_witsml1__areaPerAreaMeasure(struct soap *soap, witsml1__areaPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__areaPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__areaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__areaMeasure(struct soap*, const char*, int, const witsml1__areaMeasure *, const char*);
SOAP_FMAC3 witsml1__areaMeasure * SOAP_FMAC4 soap_in_witsml1__areaMeasure(struct soap*, const char*, witsml1__areaMeasure *, const char*);
SOAP_FMAC1 witsml1__areaMeasure * SOAP_FMAC2 soap_instantiate_witsml1__areaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__areaMeasure * soap_new_witsml1__areaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__areaMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__areaMeasure * soap_new_req_witsml1__areaMeasure(
	struct soap *soap,
	enum witsml1__AreaUom uom,
	double __item1)
{
	witsml1__areaMeasure *_p = soap_new_witsml1__areaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__areaMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__areaMeasure * soap_new_set_witsml1__areaMeasure(
	struct soap *soap,
	enum witsml1__AreaUom uom,
	double __item1)
{
	witsml1__areaMeasure *_p = soap_new_witsml1__areaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__areaMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__areaMeasure(struct soap *soap, witsml1__areaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:areaMeasure", "witsml1:areaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__areaMeasure * SOAP_FMAC4 soap_get_witsml1__areaMeasure(struct soap*, witsml1__areaMeasure *, const char*, const char*);

inline int soap_read_witsml1__areaMeasure(struct soap *soap, witsml1__areaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__areaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__anglePerTimeMeasure(struct soap*, const char*, int, const witsml1__anglePerTimeMeasure *, const char*);
SOAP_FMAC3 witsml1__anglePerTimeMeasure * SOAP_FMAC4 soap_in_witsml1__anglePerTimeMeasure(struct soap*, const char*, witsml1__anglePerTimeMeasure *, const char*);
SOAP_FMAC1 witsml1__anglePerTimeMeasure * SOAP_FMAC2 soap_instantiate_witsml1__anglePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__anglePerTimeMeasure * soap_new_witsml1__anglePerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__anglePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__anglePerTimeMeasure * soap_new_req_witsml1__anglePerTimeMeasure(
	struct soap *soap,
	enum witsml1__AnglePerTimeUom uom,
	double __item1)
{
	witsml1__anglePerTimeMeasure *_p = soap_new_witsml1__anglePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__anglePerTimeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__anglePerTimeMeasure * soap_new_set_witsml1__anglePerTimeMeasure(
	struct soap *soap,
	enum witsml1__AnglePerTimeUom uom,
	double __item1)
{
	witsml1__anglePerTimeMeasure *_p = soap_new_witsml1__anglePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__anglePerTimeMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__anglePerTimeMeasure(struct soap *soap, witsml1__anglePerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:anglePerTimeMeasure", "witsml1:anglePerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__anglePerTimeMeasure * SOAP_FMAC4 soap_get_witsml1__anglePerTimeMeasure(struct soap*, witsml1__anglePerTimeMeasure *, const char*, const char*);

inline int soap_read_witsml1__anglePerTimeMeasure(struct soap *soap, witsml1__anglePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__anglePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__anglePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__anglePerLengthMeasure(struct soap*, const char*, int, const witsml1__anglePerLengthMeasure *, const char*);
SOAP_FMAC3 witsml1__anglePerLengthMeasure * SOAP_FMAC4 soap_in_witsml1__anglePerLengthMeasure(struct soap*, const char*, witsml1__anglePerLengthMeasure *, const char*);
SOAP_FMAC1 witsml1__anglePerLengthMeasure * SOAP_FMAC2 soap_instantiate_witsml1__anglePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__anglePerLengthMeasure * soap_new_witsml1__anglePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__anglePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__anglePerLengthMeasure * soap_new_req_witsml1__anglePerLengthMeasure(
	struct soap *soap,
	enum witsml1__AnglePerLengthUom uom,
	double __item1)
{
	witsml1__anglePerLengthMeasure *_p = soap_new_witsml1__anglePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__anglePerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__anglePerLengthMeasure * soap_new_set_witsml1__anglePerLengthMeasure(
	struct soap *soap,
	enum witsml1__AnglePerLengthUom uom,
	double __item1)
{
	witsml1__anglePerLengthMeasure *_p = soap_new_witsml1__anglePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__anglePerLengthMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__anglePerLengthMeasure(struct soap *soap, witsml1__anglePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:anglePerLengthMeasure", "witsml1:anglePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__anglePerLengthMeasure * SOAP_FMAC4 soap_get_witsml1__anglePerLengthMeasure(struct soap*, witsml1__anglePerLengthMeasure *, const char*, const char*);

inline int soap_read_witsml1__anglePerLengthMeasure(struct soap *soap, witsml1__anglePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__anglePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__accelerationLinearMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__accelerationLinearMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__accelerationLinearMeasure(struct soap*, const char*, int, const witsml1__accelerationLinearMeasure *, const char*);
SOAP_FMAC3 witsml1__accelerationLinearMeasure * SOAP_FMAC4 soap_in_witsml1__accelerationLinearMeasure(struct soap*, const char*, witsml1__accelerationLinearMeasure *, const char*);
SOAP_FMAC1 witsml1__accelerationLinearMeasure * SOAP_FMAC2 soap_instantiate_witsml1__accelerationLinearMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__accelerationLinearMeasure * soap_new_witsml1__accelerationLinearMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__accelerationLinearMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__accelerationLinearMeasure * soap_new_req_witsml1__accelerationLinearMeasure(
	struct soap *soap,
	enum witsml1__AccelerationLinearUom uom,
	double __item1)
{
	witsml1__accelerationLinearMeasure *_p = soap_new_witsml1__accelerationLinearMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__accelerationLinearMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__accelerationLinearMeasure * soap_new_set_witsml1__accelerationLinearMeasure(
	struct soap *soap,
	enum witsml1__AccelerationLinearUom uom,
	double __item1)
{
	witsml1__accelerationLinearMeasure *_p = soap_new_witsml1__accelerationLinearMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__accelerationLinearMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__accelerationLinearMeasure(struct soap *soap, witsml1__accelerationLinearMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:accelerationLinearMeasure", "witsml1:accelerationLinearMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__accelerationLinearMeasure * SOAP_FMAC4 soap_get_witsml1__accelerationLinearMeasure(struct soap*, witsml1__accelerationLinearMeasure *, const char*, const char*);

inline int soap_read_witsml1__accelerationLinearMeasure(struct soap *soap, witsml1__accelerationLinearMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__accelerationLinearMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__indexedObject_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__indexedObject_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__indexedObject(struct soap*, const char*, int, const witsml1__indexedObject *, const char*);
SOAP_FMAC3 witsml1__indexedObject * SOAP_FMAC4 soap_in_witsml1__indexedObject(struct soap*, const char*, witsml1__indexedObject *, const char*);
SOAP_FMAC1 witsml1__indexedObject * SOAP_FMAC2 soap_instantiate_witsml1__indexedObject(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__indexedObject * soap_new_witsml1__indexedObject(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__indexedObject(soap, n, NULL, NULL, NULL);
}

inline witsml1__indexedObject * soap_new_req_witsml1__indexedObject(
	struct soap *soap,
	const std::string& __item,
	short index)
{
	witsml1__indexedObject *_p = soap_new_witsml1__indexedObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__indexedObject::__item = __item;
		_p->witsml1__indexedObject::index = index;
	}
	return _p;
}

inline witsml1__indexedObject * soap_new_set_witsml1__indexedObject(
	struct soap *soap,
	const std::string& __item,
	short index,
	std::string *name,
	std::string *uom,
	std::string *description,
	std::string *uid)
{
	witsml1__indexedObject *_p = soap_new_witsml1__indexedObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__indexedObject::__item = __item;
		_p->witsml1__indexedObject::index = index;
		_p->witsml1__indexedObject::name = name;
		_p->witsml1__indexedObject::uom = uom;
		_p->witsml1__indexedObject::description = description;
		_p->witsml1__indexedObject::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__indexedObject(struct soap *soap, witsml1__indexedObject const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:indexedObject", "witsml1:indexedObject") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__indexedObject * SOAP_FMAC4 soap_get_witsml1__indexedObject(struct soap*, witsml1__indexedObject *, const char*, const char*);

inline int soap_read_witsml1__indexedObject(struct soap *soap, witsml1__indexedObject *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__indexedObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cost_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cost_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cost(struct soap*, const char*, int, const witsml1__cost *, const char*);
SOAP_FMAC3 witsml1__cost * SOAP_FMAC4 soap_in_witsml1__cost(struct soap*, const char*, witsml1__cost *, const char*);
SOAP_FMAC1 witsml1__cost * SOAP_FMAC2 soap_instantiate_witsml1__cost(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cost * soap_new_witsml1__cost(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cost(soap, n, NULL, NULL, NULL);
}

inline witsml1__cost * soap_new_req_witsml1__cost(
	struct soap *soap,
	double __item)
{
	witsml1__cost *_p = soap_new_witsml1__cost(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cost::__item = __item;
	}
	return _p;
}

inline witsml1__cost * soap_new_set_witsml1__cost(
	struct soap *soap,
	double __item,
	std::string *currency)
{
	witsml1__cost *_p = soap_new_witsml1__cost(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cost::__item = __item;
		_p->witsml1__cost::currency = currency;
	}
	return _p;
}

inline int soap_write_witsml1__cost(struct soap *soap, witsml1__cost const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cost", "witsml1:cost") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cost * SOAP_FMAC4 soap_get_witsml1__cost(struct soap*, witsml1__cost *, const char*, const char*);

inline int soap_read_witsml1__cost(struct soap *soap, witsml1__cost *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cost(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageEastWest_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageEastWest_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__footageEastWest(struct soap*, const char*, int, const witsml1__footageEastWest *, const char*);
SOAP_FMAC3 witsml1__footageEastWest * SOAP_FMAC4 soap_in_witsml1__footageEastWest(struct soap*, const char*, witsml1__footageEastWest *, const char*);
SOAP_FMAC1 witsml1__footageEastWest * SOAP_FMAC2 soap_instantiate_witsml1__footageEastWest(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__footageEastWest * soap_new_witsml1__footageEastWest(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__footageEastWest(soap, n, NULL, NULL, NULL);
}

inline witsml1__footageEastWest * soap_new_req_witsml1__footageEastWest(
	struct soap *soap,
	enum witsml1__LengthUom uom,
	enum witsml1__EastOrWest ref,
	double __item1)
{
	witsml1__footageEastWest *_p = soap_new_witsml1__footageEastWest(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__footageEastWest::uom = uom;
		_p->witsml1__footageEastWest::ref = ref;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__footageEastWest * soap_new_set_witsml1__footageEastWest(
	struct soap *soap,
	enum witsml1__LengthUom uom,
	enum witsml1__EastOrWest ref,
	double __item1)
{
	witsml1__footageEastWest *_p = soap_new_witsml1__footageEastWest(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__footageEastWest::uom = uom;
		_p->witsml1__footageEastWest::ref = ref;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__footageEastWest(struct soap *soap, witsml1__footageEastWest const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:footageEastWest", "witsml1:footageEastWest") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__footageEastWest * SOAP_FMAC4 soap_get_witsml1__footageEastWest(struct soap*, witsml1__footageEastWest *, const char*, const char*);

inline int soap_read_witsml1__footageEastWest(struct soap *soap, witsml1__footageEastWest *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__footageEastWest(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageNorthSouth_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__footageNorthSouth_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__footageNorthSouth(struct soap*, const char*, int, const witsml1__footageNorthSouth *, const char*);
SOAP_FMAC3 witsml1__footageNorthSouth * SOAP_FMAC4 soap_in_witsml1__footageNorthSouth(struct soap*, const char*, witsml1__footageNorthSouth *, const char*);
SOAP_FMAC1 witsml1__footageNorthSouth * SOAP_FMAC2 soap_instantiate_witsml1__footageNorthSouth(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__footageNorthSouth * soap_new_witsml1__footageNorthSouth(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__footageNorthSouth(soap, n, NULL, NULL, NULL);
}

inline witsml1__footageNorthSouth * soap_new_req_witsml1__footageNorthSouth(
	struct soap *soap,
	enum witsml1__LengthUom uom,
	enum witsml1__NorthOrSouth ref,
	double __item1)
{
	witsml1__footageNorthSouth *_p = soap_new_witsml1__footageNorthSouth(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__footageNorthSouth::uom = uom;
		_p->witsml1__footageNorthSouth::ref = ref;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__footageNorthSouth * soap_new_set_witsml1__footageNorthSouth(
	struct soap *soap,
	enum witsml1__LengthUom uom,
	enum witsml1__NorthOrSouth ref,
	double __item1)
{
	witsml1__footageNorthSouth *_p = soap_new_witsml1__footageNorthSouth(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__footageNorthSouth::uom = uom;
		_p->witsml1__footageNorthSouth::ref = ref;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__footageNorthSouth(struct soap *soap, witsml1__footageNorthSouth const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:footageNorthSouth", "witsml1:footageNorthSouth") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__footageNorthSouth * SOAP_FMAC4 soap_get_witsml1__footageNorthSouth(struct soap*, witsml1__footageNorthSouth *, const char*, const char*);

inline int soap_read_witsml1__footageNorthSouth(struct soap *soap, witsml1__footageNorthSouth *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__footageNorthSouth(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellElevationCoord_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellElevationCoord_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__wellElevationCoord(struct soap*, const char*, int, const witsml1__wellElevationCoord *, const char*);
SOAP_FMAC3 witsml1__wellElevationCoord * SOAP_FMAC4 soap_in_witsml1__wellElevationCoord(struct soap*, const char*, witsml1__wellElevationCoord *, const char*);
SOAP_FMAC1 witsml1__wellElevationCoord * SOAP_FMAC2 soap_instantiate_witsml1__wellElevationCoord(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__wellElevationCoord * soap_new_witsml1__wellElevationCoord(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__wellElevationCoord(soap, n, NULL, NULL, NULL);
}

inline witsml1__wellElevationCoord * soap_new_req_witsml1__wellElevationCoord(
	struct soap *soap,
	enum witsml1__WellVerticalCoordinateUom uom,
	double __item1)
{
	witsml1__wellElevationCoord *_p = soap_new_witsml1__wellElevationCoord(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__wellElevationCoord::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__wellElevationCoord * soap_new_set_witsml1__wellElevationCoord(
	struct soap *soap,
	enum witsml1__WellVerticalCoordinateUom uom,
	std::string *datum,
	double __item1)
{
	witsml1__wellElevationCoord *_p = soap_new_witsml1__wellElevationCoord(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__wellElevationCoord::uom = uom;
		_p->witsml1__wellElevationCoord::datum = datum;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__wellElevationCoord(struct soap *soap, witsml1__wellElevationCoord const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:wellElevationCoord", "witsml1:wellElevationCoord") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__wellElevationCoord * SOAP_FMAC4 soap_get_witsml1__wellElevationCoord(struct soap*, witsml1__wellElevationCoord *, const char*, const char*);

inline int soap_read_witsml1__wellElevationCoord(struct soap *soap, witsml1__wellElevationCoord *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__wellElevationCoord(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellVerticalDepthCoord_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellVerticalDepthCoord_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__wellVerticalDepthCoord(struct soap*, const char*, int, const witsml1__wellVerticalDepthCoord *, const char*);
SOAP_FMAC3 witsml1__wellVerticalDepthCoord * SOAP_FMAC4 soap_in_witsml1__wellVerticalDepthCoord(struct soap*, const char*, witsml1__wellVerticalDepthCoord *, const char*);
SOAP_FMAC1 witsml1__wellVerticalDepthCoord * SOAP_FMAC2 soap_instantiate_witsml1__wellVerticalDepthCoord(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__wellVerticalDepthCoord * soap_new_witsml1__wellVerticalDepthCoord(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__wellVerticalDepthCoord(soap, n, NULL, NULL, NULL);
}

inline witsml1__wellVerticalDepthCoord * soap_new_req_witsml1__wellVerticalDepthCoord(
	struct soap *soap,
	enum witsml1__WellVerticalCoordinateUom uom,
	double __item1)
{
	witsml1__wellVerticalDepthCoord *_p = soap_new_witsml1__wellVerticalDepthCoord(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__wellVerticalDepthCoord::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__wellVerticalDepthCoord * soap_new_set_witsml1__wellVerticalDepthCoord(
	struct soap *soap,
	enum witsml1__WellVerticalCoordinateUom uom,
	std::string *datum,
	double __item1)
{
	witsml1__wellVerticalDepthCoord *_p = soap_new_witsml1__wellVerticalDepthCoord(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__wellVerticalDepthCoord::uom = uom;
		_p->witsml1__wellVerticalDepthCoord::datum = datum;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__wellVerticalDepthCoord(struct soap *soap, witsml1__wellVerticalDepthCoord const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:wellVerticalDepthCoord", "witsml1:wellVerticalDepthCoord") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__wellVerticalDepthCoord * SOAP_FMAC4 soap_get_witsml1__wellVerticalDepthCoord(struct soap*, witsml1__wellVerticalDepthCoord *, const char*, const char*);

inline int soap_read_witsml1__wellVerticalDepthCoord(struct soap *soap, witsml1__wellVerticalDepthCoord *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__wellVerticalDepthCoord(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measuredDepthCoord_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measuredDepthCoord_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__measuredDepthCoord(struct soap*, const char*, int, const witsml1__measuredDepthCoord *, const char*);
SOAP_FMAC3 witsml1__measuredDepthCoord * SOAP_FMAC4 soap_in_witsml1__measuredDepthCoord(struct soap*, const char*, witsml1__measuredDepthCoord *, const char*);
SOAP_FMAC1 witsml1__measuredDepthCoord * SOAP_FMAC2 soap_instantiate_witsml1__measuredDepthCoord(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__measuredDepthCoord * soap_new_witsml1__measuredDepthCoord(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__measuredDepthCoord(soap, n, NULL, NULL, NULL);
}

inline witsml1__measuredDepthCoord * soap_new_req_witsml1__measuredDepthCoord(
	struct soap *soap,
	enum witsml1__MeasuredDepthUom uom,
	double __item1)
{
	witsml1__measuredDepthCoord *_p = soap_new_witsml1__measuredDepthCoord(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__measuredDepthCoord::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__measuredDepthCoord * soap_new_set_witsml1__measuredDepthCoord(
	struct soap *soap,
	enum witsml1__MeasuredDepthUom uom,
	std::string *datum,
	double __item1)
{
	witsml1__measuredDepthCoord *_p = soap_new_witsml1__measuredDepthCoord(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__measuredDepthCoord::uom = uom;
		_p->witsml1__measuredDepthCoord::datum = datum;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__measuredDepthCoord(struct soap *soap, witsml1__measuredDepthCoord const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:measuredDepthCoord", "witsml1:measuredDepthCoord") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__measuredDepthCoord * SOAP_FMAC4 soap_get_witsml1__measuredDepthCoord(struct soap*, witsml1__measuredDepthCoord *, const char*, const char*);

inline int soap_read_witsml1__measuredDepthCoord(struct soap *soap, witsml1__measuredDepthCoord *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__measuredDepthCoord(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__chronostratigraphyStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__chronostratigraphyStruct_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__chronostratigraphyStruct(struct soap*, const char*, int, const witsml1__chronostratigraphyStruct *, const char*);
SOAP_FMAC3 witsml1__chronostratigraphyStruct * SOAP_FMAC4 soap_in_witsml1__chronostratigraphyStruct(struct soap*, const char*, witsml1__chronostratigraphyStruct *, const char*);
SOAP_FMAC1 witsml1__chronostratigraphyStruct * SOAP_FMAC2 soap_instantiate_witsml1__chronostratigraphyStruct(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__chronostratigraphyStruct * soap_new_witsml1__chronostratigraphyStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__chronostratigraphyStruct(soap, n, NULL, NULL, NULL);
}

inline witsml1__chronostratigraphyStruct * soap_new_req_witsml1__chronostratigraphyStruct(
	struct soap *soap,
	const std::string& __item)
{
	witsml1__chronostratigraphyStruct *_p = soap_new_witsml1__chronostratigraphyStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__chronostratigraphyStruct::__item = __item;
	}
	return _p;
}

inline witsml1__chronostratigraphyStruct * soap_new_set_witsml1__chronostratigraphyStruct(
	struct soap *soap,
	const std::string& __item,
	enum witsml1__ChronostratigraphyUnit *kind)
{
	witsml1__chronostratigraphyStruct *_p = soap_new_witsml1__chronostratigraphyStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__chronostratigraphyStruct::__item = __item;
		_p->witsml1__chronostratigraphyStruct::kind = kind;
	}
	return _p;
}

inline int soap_write_witsml1__chronostratigraphyStruct(struct soap *soap, witsml1__chronostratigraphyStruct const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:chronostratigraphyStruct", "witsml1:chronostratigraphyStruct") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__chronostratigraphyStruct * SOAP_FMAC4 soap_get_witsml1__chronostratigraphyStruct(struct soap*, witsml1__chronostratigraphyStruct *, const char*, const char*);

inline int soap_read_witsml1__chronostratigraphyStruct(struct soap *soap, witsml1__chronostratigraphyStruct *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__chronostratigraphyStruct(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lithostratigraphyStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__lithostratigraphyStruct_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__lithostratigraphyStruct(struct soap*, const char*, int, const witsml1__lithostratigraphyStruct *, const char*);
SOAP_FMAC3 witsml1__lithostratigraphyStruct * SOAP_FMAC4 soap_in_witsml1__lithostratigraphyStruct(struct soap*, const char*, witsml1__lithostratigraphyStruct *, const char*);
SOAP_FMAC1 witsml1__lithostratigraphyStruct * SOAP_FMAC2 soap_instantiate_witsml1__lithostratigraphyStruct(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__lithostratigraphyStruct * soap_new_witsml1__lithostratigraphyStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__lithostratigraphyStruct(soap, n, NULL, NULL, NULL);
}

inline witsml1__lithostratigraphyStruct * soap_new_req_witsml1__lithostratigraphyStruct(
	struct soap *soap,
	const std::string& __item)
{
	witsml1__lithostratigraphyStruct *_p = soap_new_witsml1__lithostratigraphyStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__lithostratigraphyStruct::__item = __item;
	}
	return _p;
}

inline witsml1__lithostratigraphyStruct * soap_new_set_witsml1__lithostratigraphyStruct(
	struct soap *soap,
	const std::string& __item,
	enum witsml1__LithostratigraphyUnit *kind)
{
	witsml1__lithostratigraphyStruct *_p = soap_new_witsml1__lithostratigraphyStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__lithostratigraphyStruct::__item = __item;
		_p->witsml1__lithostratigraphyStruct::kind = kind;
	}
	return _p;
}

inline int soap_write_witsml1__lithostratigraphyStruct(struct soap *soap, witsml1__lithostratigraphyStruct const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:lithostratigraphyStruct", "witsml1:lithostratigraphyStruct") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__lithostratigraphyStruct * SOAP_FMAC4 soap_get_witsml1__lithostratigraphyStruct(struct soap*, witsml1__lithostratigraphyStruct *, const char*, const char*);

inline int soap_read_witsml1__lithostratigraphyStruct(struct soap *soap, witsml1__lithostratigraphyStruct *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__lithostratigraphyStruct(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__objectSequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__objectSequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__objectSequence(struct soap*, const char*, int, const witsml1__objectSequence *, const char*);
SOAP_FMAC3 witsml1__objectSequence * SOAP_FMAC4 soap_in_witsml1__objectSequence(struct soap*, const char*, witsml1__objectSequence *, const char*);
SOAP_FMAC1 witsml1__objectSequence * SOAP_FMAC2 soap_instantiate_witsml1__objectSequence(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__objectSequence * soap_new_witsml1__objectSequence(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__objectSequence(soap, n, NULL, NULL, NULL);
}

inline witsml1__objectSequence * soap_new_req_witsml1__objectSequence(
	struct soap *soap,
	short __item)
{
	witsml1__objectSequence *_p = soap_new_witsml1__objectSequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__objectSequence::__item = __item;
	}
	return _p;
}

inline witsml1__objectSequence * soap_new_set_witsml1__objectSequence(
	struct soap *soap,
	short __item,
	std::string *description)
{
	witsml1__objectSequence *_p = soap_new_witsml1__objectSequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__objectSequence::__item = __item;
		_p->witsml1__objectSequence::description = description;
	}
	return _p;
}

inline int soap_write_witsml1__objectSequence(struct soap *soap, witsml1__objectSequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:objectSequence", "witsml1:objectSequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__objectSequence * SOAP_FMAC4 soap_get_witsml1__objectSequence(struct soap*, witsml1__objectSequence *, const char*, const char*);

inline int soap_read_witsml1__objectSequence(struct soap *soap, witsml1__objectSequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__objectSequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellKnownNameStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__wellKnownNameStruct_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__wellKnownNameStruct(struct soap*, const char*, int, const witsml1__wellKnownNameStruct *, const char*);
SOAP_FMAC3 witsml1__wellKnownNameStruct * SOAP_FMAC4 soap_in_witsml1__wellKnownNameStruct(struct soap*, const char*, witsml1__wellKnownNameStruct *, const char*);
SOAP_FMAC1 witsml1__wellKnownNameStruct * SOAP_FMAC2 soap_instantiate_witsml1__wellKnownNameStruct(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__wellKnownNameStruct * soap_new_witsml1__wellKnownNameStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__wellKnownNameStruct(soap, n, NULL, NULL, NULL);
}

inline witsml1__wellKnownNameStruct * soap_new_req_witsml1__wellKnownNameStruct(
	struct soap *soap,
	const std::string& __item,
	const std::string& namingSystem)
{
	witsml1__wellKnownNameStruct *_p = soap_new_witsml1__wellKnownNameStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__wellKnownNameStruct::__item = __item;
		_p->witsml1__wellKnownNameStruct::namingSystem = namingSystem;
	}
	return _p;
}

inline witsml1__wellKnownNameStruct * soap_new_set_witsml1__wellKnownNameStruct(
	struct soap *soap,
	const std::string& __item,
	const std::string& namingSystem,
	std::string *code)
{
	witsml1__wellKnownNameStruct *_p = soap_new_witsml1__wellKnownNameStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__wellKnownNameStruct::__item = __item;
		_p->witsml1__wellKnownNameStruct::namingSystem = namingSystem;
		_p->witsml1__wellKnownNameStruct::code = code;
	}
	return _p;
}

inline int soap_write_witsml1__wellKnownNameStruct(struct soap *soap, witsml1__wellKnownNameStruct const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:wellKnownNameStruct", "witsml1:wellKnownNameStruct") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__wellKnownNameStruct * SOAP_FMAC4 soap_get_witsml1__wellKnownNameStruct(struct soap*, witsml1__wellKnownNameStruct *, const char*, const char*);

inline int soap_read_witsml1__wellKnownNameStruct(struct soap *soap, witsml1__wellKnownNameStruct *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__wellKnownNameStruct(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortNameStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__shortNameStruct_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__shortNameStruct(struct soap*, const char*, int, const witsml1__shortNameStruct *, const char*);
SOAP_FMAC3 witsml1__shortNameStruct * SOAP_FMAC4 soap_in_witsml1__shortNameStruct(struct soap*, const char*, witsml1__shortNameStruct *, const char*);
SOAP_FMAC1 witsml1__shortNameStruct * SOAP_FMAC2 soap_instantiate_witsml1__shortNameStruct(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__shortNameStruct * soap_new_witsml1__shortNameStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__shortNameStruct(soap, n, NULL, NULL, NULL);
}

inline witsml1__shortNameStruct * soap_new_req_witsml1__shortNameStruct(
	struct soap *soap,
	const std::string& __item)
{
	witsml1__shortNameStruct *_p = soap_new_witsml1__shortNameStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__shortNameStruct::__item = __item;
	}
	return _p;
}

inline witsml1__shortNameStruct * soap_new_set_witsml1__shortNameStruct(
	struct soap *soap,
	const std::string& __item,
	std::string *namingSystem)
{
	witsml1__shortNameStruct *_p = soap_new_witsml1__shortNameStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__shortNameStruct::__item = __item;
		_p->witsml1__shortNameStruct::namingSystem = namingSystem;
	}
	return _p;
}

inline int soap_write_witsml1__shortNameStruct(struct soap *soap, witsml1__shortNameStruct const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:shortNameStruct", "witsml1:shortNameStruct") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__shortNameStruct * SOAP_FMAC4 soap_get_witsml1__shortNameStruct(struct soap*, witsml1__shortNameStruct *, const char*, const char*);

inline int soap_read_witsml1__shortNameStruct(struct soap *soap, witsml1__shortNameStruct *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__shortNameStruct(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__nameStruct_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__nameStruct(struct soap*, const char*, int, const witsml1__nameStruct *, const char*);
SOAP_FMAC3 witsml1__nameStruct * SOAP_FMAC4 soap_in_witsml1__nameStruct(struct soap*, const char*, witsml1__nameStruct *, const char*);
SOAP_FMAC1 witsml1__nameStruct * SOAP_FMAC2 soap_instantiate_witsml1__nameStruct(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__nameStruct * soap_new_witsml1__nameStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__nameStruct(soap, n, NULL, NULL, NULL);
}

inline witsml1__nameStruct * soap_new_req_witsml1__nameStruct(
	struct soap *soap,
	const std::string& __item)
{
	witsml1__nameStruct *_p = soap_new_witsml1__nameStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__nameStruct::__item = __item;
	}
	return _p;
}

inline witsml1__nameStruct * soap_new_set_witsml1__nameStruct(
	struct soap *soap,
	const std::string& __item,
	std::string *namingSystem)
{
	witsml1__nameStruct *_p = soap_new_witsml1__nameStruct(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__nameStruct::__item = __item;
		_p->witsml1__nameStruct::namingSystem = namingSystem;
	}
	return _p;
}

inline int soap_write_witsml1__nameStruct(struct soap *soap, witsml1__nameStruct const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:nameStruct", "witsml1:nameStruct") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__nameStruct * SOAP_FMAC4 soap_get_witsml1__nameStruct(struct soap*, witsml1__nameStruct *, const char*, const char*);

inline int soap_read_witsml1__nameStruct(struct soap *soap, witsml1__nameStruct *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__nameStruct(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__extensionvalue_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__extensionvalue_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__extensionvalue(struct soap*, const char*, int, const witsml1__extensionvalue *, const char*);
SOAP_FMAC3 witsml1__extensionvalue * SOAP_FMAC4 soap_in_witsml1__extensionvalue(struct soap*, const char*, witsml1__extensionvalue *, const char*);
SOAP_FMAC1 witsml1__extensionvalue * SOAP_FMAC2 soap_instantiate_witsml1__extensionvalue(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__extensionvalue * soap_new_witsml1__extensionvalue(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__extensionvalue(soap, n, NULL, NULL, NULL);
}

inline witsml1__extensionvalue * soap_new_req_witsml1__extensionvalue(
	struct soap *soap,
	const std::string& __item)
{
	witsml1__extensionvalue *_p = soap_new_witsml1__extensionvalue(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__extensionvalue::__item = __item;
	}
	return _p;
}

inline witsml1__extensionvalue * soap_new_set_witsml1__extensionvalue(
	struct soap *soap,
	const std::string& __item,
	std::string *uom)
{
	witsml1__extensionvalue *_p = soap_new_witsml1__extensionvalue(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__extensionvalue::__item = __item;
		_p->witsml1__extensionvalue::uom = uom;
	}
	return _p;
}

inline int soap_write_witsml1__extensionvalue(struct soap *soap, witsml1__extensionvalue const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:extensionvalue", "witsml1:extensionvalue") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__extensionvalue * SOAP_FMAC4 soap_get_witsml1__extensionvalue(struct soap*, witsml1__extensionvalue *, const char*, const char*);

inline int soap_read_witsml1__extensionvalue(struct soap *soap, witsml1__extensionvalue *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__extensionvalue(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedCommentString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedCommentString_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__timestampedCommentString(struct soap*, const char*, int, const witsml1__timestampedCommentString *, const char*);
SOAP_FMAC3 witsml1__timestampedCommentString * SOAP_FMAC4 soap_in_witsml1__timestampedCommentString(struct soap*, const char*, witsml1__timestampedCommentString *, const char*);
SOAP_FMAC1 witsml1__timestampedCommentString * SOAP_FMAC2 soap_instantiate_witsml1__timestampedCommentString(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__timestampedCommentString * soap_new_witsml1__timestampedCommentString(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__timestampedCommentString(soap, n, NULL, NULL, NULL);
}

inline witsml1__timestampedCommentString * soap_new_req_witsml1__timestampedCommentString(
	struct soap *soap,
	const std::string& __item,
	time_t dTim)
{
	witsml1__timestampedCommentString *_p = soap_new_witsml1__timestampedCommentString(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__timestampedCommentString::__item = __item;
		_p->witsml1__timestampedCommentString::dTim = dTim;
	}
	return _p;
}

inline witsml1__timestampedCommentString * soap_new_set_witsml1__timestampedCommentString(
	struct soap *soap,
	const std::string& __item,
	time_t dTim)
{
	witsml1__timestampedCommentString *_p = soap_new_witsml1__timestampedCommentString(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__timestampedCommentString::__item = __item;
		_p->witsml1__timestampedCommentString::dTim = dTim;
	}
	return _p;
}

inline int soap_write_witsml1__timestampedCommentString(struct soap *soap, witsml1__timestampedCommentString const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:timestampedCommentString", "witsml1:timestampedCommentString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__timestampedCommentString * SOAP_FMAC4 soap_get_witsml1__timestampedCommentString(struct soap*, witsml1__timestampedCommentString *, const char*, const char*);

inline int soap_read_witsml1__timestampedCommentString(struct soap *soap, witsml1__timestampedCommentString *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__timestampedCommentString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refPositiveCount_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refPositiveCount_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__refPositiveCount(struct soap*, const char*, int, const witsml1__refPositiveCount *, const char*);
SOAP_FMAC3 witsml1__refPositiveCount * SOAP_FMAC4 soap_in_witsml1__refPositiveCount(struct soap*, const char*, witsml1__refPositiveCount *, const char*);
SOAP_FMAC1 witsml1__refPositiveCount * SOAP_FMAC2 soap_instantiate_witsml1__refPositiveCount(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__refPositiveCount * soap_new_witsml1__refPositiveCount(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__refPositiveCount(soap, n, NULL, NULL, NULL);
}

inline witsml1__refPositiveCount * soap_new_req_witsml1__refPositiveCount(
	struct soap *soap,
	short __item)
{
	witsml1__refPositiveCount *_p = soap_new_witsml1__refPositiveCount(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__refPositiveCount::__item = __item;
	}
	return _p;
}

inline witsml1__refPositiveCount * soap_new_set_witsml1__refPositiveCount(
	struct soap *soap,
	short __item,
	std::string *uidRef)
{
	witsml1__refPositiveCount *_p = soap_new_witsml1__refPositiveCount(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__refPositiveCount::__item = __item;
		_p->witsml1__refPositiveCount::uidRef = uidRef;
	}
	return _p;
}

inline int soap_write_witsml1__refPositiveCount(struct soap *soap, witsml1__refPositiveCount const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:refPositiveCount", "witsml1:refPositiveCount") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__refPositiveCount * SOAP_FMAC4 soap_get_witsml1__refPositiveCount(struct soap*, witsml1__refPositiveCount *, const char*, const char*);

inline int soap_read_witsml1__refPositiveCount(struct soap *soap, witsml1__refPositiveCount *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__refPositiveCount(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refObjectString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refObjectString_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__refObjectString(struct soap*, const char*, int, const witsml1__refObjectString *, const char*);
SOAP_FMAC3 witsml1__refObjectString * SOAP_FMAC4 soap_in_witsml1__refObjectString(struct soap*, const char*, witsml1__refObjectString *, const char*);
SOAP_FMAC1 witsml1__refObjectString * SOAP_FMAC2 soap_instantiate_witsml1__refObjectString(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__refObjectString * soap_new_witsml1__refObjectString(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__refObjectString(soap, n, NULL, NULL, NULL);
}

inline witsml1__refObjectString * soap_new_req_witsml1__refObjectString(
	struct soap *soap,
	const std::string& __item,
	const std::string& object)
{
	witsml1__refObjectString *_p = soap_new_witsml1__refObjectString(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__refObjectString::__item = __item;
		_p->witsml1__refObjectString::object = object;
	}
	return _p;
}

inline witsml1__refObjectString * soap_new_set_witsml1__refObjectString(
	struct soap *soap,
	const std::string& __item,
	const std::string& object,
	std::string *uidRef)
{
	witsml1__refObjectString *_p = soap_new_witsml1__refObjectString(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__refObjectString::__item = __item;
		_p->witsml1__refObjectString::object = object;
		_p->witsml1__refObjectString::uidRef = uidRef;
	}
	return _p;
}

inline int soap_write_witsml1__refObjectString(struct soap *soap, witsml1__refObjectString const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:refObjectString", "witsml1:refObjectString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__refObjectString * SOAP_FMAC4 soap_get_witsml1__refObjectString(struct soap*, witsml1__refObjectString *, const char*, const char*);

inline int soap_read_witsml1__refObjectString(struct soap *soap, witsml1__refObjectString *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__refObjectString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refNameString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__refNameString_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__refNameString(struct soap*, const char*, int, const witsml1__refNameString *, const char*);
SOAP_FMAC3 witsml1__refNameString * SOAP_FMAC4 soap_in_witsml1__refNameString(struct soap*, const char*, witsml1__refNameString *, const char*);
SOAP_FMAC1 witsml1__refNameString * SOAP_FMAC2 soap_instantiate_witsml1__refNameString(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__refNameString * soap_new_witsml1__refNameString(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__refNameString(soap, n, NULL, NULL, NULL);
}

inline witsml1__refNameString * soap_new_req_witsml1__refNameString(
	struct soap *soap,
	const std::string& __item)
{
	witsml1__refNameString *_p = soap_new_witsml1__refNameString(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__refNameString::__item = __item;
	}
	return _p;
}

inline witsml1__refNameString * soap_new_set_witsml1__refNameString(
	struct soap *soap,
	const std::string& __item,
	std::string *uidRef)
{
	witsml1__refNameString *_p = soap_new_witsml1__refNameString(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__refNameString::__item = __item;
		_p->witsml1__refNameString::uidRef = uidRef;
	}
	return _p;
}

inline int soap_write_witsml1__refNameString(struct soap *soap, witsml1__refNameString const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:refNameString", "witsml1:refNameString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__refNameString * SOAP_FMAC4 soap_get_witsml1__refNameString(struct soap*, witsml1__refNameString *, const char*, const char*);

inline int soap_read_witsml1__refNameString(struct soap *soap, witsml1__refNameString *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__refNameString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ratioGenericMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__ratioGenericMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__ratioGenericMeasure(struct soap*, const char*, int, const witsml1__ratioGenericMeasure *, const char*);
SOAP_FMAC3 witsml1__ratioGenericMeasure * SOAP_FMAC4 soap_in_witsml1__ratioGenericMeasure(struct soap*, const char*, witsml1__ratioGenericMeasure *, const char*);
SOAP_FMAC1 witsml1__ratioGenericMeasure * SOAP_FMAC2 soap_instantiate_witsml1__ratioGenericMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__ratioGenericMeasure * soap_new_witsml1__ratioGenericMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__ratioGenericMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__ratioGenericMeasure * soap_new_req_witsml1__ratioGenericMeasure(
	struct soap *soap,
	const std::string& uom,
	double __item1)
{
	witsml1__ratioGenericMeasure *_p = soap_new_witsml1__ratioGenericMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__ratioGenericMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__ratioGenericMeasure * soap_new_set_witsml1__ratioGenericMeasure(
	struct soap *soap,
	const std::string& uom,
	double *numerator,
	double *denominator,
	double __item1)
{
	witsml1__ratioGenericMeasure *_p = soap_new_witsml1__ratioGenericMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__ratioGenericMeasure::uom = uom;
		_p->witsml1__ratioGenericMeasure::numerator = numerator;
		_p->witsml1__ratioGenericMeasure::denominator = denominator;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__ratioGenericMeasure(struct soap *soap, witsml1__ratioGenericMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:ratioGenericMeasure", "witsml1:ratioGenericMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__ratioGenericMeasure * SOAP_FMAC4 soap_get_witsml1__ratioGenericMeasure(struct soap*, witsml1__ratioGenericMeasure *, const char*, const char*);

inline int soap_read_witsml1__ratioGenericMeasure(struct soap *soap, witsml1__ratioGenericMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__ratioGenericMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__genericMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__genericMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__genericMeasure(struct soap*, const char*, int, const witsml1__genericMeasure *, const char*);
SOAP_FMAC3 witsml1__genericMeasure * SOAP_FMAC4 soap_in_witsml1__genericMeasure(struct soap*, const char*, witsml1__genericMeasure *, const char*);
SOAP_FMAC1 witsml1__genericMeasure * SOAP_FMAC2 soap_instantiate_witsml1__genericMeasure(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__genericMeasure * soap_new_witsml1__genericMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__genericMeasure(soap, n, NULL, NULL, NULL);
}

inline witsml1__genericMeasure * soap_new_req_witsml1__genericMeasure(
	struct soap *soap,
	const std::string& uom,
	double __item1)
{
	witsml1__genericMeasure *_p = soap_new_witsml1__genericMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__genericMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__genericMeasure * soap_new_set_witsml1__genericMeasure(
	struct soap *soap,
	const std::string& uom,
	double __item1)
{
	witsml1__genericMeasure *_p = soap_new_witsml1__genericMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__genericMeasure::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__genericMeasure(struct soap *soap, witsml1__genericMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:genericMeasure", "witsml1:genericMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__genericMeasure * SOAP_FMAC4 soap_get_witsml1__genericMeasure(struct soap*, witsml1__genericMeasure *, const char*, const char*);

inline int soap_read_witsml1__genericMeasure(struct soap *soap, witsml1__genericMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__genericMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measureOrQuantity_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__measureOrQuantity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__measureOrQuantity(struct soap*, const char*, int, const witsml1__measureOrQuantity *, const char*);
SOAP_FMAC3 witsml1__measureOrQuantity * SOAP_FMAC4 soap_in_witsml1__measureOrQuantity(struct soap*, const char*, witsml1__measureOrQuantity *, const char*);
SOAP_FMAC1 witsml1__measureOrQuantity * SOAP_FMAC2 soap_instantiate_witsml1__measureOrQuantity(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__measureOrQuantity * soap_new_witsml1__measureOrQuantity(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__measureOrQuantity(soap, n, NULL, NULL, NULL);
}

inline witsml1__measureOrQuantity * soap_new_req_witsml1__measureOrQuantity(
	struct soap *soap,
	double __item1)
{
	witsml1__measureOrQuantity *_p = soap_new_witsml1__measureOrQuantity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__measureOrQuantity * soap_new_set_witsml1__measureOrQuantity(
	struct soap *soap,
	std::string *uom,
	double __item1)
{
	witsml1__measureOrQuantity *_p = soap_new_witsml1__measureOrQuantity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__measureOrQuantity::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__measureOrQuantity(struct soap *soap, witsml1__measureOrQuantity const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:measureOrQuantity", "witsml1:measureOrQuantity") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__measureOrQuantity * SOAP_FMAC4 soap_get_witsml1__measureOrQuantity(struct soap*, witsml1__measureOrQuantity *, const char*, const char*);

inline int soap_read_witsml1__measureOrQuantity(struct soap *soap, witsml1__measureOrQuantity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__measureOrQuantity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasurePercent_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__volumePerVolumeMeasurePercent_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__volumePerVolumeMeasurePercent(struct soap*, const char*, int, const witsml1__volumePerVolumeMeasurePercent *, const char*);
SOAP_FMAC3 witsml1__volumePerVolumeMeasurePercent * SOAP_FMAC4 soap_in_witsml1__volumePerVolumeMeasurePercent(struct soap*, const char*, witsml1__volumePerVolumeMeasurePercent *, const char*);
SOAP_FMAC1 witsml1__volumePerVolumeMeasurePercent * SOAP_FMAC2 soap_instantiate_witsml1__volumePerVolumeMeasurePercent(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__volumePerVolumeMeasurePercent * soap_new_witsml1__volumePerVolumeMeasurePercent(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__volumePerVolumeMeasurePercent(soap, n, NULL, NULL, NULL);
}

inline witsml1__volumePerVolumeMeasurePercent * soap_new_req_witsml1__volumePerVolumeMeasurePercent(
	struct soap *soap,
	enum witsml1__PercentUom uom,
	double __item1)
{
	witsml1__volumePerVolumeMeasurePercent *_p = soap_new_witsml1__volumePerVolumeMeasurePercent(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumePerVolumeMeasurePercent::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__volumePerVolumeMeasurePercent * soap_new_set_witsml1__volumePerVolumeMeasurePercent(
	struct soap *soap,
	enum witsml1__PercentUom uom,
	double __item1)
{
	witsml1__volumePerVolumeMeasurePercent *_p = soap_new_witsml1__volumePerVolumeMeasurePercent(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__volumePerVolumeMeasurePercent::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__volumePerVolumeMeasurePercent(struct soap *soap, witsml1__volumePerVolumeMeasurePercent const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:volumePerVolumeMeasurePercent", "witsml1:volumePerVolumeMeasurePercent") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__volumePerVolumeMeasurePercent * SOAP_FMAC4 soap_get_witsml1__volumePerVolumeMeasurePercent(struct soap*, witsml1__volumePerVolumeMeasurePercent *, const char*, const char*);

inline int soap_read_witsml1__volumePerVolumeMeasurePercent(struct soap *soap, witsml1__volumePerVolumeMeasurePercent *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__volumePerVolumeMeasurePercent(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__yAxisAzimuth_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__yAxisAzimuth_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__yAxisAzimuth(struct soap*, const char*, int, const witsml1__yAxisAzimuth *, const char*);
SOAP_FMAC3 witsml1__yAxisAzimuth * SOAP_FMAC4 soap_in_witsml1__yAxisAzimuth(struct soap*, const char*, witsml1__yAxisAzimuth *, const char*);
SOAP_FMAC1 witsml1__yAxisAzimuth * SOAP_FMAC2 soap_instantiate_witsml1__yAxisAzimuth(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__yAxisAzimuth * soap_new_witsml1__yAxisAzimuth(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__yAxisAzimuth(soap, n, NULL, NULL, NULL);
}

inline witsml1__yAxisAzimuth * soap_new_req_witsml1__yAxisAzimuth(
	struct soap *soap,
	enum witsml1__PlaneAngleUom uom,
	double __item1)
{
	witsml1__yAxisAzimuth *_p = soap_new_witsml1__yAxisAzimuth(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__yAxisAzimuth::uom = uom;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline witsml1__yAxisAzimuth * soap_new_set_witsml1__yAxisAzimuth(
	struct soap *soap,
	enum witsml1__PlaneAngleUom uom,
	enum witsml1__AziRef *northDirection,
	double __item1)
{
	witsml1__yAxisAzimuth *_p = soap_new_witsml1__yAxisAzimuth(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__yAxisAzimuth::uom = uom;
		_p->witsml1__yAxisAzimuth::northDirection = northDirection;
		_p->witsml1__abstractMeasure::__item = __item1;
	}
	return _p;
}

inline int soap_write_witsml1__yAxisAzimuth(struct soap *soap, witsml1__yAxisAzimuth const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:yAxisAzimuth", "witsml1:yAxisAzimuth") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__yAxisAzimuth * SOAP_FMAC4 soap_get_witsml1__yAxisAzimuth(struct soap*, witsml1__yAxisAzimuth *, const char*, const char*);

inline int soap_read_witsml1__yAxisAzimuth(struct soap *soap, witsml1__yAxisAzimuth *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__yAxisAzimuth(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedTimeZone_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__timestampedTimeZone_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__timestampedTimeZone(struct soap*, const char*, int, const witsml1__timestampedTimeZone *, const char*);
SOAP_FMAC3 witsml1__timestampedTimeZone * SOAP_FMAC4 soap_in_witsml1__timestampedTimeZone(struct soap*, const char*, witsml1__timestampedTimeZone *, const char*);
SOAP_FMAC1 witsml1__timestampedTimeZone * SOAP_FMAC2 soap_instantiate_witsml1__timestampedTimeZone(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__timestampedTimeZone * soap_new_witsml1__timestampedTimeZone(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__timestampedTimeZone(soap, n, NULL, NULL, NULL);
}

inline witsml1__timestampedTimeZone * soap_new_req_witsml1__timestampedTimeZone(
	struct soap *soap,
	const std::string& __item)
{
	witsml1__timestampedTimeZone *_p = soap_new_witsml1__timestampedTimeZone(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__timestampedTimeZone::__item = __item;
	}
	return _p;
}

inline witsml1__timestampedTimeZone * soap_new_set_witsml1__timestampedTimeZone(
	struct soap *soap,
	const std::string& __item,
	time_t *dTim)
{
	witsml1__timestampedTimeZone *_p = soap_new_witsml1__timestampedTimeZone(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__timestampedTimeZone::__item = __item;
		_p->witsml1__timestampedTimeZone::dTim = dTim;
	}
	return _p;
}

inline int soap_write_witsml1__timestampedTimeZone(struct soap *soap, witsml1__timestampedTimeZone const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:timestampedTimeZone", "witsml1:timestampedTimeZone") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__timestampedTimeZone * SOAP_FMAC4 soap_get_witsml1__timestampedTimeZone(struct soap*, witsml1__timestampedTimeZone *, const char*, const char*);

inline int soap_read_witsml1__timestampedTimeZone(struct soap *soap, witsml1__timestampedTimeZone *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__timestampedTimeZone(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentFileCreation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentFileCreation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREdocumentFileCreation(struct soap*, const char*, int, const witsml1__cs_USCOREdocumentFileCreation *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentFileCreation * SOAP_FMAC4 soap_in_witsml1__cs_USCOREdocumentFileCreation(struct soap*, const char*, witsml1__cs_USCOREdocumentFileCreation *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREdocumentFileCreation * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentFileCreation(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREdocumentFileCreation * soap_new_witsml1__cs_USCOREdocumentFileCreation(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREdocumentFileCreation(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREdocumentFileCreation * soap_new_req_witsml1__cs_USCOREdocumentFileCreation(
	struct soap *soap,
	time_t fileCreationDate)
{
	witsml1__cs_USCOREdocumentFileCreation *_p = soap_new_witsml1__cs_USCOREdocumentFileCreation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREdocumentFileCreation::fileCreationDate = fileCreationDate;
	}
	return _p;
}

inline witsml1__cs_USCOREdocumentFileCreation * soap_new_set_witsml1__cs_USCOREdocumentFileCreation(
	struct soap *soap,
	time_t fileCreationDate,
	std::string *softwareName,
	std::string *fileCreator,
	std::string *comment)
{
	witsml1__cs_USCOREdocumentFileCreation *_p = soap_new_witsml1__cs_USCOREdocumentFileCreation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREdocumentFileCreation::fileCreationDate = fileCreationDate;
		_p->witsml1__cs_USCOREdocumentFileCreation::softwareName = softwareName;
		_p->witsml1__cs_USCOREdocumentFileCreation::fileCreator = fileCreator;
		_p->witsml1__cs_USCOREdocumentFileCreation::comment = comment;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREdocumentFileCreation(struct soap *soap, witsml1__cs_USCOREdocumentFileCreation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_documentFileCreation", "witsml1:cs_documentFileCreation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREdocumentFileCreation * SOAP_FMAC4 soap_get_witsml1__cs_USCOREdocumentFileCreation(struct soap*, witsml1__cs_USCOREdocumentFileCreation *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREdocumentFileCreation(struct soap *soap, witsml1__cs_USCOREdocumentFileCreation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREdocumentFileCreation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentInfo_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__cs_USCOREdocumentInfo_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__cs_USCOREdocumentInfo(struct soap*, const char*, int, const witsml1__cs_USCOREdocumentInfo *, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentInfo * SOAP_FMAC4 soap_in_witsml1__cs_USCOREdocumentInfo(struct soap*, const char*, witsml1__cs_USCOREdocumentInfo *, const char*);
SOAP_FMAC1 witsml1__cs_USCOREdocumentInfo * SOAP_FMAC2 soap_instantiate_witsml1__cs_USCOREdocumentInfo(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__cs_USCOREdocumentInfo * soap_new_witsml1__cs_USCOREdocumentInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__cs_USCOREdocumentInfo(soap, n, NULL, NULL, NULL);
}

inline witsml1__cs_USCOREdocumentInfo * soap_new_req_witsml1__cs_USCOREdocumentInfo(
	struct soap *soap,
	witsml1__nameStruct *documentName)
{
	witsml1__cs_USCOREdocumentInfo *_p = soap_new_witsml1__cs_USCOREdocumentInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREdocumentInfo::documentName = documentName;
	}
	return _p;
}

inline witsml1__cs_USCOREdocumentInfo * soap_new_set_witsml1__cs_USCOREdocumentInfo(
	struct soap *soap,
	witsml1__nameStruct *documentName,
	const std::vector<witsml1__nameStruct *> & documentAlias,
	time_t *documentDate,
	const std::vector<witsml1__nameStruct *> & documentClass,
	witsml1__cs_USCOREdocumentFileCreation *fileCreationInformation,
	const std::vector<witsml1__cs_USCOREdocumentSecurityInfo *> & securityInformation,
	std::string *disclaimer,
	witsml1__cs_USCOREdocumentAudit *auditTrail,
	std::string *owner,
	std::string *comment)
{
	witsml1__cs_USCOREdocumentInfo *_p = soap_new_witsml1__cs_USCOREdocumentInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__cs_USCOREdocumentInfo::documentName = documentName;
		_p->witsml1__cs_USCOREdocumentInfo::documentAlias = documentAlias;
		_p->witsml1__cs_USCOREdocumentInfo::documentDate = documentDate;
		_p->witsml1__cs_USCOREdocumentInfo::documentClass = documentClass;
		_p->witsml1__cs_USCOREdocumentInfo::fileCreationInformation = fileCreationInformation;
		_p->witsml1__cs_USCOREdocumentInfo::securityInformation = securityInformation;
		_p->witsml1__cs_USCOREdocumentInfo::disclaimer = disclaimer;
		_p->witsml1__cs_USCOREdocumentInfo::auditTrail = auditTrail;
		_p->witsml1__cs_USCOREdocumentInfo::owner = owner;
		_p->witsml1__cs_USCOREdocumentInfo::comment = comment;
	}
	return _p;
}

inline int soap_write_witsml1__cs_USCOREdocumentInfo(struct soap *soap, witsml1__cs_USCOREdocumentInfo const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:cs_documentInfo", "witsml1:cs_documentInfo") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__cs_USCOREdocumentInfo * SOAP_FMAC4 soap_get_witsml1__cs_USCOREdocumentInfo(struct soap*, witsml1__cs_USCOREdocumentInfo *, const char*, const char*);

inline int soap_read_witsml1__cs_USCOREdocumentInfo(struct soap *soap, witsml1__cs_USCOREdocumentInfo *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__cs_USCOREdocumentInfo(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwell_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwell_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREwell(struct soap*, const char*, int, const witsml1__obj_USCOREwell *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREwell * SOAP_FMAC4 soap_in_witsml1__obj_USCOREwell(struct soap*, const char*, witsml1__obj_USCOREwell *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREwell * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREwell(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREwell * soap_new_witsml1__obj_USCOREwell(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREwell(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREwell * soap_new_req_witsml1__obj_USCOREwell(
	struct soap *soap,
	const std::string& name)
{
	witsml1__obj_USCOREwell *_p = soap_new_witsml1__obj_USCOREwell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREwell::name = name;
	}
	return _p;
}

inline witsml1__obj_USCOREwell * soap_new_set_witsml1__obj_USCOREwell(
	struct soap *soap,
	const std::string& name,
	__witsml1__obj_USCOREwell_sequence *__obj_USCOREwell_sequence,
	witsml1__cs_USCOREcommonData *commonData,
	witsml1__cs_USCOREcustomData *customData,
	std::string *uid)
{
	witsml1__obj_USCOREwell *_p = soap_new_witsml1__obj_USCOREwell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREwell::name = name;
		_p->witsml1__obj_USCOREwell::__obj_USCOREwell_sequence = __obj_USCOREwell_sequence;
		_p->witsml1__obj_USCOREwell::commonData = commonData;
		_p->witsml1__obj_USCOREwell::customData = customData;
		_p->witsml1__obj_USCOREwell::uid = uid;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREwell(struct soap *soap, witsml1__obj_USCOREwell const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_well", "witsml1:obj_well") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREwell * SOAP_FMAC4 soap_get_witsml1__obj_USCOREwell(struct soap*, witsml1__obj_USCOREwell *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREwell(struct soap *soap, witsml1__obj_USCOREwell *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREwell(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwells_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_witsml1__obj_USCOREwells_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_witsml1__obj_USCOREwells(struct soap*, const char*, int, const witsml1__obj_USCOREwells *, const char*);
SOAP_FMAC3 witsml1__obj_USCOREwells * SOAP_FMAC4 soap_in_witsml1__obj_USCOREwells(struct soap*, const char*, witsml1__obj_USCOREwells *, const char*);
SOAP_FMAC1 witsml1__obj_USCOREwells * SOAP_FMAC2 soap_instantiate_witsml1__obj_USCOREwells(struct soap*, int, const char*, const char*, size_t*);

inline witsml1__obj_USCOREwells * soap_new_witsml1__obj_USCOREwells(struct soap *soap, int n = -1)
{
	return soap_instantiate_witsml1__obj_USCOREwells(soap, n, NULL, NULL, NULL);
}

inline witsml1__obj_USCOREwells * soap_new_req_witsml1__obj_USCOREwells(
	struct soap *soap,
	const std::vector<witsml1__obj_USCOREwell *> & well,
	const std::string& version)
{
	witsml1__obj_USCOREwells *_p = soap_new_witsml1__obj_USCOREwells(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREwells::well = well;
		_p->witsml1__obj_USCOREwells::version = version;
	}
	return _p;
}

inline witsml1__obj_USCOREwells * soap_new_set_witsml1__obj_USCOREwells(
	struct soap *soap,
	witsml1__cs_USCOREdocumentInfo *documentInfo,
	const std::vector<witsml1__obj_USCOREwell *> & well,
	const std::string& version)
{
	witsml1__obj_USCOREwells *_p = soap_new_witsml1__obj_USCOREwells(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->witsml1__obj_USCOREwells::documentInfo = documentInfo;
		_p->witsml1__obj_USCOREwells::well = well;
		_p->witsml1__obj_USCOREwells::version = version;
	}
	return _p;
}

inline int soap_write_witsml1__obj_USCOREwells(struct soap *soap, witsml1__obj_USCOREwells const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "witsml1:obj_wells", "witsml1:obj_wells") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 witsml1__obj_USCOREwells * SOAP_FMAC4 soap_get_witsml1__obj_USCOREwells(struct soap*, witsml1__obj_USCOREwells *, const char*, const char*);

inline int soap_read_witsml1__obj_USCOREwells(struct soap *soap, witsml1__obj_USCOREwells *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_witsml1__obj_USCOREwells(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__date_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__date_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__date(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__date(struct soap*, const std::string *);

#define soap_xsd__date2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__date(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__date(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__date(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__date soap_instantiate_std__string


#define soap_new_xsd__date soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__date(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_xsd__date(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_xsd__date(soap, p, "xsd:date", "xsd:date") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__date(struct soap*, std::string *, const char*, const char*);

inline int soap_read_xsd__date(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_xsd__date(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__anyURI_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__anyURI_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__anyURI(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, const std::string *);

#define soap_xsd__anyURI2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__anyURI(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__anyURI soap_instantiate_std__string


#define soap_new_xsd__anyURI soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_xsd__anyURI(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_xsd__anyURI(soap, p, "xsd:anyURI", "xsd:anyURI") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, std::string *, const char*, const char*);

inline int soap_read_xsd__anyURI(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_xsd__anyURI(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__ID_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_xsd__ID_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__ID(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__ID(struct soap*, const std::string *);

#define soap_xsd__ID2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__ID(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__ID(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__ID(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__ID soap_instantiate_std__string


#define soap_new_xsd__ID soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__ID(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_xsd__ID(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_xsd__ID(soap, p, "xsd:ID", "xsd:ID") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__ID(struct soap*, std::string *, const char*, const char*);

inline int soap_read_xsd__ID(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_xsd__ID(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__string_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);

#define soap_std__string2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2std__string(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__string(soap, n, NULL, NULL, NULL);
}

inline std::string * soap_new_req_std__string(
	struct soap *soap)
{
	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}

inline std::string * soap_new_set_std__string(
	struct soap *soap)
{
	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_std__string(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_std__string(soap, p, "string", "xsd:string") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

inline int soap_read_std__string(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_std__string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{
	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{
	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_write_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, p), 0) || soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_read_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Fault(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Fault(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{
	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{
	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_write_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, p), 0) || soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_read_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Reason(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Reason(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_write_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, p), 0) || soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_read_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Detail(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Detail(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{
	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{
	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_write_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, p), 0) || soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_read_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Code(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Code(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_write_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, p), 0) || soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_read_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Header(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Header(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_ProjectedCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_ProjectedCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_ProjectedCRSType(struct soap*, int, const union _gml__union_ProjectedCRSType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_ProjectedCRSType(struct soap*, int, const union _gml__union_ProjectedCRSType *);
SOAP_FMAC3 union _gml__union_ProjectedCRSType * SOAP_FMAC4 soap_in__gml__union_ProjectedCRSType(struct soap*, int*, union _gml__union_ProjectedCRSType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_GeodeticCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_GeodeticCRSType(struct soap*, int, const union _gml__union_GeodeticCRSType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_GeodeticCRSType(struct soap*, int, const union _gml__union_GeodeticCRSType *);
SOAP_FMAC3 union _gml__union_GeodeticCRSType * SOAP_FMAC4 soap_in__gml__union_GeodeticCRSType(struct soap*, int*, union _gml__union_GeodeticCRSType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gsr__union_SC_USCORECRS_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gsr__union_SC_USCORECRS_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gsr__union_SC_USCORECRS_USCOREPropertyType(struct soap*, int, const union _gsr__union_SC_USCORECRS_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gsr__union_SC_USCORECRS_USCOREPropertyType(struct soap*, int, const union _gsr__union_SC_USCORECRS_USCOREPropertyType *);
SOAP_FMAC3 union _gsr__union_SC_USCORECRS_USCOREPropertyType * SOAP_FMAC4 soap_in__gsr__union_SC_USCORECRS_USCOREPropertyType(struct soap*, int*, union _gsr__union_SC_USCORECRS_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__union_Date_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__union_Date_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gco__union_Date_USCOREPropertyType(struct soap*, int, const union _gco__union_Date_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gco__union_Date_USCOREPropertyType(struct soap*, int, const union _gco__union_Date_USCOREPropertyType *);
SOAP_FMAC3 union _gco__union_Date_USCOREPropertyType * SOAP_FMAC4 soap_in__gco__union_Date_USCOREPropertyType(struct soap*, int*, union _gco__union_Date_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gco__union_CharacterString_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gco__union_CharacterString_USCOREPropertyType(struct soap*, int, const union _gco__union_CharacterString_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gco__union_CharacterString_USCOREPropertyType(struct soap*, int, const union _gco__union_CharacterString_USCOREPropertyType *);
SOAP_FMAC3 union _gco__union_CharacterString_USCOREPropertyType * SOAP_FMAC4 soap_in__gco__union_CharacterString_USCOREPropertyType(struct soap*, int*, union _gco__union_CharacterString_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gts__union_TM_USCOREPrimitive_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gts__union_TM_USCOREPrimitive_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gts__union_TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int, const union _gts__union_TM_USCOREPrimitive_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gts__union_TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int, const union _gts__union_TM_USCOREPrimitive_USCOREPropertyType *);
SOAP_FMAC3 union _gts__union_TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC4 soap_in__gts__union_TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int*, union _gts__union_TM_USCOREPrimitive_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__union_DQ_USCOREResult_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__union_DQ_USCOREResult_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gmd__union_DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const union _gmd__union_DQ_USCOREResult_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gmd__union_DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const union _gmd__union_DQ_USCOREResult_USCOREPropertyType *);
SOAP_FMAC3 union _gmd__union_DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC4 soap_in__gmd__union_DQ_USCOREResult_USCOREPropertyType(struct soap*, int*, union _gmd__union_DQ_USCOREResult_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType *);
SOAP_FMAC3 union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC4 soap_in__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int*, union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_coordinateOperationAccuracy_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_coordinateOperationAccuracy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_coordinateOperationAccuracy(struct soap*, int, const union _gml__union_coordinateOperationAccuracy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_coordinateOperationAccuracy(struct soap*, int, const union _gml__union_coordinateOperationAccuracy *);
SOAP_FMAC3 union _gml__union_coordinateOperationAccuracy * SOAP_FMAC4 soap_in__gml__union_coordinateOperationAccuracy(struct soap*, int*, union _gml__union_coordinateOperationAccuracy *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_SecondDefiningParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_SecondDefiningParameter(struct soap*, int, const union _gml__union_SecondDefiningParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_SecondDefiningParameter(struct soap*, int, const union _gml__union_SecondDefiningParameter *);
SOAP_FMAC3 union _gml__union_SecondDefiningParameter * SOAP_FMAC4 soap_in__gml__union_SecondDefiningParameter(struct soap*, int*, union _gml__union_SecondDefiningParameter *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_CRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_CRSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_CRSPropertyType(struct soap*, int, const union _gml__union_CRSPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_CRSPropertyType(struct soap*, int, const union _gml__union_CRSPropertyType *);
SOAP_FMAC3 union _gml__union_CRSPropertyType * SOAP_FMAC4 soap_in__gml__union_CRSPropertyType(struct soap*, int*, union _gml__union_CRSPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_GeneralConversionPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_GeneralConversionPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_GeneralConversionPropertyType(struct soap*, int, const union _gml__union_GeneralConversionPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_GeneralConversionPropertyType(struct soap*, int, const union _gml__union_GeneralConversionPropertyType *);
SOAP_FMAC3 union _gml__union_GeneralConversionPropertyType * SOAP_FMAC4 soap_in__gml__union_GeneralConversionPropertyType(struct soap*, int*, union _gml__union_GeneralConversionPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_TimePrimitivePropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__gml__union_TimePrimitivePropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_TimePrimitivePropertyType(struct soap*, int, const union _gml__union_TimePrimitivePropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_TimePrimitivePropertyType(struct soap*, int, const union _gml__union_TimePrimitivePropertyType *);
SOAP_FMAC3 union _gml__union_TimePrimitivePropertyType * SOAP_FMAC4 soap_in__gml__union_TimePrimitivePropertyType(struct soap*, int*, union _gml__union_TimePrimitivePropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardVerticalCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardVerticalCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__witsml1__union_cs_USCOREstandardVerticalCRS(struct soap*, int, const union _witsml1__union_cs_USCOREstandardVerticalCRS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__witsml1__union_cs_USCOREstandardVerticalCRS(struct soap*, int, const union _witsml1__union_cs_USCOREstandardVerticalCRS *);
SOAP_FMAC3 union _witsml1__union_cs_USCOREstandardVerticalCRS * SOAP_FMAC4 soap_in__witsml1__union_cs_USCOREstandardVerticalCRS(struct soap*, int*, union _witsml1__union_cs_USCOREstandardVerticalCRS *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardProjectedCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardProjectedCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__witsml1__union_cs_USCOREstandardProjectedCRS(struct soap*, int, const union _witsml1__union_cs_USCOREstandardProjectedCRS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__witsml1__union_cs_USCOREstandardProjectedCRS(struct soap*, int, const union _witsml1__union_cs_USCOREstandardProjectedCRS *);
SOAP_FMAC3 union _witsml1__union_cs_USCOREstandardProjectedCRS * SOAP_FMAC4 soap_in__witsml1__union_cs_USCOREstandardProjectedCRS(struct soap*, int*, union _witsml1__union_cs_USCOREstandardProjectedCRS *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardGeodeticCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREstandardGeodeticCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__witsml1__union_cs_USCOREstandardGeodeticCRS(struct soap*, int, const union _witsml1__union_cs_USCOREstandardGeodeticCRS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__witsml1__union_cs_USCOREstandardGeodeticCRS(struct soap*, int, const union _witsml1__union_cs_USCOREstandardGeodeticCRS *);
SOAP_FMAC3 union _witsml1__union_cs_USCOREstandardGeodeticCRS * SOAP_FMAC4 soap_in__witsml1__union_cs_USCOREstandardGeodeticCRS(struct soap*, int*, union _witsml1__union_cs_USCOREstandardGeodeticCRS *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_obj_USCOREcoordinateReferenceSystem_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__witsml1__union_obj_USCOREcoordinateReferenceSystem(struct soap*, int, const union _witsml1__union_obj_USCOREcoordinateReferenceSystem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__witsml1__union_obj_USCOREcoordinateReferenceSystem(struct soap*, int, const union _witsml1__union_obj_USCOREcoordinateReferenceSystem *);
SOAP_FMAC3 union _witsml1__union_obj_USCOREcoordinateReferenceSystem * SOAP_FMAC4 soap_in__witsml1__union_obj_USCOREcoordinateReferenceSystem(struct soap*, int*, union _witsml1__union_obj_USCOREcoordinateReferenceSystem *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREaxisDefinition_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREaxisDefinition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__witsml1__union_cs_USCOREaxisDefinition(struct soap*, int, const union _witsml1__union_cs_USCOREaxisDefinition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__witsml1__union_cs_USCOREaxisDefinition(struct soap*, int, const union _witsml1__union_cs_USCOREaxisDefinition *);
SOAP_FMAC3 union _witsml1__union_cs_USCOREaxisDefinition * SOAP_FMAC4 soap_in__witsml1__union_cs_USCOREaxisDefinition(struct soap*, int*, union _witsml1__union_cs_USCOREaxisDefinition *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCORElocalCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__witsml1__union_cs_USCORElocalCRS(struct soap*, int, const union _witsml1__union_cs_USCORElocalCRS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__witsml1__union_cs_USCORElocalCRS(struct soap*, int, const union _witsml1__union_cs_USCORElocalCRS *);
SOAP_FMAC3 union _witsml1__union_cs_USCORElocalCRS * SOAP_FMAC4 soap_in__witsml1__union_cs_USCORElocalCRS(struct soap*, int*, union _witsml1__union_cs_USCORElocalCRS *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__witsml1__union_cs_USCOREwellCRS(struct soap*, int, const union _witsml1__union_cs_USCOREwellCRS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__witsml1__union_cs_USCOREwellCRS(struct soap*, int, const union _witsml1__union_cs_USCOREwellCRS *);
SOAP_FMAC3 union _witsml1__union_cs_USCOREwellCRS * SOAP_FMAC4 soap_in__witsml1__union_cs_USCOREwellCRS(struct soap*, int*, union _witsml1__union_cs_USCOREwellCRS *);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__witsml1__union_cs_USCOREwellDatum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__witsml1__union_cs_USCOREwellDatum(struct soap*, int, const union _witsml1__union_cs_USCOREwellDatum *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__witsml1__union_cs_USCOREwellDatum(struct soap*, int, const union _witsml1__union_cs_USCOREwellDatum *);
SOAP_FMAC3 union _witsml1__union_cs_USCOREwellDatum * SOAP_FMAC4 soap_in__witsml1__union_cs_USCOREwellDatum(struct soap*, int*, union _witsml1__union_cs_USCOREwellDatum *);
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticCRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticCRSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeodeticCRSPropertyType(struct soap*, gml__GeodeticCRSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeodeticCRSPropertyType(struct soap*, const char *, int, gml__GeodeticCRSPropertyType *const*, const char *);
SOAP_FMAC3 gml__GeodeticCRSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__GeodeticCRSPropertyType(struct soap*, const char*, gml__GeodeticCRSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeodeticCRSPropertyType(struct soap*, gml__GeodeticCRSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeodeticCRSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__GeodeticCRSPropertyType(struct soap*, gml__GeodeticCRSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalDatumPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalDatumPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalDatumPropertyType(struct soap*, gml__VerticalDatumPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalDatumPropertyType(struct soap*, const char *, int, gml__VerticalDatumPropertyType *const*, const char *);
SOAP_FMAC3 gml__VerticalDatumPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalDatumPropertyType(struct soap*, const char*, gml__VerticalDatumPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalDatumPropertyType(struct soap*, gml__VerticalDatumPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalDatumPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalDatumPropertyType(struct soap*, gml__VerticalDatumPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalCSPropertyType(struct soap*, gml__VerticalCSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalCSPropertyType(struct soap*, const char *, int, gml__VerticalCSPropertyType *const*, const char *);
SOAP_FMAC3 gml__VerticalCSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalCSPropertyType(struct soap*, const char*, gml__VerticalCSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalCSPropertyType(struct soap*, gml__VerticalCSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalCSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalCSPropertyType(struct soap*, gml__VerticalCSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeneralConversionPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeneralConversionPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeneralConversionPropertyType(struct soap*, gml__GeneralConversionPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeneralConversionPropertyType(struct soap*, const char *, int, gml__GeneralConversionPropertyType *const*, const char *);
SOAP_FMAC3 gml__GeneralConversionPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__GeneralConversionPropertyType(struct soap*, const char*, gml__GeneralConversionPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeneralConversionPropertyType(struct soap*, gml__GeneralConversionPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeneralConversionPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__GeneralConversionPropertyType(struct soap*, gml__GeneralConversionPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__EllipsoidPropertyType(struct soap*, gml__EllipsoidPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__EllipsoidPropertyType(struct soap*, const char *, int, gml__EllipsoidPropertyType *const*, const char *);
SOAP_FMAC3 gml__EllipsoidPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__EllipsoidPropertyType(struct soap*, const char*, gml__EllipsoidPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__EllipsoidPropertyType(struct soap*, gml__EllipsoidPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__EllipsoidPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__EllipsoidPropertyType(struct soap*, gml__EllipsoidPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__PrimeMeridianPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__PrimeMeridianPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__PrimeMeridianPropertyType(struct soap*, gml__PrimeMeridianPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__PrimeMeridianPropertyType(struct soap*, const char *, int, gml__PrimeMeridianPropertyType *const*, const char *);
SOAP_FMAC3 gml__PrimeMeridianPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__PrimeMeridianPropertyType(struct soap*, const char*, gml__PrimeMeridianPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__PrimeMeridianPropertyType(struct soap*, gml__PrimeMeridianPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__PrimeMeridianPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__PrimeMeridianPropertyType(struct soap*, gml__PrimeMeridianPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticDatumPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticDatumPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeodeticDatumPropertyType(struct soap*, gml__GeodeticDatumPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeodeticDatumPropertyType(struct soap*, const char *, int, gml__GeodeticDatumPropertyType *const*, const char *);
SOAP_FMAC3 gml__GeodeticDatumPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__GeodeticDatumPropertyType(struct soap*, const char*, gml__GeodeticDatumPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeodeticDatumPropertyType(struct soap*, gml__GeodeticDatumPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeodeticDatumPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__GeodeticDatumPropertyType(struct soap*, gml__GeodeticDatumPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__SphericalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__SphericalCSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__SphericalCSPropertyType(struct soap*, gml__SphericalCSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__SphericalCSPropertyType(struct soap*, const char *, int, gml__SphericalCSPropertyType *const*, const char *);
SOAP_FMAC3 gml__SphericalCSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__SphericalCSPropertyType(struct soap*, const char*, gml__SphericalCSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__SphericalCSPropertyType(struct soap*, gml__SphericalCSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__SphericalCSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__SphericalCSPropertyType(struct soap*, gml__SphericalCSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CartesianCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CartesianCSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CartesianCSPropertyType(struct soap*, gml__CartesianCSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CartesianCSPropertyType(struct soap*, const char *, int, gml__CartesianCSPropertyType *const*, const char *);
SOAP_FMAC3 gml__CartesianCSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__CartesianCSPropertyType(struct soap*, const char*, gml__CartesianCSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CartesianCSPropertyType(struct soap*, gml__CartesianCSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__CartesianCSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__CartesianCSPropertyType(struct soap*, gml__CartesianCSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidalCSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__EllipsoidalCSPropertyType(struct soap*, gml__EllipsoidalCSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__EllipsoidalCSPropertyType(struct soap*, const char *, int, gml__EllipsoidalCSPropertyType *const*, const char *);
SOAP_FMAC3 gml__EllipsoidalCSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__EllipsoidalCSPropertyType(struct soap*, const char*, gml__EllipsoidalCSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__EllipsoidalCSPropertyType(struct soap*, gml__EllipsoidalCSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__EllipsoidalCSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__EllipsoidalCSPropertyType(struct soap*, gml__EllipsoidalCSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CRSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CRSPropertyType(struct soap*, gml__CRSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CRSPropertyType(struct soap*, const char *, int, gml__CRSPropertyType *const*, const char *);
SOAP_FMAC3 gml__CRSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__CRSPropertyType(struct soap*, const char*, gml__CRSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CRSPropertyType(struct soap*, gml__CRSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__CRSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__CRSPropertyType(struct soap*, gml__CRSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__coordinateOperationAccuracy_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__coordinateOperationAccuracy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__coordinateOperationAccuracy(struct soap*, const char *, int, _gml__coordinateOperationAccuracy *const*, const char *);
SOAP_FMAC3 _gml__coordinateOperationAccuracy ** SOAP_FMAC4 soap_in_PointerTo_gml__coordinateOperationAccuracy(struct soap*, const char*, _gml__coordinateOperationAccuracy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy *const*, const char*, const char*);
SOAP_FMAC3 _gml__coordinateOperationAccuracy ** SOAP_FMAC4 soap_get_PointerTo_gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__secondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__secondDefiningParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__secondDefiningParameter(struct soap*, const char *, int, _gml__secondDefiningParameter *const*, const char *);
SOAP_FMAC3 _gml__secondDefiningParameter ** SOAP_FMAC4 soap_in_PointerTo_gml__secondDefiningParameter(struct soap*, const char*, _gml__secondDefiningParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter *const*, const char*, const char*);
SOAP_FMAC3 _gml__secondDefiningParameter ** SOAP_FMAC4 soap_get_PointerTo_gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__AngleType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__AngleType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__AngleType(struct soap*, gml__AngleType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__AngleType(struct soap*, const char *, int, gml__AngleType *const*, const char *);
SOAP_FMAC3 gml__AngleType ** SOAP_FMAC4 soap_in_PointerTogml__AngleType(struct soap*, const char*, gml__AngleType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__AngleType(struct soap*, gml__AngleType *const*, const char*, const char*);
SOAP_FMAC3 gml__AngleType ** SOAP_FMAC4 soap_get_PointerTogml__AngleType(struct soap*, gml__AngleType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__date_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__date_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__date(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__date(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__date(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__date(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__date(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTodouble_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTodouble_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodouble(struct soap*, double *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodouble(struct soap*, const char *, int, double *const*, const char *);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_in_PointerTodouble(struct soap*, const char*, double **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodouble(struct soap*, double *const*, const char*, const char*);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_get_PointerTodouble(struct soap*, double **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__AggregationType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__AggregationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__AggregationType(struct soap*, enum gml__AggregationType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__AggregationType(struct soap*, const char *, int, enum gml__AggregationType *const*, const char *);
SOAP_FMAC3 enum gml__AggregationType ** SOAP_FMAC4 soap_in_PointerTogml__AggregationType(struct soap*, const char*, enum gml__AggregationType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__AggregationType(struct soap*, enum gml__AggregationType *const*, const char*, const char*);
SOAP_FMAC3 enum gml__AggregationType ** SOAP_FMAC4 soap_get_PointerTogml__AggregationType(struct soap*, enum gml__AggregationType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CoordinateSystemAxisPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CoordinateSystemAxisPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, gml__CoordinateSystemAxisPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const char *, int, gml__CoordinateSystemAxisPropertyType *const*, const char *);
SOAP_FMAC3 gml__CoordinateSystemAxisPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const char*, gml__CoordinateSystemAxisPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, gml__CoordinateSystemAxisPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__CoordinateSystemAxisPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, gml__CoordinateSystemAxisPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__domainOfValidity_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__domainOfValidity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__domainOfValidity(struct soap*, _gml__domainOfValidity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__domainOfValidity(struct soap*, const char *, int, _gml__domainOfValidity *const*, const char *);
SOAP_FMAC3 _gml__domainOfValidity ** SOAP_FMAC4 soap_in_PointerTo_gml__domainOfValidity(struct soap*, const char*, _gml__domainOfValidity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__domainOfValidity(struct soap*, _gml__domainOfValidity *const*, const char*, const char*);
SOAP_FMAC3 _gml__domainOfValidity ** SOAP_FMAC4 soap_get_PointerTo_gml__domainOfValidity(struct soap*, _gml__domainOfValidity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refWellDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refWellDatum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__refWellDatum(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__refWellDatum(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__refWellDatum(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__refWellDatum(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__refWellDatum(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ChronostratigraphyUnit_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ChronostratigraphyUnit_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__ChronostratigraphyUnit(struct soap*, enum witsml1__ChronostratigraphyUnit *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__ChronostratigraphyUnit(struct soap*, const char *, int, enum witsml1__ChronostratigraphyUnit *const*, const char *);
SOAP_FMAC3 enum witsml1__ChronostratigraphyUnit ** SOAP_FMAC4 soap_in_PointerTowitsml1__ChronostratigraphyUnit(struct soap*, const char*, enum witsml1__ChronostratigraphyUnit **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__ChronostratigraphyUnit(struct soap*, enum witsml1__ChronostratigraphyUnit *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__ChronostratigraphyUnit ** SOAP_FMAC4 soap_get_PointerTowitsml1__ChronostratigraphyUnit(struct soap*, enum witsml1__ChronostratigraphyUnit **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LithostratigraphyUnit_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LithostratigraphyUnit_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__LithostratigraphyUnit(struct soap*, enum witsml1__LithostratigraphyUnit *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__LithostratigraphyUnit(struct soap*, const char *, int, enum witsml1__LithostratigraphyUnit *const*, const char *);
SOAP_FMAC3 enum witsml1__LithostratigraphyUnit ** SOAP_FMAC4 soap_in_PointerTowitsml1__LithostratigraphyUnit(struct soap*, const char*, enum witsml1__LithostratigraphyUnit **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__LithostratigraphyUnit(struct soap*, enum witsml1__LithostratigraphyUnit *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__LithostratigraphyUnit ** SOAP_FMAC4 soap_get_PointerTowitsml1__LithostratigraphyUnit(struct soap*, enum witsml1__LithostratigraphyUnit **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__refString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__refString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__refString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__refString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__refString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__RelatedTimeType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__RelatedTimeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__RelatedTimeType(struct soap*, gml__RelatedTimeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__RelatedTimeType(struct soap*, const char *, int, gml__RelatedTimeType *const*, const char *);
SOAP_FMAC3 gml__RelatedTimeType ** SOAP_FMAC4 soap_in_PointerTogml__RelatedTimeType(struct soap*, const char*, gml__RelatedTimeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__RelatedTimeType(struct soap*, gml__RelatedTimeType *const*, const char*, const char*);
SOAP_FMAC3 gml__RelatedTimeType ** SOAP_FMAC4 soap_get_PointerTogml__RelatedTimeType(struct soap*, gml__RelatedTimeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__URL_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__URL_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__URL_USCOREPropertyType(struct soap*, gmd__URL_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__URL_USCOREPropertyType(struct soap*, const char *, int, gmd__URL_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__URL_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__URL_USCOREPropertyType(struct soap*, const char*, gmd__URL_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__URL_USCOREPropertyType(struct soap*, gmd__URL_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__URL_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__URL_USCOREPropertyType(struct soap*, gmd__URL_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREOnlineResource_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREOnlineResource_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREAddress_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREAddress_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, gmd__CI_USCOREAddress_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREAddress_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREAddress_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, gmd__CI_USCOREAddress_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, gmd__CI_USCOREAddress_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORETelephone_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORETelephone_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, gmd__CI_USCORETelephone_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCORETelephone_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORETelephone_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, gmd__CI_USCORETelephone_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, gmd__CI_USCORETelephone_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, gmd__CI_USCORERoleCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCORERoleCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORERoleCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORERoleCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, gmd__CI_USCORERoleCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORERoleCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, gmd__CI_USCORERoleCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREContact_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREContact_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, gmd__CI_USCOREContact_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREContact_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREContact_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, gmd__CI_USCOREContact_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, gmd__CI_USCOREContact_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREDateTypeCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREDateTypeCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORESeries_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORESeries_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, gmd__CI_USCORESeries_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCORESeries_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORESeries_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, gmd__CI_USCORESeries_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, gmd__CI_USCORESeries_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Date_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Date_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__Date_USCOREPropertyType(struct soap*, gco__Date_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__Date_USCOREPropertyType(struct soap*, const char *, int, gco__Date_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__Date_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__Date_USCOREPropertyType(struct soap*, const char*, gco__Date_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__Date_USCOREPropertyType(struct soap*, gco__Date_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__Date_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__Date_USCOREPropertyType(struct soap*, gco__Date_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDate_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDate_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, gmd__CI_USCOREDate_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREDate_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREDate_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, gmd__CI_USCOREDate_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, gmd__CI_USCOREDate_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, gmd__DQ_USCOREResult_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char *, int, gmd__DQ_USCOREResult_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__DQ_USCOREResult_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, gmd__DQ_USCOREResult_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, gmd__DQ_USCOREResult_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__DQ_USCOREResult_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, gmd__DQ_USCOREResult_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__DateTime_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__DateTime_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__DateTime_USCOREPropertyType(struct soap*, gco__DateTime_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__DateTime_USCOREPropertyType(struct soap*, const char *, int, gco__DateTime_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__DateTime_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__DateTime_USCOREPropertyType(struct soap*, const char*, gco__DateTime_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__DateTime_USCOREPropertyType(struct soap*, gco__DateTime_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__DateTime_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__DateTime_USCOREPropertyType(struct soap*, gco__DateTime_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORECitation_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORECitation_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, gmd__CI_USCORECitation_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCORECitation_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORECitation_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, gmd__CI_USCORECitation_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, gmd__CI_USCORECitation_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, const char *, int, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, const char*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, gmd__MD_USCOREIdentifier_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char *, int, gmd__MD_USCOREIdentifier_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, gmd__MD_USCOREIdentifier_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, gmd__MD_USCOREIdentifier_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, gmd__MD_USCOREIdentifier_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogsr__SC_USCORECRS_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogsr__SC_USCORECRS_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, gsr__SC_USCORECRS_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, const char *, int, gsr__SC_USCORECRS_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gsr__SC_USCORECRS_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, const char*, gsr__SC_USCORECRS_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, gsr__SC_USCORECRS_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gsr__SC_USCORECRS_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, gsr__SC_USCORECRS_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Real_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Real_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__Real_USCOREPropertyType(struct soap*, gco__Real_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__Real_USCOREPropertyType(struct soap*, const char *, int, gco__Real_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__Real_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__Real_USCOREPropertyType(struct soap*, const char*, gco__Real_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__Real_USCOREPropertyType(struct soap*, gco__Real_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__Real_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__Real_USCOREPropertyType(struct soap*, gco__Real_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, gts__TM_USCOREPrimitive_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, const char *, int, gts__TM_USCOREPrimitive_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gts__TM_USCOREPrimitive_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, const char*, gts__TM_USCOREPrimitive_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, gts__TM_USCOREPrimitive_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gts__TM_USCOREPrimitive_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, gts__TM_USCOREPrimitive_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Boolean_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Boolean_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__Boolean_USCOREPropertyType(struct soap*, gco__Boolean_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__Boolean_USCOREPropertyType(struct soap*, const char *, int, gco__Boolean_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__Boolean_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__Boolean_USCOREPropertyType(struct soap*, const char*, gco__Boolean_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__Boolean_USCOREPropertyType(struct soap*, gco__Boolean_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__Boolean_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__Boolean_USCOREPropertyType(struct soap*, gco__Boolean_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char *, int, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char *, int, gmd__EX_USCORETemporalExtent_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCORETemporalExtent_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char *, int, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCOREGeographicExtent_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCOREGeographicExtent_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__CharacterString_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__CharacterString_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, gco__CharacterString_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, const char *, int, gco__CharacterString_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__CharacterString_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, const char*, gco__CharacterString_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, gco__CharacterString_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__CharacterString_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, gco__CharacterString_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__RelatedTimeType_relativePosition_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__RelatedTimeType_relativePosition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, const char *, int, enum _gml__RelatedTimeType_relativePosition *const*, const char *);
SOAP_FMAC3 enum _gml__RelatedTimeType_relativePosition ** SOAP_FMAC4 soap_in_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, const char*, enum _gml__RelatedTimeType_relativePosition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition *const*, const char*, const char*);
SOAP_FMAC3 enum _gml__RelatedTimeType_relativePosition ** SOAP_FMAC4 soap_get_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREcoordinateReferenceSystem_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREcoordinateReferenceSystem_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, witsml1__obj_USCOREcoordinateReferenceSystem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, const char *, int, witsml1__obj_USCOREcoordinateReferenceSystem *const*, const char *);
SOAP_FMAC3 witsml1__obj_USCOREcoordinateReferenceSystem ** SOAP_FMAC4 soap_in_PointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, const char*, witsml1__obj_USCOREcoordinateReferenceSystem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, witsml1__obj_USCOREcoordinateReferenceSystem *const*, const char*, const char*);
SOAP_FMAC3 witsml1__obj_USCOREcoordinateReferenceSystem ** SOAP_FMAC4 soap_get_PointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, witsml1__obj_USCOREcoordinateReferenceSystem **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREformationMarker_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREformationMarker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__obj_USCOREformationMarker(struct soap*, witsml1__obj_USCOREformationMarker *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__obj_USCOREformationMarker(struct soap*, const char *, int, witsml1__obj_USCOREformationMarker *const*, const char *);
SOAP_FMAC3 witsml1__obj_USCOREformationMarker ** SOAP_FMAC4 soap_in_PointerTowitsml1__obj_USCOREformationMarker(struct soap*, const char*, witsml1__obj_USCOREformationMarker **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__obj_USCOREformationMarker(struct soap*, witsml1__obj_USCOREformationMarker *const*, const char*, const char*);
SOAP_FMAC3 witsml1__obj_USCOREformationMarker ** SOAP_FMAC4 soap_get_PointerTowitsml1__obj_USCOREformationMarker(struct soap*, witsml1__obj_USCOREformationMarker **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCORElog_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCORElog_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__obj_USCORElog(struct soap*, witsml1__obj_USCORElog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__obj_USCORElog(struct soap*, const char *, int, witsml1__obj_USCORElog *const*, const char *);
SOAP_FMAC3 witsml1__obj_USCORElog ** SOAP_FMAC4 soap_in_PointerTowitsml1__obj_USCORElog(struct soap*, const char*, witsml1__obj_USCORElog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__obj_USCORElog(struct soap*, witsml1__obj_USCORElog *const*, const char*, const char*);
SOAP_FMAC3 witsml1__obj_USCORElog ** SOAP_FMAC4 soap_get_PointerTowitsml1__obj_USCORElog(struct soap*, witsml1__obj_USCORElog **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREtrajectory_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREtrajectory_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__obj_USCOREtrajectory(struct soap*, witsml1__obj_USCOREtrajectory *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__obj_USCOREtrajectory(struct soap*, const char *, int, witsml1__obj_USCOREtrajectory *const*, const char *);
SOAP_FMAC3 witsml1__obj_USCOREtrajectory ** SOAP_FMAC4 soap_in_PointerTowitsml1__obj_USCOREtrajectory(struct soap*, const char*, witsml1__obj_USCOREtrajectory **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__obj_USCOREtrajectory(struct soap*, witsml1__obj_USCOREtrajectory *const*, const char*, const char*);
SOAP_FMAC3 witsml1__obj_USCOREtrajectory ** SOAP_FMAC4 soap_get_PointerTowitsml1__obj_USCOREtrajectory(struct soap*, witsml1__obj_USCOREtrajectory **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREwellbore_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREwellbore_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__obj_USCOREwellbore(struct soap*, witsml1__obj_USCOREwellbore *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__obj_USCOREwellbore(struct soap*, const char *, int, witsml1__obj_USCOREwellbore *const*, const char *);
SOAP_FMAC3 witsml1__obj_USCOREwellbore ** SOAP_FMAC4 soap_in_PointerTowitsml1__obj_USCOREwellbore(struct soap*, const char*, witsml1__obj_USCOREwellbore **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__obj_USCOREwellbore(struct soap*, witsml1__obj_USCOREwellbore *const*, const char*, const char*);
SOAP_FMAC3 witsml1__obj_USCOREwellbore ** SOAP_FMAC4 soap_get_PointerTowitsml1__obj_USCOREwellbore(struct soap*, witsml1__obj_USCOREwellbore **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREwell_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__obj_USCOREwell_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__obj_USCOREwell(struct soap*, witsml1__obj_USCOREwell *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__obj_USCOREwell(struct soap*, const char *, int, witsml1__obj_USCOREwell *const*, const char *);
SOAP_FMAC3 witsml1__obj_USCOREwell ** SOAP_FMAC4 soap_in_PointerTowitsml1__obj_USCOREwell(struct soap*, const char*, witsml1__obj_USCOREwell **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__obj_USCOREwell(struct soap*, witsml1__obj_USCOREwell *const*, const char*, const char*);
SOAP_FMAC3 witsml1__obj_USCOREwell ** SOAP_FMAC4 soap_get_PointerTowitsml1__obj_USCOREwell(struct soap*, witsml1__obj_USCOREwell **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentInfo_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREdocumentInfo(struct soap*, witsml1__cs_USCOREdocumentInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREdocumentInfo(struct soap*, const char *, int, witsml1__cs_USCOREdocumentInfo *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREdocumentInfo ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREdocumentInfo(struct soap*, const char*, witsml1__cs_USCOREdocumentInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREdocumentInfo(struct soap*, witsml1__cs_USCOREdocumentInfo *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentInfo ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREdocumentInfo(struct soap*, witsml1__cs_USCOREdocumentInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, const char *, int, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gsr__SC_USCORECRS_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, const char*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gsr__SC_USCORECRS_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__DateTime_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__DateTime_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, __gco__DateTime_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, const char *, int, __gco__DateTime_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gco__DateTime_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, const char*, __gco__DateTime_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, __gco__DateTime_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gco__DateTime_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, __gco__DateTime_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Date_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__Date_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__Date_USCOREType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__Date_USCOREType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTogco__Date_USCOREType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__Date_USCOREType(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTogco__Date_USCOREType(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__Real_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__Real_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, __gco__Real_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, const char *, int, __gco__Real_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gco__Real_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, const char*, __gco__Real_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, __gco__Real_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gco__Real_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, __gco__Real_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__Boolean_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__Boolean_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, __gco__Boolean_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, const char *, int, __gco__Boolean_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gco__Boolean_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, const char*, __gco__Boolean_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, __gco__Boolean_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gco__Boolean_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, __gco__Boolean_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__CharacterString_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gco__CharacterString_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, __gco__CharacterString_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, const char *, int, __gco__CharacterString_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gco__CharacterString_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, const char*, __gco__CharacterString_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, __gco__CharacterString_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gco__CharacterString_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, __gco__CharacterString_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__ID_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__ID_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__ID(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__ID(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__ID(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__ID(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__ID(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, const char *, int, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, const char*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCORESeries_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCORESeries_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORESeries_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORESeries_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, gmd__CI_USCORESeries_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, const char *, int, gmd__CI_USCORESeries_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, const char*, gmd__CI_USCORESeries_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, gmd__CI_USCORESeries_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, gmd__CI_USCORESeries_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__URL_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__URL_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, __gmd__URL_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__URL_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__URL_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__URL_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, __gmd__URL_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__URL_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, __gmd__URL_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnlineResource_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREOnlineResource_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREOnlineResource_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, const char*, gmd__CI_USCOREOnlineResource_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREAddress_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREAddress_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, gmd__CI_USCOREAddress_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREAddress_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, const char*, gmd__CI_USCOREAddress_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, gmd__CI_USCOREAddress_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, gmd__CI_USCOREAddress_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORETelephone_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORETelephone_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, gmd__CI_USCORETelephone_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, const char *, int, gmd__CI_USCORETelephone_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, const char*, gmd__CI_USCORETelephone_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, gmd__CI_USCORETelephone_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, gmd__CI_USCORETelephone_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREContact_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREContact_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREContact_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREContact_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, gmd__CI_USCOREContact_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREContact_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, const char*, gmd__CI_USCOREContact_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, gmd__CI_USCOREContact_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, gmd__CI_USCOREContact_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREResponsibleParty_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, const char*, gmd__CI_USCOREResponsibleParty_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__CodeListValue_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogco__CodeListValue_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__CodeListValue_USCOREType(struct soap*, gco__CodeListValue_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__CodeListValue_USCOREType(struct soap*, const char *, int, gco__CodeListValue_USCOREType *const*, const char *);
SOAP_FMAC3 gco__CodeListValue_USCOREType ** SOAP_FMAC4 soap_in_PointerTogco__CodeListValue_USCOREType(struct soap*, const char*, gco__CodeListValue_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__CodeListValue_USCOREType(struct soap*, gco__CodeListValue_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gco__CodeListValue_USCOREType ** SOAP_FMAC4 soap_get_PointerTogco__CodeListValue_USCOREType(struct soap*, gco__CodeListValue_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREDate_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREDate_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDate_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCOREDate_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, gmd__CI_USCOREDate_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREDate_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, const char*, gmd__CI_USCOREDate_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, gmd__CI_USCOREDate_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, gmd__CI_USCOREDate_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCORECitation_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCORECitation_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORECitation_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__CI_USCORECitation_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, gmd__CI_USCORECitation_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, const char *, int, gmd__CI_USCORECitation_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, const char*, gmd__CI_USCORECitation_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, gmd__CI_USCORECitation_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, gmd__CI_USCORECitation_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__MD_USCOREIdentifier_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__MD_USCOREIdentifier_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, gmd__MD_USCOREIdentifier_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, const char *, int, gmd__MD_USCOREIdentifier_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, const char*, gmd__MD_USCOREIdentifier_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, gmd__MD_USCOREIdentifier_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, gmd__MD_USCOREIdentifier_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, const char *, int, gmd__EX_USCOREVerticalExtent_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, const char*, gmd__EX_USCOREVerticalExtent_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCORETemporalExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCORETemporalExtent_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, const char *, int, gmd__EX_USCORETemporalExtent_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, const char*, gmd__EX_USCORETemporalExtent_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__coordinateOperationAccuracy_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__coordinateOperationAccuracy_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, __gml__coordinateOperationAccuracy_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, const char *, int, __gml__coordinateOperationAccuracy_sequence *const*, const char *);
SOAP_FMAC3 __gml__coordinateOperationAccuracy_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, const char*, __gml__coordinateOperationAccuracy_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, __gml__coordinateOperationAccuracy_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__coordinateOperationAccuracy_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, __gml__coordinateOperationAccuracy_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__LengthType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__LengthType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__LengthType(struct soap*, gml__LengthType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__LengthType(struct soap*, const char *, int, gml__LengthType *const*, const char *);
SOAP_FMAC3 gml__LengthType ** SOAP_FMAC4 soap_in_PointerTogml__LengthType(struct soap*, const char*, gml__LengthType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__LengthType(struct soap*, gml__LengthType *const*, const char*, const char*);
SOAP_FMAC3 gml__LengthType ** SOAP_FMAC4 soap_get_PointerTogml__LengthType(struct soap*, gml__LengthType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__MeasureType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__MeasureType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__MeasureType(struct soap*, gml__MeasureType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__MeasureType(struct soap*, const char *, int, gml__MeasureType *const*, const char *);
SOAP_FMAC3 gml__MeasureType ** SOAP_FMAC4 soap_in_PointerTogml__MeasureType(struct soap*, const char*, gml__MeasureType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__MeasureType(struct soap*, gml__MeasureType *const*, const char*, const char*);
SOAP_FMAC3 gml__MeasureType ** SOAP_FMAC4 soap_get_PointerTogml__MeasureType(struct soap*, gml__MeasureType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__SecondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_gml__SecondDefiningParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__SecondDefiningParameter(struct soap*, const char *, int, _gml__SecondDefiningParameter *const*, const char *);
SOAP_FMAC3 _gml__SecondDefiningParameter ** SOAP_FMAC4 soap_in_PointerTo_gml__SecondDefiningParameter(struct soap*, const char*, _gml__SecondDefiningParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter *const*, const char*, const char*);
SOAP_FMAC3 _gml__SecondDefiningParameter ** SOAP_FMAC4 soap_get_PointerTo_gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__domainOfValidity_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__domainOfValidity_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__domainOfValidity_sequence(struct soap*, __gml__domainOfValidity_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__domainOfValidity_sequence(struct soap*, const char *, int, __gml__domainOfValidity_sequence *const*, const char *);
SOAP_FMAC3 __gml__domainOfValidity_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__domainOfValidity_sequence(struct soap*, const char*, __gml__domainOfValidity_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__domainOfValidity_sequence(struct soap*, __gml__domainOfValidity_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__domainOfValidity_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__domainOfValidity_sequence(struct soap*, __gml__domainOfValidity_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogmd__EX_USCOREExtent_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, gmd__EX_USCOREExtent_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, const char *, int, gmd__EX_USCOREExtent_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCOREExtent_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, const char*, gmd__EX_USCOREExtent_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, gmd__EX_USCOREExtent_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCOREExtent_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, gmd__EX_USCOREExtent_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__VerticalDatumPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__VerticalDatumPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, __gml__VerticalDatumPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, const char *, int, __gml__VerticalDatumPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__VerticalDatumPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, const char*, __gml__VerticalDatumPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, __gml__VerticalDatumPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__VerticalDatumPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, __gml__VerticalDatumPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalDatumType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalDatumType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalDatumType(struct soap*, gml__VerticalDatumType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalDatumType(struct soap*, const char *, int, gml__VerticalDatumType *const*, const char *);
SOAP_FMAC3 gml__VerticalDatumType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalDatumType(struct soap*, const char*, gml__VerticalDatumType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalDatumType(struct soap*, gml__VerticalDatumType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalDatumType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalDatumType(struct soap*, gml__VerticalDatumType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__VerticalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__VerticalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, __gml__VerticalCSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, const char *, int, __gml__VerticalCSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__VerticalCSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, const char*, __gml__VerticalCSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, __gml__VerticalCSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__VerticalCSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, __gml__VerticalCSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalCSType(struct soap*, gml__VerticalCSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalCSType(struct soap*, const char *, int, gml__VerticalCSType *const*, const char *);
SOAP_FMAC3 gml__VerticalCSType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalCSType(struct soap*, const char*, gml__VerticalCSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalCSType(struct soap*, gml__VerticalCSType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalCSType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalCSType(struct soap*, gml__VerticalCSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeodeticCRSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeodeticCRSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, __gml__GeodeticCRSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, const char *, int, __gml__GeodeticCRSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__GeodeticCRSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, const char*, __gml__GeodeticCRSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, __gml__GeodeticCRSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__GeodeticCRSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, __gml__GeodeticCRSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CRSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CRSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__CRSPropertyType_sequence(struct soap*, __gml__CRSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__CRSPropertyType_sequence(struct soap*, const char *, int, __gml__CRSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__CRSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__CRSPropertyType_sequence(struct soap*, const char*, __gml__CRSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__CRSPropertyType_sequence(struct soap*, __gml__CRSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__CRSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__CRSPropertyType_sequence(struct soap*, __gml__CRSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeneralConversionPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeneralConversionPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, __gml__GeneralConversionPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, const char *, int, __gml__GeneralConversionPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__GeneralConversionPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, const char*, __gml__GeneralConversionPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, __gml__GeneralConversionPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__GeneralConversionPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, __gml__GeneralConversionPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__EllipsoidPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__EllipsoidPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, __gml__EllipsoidPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, const char *, int, __gml__EllipsoidPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__EllipsoidPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, const char*, __gml__EllipsoidPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, __gml__EllipsoidPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__EllipsoidPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, __gml__EllipsoidPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__EllipsoidType(struct soap*, gml__EllipsoidType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__EllipsoidType(struct soap*, const char *, int, gml__EllipsoidType *const*, const char *);
SOAP_FMAC3 gml__EllipsoidType ** SOAP_FMAC4 soap_in_PointerTogml__EllipsoidType(struct soap*, const char*, gml__EllipsoidType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__EllipsoidType(struct soap*, gml__EllipsoidType *const*, const char*, const char*);
SOAP_FMAC3 gml__EllipsoidType ** SOAP_FMAC4 soap_get_PointerTogml__EllipsoidType(struct soap*, gml__EllipsoidType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__PrimeMeridianPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__PrimeMeridianPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, __gml__PrimeMeridianPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, const char *, int, __gml__PrimeMeridianPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__PrimeMeridianPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, const char*, __gml__PrimeMeridianPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, __gml__PrimeMeridianPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__PrimeMeridianPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, __gml__PrimeMeridianPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__PrimeMeridianType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__PrimeMeridianType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__PrimeMeridianType(struct soap*, gml__PrimeMeridianType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__PrimeMeridianType(struct soap*, const char *, int, gml__PrimeMeridianType *const*, const char *);
SOAP_FMAC3 gml__PrimeMeridianType ** SOAP_FMAC4 soap_in_PointerTogml__PrimeMeridianType(struct soap*, const char*, gml__PrimeMeridianType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__PrimeMeridianType(struct soap*, gml__PrimeMeridianType *const*, const char*, const char*);
SOAP_FMAC3 gml__PrimeMeridianType ** SOAP_FMAC4 soap_get_PointerTogml__PrimeMeridianType(struct soap*, gml__PrimeMeridianType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeodeticDatumPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__GeodeticDatumPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, __gml__GeodeticDatumPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, const char *, int, __gml__GeodeticDatumPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__GeodeticDatumPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, const char*, __gml__GeodeticDatumPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, __gml__GeodeticDatumPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__GeodeticDatumPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, __gml__GeodeticDatumPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticDatumType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticDatumType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeodeticDatumType(struct soap*, gml__GeodeticDatumType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeodeticDatumType(struct soap*, const char *, int, gml__GeodeticDatumType *const*, const char *);
SOAP_FMAC3 gml__GeodeticDatumType ** SOAP_FMAC4 soap_in_PointerTogml__GeodeticDatumType(struct soap*, const char*, gml__GeodeticDatumType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeodeticDatumType(struct soap*, gml__GeodeticDatumType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeodeticDatumType ** SOAP_FMAC4 soap_get_PointerTogml__GeodeticDatumType(struct soap*, gml__GeodeticDatumType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__SphericalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__SphericalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, __gml__SphericalCSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, const char *, int, __gml__SphericalCSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__SphericalCSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, const char*, __gml__SphericalCSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, __gml__SphericalCSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__SphericalCSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, __gml__SphericalCSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__SphericalCSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__SphericalCSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__SphericalCSType(struct soap*, gml__SphericalCSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__SphericalCSType(struct soap*, const char *, int, gml__SphericalCSType *const*, const char *);
SOAP_FMAC3 gml__SphericalCSType ** SOAP_FMAC4 soap_in_PointerTogml__SphericalCSType(struct soap*, const char*, gml__SphericalCSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__SphericalCSType(struct soap*, gml__SphericalCSType *const*, const char*, const char*);
SOAP_FMAC3 gml__SphericalCSType ** SOAP_FMAC4 soap_get_PointerTogml__SphericalCSType(struct soap*, gml__SphericalCSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CartesianCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CartesianCSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, __gml__CartesianCSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, const char *, int, __gml__CartesianCSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__CartesianCSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, const char*, __gml__CartesianCSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, __gml__CartesianCSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__CartesianCSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, __gml__CartesianCSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CartesianCSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CartesianCSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CartesianCSType(struct soap*, gml__CartesianCSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CartesianCSType(struct soap*, const char *, int, gml__CartesianCSType *const*, const char *);
SOAP_FMAC3 gml__CartesianCSType ** SOAP_FMAC4 soap_in_PointerTogml__CartesianCSType(struct soap*, const char*, gml__CartesianCSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CartesianCSType(struct soap*, gml__CartesianCSType *const*, const char*, const char*);
SOAP_FMAC3 gml__CartesianCSType ** SOAP_FMAC4 soap_get_PointerTogml__CartesianCSType(struct soap*, gml__CartesianCSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, __gml__CoordinateSystemAxisPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, const char *, int, __gml__CoordinateSystemAxisPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__CoordinateSystemAxisPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, const char*, __gml__CoordinateSystemAxisPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, __gml__CoordinateSystemAxisPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__CoordinateSystemAxisPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, __gml__CoordinateSystemAxisPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CoordinateSystemAxisType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CoordinateSystemAxisType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CoordinateSystemAxisType(struct soap*, gml__CoordinateSystemAxisType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CoordinateSystemAxisType(struct soap*, const char *, int, gml__CoordinateSystemAxisType *const*, const char *);
SOAP_FMAC3 gml__CoordinateSystemAxisType ** SOAP_FMAC4 soap_in_PointerTogml__CoordinateSystemAxisType(struct soap*, const char*, gml__CoordinateSystemAxisType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CoordinateSystemAxisType(struct soap*, gml__CoordinateSystemAxisType *const*, const char*, const char*);
SOAP_FMAC3 gml__CoordinateSystemAxisType ** SOAP_FMAC4 soap_get_PointerTogml__CoordinateSystemAxisType(struct soap*, gml__CoordinateSystemAxisType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__EllipsoidalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__EllipsoidalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, __gml__EllipsoidalCSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, const char *, int, __gml__EllipsoidalCSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__EllipsoidalCSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, const char*, __gml__EllipsoidalCSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, __gml__EllipsoidalCSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__EllipsoidalCSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, __gml__EllipsoidalCSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidalCSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__EllipsoidalCSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__EllipsoidalCSType(struct soap*, gml__EllipsoidalCSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__EllipsoidalCSType(struct soap*, const char *, int, gml__EllipsoidalCSType *const*, const char *);
SOAP_FMAC3 gml__EllipsoidalCSType ** SOAP_FMAC4 soap_in_PointerTogml__EllipsoidalCSType(struct soap*, const char*, gml__EllipsoidalCSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__EllipsoidalCSType(struct soap*, gml__EllipsoidalCSType *const*, const char*, const char*);
SOAP_FMAC3 gml__EllipsoidalCSType ** SOAP_FMAC4 soap_get_PointerTogml__EllipsoidalCSType(struct soap*, gml__EllipsoidalCSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__TimePrimitivePropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__gml__TimePrimitivePropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, __gml__TimePrimitivePropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, const char *, int, __gml__TimePrimitivePropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__TimePrimitivePropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, const char*, __gml__TimePrimitivePropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, __gml__TimePrimitivePropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__TimePrimitivePropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, __gml__TimePrimitivePropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_xlink__actuate_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_xlink__actuate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xlink__actuate(struct soap*, enum _xlink__actuate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xlink__actuate(struct soap*, const char *, int, enum _xlink__actuate *const*, const char *);
SOAP_FMAC3 enum _xlink__actuate ** SOAP_FMAC4 soap_in_PointerTo_xlink__actuate(struct soap*, const char*, enum _xlink__actuate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xlink__actuate(struct soap*, enum _xlink__actuate *const*, const char*, const char*);
SOAP_FMAC3 enum _xlink__actuate ** SOAP_FMAC4 soap_get_PointerTo_xlink__actuate(struct soap*, enum _xlink__actuate **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_xlink__show_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo_xlink__show_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xlink__show(struct soap*, enum _xlink__show *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xlink__show(struct soap*, const char *, int, enum _xlink__show *const*, const char *);
SOAP_FMAC3 enum _xlink__show ** SOAP_FMAC4 soap_in_PointerTo_xlink__show(struct soap*, const char*, enum _xlink__show **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xlink__show(struct soap*, enum _xlink__show *const*, const char*, const char*);
SOAP_FMAC3 enum _xlink__show ** SOAP_FMAC4 soap_get_PointerTo_xlink__show(struct soap*, enum _xlink__show **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__anyURI_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerToxsd__anyURI_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyURI(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyURI(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__anyURI(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyURI(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__anyURI(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTostd__string_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTostd__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__NilReasonType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__NilReasonType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__NilReasonType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__NilReasonType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTogml__NilReasonType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__NilReasonType(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTogml__NilReasonType(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CodeType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CodeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CodeType(struct soap*, gml__CodeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CodeType(struct soap*, const char *, int, gml__CodeType *const*, const char *);
SOAP_FMAC3 gml__CodeType ** SOAP_FMAC4 soap_in_PointerTogml__CodeType(struct soap*, const char*, gml__CodeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CodeType(struct soap*, gml__CodeType *const*, const char*, const char*);
SOAP_FMAC3 gml__CodeType ** SOAP_FMAC4 soap_get_PointerTogml__CodeType(struct soap*, gml__CodeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CodeWithAuthorityType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__CodeWithAuthorityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CodeWithAuthorityType(struct soap*, gml__CodeWithAuthorityType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CodeWithAuthorityType(struct soap*, const char *, int, gml__CodeWithAuthorityType *const*, const char *);
SOAP_FMAC3 gml__CodeWithAuthorityType ** SOAP_FMAC4 soap_in_PointerTogml__CodeWithAuthorityType(struct soap*, const char*, gml__CodeWithAuthorityType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CodeWithAuthorityType(struct soap*, gml__CodeWithAuthorityType *const*, const char*, const char*);
SOAP_FMAC3 gml__CodeWithAuthorityType ** SOAP_FMAC4 soap_get_PointerTogml__CodeWithAuthorityType(struct soap*, gml__CodeWithAuthorityType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__ReferenceType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__ReferenceType(struct soap*, gml__ReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__ReferenceType(struct soap*, const char *, int, gml__ReferenceType *const*, const char *);
SOAP_FMAC3 gml__ReferenceType ** SOAP_FMAC4 soap_in_PointerTogml__ReferenceType(struct soap*, const char*, gml__ReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__ReferenceType(struct soap*, gml__ReferenceType *const*, const char*, const char*);
SOAP_FMAC3 gml__ReferenceType ** SOAP_FMAC4 soap_get_PointerTogml__ReferenceType(struct soap*, gml__ReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__StringOrRefType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__StringOrRefType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__StringOrRefType(struct soap*, gml__StringOrRefType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__StringOrRefType(struct soap*, const char *, int, gml__StringOrRefType *const*, const char *);
SOAP_FMAC3 gml__StringOrRefType ** SOAP_FMAC4 soap_in_PointerTogml__StringOrRefType(struct soap*, const char*, gml__StringOrRefType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__StringOrRefType(struct soap*, gml__StringOrRefType *const*, const char*, const char*);
SOAP_FMAC3 gml__StringOrRefType ** SOAP_FMAC4 soap_get_PointerTogml__StringOrRefType(struct soap*, gml__StringOrRefType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__VerticalCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalCRSType(struct soap*, gml__VerticalCRSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalCRSType(struct soap*, const char *, int, gml__VerticalCRSType *const*, const char *);
SOAP_FMAC3 gml__VerticalCRSType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalCRSType(struct soap*, const char*, gml__VerticalCRSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalCRSType(struct soap*, gml__VerticalCRSType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalCRSType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalCRSType(struct soap*, gml__VerticalCRSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__ProjectedCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__ProjectedCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__ProjectedCRSType(struct soap*, gml__ProjectedCRSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__ProjectedCRSType(struct soap*, const char *, int, gml__ProjectedCRSType *const*, const char *);
SOAP_FMAC3 gml__ProjectedCRSType ** SOAP_FMAC4 soap_in_PointerTogml__ProjectedCRSType(struct soap*, const char*, gml__ProjectedCRSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__ProjectedCRSType(struct soap*, gml__ProjectedCRSType *const*, const char*, const char*);
SOAP_FMAC3 gml__ProjectedCRSType ** SOAP_FMAC4 soap_get_PointerTogml__ProjectedCRSType(struct soap*, gml__ProjectedCRSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticCRSType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTogml__GeodeticCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeodeticCRSType(struct soap*, gml__GeodeticCRSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeodeticCRSType(struct soap*, const char *, int, gml__GeodeticCRSType *const*, const char *);
SOAP_FMAC3 gml__GeodeticCRSType ** SOAP_FMAC4 soap_in_PointerTogml__GeodeticCRSType(struct soap*, const char*, gml__GeodeticCRSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeodeticCRSType(struct soap*, gml__GeodeticCRSType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeodeticCRSType ** SOAP_FMAC4 soap_get_PointerTogml__GeodeticCRSType(struct soap*, gml__GeodeticCRSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, __witsml1__obj_USCOREcoordinateReferenceSystem_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, const char *, int, __witsml1__obj_USCOREcoordinateReferenceSystem_sequence *const*, const char *);
SOAP_FMAC3 __witsml1__obj_USCOREcoordinateReferenceSystem_sequence ** SOAP_FMAC4 soap_in_PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, const char*, __witsml1__obj_USCOREcoordinateReferenceSystem_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, __witsml1__obj_USCOREcoordinateReferenceSystem_sequence *const*, const char*, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREcoordinateReferenceSystem_sequence ** SOAP_FMAC4 soap_get_PointerTo__witsml1__obj_USCOREcoordinateReferenceSystem_sequence(struct soap*, __witsml1__obj_USCOREcoordinateReferenceSystem_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardVerticalCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardVerticalCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREstandardVerticalCRS(struct soap*, witsml1__cs_USCOREstandardVerticalCRS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREstandardVerticalCRS(struct soap*, const char *, int, witsml1__cs_USCOREstandardVerticalCRS *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREstandardVerticalCRS ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREstandardVerticalCRS(struct soap*, const char*, witsml1__cs_USCOREstandardVerticalCRS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREstandardVerticalCRS(struct soap*, witsml1__cs_USCOREstandardVerticalCRS *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstandardVerticalCRS ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREstandardVerticalCRS(struct soap*, witsml1__cs_USCOREstandardVerticalCRS **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardProjectedCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardProjectedCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREstandardProjectedCRS(struct soap*, witsml1__cs_USCOREstandardProjectedCRS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREstandardProjectedCRS(struct soap*, const char *, int, witsml1__cs_USCOREstandardProjectedCRS *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREstandardProjectedCRS ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREstandardProjectedCRS(struct soap*, const char*, witsml1__cs_USCOREstandardProjectedCRS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREstandardProjectedCRS(struct soap*, witsml1__cs_USCOREstandardProjectedCRS *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstandardProjectedCRS ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREstandardProjectedCRS(struct soap*, witsml1__cs_USCOREstandardProjectedCRS **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardGeodeticCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstandardGeodeticCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREstandardGeodeticCRS(struct soap*, witsml1__cs_USCOREstandardGeodeticCRS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREstandardGeodeticCRS(struct soap*, const char *, int, witsml1__cs_USCOREstandardGeodeticCRS *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREstandardGeodeticCRS ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREstandardGeodeticCRS(struct soap*, const char*, witsml1__cs_USCOREstandardGeodeticCRS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREstandardGeodeticCRS(struct soap*, witsml1__cs_USCOREstandardGeodeticCRS *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstandardGeodeticCRS ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREstandardGeodeticCRS(struct soap*, witsml1__cs_USCOREstandardGeodeticCRS **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREformationMarker_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREformationMarker_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__witsml1__obj_USCOREformationMarker_sequence(struct soap*, __witsml1__obj_USCOREformationMarker_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__witsml1__obj_USCOREformationMarker_sequence(struct soap*, const char *, int, __witsml1__obj_USCOREformationMarker_sequence *const*, const char *);
SOAP_FMAC3 __witsml1__obj_USCOREformationMarker_sequence ** SOAP_FMAC4 soap_in_PointerTo__witsml1__obj_USCOREformationMarker_sequence(struct soap*, const char*, __witsml1__obj_USCOREformationMarker_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__witsml1__obj_USCOREformationMarker_sequence(struct soap*, __witsml1__obj_USCOREformationMarker_sequence *const*, const char*, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREformationMarker_sequence ** SOAP_FMAC4 soap_get_PointerTo__witsml1__obj_USCOREformationMarker_sequence(struct soap*, __witsml1__obj_USCOREformationMarker_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__chronostratigraphyStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__chronostratigraphyStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__chronostratigraphyStruct(struct soap*, witsml1__chronostratigraphyStruct *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__chronostratigraphyStruct(struct soap*, const char *, int, witsml1__chronostratigraphyStruct *const*, const char *);
SOAP_FMAC3 witsml1__chronostratigraphyStruct ** SOAP_FMAC4 soap_in_PointerTowitsml1__chronostratigraphyStruct(struct soap*, const char*, witsml1__chronostratigraphyStruct **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__chronostratigraphyStruct(struct soap*, witsml1__chronostratigraphyStruct *const*, const char*, const char*);
SOAP_FMAC3 witsml1__chronostratigraphyStruct ** SOAP_FMAC4 soap_get_PointerTowitsml1__chronostratigraphyStruct(struct soap*, witsml1__chronostratigraphyStruct **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__lithostratigraphyStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__lithostratigraphyStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__lithostratigraphyStruct(struct soap*, witsml1__lithostratigraphyStruct *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__lithostratigraphyStruct(struct soap*, const char *, int, witsml1__lithostratigraphyStruct *const*, const char *);
SOAP_FMAC3 witsml1__lithostratigraphyStruct ** SOAP_FMAC4 soap_in_PointerTowitsml1__lithostratigraphyStruct(struct soap*, const char*, witsml1__lithostratigraphyStruct **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__lithostratigraphyStruct(struct soap*, witsml1__lithostratigraphyStruct *const*, const char*, const char*);
SOAP_FMAC3 witsml1__lithostratigraphyStruct ** SOAP_FMAC4 soap_get_PointerTowitsml1__lithostratigraphyStruct(struct soap*, witsml1__lithostratigraphyStruct **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__listOfString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__listOfString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__listOfString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__listOfString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__listOfString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__listOfString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__listOfString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREaxisDefinition_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREaxisDefinition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, witsml1__cs_USCOREaxisDefinition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, const char *, int, witsml1__cs_USCOREaxisDefinition *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREaxisDefinition ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, const char*, witsml1__cs_USCOREaxisDefinition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, witsml1__cs_USCOREaxisDefinition *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREaxisDefinition ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, witsml1__cs_USCOREaxisDefinition **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogTraceOrigin_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogTraceOrigin_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__LogTraceOrigin(struct soap*, enum witsml1__LogTraceOrigin *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__LogTraceOrigin(struct soap*, const char *, int, enum witsml1__LogTraceOrigin *const*, const char *);
SOAP_FMAC3 enum witsml1__LogTraceOrigin ** SOAP_FMAC4 soap_in_PointerTowitsml1__LogTraceOrigin(struct soap*, const char*, enum witsml1__LogTraceOrigin **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__LogTraceOrigin(struct soap*, enum witsml1__LogTraceOrigin *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__LogTraceOrigin ** SOAP_FMAC4 soap_get_PointerTowitsml1__LogTraceOrigin(struct soap*, enum witsml1__LogTraceOrigin **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogTraceState_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogTraceState_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__LogTraceState(struct soap*, enum witsml1__LogTraceState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__LogTraceState(struct soap*, const char *, int, enum witsml1__LogTraceState *const*, const char *);
SOAP_FMAC3 enum witsml1__LogTraceState ** SOAP_FMAC4 soap_in_PointerTowitsml1__LogTraceState(struct soap*, const char*, enum witsml1__LogTraceState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__LogTraceState(struct soap*, enum witsml1__LogTraceState *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__LogTraceState ** SOAP_FMAC4 soap_get_PointerTowitsml1__LogTraceState(struct soap*, enum witsml1__LogTraceState **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__perLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__perLengthMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__perLengthMeasure(struct soap*, witsml1__perLengthMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__perLengthMeasure(struct soap*, const char *, int, witsml1__perLengthMeasure *const*, const char *);
SOAP_FMAC3 witsml1__perLengthMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__perLengthMeasure(struct soap*, const char*, witsml1__perLengthMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__perLengthMeasure(struct soap*, witsml1__perLengthMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__perLengthMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__perLengthMeasure(struct soap*, witsml1__perLengthMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uomString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uomString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__uomString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__uomString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__uomString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__uomString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__uomString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__shortNameStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__shortNameStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__shortNameStruct(struct soap*, witsml1__shortNameStruct *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__shortNameStruct(struct soap*, const char *, int, witsml1__shortNameStruct *const*, const char *);
SOAP_FMAC3 witsml1__shortNameStruct ** SOAP_FMAC4 soap_in_PointerTowitsml1__shortNameStruct(struct soap*, const char*, witsml1__shortNameStruct **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__shortNameStruct(struct soap*, witsml1__shortNameStruct *const*, const char*, const char*);
SOAP_FMAC3 witsml1__shortNameStruct ** SOAP_FMAC4 soap_get_PointerTowitsml1__shortNameStruct(struct soap*, witsml1__shortNameStruct **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCORElog_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCORElog_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__witsml1__obj_USCORElog_sequence(struct soap*, __witsml1__obj_USCORElog_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__witsml1__obj_USCORElog_sequence(struct soap*, const char *, int, __witsml1__obj_USCORElog_sequence *const*, const char *);
SOAP_FMAC3 __witsml1__obj_USCORElog_sequence ** SOAP_FMAC4 soap_in_PointerTo__witsml1__obj_USCORElog_sequence(struct soap*, const char*, __witsml1__obj_USCORElog_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__witsml1__obj_USCORElog_sequence(struct soap*, __witsml1__obj_USCORElog_sequence *const*, const char*, const char*);
SOAP_FMAC3 __witsml1__obj_USCORElog_sequence ** SOAP_FMAC4 soap_get_PointerTo__witsml1__obj_USCORElog_sequence(struct soap*, __witsml1__obj_USCORElog_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElogData_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElogData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCORElogData(struct soap*, witsml1__cs_USCORElogData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCORElogData(struct soap*, const char *, int, witsml1__cs_USCORElogData *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCORElogData ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCORElogData(struct soap*, const char*, witsml1__cs_USCORElogData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCORElogData(struct soap*, witsml1__cs_USCORElogData *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCORElogData ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCORElogData(struct soap*, witsml1__cs_USCORElogData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElogCurveInfo_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElogCurveInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, witsml1__cs_USCORElogCurveInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, const char *, int, witsml1__cs_USCORElogCurveInfo *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCORElogCurveInfo ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, const char*, witsml1__cs_USCORElogCurveInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, witsml1__cs_USCORElogCurveInfo *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCORElogCurveInfo ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, witsml1__cs_USCORElogCurveInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__encodedValueString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__encodedValueString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__encodedValueString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__encodedValueString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__encodedValueString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__encodedValueString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__encodedValueString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogIndexDirection_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__LogIndexDirection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__LogIndexDirection(struct soap*, enum witsml1__LogIndexDirection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__LogIndexDirection(struct soap*, const char *, int, enum witsml1__LogIndexDirection *const*, const char *);
SOAP_FMAC3 enum witsml1__LogIndexDirection ** SOAP_FMAC4 soap_in_PointerTowitsml1__LogIndexDirection(struct soap*, const char*, enum witsml1__LogIndexDirection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__LogIndexDirection(struct soap*, enum witsml1__LogIndexDirection *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__LogIndexDirection ** SOAP_FMAC4 soap_get_PointerTowitsml1__LogIndexDirection(struct soap*, enum witsml1__LogIndexDirection **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ratioGenericMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ratioGenericMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__ratioGenericMeasure(struct soap*, witsml1__ratioGenericMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__ratioGenericMeasure(struct soap*, const char *, int, witsml1__ratioGenericMeasure *const*, const char *);
SOAP_FMAC3 witsml1__ratioGenericMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__ratioGenericMeasure(struct soap*, const char*, witsml1__ratioGenericMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__ratioGenericMeasure(struct soap*, witsml1__ratioGenericMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__ratioGenericMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__ratioGenericMeasure(struct soap*, witsml1__ratioGenericMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__genericMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__genericMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__genericMeasure(struct soap*, witsml1__genericMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__genericMeasure(struct soap*, const char *, int, witsml1__genericMeasure *const*, const char *);
SOAP_FMAC3 witsml1__genericMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__genericMeasure(struct soap*, const char*, witsml1__genericMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__genericMeasure(struct soap*, witsml1__genericMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__genericMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__genericMeasure(struct soap*, witsml1__genericMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str2_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str2_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__str2(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__str2(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__str2(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__str2(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__str2(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str16_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str16_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__str16(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__str16(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__str16(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__str16(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__str16(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__positiveBigCount_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__positiveBigCount_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__positiveBigCount(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__positiveBigCount(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerTowitsml1__positiveBigCount(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__positiveBigCount(struct soap*, int *const*, const char*, const char*);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerTowitsml1__positiveBigCount(struct soap*, int **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__areaMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__areaMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__areaMeasure(struct soap*, witsml1__areaMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__areaMeasure(struct soap*, const char *, int, witsml1__areaMeasure *const*, const char *);
SOAP_FMAC3 witsml1__areaMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__areaMeasure(struct soap*, const char*, witsml1__areaMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__areaMeasure(struct soap*, witsml1__areaMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__areaMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__areaMeasure(struct soap*, witsml1__areaMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, witsml1__cs_USCORErefWellboreTrajectoryStation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, const char *, int, witsml1__cs_USCORErefWellboreTrajectoryStation *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCORErefWellboreTrajectoryStation ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, const char*, witsml1__cs_USCORErefWellboreTrajectoryStation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, witsml1__cs_USCORErefWellboreTrajectoryStation *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCORErefWellboreTrajectoryStation ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCORErefWellboreTrajectoryStation(struct soap*, witsml1__cs_USCORErefWellboreTrajectoryStation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajMatrixCov_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajMatrixCov_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREstnTrajMatrixCov(struct soap*, witsml1__cs_USCOREstnTrajMatrixCov *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREstnTrajMatrixCov(struct soap*, const char *, int, witsml1__cs_USCOREstnTrajMatrixCov *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajMatrixCov ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREstnTrajMatrixCov(struct soap*, const char*, witsml1__cs_USCOREstnTrajMatrixCov **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREstnTrajMatrixCov(struct soap*, witsml1__cs_USCOREstnTrajMatrixCov *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajMatrixCov ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREstnTrajMatrixCov(struct soap*, witsml1__cs_USCOREstnTrajMatrixCov **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajValid_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajValid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREstnTrajValid(struct soap*, witsml1__cs_USCOREstnTrajValid *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREstnTrajValid(struct soap*, const char *, int, witsml1__cs_USCOREstnTrajValid *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajValid ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREstnTrajValid(struct soap*, const char*, witsml1__cs_USCOREstnTrajValid **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREstnTrajValid(struct soap*, witsml1__cs_USCOREstnTrajValid *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajValid ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREstnTrajValid(struct soap*, witsml1__cs_USCOREstnTrajValid **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajCorUsed_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajCorUsed_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREstnTrajCorUsed(struct soap*, witsml1__cs_USCOREstnTrajCorUsed *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREstnTrajCorUsed(struct soap*, const char *, int, witsml1__cs_USCOREstnTrajCorUsed *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajCorUsed ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREstnTrajCorUsed(struct soap*, const char*, witsml1__cs_USCOREstnTrajCorUsed **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREstnTrajCorUsed(struct soap*, witsml1__cs_USCOREstnTrajCorUsed *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajCorUsed ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREstnTrajCorUsed(struct soap*, witsml1__cs_USCOREstnTrajCorUsed **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajRawData_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREstnTrajRawData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREstnTrajRawData(struct soap*, witsml1__cs_USCOREstnTrajRawData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREstnTrajRawData(struct soap*, const char *, int, witsml1__cs_USCOREstnTrajRawData *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajRawData ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREstnTrajRawData(struct soap*, const char*, witsml1__cs_USCOREstnTrajRawData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREstnTrajRawData(struct soap*, witsml1__cs_USCOREstnTrajRawData *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREstnTrajRawData ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREstnTrajRawData(struct soap*, witsml1__cs_USCOREstnTrajRawData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TrajStationStatus_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TrajStationStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__TrajStationStatus(struct soap*, enum witsml1__TrajStationStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__TrajStationStatus(struct soap*, const char *, int, enum witsml1__TrajStationStatus *const*, const char *);
SOAP_FMAC3 enum witsml1__TrajStationStatus ** SOAP_FMAC4 soap_in_PointerTowitsml1__TrajStationStatus(struct soap*, const char*, enum witsml1__TrajStationStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__TrajStationStatus(struct soap*, enum witsml1__TrajStationStatus *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__TrajStationStatus ** SOAP_FMAC4 soap_get_PointerTowitsml1__TrajStationStatus(struct soap*, enum witsml1__TrajStationStatus **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__magneticInductionMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__magneticInductionMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__magneticInductionMeasure(struct soap*, witsml1__magneticInductionMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__magneticInductionMeasure(struct soap*, const char *, int, witsml1__magneticInductionMeasure *const*, const char *);
SOAP_FMAC3 witsml1__magneticInductionMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__magneticInductionMeasure(struct soap*, const char*, witsml1__magneticInductionMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__magneticInductionMeasure(struct soap*, witsml1__magneticInductionMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__magneticInductionMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__magneticInductionMeasure(struct soap*, witsml1__magneticInductionMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__accelerationLinearMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__accelerationLinearMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__accelerationLinearMeasure(struct soap*, witsml1__accelerationLinearMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__accelerationLinearMeasure(struct soap*, const char *, int, witsml1__accelerationLinearMeasure *const*, const char *);
SOAP_FMAC3 witsml1__accelerationLinearMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__accelerationLinearMeasure(struct soap*, const char*, witsml1__accelerationLinearMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__accelerationLinearMeasure(struct soap*, witsml1__accelerationLinearMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__accelerationLinearMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__accelerationLinearMeasure(struct soap*, witsml1__accelerationLinearMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__anglePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__anglePerLengthMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__anglePerLengthMeasure(struct soap*, witsml1__anglePerLengthMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__anglePerLengthMeasure(struct soap*, const char *, int, witsml1__anglePerLengthMeasure *const*, const char *);
SOAP_FMAC3 witsml1__anglePerLengthMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__anglePerLengthMeasure(struct soap*, const char*, witsml1__anglePerLengthMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__anglePerLengthMeasure(struct soap*, witsml1__anglePerLengthMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__anglePerLengthMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__anglePerLengthMeasure(struct soap*, witsml1__anglePerLengthMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TrajStnCalcAlgorithm_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TrajStnCalcAlgorithm_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__TrajStnCalcAlgorithm(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__TrajStnCalcAlgorithm(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__TrajStnCalcAlgorithm(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__TrajStnCalcAlgorithm(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__TrajStnCalcAlgorithm(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TypeSurveyTool_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__TypeSurveyTool_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__TypeSurveyTool(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__TypeSurveyTool(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__TypeSurveyTool(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__TypeSurveyTool(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__TypeSurveyTool(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREtrajectory_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREtrajectory_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__witsml1__obj_USCOREtrajectory_sequence(struct soap*, __witsml1__obj_USCOREtrajectory_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__witsml1__obj_USCOREtrajectory_sequence(struct soap*, const char *, int, __witsml1__obj_USCOREtrajectory_sequence *const*, const char *);
SOAP_FMAC3 __witsml1__obj_USCOREtrajectory_sequence ** SOAP_FMAC4 soap_in_PointerTo__witsml1__obj_USCOREtrajectory_sequence(struct soap*, const char*, __witsml1__obj_USCOREtrajectory_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__witsml1__obj_USCOREtrajectory_sequence(struct soap*, __witsml1__obj_USCOREtrajectory_sequence *const*, const char*, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREtrajectory_sequence ** SOAP_FMAC4 soap_get_PointerTo__witsml1__obj_USCOREtrajectory_sequence(struct soap*, __witsml1__obj_USCOREtrajectory_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREtrajectoryStation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREtrajectoryStation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, witsml1__cs_USCOREtrajectoryStation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, const char *, int, witsml1__cs_USCOREtrajectoryStation *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREtrajectoryStation ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, const char*, witsml1__cs_USCOREtrajectoryStation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, witsml1__cs_USCOREtrajectoryStation *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREtrajectoryStation ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, witsml1__cs_USCOREtrajectoryStation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__AziRef_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__AziRef_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__AziRef(struct soap*, enum witsml1__AziRef *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__AziRef(struct soap*, const char *, int, enum witsml1__AziRef *const*, const char *);
SOAP_FMAC3 enum witsml1__AziRef ** SOAP_FMAC4 soap_in_PointerTowitsml1__AziRef(struct soap*, const char*, enum witsml1__AziRef **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__AziRef(struct soap*, enum witsml1__AziRef *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__AziRef ** SOAP_FMAC4 soap_get_PointerTowitsml1__AziRef(struct soap*, enum witsml1__AziRef **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellboreTrajectory_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellboreTrajectory_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCORErefWellboreTrajectory(struct soap*, witsml1__cs_USCORErefWellboreTrajectory *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCORErefWellboreTrajectory(struct soap*, const char *, int, witsml1__cs_USCORErefWellboreTrajectory *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCORErefWellboreTrajectory ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCORErefWellboreTrajectory(struct soap*, const char*, witsml1__cs_USCORErefWellboreTrajectory **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCORErefWellboreTrajectory(struct soap*, witsml1__cs_USCORErefWellboreTrajectory *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCORErefWellboreTrajectory ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCORErefWellboreTrajectory(struct soap*, witsml1__cs_USCORErefWellboreTrajectory **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uidParentString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uidParentString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__uidParentString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__uidParentString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__uidParentString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__uidParentString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__uidParentString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREwellbore_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREwellbore_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__witsml1__obj_USCOREwellbore_sequence(struct soap*, __witsml1__obj_USCOREwellbore_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__witsml1__obj_USCOREwellbore_sequence(struct soap*, const char *, int, __witsml1__obj_USCOREwellbore_sequence *const*, const char *);
SOAP_FMAC3 __witsml1__obj_USCOREwellbore_sequence ** SOAP_FMAC4 soap_in_PointerTo__witsml1__obj_USCOREwellbore_sequence(struct soap*, const char*, __witsml1__obj_USCOREwellbore_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__witsml1__obj_USCOREwellbore_sequence(struct soap*, __witsml1__obj_USCOREwellbore_sequence *const*, const char*, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREwellbore_sequence ** SOAP_FMAC4 soap_get_PointerTo__witsml1__obj_USCOREwellbore_sequence(struct soap*, __witsml1__obj_USCOREwellbore_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timeMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timeMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__timeMeasure(struct soap*, witsml1__timeMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__timeMeasure(struct soap*, const char *, int, witsml1__timeMeasure *const*, const char *);
SOAP_FMAC3 witsml1__timeMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__timeMeasure(struct soap*, const char*, witsml1__timeMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__timeMeasure(struct soap*, witsml1__timeMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__timeMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__timeMeasure(struct soap*, witsml1__timeMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellVerticalDepthCoord_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellVerticalDepthCoord_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__wellVerticalDepthCoord(struct soap*, witsml1__wellVerticalDepthCoord *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__wellVerticalDepthCoord(struct soap*, const char *, int, witsml1__wellVerticalDepthCoord *const*, const char *);
SOAP_FMAC3 witsml1__wellVerticalDepthCoord ** SOAP_FMAC4 soap_in_PointerTowitsml1__wellVerticalDepthCoord(struct soap*, const char*, witsml1__wellVerticalDepthCoord **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__wellVerticalDepthCoord(struct soap*, witsml1__wellVerticalDepthCoord *const*, const char*, const char*);
SOAP_FMAC3 witsml1__wellVerticalDepthCoord ** SOAP_FMAC4 soap_get_PointerTowitsml1__wellVerticalDepthCoord(struct soap*, witsml1__wellVerticalDepthCoord **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellboreShape_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellboreShape_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__WellboreShape(struct soap*, enum witsml1__WellboreShape *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__WellboreShape(struct soap*, const char *, int, enum witsml1__WellboreShape *const*, const char *);
SOAP_FMAC3 enum witsml1__WellboreShape ** SOAP_FMAC4 soap_in_PointerTowitsml1__WellboreShape(struct soap*, const char*, enum witsml1__WellboreShape **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__WellboreShape(struct soap*, enum witsml1__WellboreShape *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__WellboreShape ** SOAP_FMAC4 soap_get_PointerTowitsml1__WellboreShape(struct soap*, enum witsml1__WellboreShape **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellboreType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellboreType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__WellboreType(struct soap*, enum witsml1__WellboreType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__WellboreType(struct soap*, const char *, int, enum witsml1__WellboreType *const*, const char *);
SOAP_FMAC3 enum witsml1__WellboreType ** SOAP_FMAC4 soap_in_PointerTowitsml1__WellboreType(struct soap*, const char*, enum witsml1__WellboreType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__WellboreType(struct soap*, enum witsml1__WellboreType *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__WellboreType ** SOAP_FMAC4 soap_get_PointerTowitsml1__WellboreType(struct soap*, enum witsml1__WellboreType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREextensionAny_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREextensionAny_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREextensionAny(struct soap*, witsml1__cs_USCOREextensionAny *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREextensionAny(struct soap*, const char *, int, witsml1__cs_USCOREextensionAny *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREextensionAny ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREextensionAny(struct soap*, const char*, witsml1__cs_USCOREextensionAny **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREextensionAny(struct soap*, witsml1__cs_USCOREextensionAny *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREextensionAny ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREextensionAny(struct soap*, witsml1__cs_USCOREextensionAny **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTobool_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTobool_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTobool(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTobool(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTobool(struct soap*, const char*, bool **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTobool(struct soap*, bool *const*, const char*, const char*);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTobool(struct soap*, bool **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timestampedTimeZone_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timestampedTimeZone_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__timestampedTimeZone(struct soap*, witsml1__timestampedTimeZone *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__timestampedTimeZone(struct soap*, const char *, int, witsml1__timestampedTimeZone *const*, const char *);
SOAP_FMAC3 witsml1__timestampedTimeZone ** SOAP_FMAC4 soap_in_PointerTowitsml1__timestampedTimeZone(struct soap*, const char*, witsml1__timestampedTimeZone **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__timestampedTimeZone(struct soap*, witsml1__timestampedTimeZone *const*, const char*, const char*);
SOAP_FMAC3 witsml1__timestampedTimeZone ** SOAP_FMAC4 soap_get_PointerTowitsml1__timestampedTimeZone(struct soap*, witsml1__timestampedTimeZone **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ItemState_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ItemState_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__ItemState(struct soap*, enum witsml1__ItemState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__ItemState(struct soap*, const char *, int, enum witsml1__ItemState *const*, const char *);
SOAP_FMAC3 enum witsml1__ItemState ** SOAP_FMAC4 soap_in_PointerTowitsml1__ItemState(struct soap*, const char*, enum witsml1__ItemState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__ItemState(struct soap*, enum witsml1__ItemState *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__ItemState ** SOAP_FMAC4 soap_get_PointerTowitsml1__ItemState(struct soap*, enum witsml1__ItemState **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__yAxisAzimuth_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__yAxisAzimuth_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__yAxisAzimuth(struct soap*, witsml1__yAxisAzimuth *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__yAxisAzimuth(struct soap*, const char *, int, witsml1__yAxisAzimuth *const*, const char *);
SOAP_FMAC3 witsml1__yAxisAzimuth ** SOAP_FMAC4 soap_in_PointerTowitsml1__yAxisAzimuth(struct soap*, const char*, witsml1__yAxisAzimuth **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__yAxisAzimuth(struct soap*, witsml1__yAxisAzimuth *const*, const char*, const char*);
SOAP_FMAC3 witsml1__yAxisAzimuth ** SOAP_FMAC4 soap_get_PointerTowitsml1__yAxisAzimuth(struct soap*, witsml1__yAxisAzimuth **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__indexedObject_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__indexedObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__indexedObject(struct soap*, witsml1__indexedObject *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__indexedObject(struct soap*, const char *, int, witsml1__indexedObject *const*, const char *);
SOAP_FMAC3 witsml1__indexedObject ** SOAP_FMAC4 soap_in_PointerTowitsml1__indexedObject(struct soap*, const char*, witsml1__indexedObject **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__indexedObject(struct soap*, witsml1__indexedObject *const*, const char*, const char*);
SOAP_FMAC3 witsml1__indexedObject ** SOAP_FMAC4 soap_get_PointerTowitsml1__indexedObject(struct soap*, witsml1__indexedObject **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Hemispheres_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Hemispheres_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__Hemispheres(struct soap*, enum witsml1__Hemispheres *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__Hemispheres(struct soap*, const char *, int, enum witsml1__Hemispheres *const*, const char *);
SOAP_FMAC3 enum witsml1__Hemispheres ** SOAP_FMAC4 soap_in_PointerTowitsml1__Hemispheres(struct soap*, const char*, enum witsml1__Hemispheres **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__Hemispheres(struct soap*, enum witsml1__Hemispheres *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__Hemispheres ** SOAP_FMAC4 soap_get_PointerTowitsml1__Hemispheres(struct soap*, enum witsml1__Hemispheres **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__NADTypes_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__NADTypes_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__NADTypes(struct soap*, enum witsml1__NADTypes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__NADTypes(struct soap*, const char *, int, enum witsml1__NADTypes *const*, const char *);
SOAP_FMAC3 enum witsml1__NADTypes ** SOAP_FMAC4 soap_in_PointerTowitsml1__NADTypes(struct soap*, const char*, enum witsml1__NADTypes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__NADTypes(struct soap*, enum witsml1__NADTypes *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__NADTypes ** SOAP_FMAC4 soap_get_PointerTowitsml1__NADTypes(struct soap*, enum witsml1__NADTypes **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__geodeticZoneString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__geodeticZoneString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__geodeticZoneString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__geodeticZoneString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__geodeticZoneString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__geodeticZoneString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__geodeticZoneString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ProjectionVariantsObliqueMercator_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ProjectionVariantsObliqueMercator_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__ProjectionVariantsObliqueMercator(struct soap*, enum witsml1__ProjectionVariantsObliqueMercator *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__ProjectionVariantsObliqueMercator(struct soap*, const char *, int, enum witsml1__ProjectionVariantsObliqueMercator *const*, const char *);
SOAP_FMAC3 enum witsml1__ProjectionVariantsObliqueMercator ** SOAP_FMAC4 soap_in_PointerTowitsml1__ProjectionVariantsObliqueMercator(struct soap*, const char*, enum witsml1__ProjectionVariantsObliqueMercator **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__ProjectionVariantsObliqueMercator(struct soap*, enum witsml1__ProjectionVariantsObliqueMercator *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__ProjectionVariantsObliqueMercator ** SOAP_FMAC4 soap_get_PointerTowitsml1__ProjectionVariantsObliqueMercator(struct soap*, enum witsml1__ProjectionVariantsObliqueMercator **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Projection_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Projection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__Projection(struct soap*, enum witsml1__Projection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__Projection(struct soap*, const char *, int, enum witsml1__Projection *const*, const char *);
SOAP_FMAC3 enum witsml1__Projection ** SOAP_FMAC4 soap_in_PointerTowitsml1__Projection(struct soap*, const char*, enum witsml1__Projection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__Projection(struct soap*, enum witsml1__Projection *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__Projection ** SOAP_FMAC4 soap_get_PointerTowitsml1__Projection(struct soap*, enum witsml1__Projection **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Ellipsoid_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__Ellipsoid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__Ellipsoid(struct soap*, enum witsml1__Ellipsoid *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__Ellipsoid(struct soap*, const char *, int, enum witsml1__Ellipsoid *const*, const char *);
SOAP_FMAC3 enum witsml1__Ellipsoid ** SOAP_FMAC4 soap_in_PointerTowitsml1__Ellipsoid(struct soap*, const char*, enum witsml1__Ellipsoid **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__Ellipsoid(struct soap*, enum witsml1__Ellipsoid *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__Ellipsoid ** SOAP_FMAC4 soap_get_PointerTowitsml1__Ellipsoid(struct soap*, enum witsml1__Ellipsoid **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__unitlessQuantity_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__unitlessQuantity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__unitlessQuantity(struct soap*, double *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__unitlessQuantity(struct soap*, const char *, int, double *const*, const char *);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_in_PointerTowitsml1__unitlessQuantity(struct soap*, const char*, double **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__unitlessQuantity(struct soap*, double *const*, const char*, const char*);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_get_PointerTowitsml1__unitlessQuantity(struct soap*, double **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__GeodeticDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__GeodeticDatum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__GeodeticDatum(struct soap*, enum witsml1__GeodeticDatum *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__GeodeticDatum(struct soap*, const char *, int, enum witsml1__GeodeticDatum *const*, const char *);
SOAP_FMAC3 enum witsml1__GeodeticDatum ** SOAP_FMAC4 soap_in_PointerTowitsml1__GeodeticDatum(struct soap*, const char*, enum witsml1__GeodeticDatum **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__GeodeticDatum(struct soap*, enum witsml1__GeodeticDatum *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__GeodeticDatum ** SOAP_FMAC4 soap_get_PointerTowitsml1__GeodeticDatum(struct soap*, enum witsml1__GeodeticDatum **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElocalCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElocalCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCORElocalCRS(struct soap*, witsml1__cs_USCORElocalCRS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCORElocalCRS(struct soap*, const char *, int, witsml1__cs_USCORElocalCRS *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCORElocalCRS ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCORElocalCRS(struct soap*, const char*, witsml1__cs_USCORElocalCRS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCORElocalCRS(struct soap*, witsml1__cs_USCORElocalCRS *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCORElocalCRS ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCORElocalCRS(struct soap*, witsml1__cs_USCORElocalCRS **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREgeodeticModel_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREgeodeticModel_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREgeodeticModel(struct soap*, witsml1__cs_USCOREgeodeticModel *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREgeodeticModel(struct soap*, const char *, int, witsml1__cs_USCOREgeodeticModel *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREgeodeticModel ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREgeodeticModel(struct soap*, const char*, witsml1__cs_USCOREgeodeticModel **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREgeodeticModel(struct soap*, witsml1__cs_USCOREgeodeticModel *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREgeodeticModel ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREgeodeticModel(struct soap*, witsml1__cs_USCOREgeodeticModel **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREprojectionx_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREprojectionx_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREprojectionx(struct soap*, witsml1__cs_USCOREprojectionx *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREprojectionx(struct soap*, const char *, int, witsml1__cs_USCOREprojectionx *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREprojectionx ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREprojectionx(struct soap*, const char*, witsml1__cs_USCOREprojectionx **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREprojectionx(struct soap*, witsml1__cs_USCOREprojectionx *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREprojectionx ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREprojectionx(struct soap*, witsml1__cs_USCOREprojectionx **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__footageEastWest_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__footageEastWest_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__footageEastWest(struct soap*, witsml1__footageEastWest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__footageEastWest(struct soap*, const char *, int, witsml1__footageEastWest *const*, const char *);
SOAP_FMAC3 witsml1__footageEastWest ** SOAP_FMAC4 soap_in_PointerTowitsml1__footageEastWest(struct soap*, const char*, witsml1__footageEastWest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__footageEastWest(struct soap*, witsml1__footageEastWest *const*, const char*, const char*);
SOAP_FMAC3 witsml1__footageEastWest ** SOAP_FMAC4 soap_get_PointerTowitsml1__footageEastWest(struct soap*, witsml1__footageEastWest **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__footageNorthSouth_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__footageNorthSouth_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__footageNorthSouth(struct soap*, witsml1__footageNorthSouth *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__footageNorthSouth(struct soap*, const char *, int, witsml1__footageNorthSouth *const*, const char *);
SOAP_FMAC3 witsml1__footageNorthSouth ** SOAP_FMAC4 soap_in_PointerTowitsml1__footageNorthSouth(struct soap*, const char*, witsml1__footageNorthSouth **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__footageNorthSouth(struct soap*, witsml1__footageNorthSouth *const*, const char*, const char*);
SOAP_FMAC3 witsml1__footageNorthSouth ** SOAP_FMAC4 soap_get_PointerTowitsml1__footageNorthSouth(struct soap*, witsml1__footageNorthSouth **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__publicLandSurveySystemQuarterTownship_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__publicLandSurveySystemQuarterTownship_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__publicLandSurveySystemQuarterTownship(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__publicLandSurveySystemQuarterTownship(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__publicLandSurveySystemQuarterTownship(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__publicLandSurveySystemQuarterTownship(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__publicLandSurveySystemQuarterTownship(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__publicLandSurveySystemQuarterSection_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__publicLandSurveySystemQuarterSection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__publicLandSurveySystemQuarterSection(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__publicLandSurveySystemQuarterSection(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__publicLandSurveySystemQuarterSection(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__publicLandSurveySystemQuarterSection(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__publicLandSurveySystemQuarterSection(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__sectionNumber_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__sectionNumber_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__sectionNumber(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__sectionNumber(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__sectionNumber(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__sectionNumber(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__sectionNumber(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__NorthOrSouth_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__NorthOrSouth_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__NorthOrSouth(struct soap*, enum witsml1__NorthOrSouth *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__NorthOrSouth(struct soap*, const char *, int, enum witsml1__NorthOrSouth *const*, const char *);
SOAP_FMAC3 enum witsml1__NorthOrSouth ** SOAP_FMAC4 soap_in_PointerTowitsml1__NorthOrSouth(struct soap*, const char*, enum witsml1__NorthOrSouth **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__NorthOrSouth(struct soap*, enum witsml1__NorthOrSouth *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__NorthOrSouth ** SOAP_FMAC4 soap_get_PointerTowitsml1__NorthOrSouth(struct soap*, enum witsml1__NorthOrSouth **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__EastOrWest_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__EastOrWest_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__EastOrWest(struct soap*, enum witsml1__EastOrWest *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__EastOrWest(struct soap*, const char *, int, enum witsml1__EastOrWest *const*, const char *);
SOAP_FMAC3 enum witsml1__EastOrWest ** SOAP_FMAC4 soap_in_PointerTowitsml1__EastOrWest(struct soap*, const char*, enum witsml1__EastOrWest **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__EastOrWest(struct soap*, enum witsml1__EastOrWest *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__EastOrWest ** SOAP_FMAC4 soap_get_PointerTowitsml1__EastOrWest(struct soap*, enum witsml1__EastOrWest **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__PrincipalMeridian_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__PrincipalMeridian_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__PrincipalMeridian(struct soap*, enum witsml1__PrincipalMeridian *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__PrincipalMeridian(struct soap*, const char *, int, enum witsml1__PrincipalMeridian *const*, const char *);
SOAP_FMAC3 enum witsml1__PrincipalMeridian ** SOAP_FMAC4 soap_in_PointerTowitsml1__PrincipalMeridian(struct soap*, const char*, enum witsml1__PrincipalMeridian **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__PrincipalMeridian(struct soap*, enum witsml1__PrincipalMeridian *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__PrincipalMeridian ** SOAP_FMAC4 soap_get_PointerTowitsml1__PrincipalMeridian(struct soap*, enum witsml1__PrincipalMeridian **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellWellboreRig_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellWellboreRig_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCORErefWellWellboreRig(struct soap*, witsml1__cs_USCORErefWellWellboreRig *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCORErefWellWellboreRig(struct soap*, const char *, int, witsml1__cs_USCORErefWellWellboreRig *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCORErefWellWellboreRig ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCORErefWellWellboreRig(struct soap*, const char*, witsml1__cs_USCORErefWellWellboreRig **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCORErefWellWellboreRig(struct soap*, witsml1__cs_USCORErefWellWellboreRig *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCORErefWellWellboreRig ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCORErefWellWellboreRig(struct soap*, witsml1__cs_USCORErefWellWellboreRig **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellWellbore_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORErefWellWellbore_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCORErefWellWellbore(struct soap*, witsml1__cs_USCORErefWellWellbore *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCORErefWellWellbore(struct soap*, const char *, int, witsml1__cs_USCORErefWellWellbore *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCORErefWellWellbore ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCORErefWellWellbore(struct soap*, const char*, witsml1__cs_USCORErefWellWellbore **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCORErefWellWellbore(struct soap*, witsml1__cs_USCORErefWellWellbore *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCORErefWellWellbore ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCORErefWellWellbore(struct soap*, witsml1__cs_USCORErefWellWellbore **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellKnownNameStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellKnownNameStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__wellKnownNameStruct(struct soap*, witsml1__wellKnownNameStruct *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__wellKnownNameStruct(struct soap*, const char *, int, witsml1__wellKnownNameStruct *const*, const char *);
SOAP_FMAC3 witsml1__wellKnownNameStruct ** SOAP_FMAC4 soap_in_PointerTowitsml1__wellKnownNameStruct(struct soap*, const char*, witsml1__wellKnownNameStruct **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__wellKnownNameStruct(struct soap*, witsml1__wellKnownNameStruct *const*, const char*, const char*);
SOAP_FMAC3 witsml1__wellKnownNameStruct ** SOAP_FMAC4 soap_get_PointerTowitsml1__wellKnownNameStruct(struct soap*, witsml1__wellKnownNameStruct **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ElevCodeEnum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__ElevCodeEnum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__ElevCodeEnum(struct soap*, enum witsml1__ElevCodeEnum *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__ElevCodeEnum(struct soap*, const char *, int, enum witsml1__ElevCodeEnum *const*, const char *);
SOAP_FMAC3 enum witsml1__ElevCodeEnum ** SOAP_FMAC4 soap_in_PointerTowitsml1__ElevCodeEnum(struct soap*, const char*, enum witsml1__ElevCodeEnum **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__ElevCodeEnum(struct soap*, enum witsml1__ElevCodeEnum *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__ElevCodeEnum ** SOAP_FMAC4 soap_get_PointerTowitsml1__ElevCodeEnum(struct soap*, enum witsml1__ElevCodeEnum **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__logicalBoolean_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__logicalBoolean_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__logicalBoolean(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__logicalBoolean(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTowitsml1__logicalBoolean(struct soap*, const char*, bool **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__logicalBoolean(struct soap*, bool *const*, const char*, const char*);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTowitsml1__logicalBoolean(struct soap*, bool **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__planeAngleMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__planeAngleMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__planeAngleMeasure(struct soap*, witsml1__planeAngleMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__planeAngleMeasure(struct soap*, const char *, int, witsml1__planeAngleMeasure *const*, const char *);
SOAP_FMAC3 witsml1__planeAngleMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__planeAngleMeasure(struct soap*, const char*, witsml1__planeAngleMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__planeAngleMeasure(struct soap*, witsml1__planeAngleMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__planeAngleMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__planeAngleMeasure(struct soap*, witsml1__planeAngleMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refNameString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__refNameString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__refNameString(struct soap*, witsml1__refNameString *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__refNameString(struct soap*, const char *, int, witsml1__refNameString *const*, const char *);
SOAP_FMAC3 witsml1__refNameString ** SOAP_FMAC4 soap_in_PointerTowitsml1__refNameString(struct soap*, const char*, witsml1__refNameString **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__refNameString(struct soap*, witsml1__refNameString *const*, const char*, const char*);
SOAP_FMAC3 witsml1__refNameString ** SOAP_FMAC4 soap_get_PointerTowitsml1__refNameString(struct soap*, witsml1__refNameString **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentEvent_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentEvent_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, witsml1__cs_USCOREdocumentEvent *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, const char *, int, witsml1__cs_USCOREdocumentEvent *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREdocumentEvent ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, const char*, witsml1__cs_USCOREdocumentEvent **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, witsml1__cs_USCOREdocumentEvent *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentEvent ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, witsml1__cs_USCOREdocumentEvent **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__descriptionString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__descriptionString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__descriptionString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__descriptionString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__descriptionString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__descriptionString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__descriptionString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__MeasureClass_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__MeasureClass_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__MeasureClass(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__MeasureClass(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__MeasureClass(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__MeasureClass(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__MeasureClass(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__positiveCount_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__positiveCount_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__positiveCount(struct soap*, short *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__positiveCount(struct soap*, const char *, int, short *const*, const char *);
SOAP_FMAC3 short ** SOAP_FMAC4 soap_in_PointerTowitsml1__positiveCount(struct soap*, const char*, short **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__positiveCount(struct soap*, short *const*, const char*, const char*);
SOAP_FMAC3 short ** SOAP_FMAC4 soap_get_PointerTowitsml1__positiveCount(struct soap*, short **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__measuredDepthCoord_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__measuredDepthCoord_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__measuredDepthCoord(struct soap*, witsml1__measuredDepthCoord *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__measuredDepthCoord(struct soap*, const char *, int, witsml1__measuredDepthCoord *const*, const char *);
SOAP_FMAC3 witsml1__measuredDepthCoord ** SOAP_FMAC4 soap_in_PointerTowitsml1__measuredDepthCoord(struct soap*, const char*, witsml1__measuredDepthCoord **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__measuredDepthCoord(struct soap*, witsml1__measuredDepthCoord *const*, const char*, const char*);
SOAP_FMAC3 witsml1__measuredDepthCoord ** SOAP_FMAC4 soap_get_PointerTowitsml1__measuredDepthCoord(struct soap*, witsml1__measuredDepthCoord **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__extensionvalue_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__extensionvalue_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__extensionvalue(struct soap*, witsml1__extensionvalue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__extensionvalue(struct soap*, const char *, int, witsml1__extensionvalue *const*, const char *);
SOAP_FMAC3 witsml1__extensionvalue ** SOAP_FMAC4 soap_in_PointerTowitsml1__extensionvalue(struct soap*, const char*, witsml1__extensionvalue **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__extensionvalue(struct soap*, witsml1__extensionvalue *const*, const char*, const char*);
SOAP_FMAC3 witsml1__extensionvalue ** SOAP_FMAC4 soap_get_PointerTowitsml1__extensionvalue(struct soap*, witsml1__extensionvalue **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREextensionNameValue_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREextensionNameValue_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, witsml1__cs_USCOREextensionNameValue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, const char *, int, witsml1__cs_USCOREextensionNameValue *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREextensionNameValue ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, const char*, witsml1__cs_USCOREextensionNameValue **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, witsml1__cs_USCOREextensionNameValue *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREextensionNameValue ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, witsml1__cs_USCOREextensionNameValue **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__kindString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__kindString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__kindString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__kindString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__kindString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__kindString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__kindString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentAudit_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentAudit_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREdocumentAudit(struct soap*, witsml1__cs_USCOREdocumentAudit *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREdocumentAudit(struct soap*, const char *, int, witsml1__cs_USCOREdocumentAudit *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREdocumentAudit ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREdocumentAudit(struct soap*, const char*, witsml1__cs_USCOREdocumentAudit **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREdocumentAudit(struct soap*, witsml1__cs_USCOREdocumentAudit *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentAudit ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREdocumentAudit(struct soap*, witsml1__cs_USCOREdocumentAudit **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__commentString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__commentString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__commentString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__commentString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__commentString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__commentString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__commentString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentSecurityInfo_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentSecurityInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, witsml1__cs_USCOREdocumentSecurityInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, const char *, int, witsml1__cs_USCOREdocumentSecurityInfo *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREdocumentSecurityInfo ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, const char*, witsml1__cs_USCOREdocumentSecurityInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, witsml1__cs_USCOREdocumentSecurityInfo *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentSecurityInfo ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, witsml1__cs_USCOREdocumentSecurityInfo **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentFileCreation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREdocumentFileCreation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREdocumentFileCreation(struct soap*, witsml1__cs_USCOREdocumentFileCreation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREdocumentFileCreation(struct soap*, const char *, int, witsml1__cs_USCOREdocumentFileCreation *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREdocumentFileCreation ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREdocumentFileCreation(struct soap*, const char*, witsml1__cs_USCOREdocumentFileCreation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREdocumentFileCreation(struct soap*, witsml1__cs_USCOREdocumentFileCreation *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREdocumentFileCreation ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREdocumentFileCreation(struct soap*, witsml1__cs_USCOREdocumentFileCreation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__nameStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__nameStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__nameStruct(struct soap*, witsml1__nameStruct *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__nameStruct(struct soap*, const char *, int, witsml1__nameStruct *const*, const char *);
SOAP_FMAC3 witsml1__nameStruct ** SOAP_FMAC4 soap_in_PointerTowitsml1__nameStruct(struct soap*, const char*, witsml1__nameStruct **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__nameStruct(struct soap*, witsml1__nameStruct *const*, const char*, const char*);
SOAP_FMAC3 witsml1__nameStruct ** SOAP_FMAC4 soap_get_PointerTowitsml1__nameStruct(struct soap*, witsml1__nameStruct **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uidString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__uidString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__uidString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__uidString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__uidString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__uidString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__uidString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREcustomData_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREcustomData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREcustomData(struct soap*, witsml1__cs_USCOREcustomData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREcustomData(struct soap*, const char *, int, witsml1__cs_USCOREcustomData *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREcustomData ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREcustomData(struct soap*, const char*, witsml1__cs_USCOREcustomData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREcustomData(struct soap*, witsml1__cs_USCOREcustomData *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREcustomData ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREcustomData(struct soap*, witsml1__cs_USCOREcustomData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREcommonData_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREcommonData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREcommonData(struct soap*, witsml1__cs_USCOREcommonData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREcommonData(struct soap*, const char *, int, witsml1__cs_USCOREcommonData *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREcommonData ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREcommonData(struct soap*, const char*, witsml1__cs_USCOREcommonData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREcommonData(struct soap*, witsml1__cs_USCOREcommonData *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREcommonData ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREcommonData(struct soap*, witsml1__cs_USCOREcommonData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREwell_sequence_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTo__witsml1__obj_USCOREwell_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__witsml1__obj_USCOREwell_sequence(struct soap*, __witsml1__obj_USCOREwell_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__witsml1__obj_USCOREwell_sequence(struct soap*, const char *, int, __witsml1__obj_USCOREwell_sequence *const*, const char *);
SOAP_FMAC3 __witsml1__obj_USCOREwell_sequence ** SOAP_FMAC4 soap_in_PointerTo__witsml1__obj_USCOREwell_sequence(struct soap*, const char*, __witsml1__obj_USCOREwell_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__witsml1__obj_USCOREwell_sequence(struct soap*, __witsml1__obj_USCOREwell_sequence *const*, const char*, const char*);
SOAP_FMAC3 __witsml1__obj_USCOREwell_sequence ** SOAP_FMAC4 soap_get_PointerTo__witsml1__obj_USCOREwell_sequence(struct soap*, __witsml1__obj_USCOREwell_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREwellCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREwellCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREwellCRS(struct soap*, witsml1__cs_USCOREwellCRS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREwellCRS(struct soap*, const char *, int, witsml1__cs_USCOREwellCRS *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREwellCRS ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREwellCRS(struct soap*, const char*, witsml1__cs_USCOREwellCRS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREwellCRS(struct soap*, witsml1__cs_USCOREwellCRS *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREwellCRS ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREwellCRS(struct soap*, witsml1__cs_USCOREwellCRS **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREreferencePoint_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREreferencePoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREreferencePoint(struct soap*, witsml1__cs_USCOREreferencePoint *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREreferencePoint(struct soap*, const char *, int, witsml1__cs_USCOREreferencePoint *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREreferencePoint ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREreferencePoint(struct soap*, const char*, witsml1__cs_USCOREreferencePoint **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREreferencePoint(struct soap*, witsml1__cs_USCOREreferencePoint *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREreferencePoint ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREreferencePoint(struct soap*, witsml1__cs_USCOREreferencePoint **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREpublicLandSurveySystem_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREpublicLandSurveySystem_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREpublicLandSurveySystem(struct soap*, witsml1__cs_USCOREpublicLandSurveySystem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREpublicLandSurveySystem(struct soap*, const char *, int, witsml1__cs_USCOREpublicLandSurveySystem *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREpublicLandSurveySystem ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREpublicLandSurveySystem(struct soap*, const char*, witsml1__cs_USCOREpublicLandSurveySystem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREpublicLandSurveySystem(struct soap*, witsml1__cs_USCOREpublicLandSurveySystem *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREpublicLandSurveySystem ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREpublicLandSurveySystem(struct soap*, witsml1__cs_USCOREpublicLandSurveySystem **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElocation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCORElocation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCORElocation(struct soap*, witsml1__cs_USCORElocation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCORElocation(struct soap*, const char *, int, witsml1__cs_USCORElocation *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCORElocation ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCORElocation(struct soap*, const char*, witsml1__cs_USCORElocation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCORElocation(struct soap*, witsml1__cs_USCORElocation *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCORElocation ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCORElocation(struct soap*, witsml1__cs_USCORElocation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__lengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__lengthMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__lengthMeasure(struct soap*, witsml1__lengthMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__lengthMeasure(struct soap*, const char *, int, witsml1__lengthMeasure *const*, const char *);
SOAP_FMAC3 witsml1__lengthMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__lengthMeasure(struct soap*, const char*, witsml1__lengthMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__lengthMeasure(struct soap*, witsml1__lengthMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__lengthMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__lengthMeasure(struct soap*, witsml1__lengthMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREwellDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__cs_USCOREwellDatum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__cs_USCOREwellDatum(struct soap*, witsml1__cs_USCOREwellDatum *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__cs_USCOREwellDatum(struct soap*, const char *, int, witsml1__cs_USCOREwellDatum *const*, const char *);
SOAP_FMAC3 witsml1__cs_USCOREwellDatum ** SOAP_FMAC4 soap_in_PointerTowitsml1__cs_USCOREwellDatum(struct soap*, const char*, witsml1__cs_USCOREwellDatum **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__cs_USCOREwellDatum(struct soap*, witsml1__cs_USCOREwellDatum *const*, const char*, const char*);
SOAP_FMAC3 witsml1__cs_USCOREwellDatum ** SOAP_FMAC4 soap_get_PointerTowitsml1__cs_USCOREwellDatum(struct soap*, witsml1__cs_USCOREwellDatum **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellElevationCoord_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__wellElevationCoord_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__wellElevationCoord(struct soap*, witsml1__wellElevationCoord *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__wellElevationCoord(struct soap*, const char *, int, witsml1__wellElevationCoord *const*, const char *);
SOAP_FMAC3 witsml1__wellElevationCoord ** SOAP_FMAC4 soap_in_PointerTowitsml1__wellElevationCoord(struct soap*, const char*, witsml1__wellElevationCoord **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__wellElevationCoord(struct soap*, witsml1__wellElevationCoord *const*, const char*, const char*);
SOAP_FMAC3 witsml1__wellElevationCoord ** SOAP_FMAC4 soap_get_PointerTowitsml1__wellElevationCoord(struct soap*, witsml1__wellElevationCoord **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellDirection_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellDirection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__WellDirection(struct soap*, enum witsml1__WellDirection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__WellDirection(struct soap*, const char *, int, enum witsml1__WellDirection *const*, const char *);
SOAP_FMAC3 enum witsml1__WellDirection ** SOAP_FMAC4 soap_in_PointerTowitsml1__WellDirection(struct soap*, const char*, enum witsml1__WellDirection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__WellDirection(struct soap*, enum witsml1__WellDirection *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__WellDirection ** SOAP_FMAC4 soap_get_PointerTowitsml1__WellDirection(struct soap*, enum witsml1__WellDirection **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellFluid_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellFluid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__WellFluid(struct soap*, enum witsml1__WellFluid *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__WellFluid(struct soap*, const char *, int, enum witsml1__WellFluid *const*, const char *);
SOAP_FMAC3 enum witsml1__WellFluid ** SOAP_FMAC4 soap_in_PointerTowitsml1__WellFluid(struct soap*, const char*, enum witsml1__WellFluid **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__WellFluid(struct soap*, enum witsml1__WellFluid *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__WellFluid ** SOAP_FMAC4 soap_get_PointerTowitsml1__WellFluid(struct soap*, enum witsml1__WellFluid **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellPurpose_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellPurpose_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__WellPurpose(struct soap*, enum witsml1__WellPurpose *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__WellPurpose(struct soap*, const char *, int, enum witsml1__WellPurpose *const*, const char *);
SOAP_FMAC3 enum witsml1__WellPurpose ** SOAP_FMAC4 soap_in_PointerTowitsml1__WellPurpose(struct soap*, const char*, enum witsml1__WellPurpose **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__WellPurpose(struct soap*, enum witsml1__WellPurpose *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__WellPurpose ** SOAP_FMAC4 soap_get_PointerTowitsml1__WellPurpose(struct soap*, enum witsml1__WellPurpose **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellStatus_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__WellStatus_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__WellStatus(struct soap*, enum witsml1__WellStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__WellStatus(struct soap*, const char *, int, enum witsml1__WellStatus *const*, const char *);
SOAP_FMAC3 enum witsml1__WellStatus ** SOAP_FMAC4 soap_in_PointerTowitsml1__WellStatus(struct soap*, const char*, enum witsml1__WellStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__WellStatus(struct soap*, enum witsml1__WellStatus *const*, const char*, const char*);
SOAP_FMAC3 enum witsml1__WellStatus ** SOAP_FMAC4 soap_get_PointerTowitsml1__WellStatus(struct soap*, enum witsml1__WellStatus **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__dimensionlessMeasure_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__dimensionlessMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__dimensionlessMeasure(struct soap*, witsml1__dimensionlessMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__dimensionlessMeasure(struct soap*, const char *, int, witsml1__dimensionlessMeasure *const*, const char *);
SOAP_FMAC3 witsml1__dimensionlessMeasure ** SOAP_FMAC4 soap_in_PointerTowitsml1__dimensionlessMeasure(struct soap*, const char*, witsml1__dimensionlessMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__dimensionlessMeasure(struct soap*, witsml1__dimensionlessMeasure *const*, const char*, const char*);
SOAP_FMAC3 witsml1__dimensionlessMeasure ** SOAP_FMAC4 soap_get_PointerTowitsml1__dimensionlessMeasure(struct soap*, witsml1__dimensionlessMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str32_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__str32_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__str32(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__str32(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__str32(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__str32(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__str32(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timestamp_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__timestamp(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__timestamp(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTowitsml1__timestamp(struct soap*, const char*, time_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__timestamp(struct soap*, time_t *const*, const char*, const char*);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTowitsml1__timestamp(struct soap*, time_t **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__nameString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_PointerTowitsml1__nameString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowitsml1__nameString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowitsml1__nameString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowitsml1__nameString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowitsml1__nameString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowitsml1__nameString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__XML_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__XML_DEFINED
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1__QName_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1__QName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

inline int soap_write__QName(struct soap *soap, char *const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__QName(soap, p, "QName", "xsd:QName") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

inline int soap_read__QName(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get__QName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_string_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

inline int soap_write_string(struct soap *soap, char *const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_string(soap, p, "string", "xsd:string") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

inline int soap_read_string(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, std::vector<_gml__coordinateOperationAccuracy *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, const std::vector<_gml__coordinateOperationAccuracy *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, const char*, int, const std::vector<_gml__coordinateOperationAccuracy *> *, const char*);
SOAP_FMAC3 std::vector<_gml__coordinateOperationAccuracy *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, const char*, std::vector<_gml__coordinateOperationAccuracy *> *, const char*);
SOAP_FMAC1 std::vector<_gml__coordinateOperationAccuracy *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_gml__coordinateOperationAccuracy *>  * soap_new_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, std::vector<gml__CoordinateSystemAxisPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const std::vector<gml__CoordinateSystemAxisPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const char*, int, const std::vector<gml__CoordinateSystemAxisPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gml__CoordinateSystemAxisPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const char*, std::vector<gml__CoordinateSystemAxisPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gml__CoordinateSystemAxisPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gml__CoordinateSystemAxisPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTo_gml__domainOfValidity_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTo_gml__domainOfValidity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, std::vector<_gml__domainOfValidity *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, const std::vector<_gml__domainOfValidity *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, const char*, int, const std::vector<_gml__domainOfValidity *> *, const char*);
SOAP_FMAC3 std::vector<_gml__domainOfValidity *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, const char*, std::vector<_gml__domainOfValidity *> *, const char*);
SOAP_FMAC1 std::vector<_gml__domainOfValidity *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_gml__domainOfValidity *>  * soap_new_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTo_gml__domainOfValidity(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__RelatedTimeType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__RelatedTimeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, std::vector<gml__RelatedTimeType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, const std::vector<gml__RelatedTimeType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, const char*, int, const std::vector<gml__RelatedTimeType *> *, const char*);
SOAP_FMAC3 std::vector<gml__RelatedTimeType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, const char*, std::vector<gml__RelatedTimeType *> *, const char*);
SOAP_FMAC1 std::vector<gml__RelatedTimeType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gml__RelatedTimeType *>  * soap_new_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogml__RelatedTimeType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__CI_USCOREDate_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__CI_USCOREDate_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, std::vector<gco__DateTime_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, const std::vector<gco__DateTime_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gco__DateTime_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gco__DateTime_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, const char*, std::vector<gco__DateTime_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gco__DateTime_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gco__DateTime_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, std::vector<gco__CharacterString_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, const std::vector<gco__CharacterString_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gco__CharacterString_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gco__CharacterString_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, const char*, std::vector<gco__CharacterString_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gco__CharacterString_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gco__CharacterString_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, const std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, const char*, int, const std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, const char*, std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__obj_USCOREcoordinateReferenceSystem *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREcoordinateReferenceSystem(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker(struct soap*, std::vector<witsml1__obj_USCOREformationMarker *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker(struct soap*, const std::vector<witsml1__obj_USCOREformationMarker *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker(struct soap*, const char*, int, const std::vector<witsml1__obj_USCOREformationMarker *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__obj_USCOREformationMarker *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker(struct soap*, const char*, std::vector<witsml1__obj_USCOREformationMarker *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__obj_USCOREformationMarker *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__obj_USCOREformationMarker *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREformationMarker(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog(struct soap*, std::vector<witsml1__obj_USCORElog *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog(struct soap*, const std::vector<witsml1__obj_USCORElog *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog(struct soap*, const char*, int, const std::vector<witsml1__obj_USCORElog *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__obj_USCORElog *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog(struct soap*, const char*, std::vector<witsml1__obj_USCORElog *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__obj_USCORElog *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__obj_USCORElog *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCORElog(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory(struct soap*, std::vector<witsml1__obj_USCOREtrajectory *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory(struct soap*, const std::vector<witsml1__obj_USCOREtrajectory *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory(struct soap*, const char*, int, const std::vector<witsml1__obj_USCOREtrajectory *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__obj_USCOREtrajectory *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory(struct soap*, const char*, std::vector<witsml1__obj_USCOREtrajectory *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__obj_USCOREtrajectory *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__obj_USCOREtrajectory *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREtrajectory(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore(struct soap*, std::vector<witsml1__obj_USCOREwellbore *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore(struct soap*, const std::vector<witsml1__obj_USCOREwellbore *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore(struct soap*, const char*, int, const std::vector<witsml1__obj_USCOREwellbore *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__obj_USCOREwellbore *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore(struct soap*, const char*, std::vector<witsml1__obj_USCOREwellbore *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__obj_USCOREwellbore *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__obj_USCOREwellbore *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwellbore(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell(struct soap*, std::vector<witsml1__obj_USCOREwell *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell(struct soap*, const std::vector<witsml1__obj_USCOREwell *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell(struct soap*, const char*, int, const std::vector<witsml1__obj_USCOREwell *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__obj_USCOREwell *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell(struct soap*, const char*, std::vector<witsml1__obj_USCOREwell *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__obj_USCOREwell *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__obj_USCOREwell *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__obj_USCOREwell(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__CodeType_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTogml__CodeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, std::vector<gml__CodeType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, const std::vector<gml__CodeType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, const char*, int, const std::vector<gml__CodeType *> *, const char*);
SOAP_FMAC3 std::vector<gml__CodeType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, const char*, std::vector<gml__CodeType *> *, const char*);
SOAP_FMAC1 std::vector<gml__CodeType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gml__CodeType *>  * soap_new_std__vectorTemplateOfPointerTogml__CodeType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogml__CodeType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfstd__string_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfstd__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOfstd__string(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, std::vector<witsml1__cs_USCOREaxisDefinition *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, const std::vector<witsml1__cs_USCOREaxisDefinition *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, const char*, int, const std::vector<witsml1__cs_USCOREaxisDefinition *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCOREaxisDefinition *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, const char*, std::vector<witsml1__cs_USCOREaxisDefinition *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCOREaxisDefinition *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCOREaxisDefinition *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREaxisDefinition(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData(struct soap*, std::vector<witsml1__cs_USCORElogData *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData(struct soap*, const std::vector<witsml1__cs_USCORElogData *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData(struct soap*, const char*, int, const std::vector<witsml1__cs_USCORElogData *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCORElogData *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData(struct soap*, const char*, std::vector<witsml1__cs_USCORElogData *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCORElogData *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCORElogData *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogData(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, std::vector<witsml1__cs_USCORElogCurveInfo *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, const std::vector<witsml1__cs_USCORElogCurveInfo *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, const char*, int, const std::vector<witsml1__cs_USCORElogCurveInfo *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCORElogCurveInfo *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, const char*, std::vector<witsml1__cs_USCORElogCurveInfo *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCORElogCurveInfo *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCORElogCurveInfo *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCORElogCurveInfo(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, std::vector<witsml1__cs_USCOREtrajectoryStation *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, const std::vector<witsml1__cs_USCOREtrajectoryStation *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, const char*, int, const std::vector<witsml1__cs_USCOREtrajectoryStation *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCOREtrajectoryStation *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, const char*, std::vector<witsml1__cs_USCOREtrajectoryStation *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCOREtrajectoryStation *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCOREtrajectoryStation *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREtrajectoryStation(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOf_XML_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOf_XML_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_XML(struct soap*, std::vector<char *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_XML(struct soap*, const std::vector<char *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_XML(struct soap*, const char*, int, const std::vector<char *> *, const char*);
SOAP_FMAC3 std::vector<char *> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_XML(struct soap*, const char*, std::vector<char *> *, const char*);
SOAP_FMAC1 std::vector<char *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_XML(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<char *>  * soap_new_std__vectorTemplateOf_XML(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOf_XML(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone(struct soap*, std::vector<witsml1__timestampedTimeZone *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone(struct soap*, const std::vector<witsml1__timestampedTimeZone *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone(struct soap*, const char*, int, const std::vector<witsml1__timestampedTimeZone *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__timestampedTimeZone *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone(struct soap*, const char*, std::vector<witsml1__timestampedTimeZone *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__timestampedTimeZone *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__timestampedTimeZone *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__timestampedTimeZone(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__indexedObject_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__indexedObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__indexedObject(struct soap*, std::vector<witsml1__indexedObject *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__indexedObject(struct soap*, const std::vector<witsml1__indexedObject *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__indexedObject(struct soap*, const char*, int, const std::vector<witsml1__indexedObject *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__indexedObject *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__indexedObject(struct soap*, const char*, std::vector<witsml1__indexedObject *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__indexedObject *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__indexedObject(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__indexedObject *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__indexedObject(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__indexedObject(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfwitsml1__kindString_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfwitsml1__kindString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwitsml1__kindString(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwitsml1__kindString(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwitsml1__kindString(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOfwitsml1__kindString(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwitsml1__kindString(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOfwitsml1__kindString(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfwitsml1__kindString(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, std::vector<witsml1__cs_USCOREdocumentEvent *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, const std::vector<witsml1__cs_USCOREdocumentEvent *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, const char*, int, const std::vector<witsml1__cs_USCOREdocumentEvent *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCOREdocumentEvent *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, const char*, std::vector<witsml1__cs_USCOREdocumentEvent *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCOREdocumentEvent *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCOREdocumentEvent *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentEvent(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, std::vector<witsml1__cs_USCOREextensionNameValue *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, const std::vector<witsml1__cs_USCOREextensionNameValue *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, const char*, int, const std::vector<witsml1__cs_USCOREextensionNameValue *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCOREextensionNameValue *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, const char*, std::vector<witsml1__cs_USCOREextensionNameValue *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCOREextensionNameValue *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCOREextensionNameValue *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREextensionNameValue(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, std::vector<witsml1__cs_USCOREdocumentSecurityInfo *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, const std::vector<witsml1__cs_USCOREdocumentSecurityInfo *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, const char*, int, const std::vector<witsml1__cs_USCOREdocumentSecurityInfo *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCOREdocumentSecurityInfo *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, const char*, std::vector<witsml1__cs_USCOREdocumentSecurityInfo *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCOREdocumentSecurityInfo *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCOREdocumentSecurityInfo *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREdocumentSecurityInfo(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__nameStruct_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__nameStruct_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__nameStruct(struct soap*, std::vector<witsml1__nameStruct *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__nameStruct(struct soap*, const std::vector<witsml1__nameStruct *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__nameStruct(struct soap*, const char*, int, const std::vector<witsml1__nameStruct *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__nameStruct *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__nameStruct(struct soap*, const char*, std::vector<witsml1__nameStruct *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__nameStruct *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__nameStruct(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__nameStruct *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__nameStruct(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__nameStruct(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS(struct soap*, std::vector<witsml1__cs_USCOREwellCRS *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS(struct soap*, const std::vector<witsml1__cs_USCOREwellCRS *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS(struct soap*, const char*, int, const std::vector<witsml1__cs_USCOREwellCRS *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCOREwellCRS *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS(struct soap*, const char*, std::vector<witsml1__cs_USCOREwellCRS *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCOREwellCRS *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCOREwellCRS *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellCRS(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint(struct soap*, std::vector<witsml1__cs_USCOREreferencePoint *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint(struct soap*, const std::vector<witsml1__cs_USCOREreferencePoint *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint(struct soap*, const char*, int, const std::vector<witsml1__cs_USCOREreferencePoint *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCOREreferencePoint *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint(struct soap*, const char*, std::vector<witsml1__cs_USCOREreferencePoint *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCOREreferencePoint *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCOREreferencePoint *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREreferencePoint(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation(struct soap*, std::vector<witsml1__cs_USCORElocation *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation(struct soap*, const std::vector<witsml1__cs_USCORElocation *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation(struct soap*, const char*, int, const std::vector<witsml1__cs_USCORElocation *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCORElocation *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation(struct soap*, const char*, std::vector<witsml1__cs_USCORElocation *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCORElocation *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCORElocation *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCORElocation(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum_DEFINED
#define SOAP_TYPE_gsoap_witsml1_4_1_1_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum(struct soap*, std::vector<witsml1__cs_USCOREwellDatum *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum(struct soap*, const std::vector<witsml1__cs_USCOREwellDatum *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum(struct soap*, const char*, int, const std::vector<witsml1__cs_USCOREwellDatum *> *, const char*);
SOAP_FMAC3 std::vector<witsml1__cs_USCOREwellDatum *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum(struct soap*, const char*, std::vector<witsml1__cs_USCOREwellDatum *> *, const char*);
SOAP_FMAC1 std::vector<witsml1__cs_USCOREwellDatum *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<witsml1__cs_USCOREwellDatum *>  * soap_new_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTowitsml1__cs_USCOREwellDatum(soap, n, NULL, NULL, NULL);
}
#endif

} // namespace gsoap_witsml1_4_1_1


#endif

/* End of gsoap_witsml1_4_1_1H.h */
