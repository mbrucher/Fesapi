/* gsoap_resqml2_0_1H.h
   Generated by gSOAP 2.8.32 for resqml2_0_1ForGsoap.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool is licensed for commercial use, no resale/redistribution.
--------------------------------------------------------------------------------
Product and source code licensed by Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef gsoap_resqml2_0_1H_H
#define gsoap_resqml2_0_1H_H
#include "gsoap_resqml2_0_1Stub.h"

namespace gsoap_resqml2_0_1 {
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);
SOAP_FMAC3 void * SOAP_FMAC4 gsoap_resqml2_0_1_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 gsoap_resqml2_0_1_fdelete(struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 gsoap_resqml2_0_1_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 gsoap_resqml2_0_1_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_byte_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_byte_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

inline int soap_write_byte(struct soap *soap, char const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_byte(soap, p, "byte", "xsd:byte") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

inline int soap_read_byte(struct soap *soap, char *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_byte(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_int_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_int_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

inline int soap_write_int(struct soap *soap, int const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_int(soap, p, "int", "xsd:int") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

inline int soap_read_int(struct soap *soap, int *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_int(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_long_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_long_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

inline int soap_write_long(struct soap *soap, long const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_long(soap, p, "long", "xsd:long") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

inline int soap_read_long(struct soap *soap, long *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_long(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__integer_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__integer_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__integer(struct soap*, LONG64 *);

#define soap_xsd__integer2s soap_LONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, const LONG64 *, const char*);

#define soap_s2xsd__integer soap_s2LONG64

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, LONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, const LONG64 *, const char*, const char*);

inline int soap_write_xsd__integer(struct soap *soap, LONG64 const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_xsd__integer(soap, p, "xsd:integer", "xsd:integer") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__integer(struct soap*, LONG64 *, const char*, const char*);

inline int soap_read_xsd__integer(struct soap *soap, LONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_xsd__integer(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_LONG64_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_LONG64_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

inline int soap_write_LONG64(struct soap *soap, LONG64 const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_LONG64(soap, p, "long", "xsd:long") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

inline int soap_read_LONG64(struct soap *soap, LONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_LONG64(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _gco__Real is a typedef synonym for double */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__Real_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__Real_DEFINED

#define soap_default__gco__Real(soap, a) soap_default_double(soap, a)


#define soap__gco__Real2s soap_double2s


#define soap_out__gco__Real soap_out_double


#define soap_s2_gco__Real soap_s2double


#define soap_in__gco__Real soap_in_double


#define soap_put__gco__Real soap_put_double


#define soap_write__gco__Real soap_write_double


#define soap_get__gco__Real soap_get_double


#define soap_read__gco__Real soap_read_double

#endif
/* _gml__maximumValue is a typedef synonym for double */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__maximumValue_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__maximumValue_DEFINED

#define soap_default__gml__maximumValue(soap, a) soap_default_double(soap, a)


#define soap__gml__maximumValue2s soap_double2s


#define soap_out__gml__maximumValue soap_out_double


#define soap_s2_gml__maximumValue soap_s2double


#define soap_in__gml__maximumValue soap_in_double


#define soap_put__gml__maximumValue soap_put_double


#define soap_write__gml__maximumValue soap_write_double


#define soap_get__gml__maximumValue soap_get_double


#define soap_read__gml__maximumValue soap_read_double

#endif
/* _gml__minimumValue is a typedef synonym for double */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__minimumValue_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__minimumValue_DEFINED

#define soap_default__gml__minimumValue(soap, a) soap_default_double(soap, a)


#define soap__gml__minimumValue2s soap_double2s


#define soap_out__gml__minimumValue soap_out_double


#define soap_s2_gml__minimumValue soap_s2double


#define soap_in__gml__minimumValue soap_in_double


#define soap_put__gml__minimumValue soap_put_double


#define soap_write__gml__minimumValue soap_write_double


#define soap_get__gml__minimumValue soap_get_double


#define soap_read__gml__minimumValue soap_read_double

#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__Measure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__Measure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__Measure(struct soap*, double *);

#define soap_eml__Measure2s soap_double2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__Measure(struct soap*, const char*, int, const double *, const char*);

#define soap_s2eml__Measure soap_s2double

SOAP_FMAC3 double * SOAP_FMAC4 soap_in_eml__Measure(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__Measure(struct soap*, const double *, const char*, const char*);

inline int soap_write_eml__Measure(struct soap *soap, double const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__Measure(soap, p, "eml:Measure", "eml:Measure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_eml__Measure(struct soap*, double *, const char*, const char*);

inline int soap_read_eml__Measure(struct soap *soap, double *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__Measure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_double_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_double_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

inline int soap_write_double(struct soap *soap, double const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_double(soap, p, "double", "xsd:double") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

inline int soap_read_double(struct soap *soap, double *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_double(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_unsignedInt_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_unsignedInt_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

inline int soap_write_unsignedInt(struct soap *soap, unsigned int const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_unsignedInt(soap, p, "unsignedInt", "xsd:unsignedInt") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

inline int soap_read_unsignedInt(struct soap *soap, unsigned int *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_unsignedInt(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__positiveInteger_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__positiveInteger_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__positiveInteger(struct soap*, ULONG64 *);

#define soap_xsd__positiveInteger2s soap_ULONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__positiveInteger(struct soap*, const char*, int, const ULONG64 *, const char*);

#define soap_s2xsd__positiveInteger soap_s2ULONG64

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_xsd__positiveInteger(struct soap*, const char*, ULONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__positiveInteger(struct soap*, const ULONG64 *, const char*, const char*);

inline int soap_write_xsd__positiveInteger(struct soap *soap, ULONG64 const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_xsd__positiveInteger(soap, p, "xsd:positiveInteger", "xsd:positiveInteger") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_xsd__positiveInteger(struct soap*, ULONG64 *, const char*, const char*);

inline int soap_read_xsd__positiveInteger(struct soap *soap, ULONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_xsd__positiveInteger(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__nonNegativeInteger_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__nonNegativeInteger_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__nonNegativeInteger(struct soap*, ULONG64 *);

#define soap_xsd__nonNegativeInteger2s soap_ULONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, const ULONG64 *, const char*);

#define soap_s2xsd__nonNegativeInteger soap_s2ULONG64

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, ULONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, const ULONG64 *, const char*, const char*);

inline int soap_write_xsd__nonNegativeInteger(struct soap *soap, ULONG64 const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_xsd__nonNegativeInteger(soap, p, "xsd:nonNegativeInteger", "xsd:nonNegativeInteger") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, ULONG64 *, const char*, const char*);

inline int soap_read_xsd__nonNegativeInteger(struct soap *soap, ULONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_xsd__nonNegativeInteger(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ULONG64_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_ULONG64_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ULONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ULONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_ULONG64(struct soap*, const char*, ULONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ULONG64(struct soap*, const ULONG64 *, const char*, const char*);

inline int soap_write_ULONG64(struct soap *soap, ULONG64 const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_ULONG64(soap, p, "unsignedLong", "xsd:unsignedLong") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_ULONG64(struct soap*, ULONG64 *, const char*, const char*);

inline int soap_read_ULONG64(struct soap *soap, ULONG64 *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_ULONG64(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _gco__DateTime is a typedef synonym for dateTime */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__DateTime_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__DateTime_DEFINED

#define soap_default__gco__DateTime(soap, a) soap_default_dateTime(soap, a)


#define soap__gco__DateTime2s soap_dateTime2s


#define soap_out__gco__DateTime soap_out_dateTime


#define soap_s2_gco__DateTime soap_s2dateTime


#define soap_in__gco__DateTime soap_in_dateTime


#define soap_put__gco__DateTime soap_put_dateTime


#define soap_write__gco__DateTime soap_write_dateTime


#define soap_get__gco__DateTime soap_get_dateTime


#define soap_read__gco__DateTime soap_read_dateTime

#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_dateTime_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_dateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_dateTime(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_dateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_dateTime(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_dateTime(struct soap*, const time_t *, const char*, const char*);

inline int soap_write_dateTime(struct soap *soap, time_t const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_dateTime(soap, p, "dateTime", "xsd:dateTime") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_dateTime(struct soap*, time_t *, const char*, const char*);

inline int soap_read_dateTime(struct soap *soap, time_t *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_dateTime(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _gco__Boolean is a typedef synonym for bool */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__Boolean_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__Boolean_DEFINED

#define soap_default__gco__Boolean(soap, a) soap_default_bool(soap, a)


#define soap__gco__Boolean2s soap_bool2s


#define soap_out__gco__Boolean soap_out_bool


#define soap_s2_gco__Boolean soap_s2bool


#define soap_in__gco__Boolean soap_in_bool


inline bool * soap_new__gco__Boolean(struct soap *soap, int n = -1)
{
	return static_cast<bool *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(bool)));
}

#define soap_put__gco__Boolean soap_put_bool


#define soap_write__gco__Boolean soap_write_bool


#define soap_get__gco__Boolean soap_get_bool


#define soap_read__gco__Boolean soap_read_bool

#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__RelatedTimeType_relativePosition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__RelatedTimeType_relativePosition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__RelatedTimeType_relativePosition(struct soap*, const char*, int, const enum _gml__RelatedTimeType_relativePosition *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__gml__RelatedTimeType_relativePosition2s(struct soap*, enum _gml__RelatedTimeType_relativePosition);
SOAP_FMAC3 enum _gml__RelatedTimeType_relativePosition * SOAP_FMAC4 soap_in__gml__RelatedTimeType_relativePosition(struct soap*, const char*, enum _gml__RelatedTimeType_relativePosition *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_gml__RelatedTimeType_relativePosition(struct soap*, const char*, enum _gml__RelatedTimeType_relativePosition *);

inline enum _gml__RelatedTimeType_relativePosition * soap_new__gml__RelatedTimeType_relativePosition(struct soap *soap, int n = -1)
{
	return static_cast<enum _gml__RelatedTimeType_relativePosition *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum _gml__RelatedTimeType_relativePosition)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put__gml__RelatedTimeType_relativePosition(struct soap*, const enum _gml__RelatedTimeType_relativePosition *, const char*, const char*);

inline int soap_write__gml__RelatedTimeType_relativePosition(struct soap *soap, enum _gml__RelatedTimeType_relativePosition const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__gml__RelatedTimeType_relativePosition(soap, p, "gml:RelatedTimeType-relativePosition", "gml:RelatedTimeType-relativePosition") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum _gml__RelatedTimeType_relativePosition * SOAP_FMAC4 soap_get__gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition *, const char*, const char*);

inline int soap_read__gml__RelatedTimeType_relativePosition(struct soap *soap, enum _gml__RelatedTimeType_relativePosition *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get__gml__RelatedTimeType_relativePosition(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_bool_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_bool_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

inline bool * soap_new_bool(struct soap *soap, int n = -1)
{
	return static_cast<bool *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(bool)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

inline int soap_write_bool(struct soap *soap, bool const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_bool(soap, p, "boolean", "xsd:boolean") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

inline int soap_read_bool(struct soap *soap, bool *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_bool(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DigitalStorageUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DigitalStorageUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__DigitalStorageUom(struct soap*, enum eml__DigitalStorageUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DigitalStorageUom(struct soap*, const char*, int, const enum eml__DigitalStorageUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__DigitalStorageUom2s(struct soap*, enum eml__DigitalStorageUom);
SOAP_FMAC3 enum eml__DigitalStorageUom * SOAP_FMAC4 soap_in_eml__DigitalStorageUom(struct soap*, const char*, enum eml__DigitalStorageUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__DigitalStorageUom(struct soap*, const char*, enum eml__DigitalStorageUom *);

inline enum eml__DigitalStorageUom * soap_new_eml__DigitalStorageUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__DigitalStorageUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__DigitalStorageUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__DigitalStorageUom(struct soap*, const enum eml__DigitalStorageUom *, const char*, const char*);

inline int soap_write_eml__DigitalStorageUom(struct soap *soap, enum eml__DigitalStorageUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__DigitalStorageUom(soap, p, "eml:DigitalStorageUom", "eml:DigitalStorageUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__DigitalStorageUom * SOAP_FMAC4 soap_get_eml__DigitalStorageUom(struct soap*, enum eml__DigitalStorageUom *, const char*, const char*);

inline int soap_read_eml__DigitalStorageUom(struct soap *soap, enum eml__DigitalStorageUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__DigitalStorageUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticDipoleMomentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticDipoleMomentUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MagneticDipoleMomentUom(struct soap*, enum eml__MagneticDipoleMomentUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticDipoleMomentUom(struct soap*, const char*, int, const enum eml__MagneticDipoleMomentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MagneticDipoleMomentUom2s(struct soap*, enum eml__MagneticDipoleMomentUom);
SOAP_FMAC3 enum eml__MagneticDipoleMomentUom * SOAP_FMAC4 soap_in_eml__MagneticDipoleMomentUom(struct soap*, const char*, enum eml__MagneticDipoleMomentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MagneticDipoleMomentUom(struct soap*, const char*, enum eml__MagneticDipoleMomentUom *);

inline enum eml__MagneticDipoleMomentUom * soap_new_eml__MagneticDipoleMomentUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MagneticDipoleMomentUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MagneticDipoleMomentUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MagneticDipoleMomentUom(struct soap*, const enum eml__MagneticDipoleMomentUom *, const char*, const char*);

inline int soap_write_eml__MagneticDipoleMomentUom(struct soap *soap, enum eml__MagneticDipoleMomentUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MagneticDipoleMomentUom(soap, p, "eml:MagneticDipoleMomentUom", "eml:MagneticDipoleMomentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MagneticDipoleMomentUom * SOAP_FMAC4 soap_get_eml__MagneticDipoleMomentUom(struct soap*, enum eml__MagneticDipoleMomentUom *, const char*, const char*);

inline int soap_read_eml__MagneticDipoleMomentUom(struct soap *soap, enum eml__MagneticDipoleMomentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MagneticDipoleMomentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__EnergyPerAreaUom(struct soap*, enum eml__EnergyPerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerAreaUom(struct soap*, const char*, int, const enum eml__EnergyPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__EnergyPerAreaUom2s(struct soap*, enum eml__EnergyPerAreaUom);
SOAP_FMAC3 enum eml__EnergyPerAreaUom * SOAP_FMAC4 soap_in_eml__EnergyPerAreaUom(struct soap*, const char*, enum eml__EnergyPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__EnergyPerAreaUom(struct soap*, const char*, enum eml__EnergyPerAreaUom *);

inline enum eml__EnergyPerAreaUom * soap_new_eml__EnergyPerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__EnergyPerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__EnergyPerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__EnergyPerAreaUom(struct soap*, const enum eml__EnergyPerAreaUom *, const char*, const char*);

inline int soap_write_eml__EnergyPerAreaUom(struct soap *soap, enum eml__EnergyPerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__EnergyPerAreaUom(soap, p, "eml:EnergyPerAreaUom", "eml:EnergyPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__EnergyPerAreaUom * SOAP_FMAC4 soap_get_eml__EnergyPerAreaUom(struct soap*, enum eml__EnergyPerAreaUom *, const char*, const char*);

inline int soap_read_eml__EnergyPerAreaUom(struct soap *soap, enum eml__EnergyPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__EnergyPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LightExposureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LightExposureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LightExposureUom(struct soap*, enum eml__LightExposureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LightExposureUom(struct soap*, const char*, int, const enum eml__LightExposureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LightExposureUom2s(struct soap*, enum eml__LightExposureUom);
SOAP_FMAC3 enum eml__LightExposureUom * SOAP_FMAC4 soap_in_eml__LightExposureUom(struct soap*, const char*, enum eml__LightExposureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LightExposureUom(struct soap*, const char*, enum eml__LightExposureUom *);

inline enum eml__LightExposureUom * soap_new_eml__LightExposureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LightExposureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LightExposureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LightExposureUom(struct soap*, const enum eml__LightExposureUom *, const char*, const char*);

inline int soap_write_eml__LightExposureUom(struct soap *soap, enum eml__LightExposureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LightExposureUom(soap, p, "eml:LightExposureUom", "eml:LightExposureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LightExposureUom * SOAP_FMAC4 soap_get_eml__LightExposureUom(struct soap*, enum eml__LightExposureUom *, const char*, const char*);

inline int soap_read_eml__LightExposureUom(struct soap *soap, enum eml__LightExposureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LightExposureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalPressureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReciprocalPressureUom(struct soap*, enum eml__ReciprocalPressureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalPressureUom(struct soap*, const char*, int, const enum eml__ReciprocalPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReciprocalPressureUom2s(struct soap*, enum eml__ReciprocalPressureUom);
SOAP_FMAC3 enum eml__ReciprocalPressureUom * SOAP_FMAC4 soap_in_eml__ReciprocalPressureUom(struct soap*, const char*, enum eml__ReciprocalPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReciprocalPressureUom(struct soap*, const char*, enum eml__ReciprocalPressureUom *);

inline enum eml__ReciprocalPressureUom * soap_new_eml__ReciprocalPressureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReciprocalPressureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReciprocalPressureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReciprocalPressureUom(struct soap*, const enum eml__ReciprocalPressureUom *, const char*, const char*);

inline int soap_write_eml__ReciprocalPressureUom(struct soap *soap, enum eml__ReciprocalPressureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReciprocalPressureUom(soap, p, "eml:ReciprocalPressureUom", "eml:ReciprocalPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReciprocalPressureUom * SOAP_FMAC4 soap_get_eml__ReciprocalPressureUom(struct soap*, enum eml__ReciprocalPressureUom *, const char*, const char*);

inline int soap_read_eml__ReciprocalPressureUom(struct soap *soap, enum eml__ReciprocalPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReciprocalPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ForcePerLengthUom(struct soap*, enum eml__ForcePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForcePerLengthUom(struct soap*, const char*, int, const enum eml__ForcePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ForcePerLengthUom2s(struct soap*, enum eml__ForcePerLengthUom);
SOAP_FMAC3 enum eml__ForcePerLengthUom * SOAP_FMAC4 soap_in_eml__ForcePerLengthUom(struct soap*, const char*, enum eml__ForcePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ForcePerLengthUom(struct soap*, const char*, enum eml__ForcePerLengthUom *);

inline enum eml__ForcePerLengthUom * soap_new_eml__ForcePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ForcePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ForcePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ForcePerLengthUom(struct soap*, const enum eml__ForcePerLengthUom *, const char*, const char*);

inline int soap_write_eml__ForcePerLengthUom(struct soap *soap, enum eml__ForcePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ForcePerLengthUom(soap, p, "eml:ForcePerLengthUom", "eml:ForcePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ForcePerLengthUom * SOAP_FMAC4 soap_get_eml__ForcePerLengthUom(struct soap*, enum eml__ForcePerLengthUom *, const char*, const char*);

inline int soap_read_eml__ForcePerLengthUom(struct soap *soap, enum eml__ForcePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ForcePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricResistancePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricResistancePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricResistancePerLengthUom(struct soap*, enum eml__ElectricResistancePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricResistancePerLengthUom(struct soap*, const char*, int, const enum eml__ElectricResistancePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricResistancePerLengthUom2s(struct soap*, enum eml__ElectricResistancePerLengthUom);
SOAP_FMAC3 enum eml__ElectricResistancePerLengthUom * SOAP_FMAC4 soap_in_eml__ElectricResistancePerLengthUom(struct soap*, const char*, enum eml__ElectricResistancePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricResistancePerLengthUom(struct soap*, const char*, enum eml__ElectricResistancePerLengthUom *);

inline enum eml__ElectricResistancePerLengthUom * soap_new_eml__ElectricResistancePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricResistancePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricResistancePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricResistancePerLengthUom(struct soap*, const enum eml__ElectricResistancePerLengthUom *, const char*, const char*);

inline int soap_write_eml__ElectricResistancePerLengthUom(struct soap *soap, enum eml__ElectricResistancePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricResistancePerLengthUom(soap, p, "eml:ElectricResistancePerLengthUom", "eml:ElectricResistancePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricResistancePerLengthUom * SOAP_FMAC4 soap_get_eml__ElectricResistancePerLengthUom(struct soap*, enum eml__ElectricResistancePerLengthUom *, const char*, const char*);

inline int soap_read_eml__ElectricResistancePerLengthUom(struct soap *soap, enum eml__ElectricResistancePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricResistancePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyLengthPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyLengthPerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__EnergyLengthPerAreaUom(struct soap*, enum eml__EnergyLengthPerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyLengthPerAreaUom(struct soap*, const char*, int, const enum eml__EnergyLengthPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__EnergyLengthPerAreaUom2s(struct soap*, enum eml__EnergyLengthPerAreaUom);
SOAP_FMAC3 enum eml__EnergyLengthPerAreaUom * SOAP_FMAC4 soap_in_eml__EnergyLengthPerAreaUom(struct soap*, const char*, enum eml__EnergyLengthPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__EnergyLengthPerAreaUom(struct soap*, const char*, enum eml__EnergyLengthPerAreaUom *);

inline enum eml__EnergyLengthPerAreaUom * soap_new_eml__EnergyLengthPerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__EnergyLengthPerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__EnergyLengthPerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__EnergyLengthPerAreaUom(struct soap*, const enum eml__EnergyLengthPerAreaUom *, const char*, const char*);

inline int soap_write_eml__EnergyLengthPerAreaUom(struct soap *soap, enum eml__EnergyLengthPerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__EnergyLengthPerAreaUom(soap, p, "eml:EnergyLengthPerAreaUom", "eml:EnergyLengthPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__EnergyLengthPerAreaUom * SOAP_FMAC4 soap_get_eml__EnergyLengthPerAreaUom(struct soap*, enum eml__EnergyLengthPerAreaUom *, const char*, const char*);

inline int soap_read_eml__EnergyLengthPerAreaUom(struct soap *soap, enum eml__EnergyLengthPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__EnergyLengthPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TimePerVolumeUom(struct soap*, enum eml__TimePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimePerVolumeUom(struct soap*, const char*, int, const enum eml__TimePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__TimePerVolumeUom2s(struct soap*, enum eml__TimePerVolumeUom);
SOAP_FMAC3 enum eml__TimePerVolumeUom * SOAP_FMAC4 soap_in_eml__TimePerVolumeUom(struct soap*, const char*, enum eml__TimePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__TimePerVolumeUom(struct soap*, const char*, enum eml__TimePerVolumeUom *);

inline enum eml__TimePerVolumeUom * soap_new_eml__TimePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__TimePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__TimePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TimePerVolumeUom(struct soap*, const enum eml__TimePerVolumeUom *, const char*, const char*);

inline int soap_write_eml__TimePerVolumeUom(struct soap *soap, enum eml__TimePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TimePerVolumeUom(soap, p, "eml:TimePerVolumeUom", "eml:TimePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__TimePerVolumeUom * SOAP_FMAC4 soap_get_eml__TimePerVolumeUom(struct soap*, enum eml__TimePerVolumeUom *, const char*, const char*);

inline int soap_read_eml__TimePerVolumeUom(struct soap *soap, enum eml__TimePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TimePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AngularVelocityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AngularVelocityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AngularVelocityUom(struct soap*, enum eml__AngularVelocityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AngularVelocityUom(struct soap*, const char*, int, const enum eml__AngularVelocityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AngularVelocityUom2s(struct soap*, enum eml__AngularVelocityUom);
SOAP_FMAC3 enum eml__AngularVelocityUom * SOAP_FMAC4 soap_in_eml__AngularVelocityUom(struct soap*, const char*, enum eml__AngularVelocityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AngularVelocityUom(struct soap*, const char*, enum eml__AngularVelocityUom *);

inline enum eml__AngularVelocityUom * soap_new_eml__AngularVelocityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AngularVelocityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AngularVelocityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AngularVelocityUom(struct soap*, const enum eml__AngularVelocityUom *, const char*, const char*);

inline int soap_write_eml__AngularVelocityUom(struct soap *soap, enum eml__AngularVelocityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AngularVelocityUom(soap, p, "eml:AngularVelocityUom", "eml:AngularVelocityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AngularVelocityUom * SOAP_FMAC4 soap_get_eml__AngularVelocityUom(struct soap*, enum eml__AngularVelocityUom *, const char*, const char*);

inline int soap_read_eml__AngularVelocityUom(struct soap *soap, enum eml__AngularVelocityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AngularVelocityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AreaPerAreaUom(struct soap*, enum eml__AreaPerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerAreaUom(struct soap*, const char*, int, const enum eml__AreaPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AreaPerAreaUom2s(struct soap*, enum eml__AreaPerAreaUom);
SOAP_FMAC3 enum eml__AreaPerAreaUom * SOAP_FMAC4 soap_in_eml__AreaPerAreaUom(struct soap*, const char*, enum eml__AreaPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AreaPerAreaUom(struct soap*, const char*, enum eml__AreaPerAreaUom *);

inline enum eml__AreaPerAreaUom * soap_new_eml__AreaPerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AreaPerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AreaPerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AreaPerAreaUom(struct soap*, const enum eml__AreaPerAreaUom *, const char*, const char*);

inline int soap_write_eml__AreaPerAreaUom(struct soap *soap, enum eml__AreaPerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AreaPerAreaUom(soap, p, "eml:AreaPerAreaUom", "eml:AreaPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AreaPerAreaUom * SOAP_FMAC4 soap_get_eml__AreaPerAreaUom(struct soap*, enum eml__AreaPerAreaUom *, const char*, const char*);

inline int soap_read_eml__AreaPerAreaUom(struct soap *soap, enum eml__AreaPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AreaPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PressureUom(struct soap*, enum eml__PressureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressureUom(struct soap*, const char*, int, const enum eml__PressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PressureUom2s(struct soap*, enum eml__PressureUom);
SOAP_FMAC3 enum eml__PressureUom * SOAP_FMAC4 soap_in_eml__PressureUom(struct soap*, const char*, enum eml__PressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PressureUom(struct soap*, const char*, enum eml__PressureUom *);

inline enum eml__PressureUom * soap_new_eml__PressureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PressureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PressureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PressureUom(struct soap*, const enum eml__PressureUom *, const char*, const char*);

inline int soap_write_eml__PressureUom(struct soap *soap, enum eml__PressureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PressureUom(soap, p, "eml:PressureUom", "eml:PressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PressureUom * SOAP_FMAC4 soap_get_eml__PressureUom(struct soap*, enum eml__PressureUom *, const char*, const char*);

inline int soap_read_eml__PressureUom(struct soap *soap, enum eml__PressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReciprocalVolumeUom(struct soap*, enum eml__ReciprocalVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalVolumeUom(struct soap*, const char*, int, const enum eml__ReciprocalVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReciprocalVolumeUom2s(struct soap*, enum eml__ReciprocalVolumeUom);
SOAP_FMAC3 enum eml__ReciprocalVolumeUom * SOAP_FMAC4 soap_in_eml__ReciprocalVolumeUom(struct soap*, const char*, enum eml__ReciprocalVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReciprocalVolumeUom(struct soap*, const char*, enum eml__ReciprocalVolumeUom *);

inline enum eml__ReciprocalVolumeUom * soap_new_eml__ReciprocalVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReciprocalVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReciprocalVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReciprocalVolumeUom(struct soap*, const enum eml__ReciprocalVolumeUom *, const char*, const char*);

inline int soap_write_eml__ReciprocalVolumeUom(struct soap *soap, enum eml__ReciprocalVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReciprocalVolumeUom(soap, p, "eml:ReciprocalVolumeUom", "eml:ReciprocalVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReciprocalVolumeUom * SOAP_FMAC4 soap_get_eml__ReciprocalVolumeUom(struct soap*, enum eml__ReciprocalVolumeUom *, const char*, const char*);

inline int soap_read_eml__ReciprocalVolumeUom(struct soap *soap, enum eml__ReciprocalVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReciprocalVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricResistanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricResistanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricResistanceUom(struct soap*, enum eml__ElectricResistanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricResistanceUom(struct soap*, const char*, int, const enum eml__ElectricResistanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricResistanceUom2s(struct soap*, enum eml__ElectricResistanceUom);
SOAP_FMAC3 enum eml__ElectricResistanceUom * SOAP_FMAC4 soap_in_eml__ElectricResistanceUom(struct soap*, const char*, enum eml__ElectricResistanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricResistanceUom(struct soap*, const char*, enum eml__ElectricResistanceUom *);

inline enum eml__ElectricResistanceUom * soap_new_eml__ElectricResistanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricResistanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricResistanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricResistanceUom(struct soap*, const enum eml__ElectricResistanceUom *, const char*, const char*);

inline int soap_write_eml__ElectricResistanceUom(struct soap *soap, enum eml__ElectricResistanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricResistanceUom(soap, p, "eml:ElectricResistanceUom", "eml:ElectricResistanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricResistanceUom * SOAP_FMAC4 soap_get_eml__ElectricResistanceUom(struct soap*, enum eml__ElectricResistanceUom *, const char*, const char*);

inline int soap_read_eml__ElectricResistanceUom(struct soap *soap, enum eml__ElectricResistanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricResistanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__IsothermalCompressibilityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__IsothermalCompressibilityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__IsothermalCompressibilityUom(struct soap*, enum eml__IsothermalCompressibilityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__IsothermalCompressibilityUom(struct soap*, const char*, int, const enum eml__IsothermalCompressibilityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__IsothermalCompressibilityUom2s(struct soap*, enum eml__IsothermalCompressibilityUom);
SOAP_FMAC3 enum eml__IsothermalCompressibilityUom * SOAP_FMAC4 soap_in_eml__IsothermalCompressibilityUom(struct soap*, const char*, enum eml__IsothermalCompressibilityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__IsothermalCompressibilityUom(struct soap*, const char*, enum eml__IsothermalCompressibilityUom *);

inline enum eml__IsothermalCompressibilityUom * soap_new_eml__IsothermalCompressibilityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__IsothermalCompressibilityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__IsothermalCompressibilityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__IsothermalCompressibilityUom(struct soap*, const enum eml__IsothermalCompressibilityUom *, const char*, const char*);

inline int soap_write_eml__IsothermalCompressibilityUom(struct soap *soap, enum eml__IsothermalCompressibilityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__IsothermalCompressibilityUom(soap, p, "eml:IsothermalCompressibilityUom", "eml:IsothermalCompressibilityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__IsothermalCompressibilityUom * SOAP_FMAC4 soap_get_eml__IsothermalCompressibilityUom(struct soap*, enum eml__IsothermalCompressibilityUom *, const char*, const char*);

inline int soap_read_eml__IsothermalCompressibilityUom(struct soap *soap, enum eml__IsothermalCompressibilityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__IsothermalCompressibilityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AttenuationPerFrequencyIntervalUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AttenuationPerFrequencyIntervalUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AttenuationPerFrequencyIntervalUom(struct soap*, enum eml__AttenuationPerFrequencyIntervalUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AttenuationPerFrequencyIntervalUom(struct soap*, const char*, int, const enum eml__AttenuationPerFrequencyIntervalUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AttenuationPerFrequencyIntervalUom2s(struct soap*, enum eml__AttenuationPerFrequencyIntervalUom);
SOAP_FMAC3 enum eml__AttenuationPerFrequencyIntervalUom * SOAP_FMAC4 soap_in_eml__AttenuationPerFrequencyIntervalUom(struct soap*, const char*, enum eml__AttenuationPerFrequencyIntervalUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AttenuationPerFrequencyIntervalUom(struct soap*, const char*, enum eml__AttenuationPerFrequencyIntervalUom *);

inline enum eml__AttenuationPerFrequencyIntervalUom * soap_new_eml__AttenuationPerFrequencyIntervalUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AttenuationPerFrequencyIntervalUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AttenuationPerFrequencyIntervalUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AttenuationPerFrequencyIntervalUom(struct soap*, const enum eml__AttenuationPerFrequencyIntervalUom *, const char*, const char*);

inline int soap_write_eml__AttenuationPerFrequencyIntervalUom(struct soap *soap, enum eml__AttenuationPerFrequencyIntervalUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AttenuationPerFrequencyIntervalUom(soap, p, "eml:AttenuationPerFrequencyIntervalUom", "eml:AttenuationPerFrequencyIntervalUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AttenuationPerFrequencyIntervalUom * SOAP_FMAC4 soap_get_eml__AttenuationPerFrequencyIntervalUom(struct soap*, enum eml__AttenuationPerFrequencyIntervalUom *, const char*, const char*);

inline int soap_read_eml__AttenuationPerFrequencyIntervalUom(struct soap *soap, enum eml__AttenuationPerFrequencyIntervalUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AttenuationPerFrequencyIntervalUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TemperatureIntervalPerLengthUom(struct soap*, enum eml__TemperatureIntervalPerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TemperatureIntervalPerLengthUom(struct soap*, const char*, int, const enum eml__TemperatureIntervalPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__TemperatureIntervalPerLengthUom2s(struct soap*, enum eml__TemperatureIntervalPerLengthUom);
SOAP_FMAC3 enum eml__TemperatureIntervalPerLengthUom * SOAP_FMAC4 soap_in_eml__TemperatureIntervalPerLengthUom(struct soap*, const char*, enum eml__TemperatureIntervalPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__TemperatureIntervalPerLengthUom(struct soap*, const char*, enum eml__TemperatureIntervalPerLengthUom *);

inline enum eml__TemperatureIntervalPerLengthUom * soap_new_eml__TemperatureIntervalPerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__TemperatureIntervalPerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__TemperatureIntervalPerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TemperatureIntervalPerLengthUom(struct soap*, const enum eml__TemperatureIntervalPerLengthUom *, const char*, const char*);

inline int soap_write_eml__TemperatureIntervalPerLengthUom(struct soap *soap, enum eml__TemperatureIntervalPerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TemperatureIntervalPerLengthUom(soap, p, "eml:TemperatureIntervalPerLengthUom", "eml:TemperatureIntervalPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__TemperatureIntervalPerLengthUom * SOAP_FMAC4 soap_get_eml__TemperatureIntervalPerLengthUom(struct soap*, enum eml__TemperatureIntervalPerLengthUom *, const char*, const char*);

inline int soap_read_eml__TemperatureIntervalPerLengthUom(struct soap *soap, enum eml__TemperatureIntervalPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TemperatureIntervalPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerMassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerMassUom(struct soap*, enum eml__VolumePerMassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerMassUom(struct soap*, const char*, int, const enum eml__VolumePerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerMassUom2s(struct soap*, enum eml__VolumePerMassUom);
SOAP_FMAC3 enum eml__VolumePerMassUom * SOAP_FMAC4 soap_in_eml__VolumePerMassUom(struct soap*, const char*, enum eml__VolumePerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerMassUom(struct soap*, const char*, enum eml__VolumePerMassUom *);

inline enum eml__VolumePerMassUom * soap_new_eml__VolumePerMassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerMassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerMassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerMassUom(struct soap*, const enum eml__VolumePerMassUom *, const char*, const char*);

inline int soap_write_eml__VolumePerMassUom(struct soap *soap, enum eml__VolumePerMassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerMassUom(soap, p, "eml:VolumePerMassUom", "eml:VolumePerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerMassUom * SOAP_FMAC4 soap_get_eml__VolumePerMassUom(struct soap*, enum eml__VolumePerMassUom *, const char*, const char*);

inline int soap_read_eml__VolumePerMassUom(struct soap *soap, enum eml__VolumePerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerMassPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerMassPerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__EnergyPerMassPerTimeUom(struct soap*, enum eml__EnergyPerMassPerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerMassPerTimeUom(struct soap*, const char*, int, const enum eml__EnergyPerMassPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__EnergyPerMassPerTimeUom2s(struct soap*, enum eml__EnergyPerMassPerTimeUom);
SOAP_FMAC3 enum eml__EnergyPerMassPerTimeUom * SOAP_FMAC4 soap_in_eml__EnergyPerMassPerTimeUom(struct soap*, const char*, enum eml__EnergyPerMassPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__EnergyPerMassPerTimeUom(struct soap*, const char*, enum eml__EnergyPerMassPerTimeUom *);

inline enum eml__EnergyPerMassPerTimeUom * soap_new_eml__EnergyPerMassPerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__EnergyPerMassPerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__EnergyPerMassPerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__EnergyPerMassPerTimeUom(struct soap*, const enum eml__EnergyPerMassPerTimeUom *, const char*, const char*);

inline int soap_write_eml__EnergyPerMassPerTimeUom(struct soap *soap, enum eml__EnergyPerMassPerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__EnergyPerMassPerTimeUom(soap, p, "eml:EnergyPerMassPerTimeUom", "eml:EnergyPerMassPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__EnergyPerMassPerTimeUom * SOAP_FMAC4 soap_get_eml__EnergyPerMassPerTimeUom(struct soap*, enum eml__EnergyPerMassPerTimeUom *, const char*, const char*);

inline int soap_read_eml__EnergyPerMassPerTimeUom(struct soap *soap, enum eml__EnergyPerMassPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__EnergyPerMassPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TimePerTimeUom(struct soap*, enum eml__TimePerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimePerTimeUom(struct soap*, const char*, int, const enum eml__TimePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__TimePerTimeUom2s(struct soap*, enum eml__TimePerTimeUom);
SOAP_FMAC3 enum eml__TimePerTimeUom * SOAP_FMAC4 soap_in_eml__TimePerTimeUom(struct soap*, const char*, enum eml__TimePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__TimePerTimeUom(struct soap*, const char*, enum eml__TimePerTimeUom *);

inline enum eml__TimePerTimeUom * soap_new_eml__TimePerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__TimePerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__TimePerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TimePerTimeUom(struct soap*, const enum eml__TimePerTimeUom *, const char*, const char*);

inline int soap_write_eml__TimePerTimeUom(struct soap *soap, enum eml__TimePerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TimePerTimeUom(soap, p, "eml:TimePerTimeUom", "eml:TimePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__TimePerTimeUom * SOAP_FMAC4 soap_get_eml__TimePerTimeUom(struct soap*, enum eml__TimePerTimeUom *, const char*, const char*);

inline int soap_read_eml__TimePerTimeUom(struct soap *soap, enum eml__TimePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TimePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DiffusionCoefficientUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DiffusionCoefficientUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__DiffusionCoefficientUom(struct soap*, enum eml__DiffusionCoefficientUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DiffusionCoefficientUom(struct soap*, const char*, int, const enum eml__DiffusionCoefficientUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__DiffusionCoefficientUom2s(struct soap*, enum eml__DiffusionCoefficientUom);
SOAP_FMAC3 enum eml__DiffusionCoefficientUom * SOAP_FMAC4 soap_in_eml__DiffusionCoefficientUom(struct soap*, const char*, enum eml__DiffusionCoefficientUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__DiffusionCoefficientUom(struct soap*, const char*, enum eml__DiffusionCoefficientUom *);

inline enum eml__DiffusionCoefficientUom * soap_new_eml__DiffusionCoefficientUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__DiffusionCoefficientUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__DiffusionCoefficientUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__DiffusionCoefficientUom(struct soap*, const enum eml__DiffusionCoefficientUom *, const char*, const char*);

inline int soap_write_eml__DiffusionCoefficientUom(struct soap *soap, enum eml__DiffusionCoefficientUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__DiffusionCoefficientUom(soap, p, "eml:DiffusionCoefficientUom", "eml:DiffusionCoefficientUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__DiffusionCoefficientUom * SOAP_FMAC4 soap_get_eml__DiffusionCoefficientUom(struct soap*, enum eml__DiffusionCoefficientUom *, const char*, const char*);

inline int soap_read_eml__DiffusionCoefficientUom(struct soap *soap, enum eml__DiffusionCoefficientUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__DiffusionCoefficientUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AnglePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AnglePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AnglePerVolumeUom(struct soap*, enum eml__AnglePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AnglePerVolumeUom(struct soap*, const char*, int, const enum eml__AnglePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AnglePerVolumeUom2s(struct soap*, enum eml__AnglePerVolumeUom);
SOAP_FMAC3 enum eml__AnglePerVolumeUom * SOAP_FMAC4 soap_in_eml__AnglePerVolumeUom(struct soap*, const char*, enum eml__AnglePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AnglePerVolumeUom(struct soap*, const char*, enum eml__AnglePerVolumeUom *);

inline enum eml__AnglePerVolumeUom * soap_new_eml__AnglePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AnglePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AnglePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AnglePerVolumeUom(struct soap*, const enum eml__AnglePerVolumeUom *, const char*, const char*);

inline int soap_write_eml__AnglePerVolumeUom(struct soap *soap, enum eml__AnglePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AnglePerVolumeUom(soap, p, "eml:AnglePerVolumeUom", "eml:AnglePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AnglePerVolumeUom * SOAP_FMAC4 soap_get_eml__AnglePerVolumeUom(struct soap*, enum eml__AnglePerVolumeUom *, const char*, const char*);

inline int soap_read_eml__AnglePerVolumeUom(struct soap *soap, enum eml__AnglePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AnglePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerVolumeUom(struct soap*, enum eml__VolumePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerVolumeUom(struct soap*, const char*, int, const enum eml__VolumePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerVolumeUom2s(struct soap*, enum eml__VolumePerVolumeUom);
SOAP_FMAC3 enum eml__VolumePerVolumeUom * SOAP_FMAC4 soap_in_eml__VolumePerVolumeUom(struct soap*, const char*, enum eml__VolumePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerVolumeUom(struct soap*, const char*, enum eml__VolumePerVolumeUom *);

inline enum eml__VolumePerVolumeUom * soap_new_eml__VolumePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerVolumeUom(struct soap*, const enum eml__VolumePerVolumeUom *, const char*, const char*);

inline int soap_write_eml__VolumePerVolumeUom(struct soap *soap, enum eml__VolumePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerVolumeUom(soap, p, "eml:VolumePerVolumeUom", "eml:VolumePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerVolumeUom * SOAP_FMAC4 soap_get_eml__VolumePerVolumeUom(struct soap*, enum eml__VolumePerVolumeUom *, const char*, const char*);

inline int soap_read_eml__VolumePerVolumeUom(struct soap *soap, enum eml__VolumePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureTimePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureTimePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PressureTimePerVolumeUom(struct soap*, enum eml__PressureTimePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressureTimePerVolumeUom(struct soap*, const char*, int, const enum eml__PressureTimePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PressureTimePerVolumeUom2s(struct soap*, enum eml__PressureTimePerVolumeUom);
SOAP_FMAC3 enum eml__PressureTimePerVolumeUom * SOAP_FMAC4 soap_in_eml__PressureTimePerVolumeUom(struct soap*, const char*, enum eml__PressureTimePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PressureTimePerVolumeUom(struct soap*, const char*, enum eml__PressureTimePerVolumeUom *);

inline enum eml__PressureTimePerVolumeUom * soap_new_eml__PressureTimePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PressureTimePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PressureTimePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PressureTimePerVolumeUom(struct soap*, const enum eml__PressureTimePerVolumeUom *, const char*, const char*);

inline int soap_write_eml__PressureTimePerVolumeUom(struct soap *soap, enum eml__PressureTimePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PressureTimePerVolumeUom(soap, p, "eml:PressureTimePerVolumeUom", "eml:PressureTimePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PressureTimePerVolumeUom * SOAP_FMAC4 soap_get_eml__PressureTimePerVolumeUom(struct soap*, enum eml__PressureTimePerVolumeUom *, const char*, const char*);

inline int soap_read_eml__PressureTimePerVolumeUom(struct soap *soap, enum eml__PressureTimePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PressureTimePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyLengthPerTimeAreaTemperatureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyLengthPerTimeAreaTemperatureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, enum eml__EnergyLengthPerTimeAreaTemperatureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, const char*, int, const enum eml__EnergyLengthPerTimeAreaTemperatureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__EnergyLengthPerTimeAreaTemperatureUom2s(struct soap*, enum eml__EnergyLengthPerTimeAreaTemperatureUom);
SOAP_FMAC3 enum eml__EnergyLengthPerTimeAreaTemperatureUom * SOAP_FMAC4 soap_in_eml__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, const char*, enum eml__EnergyLengthPerTimeAreaTemperatureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, const char*, enum eml__EnergyLengthPerTimeAreaTemperatureUom *);

inline enum eml__EnergyLengthPerTimeAreaTemperatureUom * soap_new_eml__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__EnergyLengthPerTimeAreaTemperatureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__EnergyLengthPerTimeAreaTemperatureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, const enum eml__EnergyLengthPerTimeAreaTemperatureUom *, const char*, const char*);

inline int soap_write_eml__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, enum eml__EnergyLengthPerTimeAreaTemperatureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__EnergyLengthPerTimeAreaTemperatureUom(soap, p, "eml:EnergyLengthPerTimeAreaTemperatureUom", "eml:EnergyLengthPerTimeAreaTemperatureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__EnergyLengthPerTimeAreaTemperatureUom * SOAP_FMAC4 soap_get_eml__EnergyLengthPerTimeAreaTemperatureUom(struct soap*, enum eml__EnergyLengthPerTimeAreaTemperatureUom *, const char*, const char*);

inline int soap_read_eml__EnergyLengthPerTimeAreaTemperatureUom(struct soap *soap, enum eml__EnergyLengthPerTimeAreaTemperatureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__EnergyLengthPerTimeAreaTemperatureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__NormalizedPowerUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__NormalizedPowerUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__NormalizedPowerUom(struct soap*, enum eml__NormalizedPowerUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__NormalizedPowerUom(struct soap*, const char*, int, const enum eml__NormalizedPowerUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__NormalizedPowerUom2s(struct soap*, enum eml__NormalizedPowerUom);
SOAP_FMAC3 enum eml__NormalizedPowerUom * SOAP_FMAC4 soap_in_eml__NormalizedPowerUom(struct soap*, const char*, enum eml__NormalizedPowerUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__NormalizedPowerUom(struct soap*, const char*, enum eml__NormalizedPowerUom *);

inline enum eml__NormalizedPowerUom * soap_new_eml__NormalizedPowerUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__NormalizedPowerUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__NormalizedPowerUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__NormalizedPowerUom(struct soap*, const enum eml__NormalizedPowerUom *, const char*, const char*);

inline int soap_write_eml__NormalizedPowerUom(struct soap *soap, enum eml__NormalizedPowerUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__NormalizedPowerUom(soap, p, "eml:NormalizedPowerUom", "eml:NormalizedPowerUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__NormalizedPowerUom * SOAP_FMAC4 soap_get_eml__NormalizedPowerUom(struct soap*, enum eml__NormalizedPowerUom *, const char*, const char*);

inline int soap_read_eml__NormalizedPowerUom(struct soap *soap, enum eml__NormalizedPowerUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__NormalizedPowerUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumetricHeatTransferCoefficientUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumetricHeatTransferCoefficientUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumetricHeatTransferCoefficientUom(struct soap*, enum eml__VolumetricHeatTransferCoefficientUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumetricHeatTransferCoefficientUom(struct soap*, const char*, int, const enum eml__VolumetricHeatTransferCoefficientUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumetricHeatTransferCoefficientUom2s(struct soap*, enum eml__VolumetricHeatTransferCoefficientUom);
SOAP_FMAC3 enum eml__VolumetricHeatTransferCoefficientUom * SOAP_FMAC4 soap_in_eml__VolumetricHeatTransferCoefficientUom(struct soap*, const char*, enum eml__VolumetricHeatTransferCoefficientUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumetricHeatTransferCoefficientUom(struct soap*, const char*, enum eml__VolumetricHeatTransferCoefficientUom *);

inline enum eml__VolumetricHeatTransferCoefficientUom * soap_new_eml__VolumetricHeatTransferCoefficientUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumetricHeatTransferCoefficientUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumetricHeatTransferCoefficientUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumetricHeatTransferCoefficientUom(struct soap*, const enum eml__VolumetricHeatTransferCoefficientUom *, const char*, const char*);

inline int soap_write_eml__VolumetricHeatTransferCoefficientUom(struct soap *soap, enum eml__VolumetricHeatTransferCoefficientUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumetricHeatTransferCoefficientUom(soap, p, "eml:VolumetricHeatTransferCoefficientUom", "eml:VolumetricHeatTransferCoefficientUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumetricHeatTransferCoefficientUom * SOAP_FMAC4 soap_get_eml__VolumetricHeatTransferCoefficientUom(struct soap*, enum eml__VolumetricHeatTransferCoefficientUom *, const char*, const char*);

inline int soap_read_eml__VolumetricHeatTransferCoefficientUom(struct soap *soap, enum eml__VolumetricHeatTransferCoefficientUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumetricHeatTransferCoefficientUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerMassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TimePerMassUom(struct soap*, enum eml__TimePerMassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimePerMassUom(struct soap*, const char*, int, const enum eml__TimePerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__TimePerMassUom2s(struct soap*, enum eml__TimePerMassUom);
SOAP_FMAC3 enum eml__TimePerMassUom * SOAP_FMAC4 soap_in_eml__TimePerMassUom(struct soap*, const char*, enum eml__TimePerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__TimePerMassUom(struct soap*, const char*, enum eml__TimePerMassUom *);

inline enum eml__TimePerMassUom * soap_new_eml__TimePerMassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__TimePerMassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__TimePerMassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TimePerMassUom(struct soap*, const enum eml__TimePerMassUom *, const char*, const char*);

inline int soap_write_eml__TimePerMassUom(struct soap *soap, enum eml__TimePerMassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TimePerMassUom(soap, p, "eml:TimePerMassUom", "eml:TimePerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__TimePerMassUom * SOAP_FMAC4 soap_get_eml__TimePerMassUom(struct soap*, enum eml__TimePerMassUom *, const char*, const char*);

inline int soap_read_eml__TimePerMassUom(struct soap *soap, enum eml__TimePerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TimePerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AbsorbedDoseUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AbsorbedDoseUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AbsorbedDoseUom(struct soap*, enum eml__AbsorbedDoseUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AbsorbedDoseUom(struct soap*, const char*, int, const enum eml__AbsorbedDoseUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AbsorbedDoseUom2s(struct soap*, enum eml__AbsorbedDoseUom);
SOAP_FMAC3 enum eml__AbsorbedDoseUom * SOAP_FMAC4 soap_in_eml__AbsorbedDoseUom(struct soap*, const char*, enum eml__AbsorbedDoseUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AbsorbedDoseUom(struct soap*, const char*, enum eml__AbsorbedDoseUom *);

inline enum eml__AbsorbedDoseUom * soap_new_eml__AbsorbedDoseUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AbsorbedDoseUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AbsorbedDoseUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AbsorbedDoseUom(struct soap*, const enum eml__AbsorbedDoseUom *, const char*, const char*);

inline int soap_write_eml__AbsorbedDoseUom(struct soap *soap, enum eml__AbsorbedDoseUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AbsorbedDoseUom(soap, p, "eml:AbsorbedDoseUom", "eml:AbsorbedDoseUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AbsorbedDoseUom * SOAP_FMAC4 soap_get_eml__AbsorbedDoseUom(struct soap*, enum eml__AbsorbedDoseUom *, const char*, const char*);

inline int soap_read_eml__AbsorbedDoseUom(struct soap *soap, enum eml__AbsorbedDoseUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AbsorbedDoseUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousIntensityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousIntensityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LuminousIntensityUom(struct soap*, enum eml__LuminousIntensityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LuminousIntensityUom(struct soap*, const char*, int, const enum eml__LuminousIntensityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LuminousIntensityUom2s(struct soap*, enum eml__LuminousIntensityUom);
SOAP_FMAC3 enum eml__LuminousIntensityUom * SOAP_FMAC4 soap_in_eml__LuminousIntensityUom(struct soap*, const char*, enum eml__LuminousIntensityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LuminousIntensityUom(struct soap*, const char*, enum eml__LuminousIntensityUom *);

inline enum eml__LuminousIntensityUom * soap_new_eml__LuminousIntensityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LuminousIntensityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LuminousIntensityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LuminousIntensityUom(struct soap*, const enum eml__LuminousIntensityUom *, const char*, const char*);

inline int soap_write_eml__LuminousIntensityUom(struct soap *soap, enum eml__LuminousIntensityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LuminousIntensityUom(soap, p, "eml:LuminousIntensityUom", "eml:LuminousIntensityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LuminousIntensityUom * SOAP_FMAC4 soap_get_eml__LuminousIntensityUom(struct soap*, enum eml__LuminousIntensityUom *, const char*, const char*);

inline int soap_read_eml__LuminousIntensityUom(struct soap *soap, enum eml__LuminousIntensityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LuminousIntensityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__FrequencyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__FrequencyUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__FrequencyUom(struct soap*, enum eml__FrequencyUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__FrequencyUom(struct soap*, const char*, int, const enum eml__FrequencyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__FrequencyUom2s(struct soap*, enum eml__FrequencyUom);
SOAP_FMAC3 enum eml__FrequencyUom * SOAP_FMAC4 soap_in_eml__FrequencyUom(struct soap*, const char*, enum eml__FrequencyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__FrequencyUom(struct soap*, const char*, enum eml__FrequencyUom *);

inline enum eml__FrequencyUom * soap_new_eml__FrequencyUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__FrequencyUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__FrequencyUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__FrequencyUom(struct soap*, const enum eml__FrequencyUom *, const char*, const char*);

inline int soap_write_eml__FrequencyUom(struct soap *soap, enum eml__FrequencyUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__FrequencyUom(soap, p, "eml:FrequencyUom", "eml:FrequencyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__FrequencyUom * SOAP_FMAC4 soap_get_eml__FrequencyUom(struct soap*, enum eml__FrequencyUom *, const char*, const char*);

inline int soap_read_eml__FrequencyUom(struct soap *soap, enum eml__FrequencyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__FrequencyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PowerPerVolumeUom(struct soap*, enum eml__PowerPerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PowerPerVolumeUom(struct soap*, const char*, int, const enum eml__PowerPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PowerPerVolumeUom2s(struct soap*, enum eml__PowerPerVolumeUom);
SOAP_FMAC3 enum eml__PowerPerVolumeUom * SOAP_FMAC4 soap_in_eml__PowerPerVolumeUom(struct soap*, const char*, enum eml__PowerPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PowerPerVolumeUom(struct soap*, const char*, enum eml__PowerPerVolumeUom *);

inline enum eml__PowerPerVolumeUom * soap_new_eml__PowerPerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PowerPerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PowerPerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PowerPerVolumeUom(struct soap*, const enum eml__PowerPerVolumeUom *, const char*, const char*);

inline int soap_write_eml__PowerPerVolumeUom(struct soap *soap, enum eml__PowerPerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PowerPerVolumeUom(soap, p, "eml:PowerPerVolumeUom", "eml:PowerPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PowerPerVolumeUom * SOAP_FMAC4 soap_get_eml__PowerPerVolumeUom(struct soap*, enum eml__PowerPerVolumeUom *, const char*, const char*);

inline int soap_read_eml__PowerPerVolumeUom(struct soap *soap, enum eml__PowerPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PowerPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimePerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassPerTimePerAreaUom(struct soap*, enum eml__MassPerTimePerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerTimePerAreaUom(struct soap*, const char*, int, const enum eml__MassPerTimePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassPerTimePerAreaUom2s(struct soap*, enum eml__MassPerTimePerAreaUom);
SOAP_FMAC3 enum eml__MassPerTimePerAreaUom * SOAP_FMAC4 soap_in_eml__MassPerTimePerAreaUom(struct soap*, const char*, enum eml__MassPerTimePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassPerTimePerAreaUom(struct soap*, const char*, enum eml__MassPerTimePerAreaUom *);

inline enum eml__MassPerTimePerAreaUom * soap_new_eml__MassPerTimePerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassPerTimePerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassPerTimePerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassPerTimePerAreaUom(struct soap*, const enum eml__MassPerTimePerAreaUom *, const char*, const char*);

inline int soap_write_eml__MassPerTimePerAreaUom(struct soap *soap, enum eml__MassPerTimePerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassPerTimePerAreaUom(soap, p, "eml:MassPerTimePerAreaUom", "eml:MassPerTimePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassPerTimePerAreaUom * SOAP_FMAC4 soap_get_eml__MassPerTimePerAreaUom(struct soap*, enum eml__MassPerTimePerAreaUom *, const char*, const char*);

inline int soap_read_eml__MassPerTimePerAreaUom(struct soap *soap, enum eml__MassPerTimePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassPerTimePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentumUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentumUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MomentumUom(struct soap*, enum eml__MomentumUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MomentumUom(struct soap*, const char*, int, const enum eml__MomentumUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MomentumUom2s(struct soap*, enum eml__MomentumUom);
SOAP_FMAC3 enum eml__MomentumUom * SOAP_FMAC4 soap_in_eml__MomentumUom(struct soap*, const char*, enum eml__MomentumUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MomentumUom(struct soap*, const char*, enum eml__MomentumUom *);

inline enum eml__MomentumUom * soap_new_eml__MomentumUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MomentumUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MomentumUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MomentumUom(struct soap*, const enum eml__MomentumUom *, const char*, const char*);

inline int soap_write_eml__MomentumUom(struct soap *soap, enum eml__MomentumUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MomentumUom(soap, p, "eml:MomentumUom", "eml:MomentumUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MomentumUom * SOAP_FMAC4 soap_get_eml__MomentumUom(struct soap*, enum eml__MomentumUom *, const char*, const char*);

inline int soap_read_eml__MomentumUom(struct soap *soap, enum eml__MomentumUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MomentumUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricConductanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricConductanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricConductanceUom(struct soap*, enum eml__ElectricConductanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricConductanceUom(struct soap*, const char*, int, const enum eml__ElectricConductanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricConductanceUom2s(struct soap*, enum eml__ElectricConductanceUom);
SOAP_FMAC3 enum eml__ElectricConductanceUom * SOAP_FMAC4 soap_in_eml__ElectricConductanceUom(struct soap*, const char*, enum eml__ElectricConductanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricConductanceUom(struct soap*, const char*, enum eml__ElectricConductanceUom *);

inline enum eml__ElectricConductanceUom * soap_new_eml__ElectricConductanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricConductanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricConductanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricConductanceUom(struct soap*, const enum eml__ElectricConductanceUom *, const char*, const char*);

inline int soap_write_eml__ElectricConductanceUom(struct soap *soap, enum eml__ElectricConductanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricConductanceUom(soap, p, "eml:ElectricConductanceUom", "eml:ElectricConductanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricConductanceUom * SOAP_FMAC4 soap_get_eml__ElectricConductanceUom(struct soap*, enum eml__ElectricConductanceUom *, const char*, const char*);

inline int soap_read_eml__ElectricConductanceUom(struct soap *soap, enum eml__ElectricConductanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricConductanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarEnergyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarEnergyUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MolarEnergyUom(struct soap*, enum eml__MolarEnergyUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MolarEnergyUom(struct soap*, const char*, int, const enum eml__MolarEnergyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MolarEnergyUom2s(struct soap*, enum eml__MolarEnergyUom);
SOAP_FMAC3 enum eml__MolarEnergyUom * SOAP_FMAC4 soap_in_eml__MolarEnergyUom(struct soap*, const char*, enum eml__MolarEnergyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MolarEnergyUom(struct soap*, const char*, enum eml__MolarEnergyUom *);

inline enum eml__MolarEnergyUom * soap_new_eml__MolarEnergyUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MolarEnergyUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MolarEnergyUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MolarEnergyUom(struct soap*, const enum eml__MolarEnergyUom *, const char*, const char*);

inline int soap_write_eml__MolarEnergyUom(struct soap *soap, enum eml__MolarEnergyUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MolarEnergyUom(soap, p, "eml:MolarEnergyUom", "eml:MolarEnergyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MolarEnergyUom * SOAP_FMAC4 soap_get_eml__MolarEnergyUom(struct soap*, enum eml__MolarEnergyUom *, const char*, const char*);

inline int soap_read_eml__MolarEnergyUom(struct soap *soap, enum eml__MolarEnergyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MolarEnergyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatCapacityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatCapacityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__HeatCapacityUom(struct soap*, enum eml__HeatCapacityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__HeatCapacityUom(struct soap*, const char*, int, const enum eml__HeatCapacityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__HeatCapacityUom2s(struct soap*, enum eml__HeatCapacityUom);
SOAP_FMAC3 enum eml__HeatCapacityUom * SOAP_FMAC4 soap_in_eml__HeatCapacityUom(struct soap*, const char*, enum eml__HeatCapacityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__HeatCapacityUom(struct soap*, const char*, enum eml__HeatCapacityUom *);

inline enum eml__HeatCapacityUom * soap_new_eml__HeatCapacityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__HeatCapacityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__HeatCapacityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__HeatCapacityUom(struct soap*, const enum eml__HeatCapacityUom *, const char*, const char*);

inline int soap_write_eml__HeatCapacityUom(struct soap *soap, enum eml__HeatCapacityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__HeatCapacityUom(soap, p, "eml:HeatCapacityUom", "eml:HeatCapacityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__HeatCapacityUom * SOAP_FMAC4 soap_get_eml__HeatCapacityUom(struct soap*, enum eml__HeatCapacityUom *, const char*, const char*);

inline int soap_read_eml__HeatCapacityUom(struct soap *soap, enum eml__HeatCapacityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__HeatCapacityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AreaPerTimeUom(struct soap*, enum eml__AreaPerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerTimeUom(struct soap*, const char*, int, const enum eml__AreaPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AreaPerTimeUom2s(struct soap*, enum eml__AreaPerTimeUom);
SOAP_FMAC3 enum eml__AreaPerTimeUom * SOAP_FMAC4 soap_in_eml__AreaPerTimeUom(struct soap*, const char*, enum eml__AreaPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AreaPerTimeUom(struct soap*, const char*, enum eml__AreaPerTimeUom *);

inline enum eml__AreaPerTimeUom * soap_new_eml__AreaPerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AreaPerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AreaPerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AreaPerTimeUom(struct soap*, const enum eml__AreaPerTimeUom *, const char*, const char*);

inline int soap_write_eml__AreaPerTimeUom(struct soap *soap, enum eml__AreaPerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AreaPerTimeUom(soap, p, "eml:AreaPerTimeUom", "eml:AreaPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AreaPerTimeUom * SOAP_FMAC4 soap_get_eml__AreaPerTimeUom(struct soap*, enum eml__AreaPerTimeUom *, const char*, const char*);

inline int soap_read_eml__AreaPerTimeUom(struct soap *soap, enum eml__AreaPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AreaPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PotentialDifferencePerPowerDropUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PotentialDifferencePerPowerDropUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PotentialDifferencePerPowerDropUom(struct soap*, enum eml__PotentialDifferencePerPowerDropUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PotentialDifferencePerPowerDropUom(struct soap*, const char*, int, const enum eml__PotentialDifferencePerPowerDropUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PotentialDifferencePerPowerDropUom2s(struct soap*, enum eml__PotentialDifferencePerPowerDropUom);
SOAP_FMAC3 enum eml__PotentialDifferencePerPowerDropUom * SOAP_FMAC4 soap_in_eml__PotentialDifferencePerPowerDropUom(struct soap*, const char*, enum eml__PotentialDifferencePerPowerDropUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PotentialDifferencePerPowerDropUom(struct soap*, const char*, enum eml__PotentialDifferencePerPowerDropUom *);

inline enum eml__PotentialDifferencePerPowerDropUom * soap_new_eml__PotentialDifferencePerPowerDropUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PotentialDifferencePerPowerDropUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PotentialDifferencePerPowerDropUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PotentialDifferencePerPowerDropUom(struct soap*, const enum eml__PotentialDifferencePerPowerDropUom *, const char*, const char*);

inline int soap_write_eml__PotentialDifferencePerPowerDropUom(struct soap *soap, enum eml__PotentialDifferencePerPowerDropUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PotentialDifferencePerPowerDropUom(soap, p, "eml:PotentialDifferencePerPowerDropUom", "eml:PotentialDifferencePerPowerDropUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PotentialDifferencePerPowerDropUom * SOAP_FMAC4 soap_get_eml__PotentialDifferencePerPowerDropUom(struct soap*, enum eml__PotentialDifferencePerPowerDropUom *, const char*, const char*);

inline int soap_read_eml__PotentialDifferencePerPowerDropUom(struct soap *soap, enum eml__PotentialDifferencePerPowerDropUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PotentialDifferencePerPowerDropUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DynamicViscosityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DynamicViscosityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__DynamicViscosityUom(struct soap*, enum eml__DynamicViscosityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DynamicViscosityUom(struct soap*, const char*, int, const enum eml__DynamicViscosityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__DynamicViscosityUom2s(struct soap*, enum eml__DynamicViscosityUom);
SOAP_FMAC3 enum eml__DynamicViscosityUom * SOAP_FMAC4 soap_in_eml__DynamicViscosityUom(struct soap*, const char*, enum eml__DynamicViscosityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__DynamicViscosityUom(struct soap*, const char*, enum eml__DynamicViscosityUom *);

inline enum eml__DynamicViscosityUom * soap_new_eml__DynamicViscosityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__DynamicViscosityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__DynamicViscosityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__DynamicViscosityUom(struct soap*, const enum eml__DynamicViscosityUom *, const char*, const char*);

inline int soap_write_eml__DynamicViscosityUom(struct soap *soap, enum eml__DynamicViscosityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__DynamicViscosityUom(soap, p, "eml:DynamicViscosityUom", "eml:DynamicViscosityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__DynamicViscosityUom * SOAP_FMAC4 soap_get_eml__DynamicViscosityUom(struct soap*, enum eml__DynamicViscosityUom *, const char*, const char*);

inline int soap_read_eml__DynamicViscosityUom(struct soap *soap, enum eml__DynamicViscosityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__DynamicViscosityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalMassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReciprocalMassUom(struct soap*, enum eml__ReciprocalMassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalMassUom(struct soap*, const char*, int, const enum eml__ReciprocalMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReciprocalMassUom2s(struct soap*, enum eml__ReciprocalMassUom);
SOAP_FMAC3 enum eml__ReciprocalMassUom * SOAP_FMAC4 soap_in_eml__ReciprocalMassUom(struct soap*, const char*, enum eml__ReciprocalMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReciprocalMassUom(struct soap*, const char*, enum eml__ReciprocalMassUom *);

inline enum eml__ReciprocalMassUom * soap_new_eml__ReciprocalMassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReciprocalMassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReciprocalMassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReciprocalMassUom(struct soap*, const enum eml__ReciprocalMassUom *, const char*, const char*);

inline int soap_write_eml__ReciprocalMassUom(struct soap *soap, enum eml__ReciprocalMassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReciprocalMassUom(soap, p, "eml:ReciprocalMassUom", "eml:ReciprocalMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReciprocalMassUom * SOAP_FMAC4 soap_get_eml__ReciprocalMassUom(struct soap*, enum eml__ReciprocalMassUom *, const char*, const char*);

inline int soap_read_eml__ReciprocalMassUom(struct soap *soap, enum eml__ReciprocalMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReciprocalMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticPermeabilityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticPermeabilityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MagneticPermeabilityUom(struct soap*, enum eml__MagneticPermeabilityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticPermeabilityUom(struct soap*, const char*, int, const enum eml__MagneticPermeabilityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MagneticPermeabilityUom2s(struct soap*, enum eml__MagneticPermeabilityUom);
SOAP_FMAC3 enum eml__MagneticPermeabilityUom * SOAP_FMAC4 soap_in_eml__MagneticPermeabilityUom(struct soap*, const char*, enum eml__MagneticPermeabilityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MagneticPermeabilityUom(struct soap*, const char*, enum eml__MagneticPermeabilityUom *);

inline enum eml__MagneticPermeabilityUom * soap_new_eml__MagneticPermeabilityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MagneticPermeabilityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MagneticPermeabilityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MagneticPermeabilityUom(struct soap*, const enum eml__MagneticPermeabilityUom *, const char*, const char*);

inline int soap_write_eml__MagneticPermeabilityUom(struct soap *soap, enum eml__MagneticPermeabilityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MagneticPermeabilityUom(soap, p, "eml:MagneticPermeabilityUom", "eml:MagneticPermeabilityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MagneticPermeabilityUom * SOAP_FMAC4 soap_get_eml__MagneticPermeabilityUom(struct soap*, enum eml__MagneticPermeabilityUom *, const char*, const char*);

inline int soap_read_eml__MagneticPermeabilityUom(struct soap *soap, enum eml__MagneticPermeabilityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MagneticPermeabilityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__EnergyPerVolumeUom(struct soap*, enum eml__EnergyPerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerVolumeUom(struct soap*, const char*, int, const enum eml__EnergyPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__EnergyPerVolumeUom2s(struct soap*, enum eml__EnergyPerVolumeUom);
SOAP_FMAC3 enum eml__EnergyPerVolumeUom * SOAP_FMAC4 soap_in_eml__EnergyPerVolumeUom(struct soap*, const char*, enum eml__EnergyPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__EnergyPerVolumeUom(struct soap*, const char*, enum eml__EnergyPerVolumeUom *);

inline enum eml__EnergyPerVolumeUom * soap_new_eml__EnergyPerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__EnergyPerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__EnergyPerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__EnergyPerVolumeUom(struct soap*, const enum eml__EnergyPerVolumeUom *, const char*, const char*);

inline int soap_write_eml__EnergyPerVolumeUom(struct soap *soap, enum eml__EnergyPerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__EnergyPerVolumeUom(soap, p, "eml:EnergyPerVolumeUom", "eml:EnergyPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__EnergyPerVolumeUom * SOAP_FMAC4 soap_get_eml__EnergyPerVolumeUom(struct soap*, enum eml__EnergyPerVolumeUom *, const char*, const char*);

inline int soap_read_eml__EnergyPerVolumeUom(struct soap *soap, enum eml__EnergyPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__EnergyPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerLengthUom(struct soap*, enum eml__VolumePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerLengthUom(struct soap*, const char*, int, const enum eml__VolumePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerLengthUom2s(struct soap*, enum eml__VolumePerLengthUom);
SOAP_FMAC3 enum eml__VolumePerLengthUom * SOAP_FMAC4 soap_in_eml__VolumePerLengthUom(struct soap*, const char*, enum eml__VolumePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerLengthUom(struct soap*, const char*, enum eml__VolumePerLengthUom *);

inline enum eml__VolumePerLengthUom * soap_new_eml__VolumePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerLengthUom(struct soap*, const enum eml__VolumePerLengthUom *, const char*, const char*);

inline int soap_write_eml__VolumePerLengthUom(struct soap *soap, enum eml__VolumePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerLengthUom(soap, p, "eml:VolumePerLengthUom", "eml:VolumePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerLengthUom * SOAP_FMAC4 soap_get_eml__VolumePerLengthUom(struct soap*, enum eml__VolumePerLengthUom *, const char*, const char*);

inline int soap_read_eml__VolumePerLengthUom(struct soap *soap, enum eml__VolumePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalCoordinateUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalCoordinateUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VerticalCoordinateUom(struct soap*, enum eml__VerticalCoordinateUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VerticalCoordinateUom(struct soap*, const char*, int, const enum eml__VerticalCoordinateUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VerticalCoordinateUom2s(struct soap*, enum eml__VerticalCoordinateUom);
SOAP_FMAC3 enum eml__VerticalCoordinateUom * SOAP_FMAC4 soap_in_eml__VerticalCoordinateUom(struct soap*, const char*, enum eml__VerticalCoordinateUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VerticalCoordinateUom(struct soap*, const char*, enum eml__VerticalCoordinateUom *);

inline enum eml__VerticalCoordinateUom * soap_new_eml__VerticalCoordinateUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VerticalCoordinateUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VerticalCoordinateUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VerticalCoordinateUom(struct soap*, const enum eml__VerticalCoordinateUom *, const char*, const char*);

inline int soap_write_eml__VerticalCoordinateUom(struct soap *soap, enum eml__VerticalCoordinateUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VerticalCoordinateUom(soap, p, "eml:VerticalCoordinateUom", "eml:VerticalCoordinateUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VerticalCoordinateUom * SOAP_FMAC4 soap_get_eml__VerticalCoordinateUom(struct soap*, enum eml__VerticalCoordinateUom *, const char*, const char*);

inline int soap_read_eml__VerticalCoordinateUom(struct soap *soap, enum eml__VerticalCoordinateUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VerticalCoordinateUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AnglePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AnglePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AnglePerLengthUom(struct soap*, enum eml__AnglePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AnglePerLengthUom(struct soap*, const char*, int, const enum eml__AnglePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AnglePerLengthUom2s(struct soap*, enum eml__AnglePerLengthUom);
SOAP_FMAC3 enum eml__AnglePerLengthUom * SOAP_FMAC4 soap_in_eml__AnglePerLengthUom(struct soap*, const char*, enum eml__AnglePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AnglePerLengthUom(struct soap*, const char*, enum eml__AnglePerLengthUom *);

inline enum eml__AnglePerLengthUom * soap_new_eml__AnglePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AnglePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AnglePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AnglePerLengthUom(struct soap*, const enum eml__AnglePerLengthUom *, const char*, const char*);

inline int soap_write_eml__AnglePerLengthUom(struct soap *soap, enum eml__AnglePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AnglePerLengthUom(soap, p, "eml:AnglePerLengthUom", "eml:AnglePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AnglePerLengthUom * SOAP_FMAC4 soap_get_eml__AnglePerLengthUom(struct soap*, enum eml__AnglePerLengthUom *, const char*, const char*);

inline int soap_read_eml__AnglePerLengthUom(struct soap *soap, enum eml__AnglePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AnglePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__EnergyUom(struct soap*, enum eml__EnergyUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyUom(struct soap*, const char*, int, const enum eml__EnergyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__EnergyUom2s(struct soap*, enum eml__EnergyUom);
SOAP_FMAC3 enum eml__EnergyUom * SOAP_FMAC4 soap_in_eml__EnergyUom(struct soap*, const char*, enum eml__EnergyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__EnergyUom(struct soap*, const char*, enum eml__EnergyUom *);

inline enum eml__EnergyUom * soap_new_eml__EnergyUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__EnergyUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__EnergyUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__EnergyUom(struct soap*, const enum eml__EnergyUom *, const char*, const char*);

inline int soap_write_eml__EnergyUom(struct soap *soap, enum eml__EnergyUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__EnergyUom(soap, p, "eml:EnergyUom", "eml:EnergyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__EnergyUom * SOAP_FMAC4 soap_get_eml__EnergyUom(struct soap*, enum eml__EnergyUom *, const char*, const char*);

inline int soap_read_eml__EnergyUom(struct soap *soap, enum eml__EnergyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__EnergyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DimensionlessUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DimensionlessUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__DimensionlessUom(struct soap*, enum eml__DimensionlessUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DimensionlessUom(struct soap*, const char*, int, const enum eml__DimensionlessUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__DimensionlessUom2s(struct soap*, enum eml__DimensionlessUom);
SOAP_FMAC3 enum eml__DimensionlessUom * SOAP_FMAC4 soap_in_eml__DimensionlessUom(struct soap*, const char*, enum eml__DimensionlessUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__DimensionlessUom(struct soap*, const char*, enum eml__DimensionlessUom *);

inline enum eml__DimensionlessUom * soap_new_eml__DimensionlessUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__DimensionlessUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__DimensionlessUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__DimensionlessUom(struct soap*, const enum eml__DimensionlessUom *, const char*, const char*);

inline int soap_write_eml__DimensionlessUom(struct soap *soap, enum eml__DimensionlessUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__DimensionlessUom(soap, p, "eml:DimensionlessUom", "eml:DimensionlessUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__DimensionlessUom * SOAP_FMAC4 soap_get_eml__DimensionlessUom(struct soap*, enum eml__DimensionlessUom *, const char*, const char*);

inline int soap_read_eml__DimensionlessUom(struct soap *soap, enum eml__DimensionlessUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__DimensionlessUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LinearAccelerationUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LinearAccelerationUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LinearAccelerationUom(struct soap*, enum eml__LinearAccelerationUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LinearAccelerationUom(struct soap*, const char*, int, const enum eml__LinearAccelerationUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LinearAccelerationUom2s(struct soap*, enum eml__LinearAccelerationUom);
SOAP_FMAC3 enum eml__LinearAccelerationUom * SOAP_FMAC4 soap_in_eml__LinearAccelerationUom(struct soap*, const char*, enum eml__LinearAccelerationUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LinearAccelerationUom(struct soap*, const char*, enum eml__LinearAccelerationUom *);

inline enum eml__LinearAccelerationUom * soap_new_eml__LinearAccelerationUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LinearAccelerationUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LinearAccelerationUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LinearAccelerationUom(struct soap*, const enum eml__LinearAccelerationUom *, const char*, const char*);

inline int soap_write_eml__LinearAccelerationUom(struct soap *soap, enum eml__LinearAccelerationUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LinearAccelerationUom(soap, p, "eml:LinearAccelerationUom", "eml:LinearAccelerationUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LinearAccelerationUom * SOAP_FMAC4 soap_get_eml__LinearAccelerationUom(struct soap*, enum eml__LinearAccelerationUom *, const char*, const char*);

inline int soap_read_eml__LinearAccelerationUom(struct soap *soap, enum eml__LinearAccelerationUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LinearAccelerationUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerTimePerLengthUom(struct soap*, enum eml__VolumePerTimePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerLengthUom(struct soap*, const char*, int, const enum eml__VolumePerTimePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerTimePerLengthUom2s(struct soap*, enum eml__VolumePerTimePerLengthUom);
SOAP_FMAC3 enum eml__VolumePerTimePerLengthUom * SOAP_FMAC4 soap_in_eml__VolumePerTimePerLengthUom(struct soap*, const char*, enum eml__VolumePerTimePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerTimePerLengthUom(struct soap*, const char*, enum eml__VolumePerTimePerLengthUom *);

inline enum eml__VolumePerTimePerLengthUom * soap_new_eml__VolumePerTimePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerTimePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerTimePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerTimePerLengthUom(struct soap*, const enum eml__VolumePerTimePerLengthUom *, const char*, const char*);

inline int soap_write_eml__VolumePerTimePerLengthUom(struct soap *soap, enum eml__VolumePerTimePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerTimePerLengthUom(soap, p, "eml:VolumePerTimePerLengthUom", "eml:VolumePerTimePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerTimePerLengthUom * SOAP_FMAC4 soap_get_eml__VolumePerTimePerLengthUom(struct soap*, enum eml__VolumePerTimePerLengthUom *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerLengthUom(struct soap *soap, enum eml__VolumePerTimePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerTemperatureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerTemperatureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LengthPerTemperatureUom(struct soap*, enum eml__LengthPerTemperatureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerTemperatureUom(struct soap*, const char*, int, const enum eml__LengthPerTemperatureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LengthPerTemperatureUom2s(struct soap*, enum eml__LengthPerTemperatureUom);
SOAP_FMAC3 enum eml__LengthPerTemperatureUom * SOAP_FMAC4 soap_in_eml__LengthPerTemperatureUom(struct soap*, const char*, enum eml__LengthPerTemperatureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LengthPerTemperatureUom(struct soap*, const char*, enum eml__LengthPerTemperatureUom *);

inline enum eml__LengthPerTemperatureUom * soap_new_eml__LengthPerTemperatureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LengthPerTemperatureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LengthPerTemperatureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LengthPerTemperatureUom(struct soap*, const enum eml__LengthPerTemperatureUom *, const char*, const char*);

inline int soap_write_eml__LengthPerTemperatureUom(struct soap *soap, enum eml__LengthPerTemperatureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LengthPerTemperatureUom(soap, p, "eml:LengthPerTemperatureUom", "eml:LengthPerTemperatureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LengthPerTemperatureUom * SOAP_FMAC4 soap_get_eml__LengthPerTemperatureUom(struct soap*, enum eml__LengthPerTemperatureUom *, const char*, const char*);

inline int soap_read_eml__LengthPerTemperatureUom(struct soap *soap, enum eml__LengthPerTemperatureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LengthPerTemperatureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReluctanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReluctanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReluctanceUom(struct soap*, enum eml__ReluctanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReluctanceUom(struct soap*, const char*, int, const enum eml__ReluctanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReluctanceUom2s(struct soap*, enum eml__ReluctanceUom);
SOAP_FMAC3 enum eml__ReluctanceUom * SOAP_FMAC4 soap_in_eml__ReluctanceUom(struct soap*, const char*, enum eml__ReluctanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReluctanceUom(struct soap*, const char*, enum eml__ReluctanceUom *);

inline enum eml__ReluctanceUom * soap_new_eml__ReluctanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReluctanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReluctanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReluctanceUom(struct soap*, const enum eml__ReluctanceUom *, const char*, const char*);

inline int soap_write_eml__ReluctanceUom(struct soap *soap, enum eml__ReluctanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReluctanceUom(soap, p, "eml:ReluctanceUom", "eml:ReluctanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReluctanceUom * SOAP_FMAC4 soap_get_eml__ReluctanceUom(struct soap*, enum eml__ReluctanceUom *, const char*, const char*);

inline int soap_read_eml__ReluctanceUom(struct soap *soap, enum eml__ReluctanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReluctanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__APIGravityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__APIGravityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__APIGravityUom(struct soap*, enum eml__APIGravityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__APIGravityUom(struct soap*, const char*, int, const enum eml__APIGravityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__APIGravityUom2s(struct soap*, enum eml__APIGravityUom);
SOAP_FMAC3 enum eml__APIGravityUom * SOAP_FMAC4 soap_in_eml__APIGravityUom(struct soap*, const char*, enum eml__APIGravityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__APIGravityUom(struct soap*, const char*, enum eml__APIGravityUom *);

inline enum eml__APIGravityUom * soap_new_eml__APIGravityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__APIGravityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__APIGravityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__APIGravityUom(struct soap*, const enum eml__APIGravityUom *, const char*, const char*);

inline int soap_write_eml__APIGravityUom(struct soap *soap, enum eml__APIGravityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__APIGravityUom(soap, p, "eml:APIGravityUom", "eml:APIGravityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__APIGravityUom * SOAP_FMAC4 soap_get_eml__APIGravityUom(struct soap*, enum eml__APIGravityUom *, const char*, const char*);

inline int soap_read_eml__APIGravityUom(struct soap *soap, enum eml__APIGravityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__APIGravityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricChargePerVolumeUom(struct soap*, enum eml__ElectricChargePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricChargePerVolumeUom(struct soap*, const char*, int, const enum eml__ElectricChargePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricChargePerVolumeUom2s(struct soap*, enum eml__ElectricChargePerVolumeUom);
SOAP_FMAC3 enum eml__ElectricChargePerVolumeUom * SOAP_FMAC4 soap_in_eml__ElectricChargePerVolumeUom(struct soap*, const char*, enum eml__ElectricChargePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricChargePerVolumeUom(struct soap*, const char*, enum eml__ElectricChargePerVolumeUom *);

inline enum eml__ElectricChargePerVolumeUom * soap_new_eml__ElectricChargePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricChargePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricChargePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricChargePerVolumeUom(struct soap*, const enum eml__ElectricChargePerVolumeUom *, const char*, const char*);

inline int soap_write_eml__ElectricChargePerVolumeUom(struct soap *soap, enum eml__ElectricChargePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricChargePerVolumeUom(soap, p, "eml:ElectricChargePerVolumeUom", "eml:ElectricChargePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricChargePerVolumeUom * SOAP_FMAC4 soap_get_eml__ElectricChargePerVolumeUom(struct soap*, enum eml__ElectricChargePerVolumeUom *, const char*, const char*);

inline int soap_read_eml__ElectricChargePerVolumeUom(struct soap *soap, enum eml__ElectricChargePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricChargePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ForcePerVolumeUom(struct soap*, enum eml__ForcePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForcePerVolumeUom(struct soap*, const char*, int, const enum eml__ForcePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ForcePerVolumeUom2s(struct soap*, enum eml__ForcePerVolumeUom);
SOAP_FMAC3 enum eml__ForcePerVolumeUom * SOAP_FMAC4 soap_in_eml__ForcePerVolumeUom(struct soap*, const char*, enum eml__ForcePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ForcePerVolumeUom(struct soap*, const char*, enum eml__ForcePerVolumeUom *);

inline enum eml__ForcePerVolumeUom * soap_new_eml__ForcePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ForcePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ForcePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ForcePerVolumeUom(struct soap*, const enum eml__ForcePerVolumeUom *, const char*, const char*);

inline int soap_write_eml__ForcePerVolumeUom(struct soap *soap, enum eml__ForcePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ForcePerVolumeUom(soap, p, "eml:ForcePerVolumeUom", "eml:ForcePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ForcePerVolumeUom * SOAP_FMAC4 soap_get_eml__ForcePerVolumeUom(struct soap*, enum eml__ForcePerVolumeUom *, const char*, const char*);

inline int soap_read_eml__ForcePerVolumeUom(struct soap *soap, enum eml__ForcePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ForcePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassLengthUom(struct soap*, enum eml__MassLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassLengthUom(struct soap*, const char*, int, const enum eml__MassLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassLengthUom2s(struct soap*, enum eml__MassLengthUom);
SOAP_FMAC3 enum eml__MassLengthUom * SOAP_FMAC4 soap_in_eml__MassLengthUom(struct soap*, const char*, enum eml__MassLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassLengthUom(struct soap*, const char*, enum eml__MassLengthUom *);

inline enum eml__MassLengthUom * soap_new_eml__MassLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassLengthUom(struct soap*, const enum eml__MassLengthUom *, const char*, const char*);

inline int soap_write_eml__MassLengthUom(struct soap *soap, enum eml__MassLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassLengthUom(soap, p, "eml:MassLengthUom", "eml:MassLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassLengthUom * SOAP_FMAC4 soap_get_eml__MassLengthUom(struct soap*, enum eml__MassLengthUom *, const char*, const char*);

inline int soap_read_eml__MassLengthUom(struct soap *soap, enum eml__MassLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerVolumePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerVolumePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassPerVolumePerLengthUom(struct soap*, enum eml__MassPerVolumePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerVolumePerLengthUom(struct soap*, const char*, int, const enum eml__MassPerVolumePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassPerVolumePerLengthUom2s(struct soap*, enum eml__MassPerVolumePerLengthUom);
SOAP_FMAC3 enum eml__MassPerVolumePerLengthUom * SOAP_FMAC4 soap_in_eml__MassPerVolumePerLengthUom(struct soap*, const char*, enum eml__MassPerVolumePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassPerVolumePerLengthUom(struct soap*, const char*, enum eml__MassPerVolumePerLengthUom *);

inline enum eml__MassPerVolumePerLengthUom * soap_new_eml__MassPerVolumePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassPerVolumePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassPerVolumePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassPerVolumePerLengthUom(struct soap*, const enum eml__MassPerVolumePerLengthUom *, const char*, const char*);

inline int soap_write_eml__MassPerVolumePerLengthUom(struct soap *soap, enum eml__MassPerVolumePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassPerVolumePerLengthUom(soap, p, "eml:MassPerVolumePerLengthUom", "eml:MassPerVolumePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassPerVolumePerLengthUom * SOAP_FMAC4 soap_get_eml__MassPerVolumePerLengthUom(struct soap*, enum eml__MassPerVolumePerLengthUom *, const char*, const char*);

inline int soap_read_eml__MassPerVolumePerLengthUom(struct soap *soap, enum eml__MassPerVolumePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassPerVolumePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerMassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricChargePerMassUom(struct soap*, enum eml__ElectricChargePerMassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricChargePerMassUom(struct soap*, const char*, int, const enum eml__ElectricChargePerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricChargePerMassUom2s(struct soap*, enum eml__ElectricChargePerMassUom);
SOAP_FMAC3 enum eml__ElectricChargePerMassUom * SOAP_FMAC4 soap_in_eml__ElectricChargePerMassUom(struct soap*, const char*, enum eml__ElectricChargePerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricChargePerMassUom(struct soap*, const char*, enum eml__ElectricChargePerMassUom *);

inline enum eml__ElectricChargePerMassUom * soap_new_eml__ElectricChargePerMassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricChargePerMassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricChargePerMassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricChargePerMassUom(struct soap*, const enum eml__ElectricChargePerMassUom *, const char*, const char*);

inline int soap_write_eml__ElectricChargePerMassUom(struct soap *soap, enum eml__ElectricChargePerMassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricChargePerMassUom(soap, p, "eml:ElectricChargePerMassUom", "eml:ElectricChargePerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricChargePerMassUom * SOAP_FMAC4 soap_get_eml__ElectricChargePerMassUom(struct soap*, enum eml__ElectricChargePerMassUom *, const char*, const char*);

inline int soap_read_eml__ElectricChargePerMassUom(struct soap *soap, enum eml__ElectricChargePerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricChargePerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerPowerUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerPowerUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PowerPerPowerUom(struct soap*, enum eml__PowerPerPowerUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PowerPerPowerUom(struct soap*, const char*, int, const enum eml__PowerPerPowerUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PowerPerPowerUom2s(struct soap*, enum eml__PowerPerPowerUom);
SOAP_FMAC3 enum eml__PowerPerPowerUom * SOAP_FMAC4 soap_in_eml__PowerPerPowerUom(struct soap*, const char*, enum eml__PowerPerPowerUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PowerPerPowerUom(struct soap*, const char*, enum eml__PowerPerPowerUom *);

inline enum eml__PowerPerPowerUom * soap_new_eml__PowerPerPowerUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PowerPerPowerUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PowerPerPowerUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PowerPerPowerUom(struct soap*, const enum eml__PowerPerPowerUom *, const char*, const char*);

inline int soap_write_eml__PowerPerPowerUom(struct soap *soap, enum eml__PowerPerPowerUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PowerPerPowerUom(soap, p, "eml:PowerPerPowerUom", "eml:PowerPerPowerUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PowerPerPowerUom * SOAP_FMAC4 soap_get_eml__PowerPerPowerUom(struct soap*, enum eml__PowerPerPowerUom *, const char*, const char*);

inline int soap_read_eml__PowerPerPowerUom(struct soap *soap, enum eml__PowerPerPowerUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PowerPerPowerUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DoseEquivalentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DoseEquivalentUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__DoseEquivalentUom(struct soap*, enum eml__DoseEquivalentUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DoseEquivalentUom(struct soap*, const char*, int, const enum eml__DoseEquivalentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__DoseEquivalentUom2s(struct soap*, enum eml__DoseEquivalentUom);
SOAP_FMAC3 enum eml__DoseEquivalentUom * SOAP_FMAC4 soap_in_eml__DoseEquivalentUom(struct soap*, const char*, enum eml__DoseEquivalentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__DoseEquivalentUom(struct soap*, const char*, enum eml__DoseEquivalentUom *);

inline enum eml__DoseEquivalentUom * soap_new_eml__DoseEquivalentUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__DoseEquivalentUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__DoseEquivalentUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__DoseEquivalentUom(struct soap*, const enum eml__DoseEquivalentUom *, const char*, const char*);

inline int soap_write_eml__DoseEquivalentUom(struct soap *soap, enum eml__DoseEquivalentUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__DoseEquivalentUom(soap, p, "eml:DoseEquivalentUom", "eml:DoseEquivalentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__DoseEquivalentUom * SOAP_FMAC4 soap_get_eml__DoseEquivalentUom(struct soap*, enum eml__DoseEquivalentUom *, const char*, const char*);

inline int soap_read_eml__DoseEquivalentUom(struct soap *soap, enum eml__DoseEquivalentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__DoseEquivalentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatFlowRateUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatFlowRateUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__HeatFlowRateUom(struct soap*, enum eml__HeatFlowRateUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__HeatFlowRateUom(struct soap*, const char*, int, const enum eml__HeatFlowRateUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__HeatFlowRateUom2s(struct soap*, enum eml__HeatFlowRateUom);
SOAP_FMAC3 enum eml__HeatFlowRateUom * SOAP_FMAC4 soap_in_eml__HeatFlowRateUom(struct soap*, const char*, enum eml__HeatFlowRateUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__HeatFlowRateUom(struct soap*, const char*, enum eml__HeatFlowRateUom *);

inline enum eml__HeatFlowRateUom * soap_new_eml__HeatFlowRateUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__HeatFlowRateUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__HeatFlowRateUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__HeatFlowRateUom(struct soap*, const enum eml__HeatFlowRateUom *, const char*, const char*);

inline int soap_write_eml__HeatFlowRateUom(struct soap *soap, enum eml__HeatFlowRateUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__HeatFlowRateUom(soap, p, "eml:HeatFlowRateUom", "eml:HeatFlowRateUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__HeatFlowRateUom * SOAP_FMAC4 soap_get_eml__HeatFlowRateUom(struct soap*, enum eml__HeatFlowRateUom *, const char*, const char*);

inline int soap_read_eml__HeatFlowRateUom(struct soap *soap, enum eml__HeatFlowRateUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__HeatFlowRateUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__RadianceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__RadianceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__RadianceUom(struct soap*, enum eml__RadianceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__RadianceUom(struct soap*, const char*, int, const enum eml__RadianceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__RadianceUom2s(struct soap*, enum eml__RadianceUom);
SOAP_FMAC3 enum eml__RadianceUom * SOAP_FMAC4 soap_in_eml__RadianceUom(struct soap*, const char*, enum eml__RadianceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__RadianceUom(struct soap*, const char*, enum eml__RadianceUom *);

inline enum eml__RadianceUom * soap_new_eml__RadianceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__RadianceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__RadianceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__RadianceUom(struct soap*, const enum eml__RadianceUom *, const char*, const char*);

inline int soap_write_eml__RadianceUom(struct soap *soap, enum eml__RadianceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__RadianceUom(soap, p, "eml:RadianceUom", "eml:RadianceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__RadianceUom * SOAP_FMAC4 soap_get_eml__RadianceUom(struct soap*, enum eml__RadianceUom *, const char*, const char*);

inline int soap_read_eml__RadianceUom(struct soap *soap, enum eml__RadianceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__RadianceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerAmountOfSubstanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerAmountOfSubstanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, enum eml__AmountOfSubstancePerAmountOfSubstanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, const char*, int, const enum eml__AmountOfSubstancePerAmountOfSubstanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AmountOfSubstancePerAmountOfSubstanceUom2s(struct soap*, enum eml__AmountOfSubstancePerAmountOfSubstanceUom);
SOAP_FMAC3 enum eml__AmountOfSubstancePerAmountOfSubstanceUom * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, const char*, enum eml__AmountOfSubstancePerAmountOfSubstanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, const char*, enum eml__AmountOfSubstancePerAmountOfSubstanceUom *);

inline enum eml__AmountOfSubstancePerAmountOfSubstanceUom * soap_new_eml__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AmountOfSubstancePerAmountOfSubstanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AmountOfSubstancePerAmountOfSubstanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, const enum eml__AmountOfSubstancePerAmountOfSubstanceUom *, const char*, const char*);

inline int soap_write_eml__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, enum eml__AmountOfSubstancePerAmountOfSubstanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AmountOfSubstancePerAmountOfSubstanceUom(soap, p, "eml:AmountOfSubstancePerAmountOfSubstanceUom", "eml:AmountOfSubstancePerAmountOfSubstanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AmountOfSubstancePerAmountOfSubstanceUom * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerAmountOfSubstanceUom(struct soap*, enum eml__AmountOfSubstancePerAmountOfSubstanceUom *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerAmountOfSubstanceUom(struct soap *soap, enum eml__AmountOfSubstancePerAmountOfSubstanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerAmountOfSubstanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TemperatureIntervalPerTimeUom(struct soap*, enum eml__TemperatureIntervalPerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TemperatureIntervalPerTimeUom(struct soap*, const char*, int, const enum eml__TemperatureIntervalPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__TemperatureIntervalPerTimeUom2s(struct soap*, enum eml__TemperatureIntervalPerTimeUom);
SOAP_FMAC3 enum eml__TemperatureIntervalPerTimeUom * SOAP_FMAC4 soap_in_eml__TemperatureIntervalPerTimeUom(struct soap*, const char*, enum eml__TemperatureIntervalPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__TemperatureIntervalPerTimeUom(struct soap*, const char*, enum eml__TemperatureIntervalPerTimeUom *);

inline enum eml__TemperatureIntervalPerTimeUom * soap_new_eml__TemperatureIntervalPerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__TemperatureIntervalPerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__TemperatureIntervalPerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TemperatureIntervalPerTimeUom(struct soap*, const enum eml__TemperatureIntervalPerTimeUom *, const char*, const char*);

inline int soap_write_eml__TemperatureIntervalPerTimeUom(struct soap *soap, enum eml__TemperatureIntervalPerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TemperatureIntervalPerTimeUom(soap, p, "eml:TemperatureIntervalPerTimeUom", "eml:TemperatureIntervalPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__TemperatureIntervalPerTimeUom * SOAP_FMAC4 soap_get_eml__TemperatureIntervalPerTimeUom(struct soap*, enum eml__TemperatureIntervalPerTimeUom *, const char*, const char*);

inline int soap_read_eml__TemperatureIntervalPerTimeUom(struct soap *soap, enum eml__TemperatureIntervalPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TemperatureIntervalPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AreaPerVolumeUom(struct soap*, enum eml__AreaPerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerVolumeUom(struct soap*, const char*, int, const enum eml__AreaPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AreaPerVolumeUom2s(struct soap*, enum eml__AreaPerVolumeUom);
SOAP_FMAC3 enum eml__AreaPerVolumeUom * SOAP_FMAC4 soap_in_eml__AreaPerVolumeUom(struct soap*, const char*, enum eml__AreaPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AreaPerVolumeUom(struct soap*, const char*, enum eml__AreaPerVolumeUom *);

inline enum eml__AreaPerVolumeUom * soap_new_eml__AreaPerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AreaPerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AreaPerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AreaPerVolumeUom(struct soap*, const enum eml__AreaPerVolumeUom *, const char*, const char*);

inline int soap_write_eml__AreaPerVolumeUom(struct soap *soap, enum eml__AreaPerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AreaPerVolumeUom(soap, p, "eml:AreaPerVolumeUom", "eml:AreaPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AreaPerVolumeUom * SOAP_FMAC4 soap_get_eml__AreaPerVolumeUom(struct soap*, enum eml__AreaPerVolumeUom *, const char*, const char*);

inline int soap_read_eml__AreaPerVolumeUom(struct soap *soap, enum eml__AreaPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AreaPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__IlluminanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__IlluminanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__IlluminanceUom(struct soap*, enum eml__IlluminanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__IlluminanceUom(struct soap*, const char*, int, const enum eml__IlluminanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__IlluminanceUom2s(struct soap*, enum eml__IlluminanceUom);
SOAP_FMAC3 enum eml__IlluminanceUom * SOAP_FMAC4 soap_in_eml__IlluminanceUom(struct soap*, const char*, enum eml__IlluminanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__IlluminanceUom(struct soap*, const char*, enum eml__IlluminanceUom *);

inline enum eml__IlluminanceUom * soap_new_eml__IlluminanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__IlluminanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__IlluminanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__IlluminanceUom(struct soap*, const enum eml__IlluminanceUom *, const char*, const char*);

inline int soap_write_eml__IlluminanceUom(struct soap *soap, enum eml__IlluminanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__IlluminanceUom(soap, p, "eml:IlluminanceUom", "eml:IlluminanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__IlluminanceUom * SOAP_FMAC4 soap_get_eml__IlluminanceUom(struct soap*, enum eml__IlluminanceUom *, const char*, const char*);

inline int soap_read_eml__IlluminanceUom(struct soap *soap, enum eml__IlluminanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__IlluminanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassPerAreaUom(struct soap*, enum eml__MassPerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerAreaUom(struct soap*, const char*, int, const enum eml__MassPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassPerAreaUom2s(struct soap*, enum eml__MassPerAreaUom);
SOAP_FMAC3 enum eml__MassPerAreaUom * SOAP_FMAC4 soap_in_eml__MassPerAreaUom(struct soap*, const char*, enum eml__MassPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassPerAreaUom(struct soap*, const char*, enum eml__MassPerAreaUom *);

inline enum eml__MassPerAreaUom * soap_new_eml__MassPerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassPerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassPerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassPerAreaUom(struct soap*, const enum eml__MassPerAreaUom *, const char*, const char*);

inline int soap_write_eml__MassPerAreaUom(struct soap *soap, enum eml__MassPerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassPerAreaUom(soap, p, "eml:MassPerAreaUom", "eml:MassPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassPerAreaUom * SOAP_FMAC4 soap_get_eml__MassPerAreaUom(struct soap*, enum eml__MassPerAreaUom *, const char*, const char*);

inline int soap_read_eml__MassPerAreaUom(struct soap *soap, enum eml__MassPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PowerPerAreaUom(struct soap*, enum eml__PowerPerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PowerPerAreaUom(struct soap*, const char*, int, const enum eml__PowerPerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PowerPerAreaUom2s(struct soap*, enum eml__PowerPerAreaUom);
SOAP_FMAC3 enum eml__PowerPerAreaUom * SOAP_FMAC4 soap_in_eml__PowerPerAreaUom(struct soap*, const char*, enum eml__PowerPerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PowerPerAreaUom(struct soap*, const char*, enum eml__PowerPerAreaUom *);

inline enum eml__PowerPerAreaUom * soap_new_eml__PowerPerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PowerPerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PowerPerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PowerPerAreaUom(struct soap*, const enum eml__PowerPerAreaUom *, const char*, const char*);

inline int soap_write_eml__PowerPerAreaUom(struct soap *soap, enum eml__PowerPerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PowerPerAreaUom(soap, p, "eml:PowerPerAreaUom", "eml:PowerPerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PowerPerAreaUom * SOAP_FMAC4 soap_get_eml__PowerPerAreaUom(struct soap*, enum eml__PowerPerAreaUom *, const char*, const char*);

inline int soap_read_eml__PowerPerAreaUom(struct soap *soap, enum eml__PowerPerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PowerPerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalInsulanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalInsulanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ThermalInsulanceUom(struct soap*, enum eml__ThermalInsulanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalInsulanceUom(struct soap*, const char*, int, const enum eml__ThermalInsulanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ThermalInsulanceUom2s(struct soap*, enum eml__ThermalInsulanceUom);
SOAP_FMAC3 enum eml__ThermalInsulanceUom * SOAP_FMAC4 soap_in_eml__ThermalInsulanceUom(struct soap*, const char*, enum eml__ThermalInsulanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ThermalInsulanceUom(struct soap*, const char*, enum eml__ThermalInsulanceUom *);

inline enum eml__ThermalInsulanceUom * soap_new_eml__ThermalInsulanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ThermalInsulanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ThermalInsulanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ThermalInsulanceUom(struct soap*, const enum eml__ThermalInsulanceUom *, const char*, const char*);

inline int soap_write_eml__ThermalInsulanceUom(struct soap *soap, enum eml__ThermalInsulanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ThermalInsulanceUom(soap, p, "eml:ThermalInsulanceUom", "eml:ThermalInsulanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ThermalInsulanceUom * SOAP_FMAC4 soap_get_eml__ThermalInsulanceUom(struct soap*, enum eml__ThermalInsulanceUom *, const char*, const char*);

inline int soap_read_eml__ThermalInsulanceUom(struct soap *soap, enum eml__ThermalInsulanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ThermalInsulanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectromagneticMomentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectromagneticMomentUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectromagneticMomentUom(struct soap*, enum eml__ElectromagneticMomentUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectromagneticMomentUom(struct soap*, const char*, int, const enum eml__ElectromagneticMomentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectromagneticMomentUom2s(struct soap*, enum eml__ElectromagneticMomentUom);
SOAP_FMAC3 enum eml__ElectromagneticMomentUom * SOAP_FMAC4 soap_in_eml__ElectromagneticMomentUom(struct soap*, const char*, enum eml__ElectromagneticMomentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectromagneticMomentUom(struct soap*, const char*, enum eml__ElectromagneticMomentUom *);

inline enum eml__ElectromagneticMomentUom * soap_new_eml__ElectromagneticMomentUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectromagneticMomentUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectromagneticMomentUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectromagneticMomentUom(struct soap*, const enum eml__ElectromagneticMomentUom *, const char*, const char*);

inline int soap_write_eml__ElectromagneticMomentUom(struct soap *soap, enum eml__ElectromagneticMomentUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectromagneticMomentUom(soap, p, "eml:ElectromagneticMomentUom", "eml:ElectromagneticMomentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectromagneticMomentUom * SOAP_FMAC4 soap_get_eml__ElectromagneticMomentUom(struct soap*, enum eml__ElectromagneticMomentUom *, const char*, const char*);

inline int soap_read_eml__ElectromagneticMomentUom(struct soap *soap, enum eml__ElectromagneticMomentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectromagneticMomentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PermittivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PermittivityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PermittivityUom(struct soap*, enum eml__PermittivityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PermittivityUom(struct soap*, const char*, int, const enum eml__PermittivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PermittivityUom2s(struct soap*, enum eml__PermittivityUom);
SOAP_FMAC3 enum eml__PermittivityUom * SOAP_FMAC4 soap_in_eml__PermittivityUom(struct soap*, const char*, enum eml__PermittivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PermittivityUom(struct soap*, const char*, enum eml__PermittivityUom *);

inline enum eml__PermittivityUom * soap_new_eml__PermittivityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PermittivityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PermittivityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PermittivityUom(struct soap*, const enum eml__PermittivityUom *, const char*, const char*);

inline int soap_write_eml__PermittivityUom(struct soap *soap, enum eml__PermittivityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PermittivityUom(soap, p, "eml:PermittivityUom", "eml:PermittivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PermittivityUom * SOAP_FMAC4 soap_get_eml__PermittivityUom(struct soap*, enum eml__PermittivityUom *, const char*, const char*);

inline int soap_read_eml__PermittivityUom(struct soap *soap, enum eml__PermittivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PermittivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerMassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__EnergyPerMassUom(struct soap*, enum eml__EnergyPerMassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerMassUom(struct soap*, const char*, int, const enum eml__EnergyPerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__EnergyPerMassUom2s(struct soap*, enum eml__EnergyPerMassUom);
SOAP_FMAC3 enum eml__EnergyPerMassUom * SOAP_FMAC4 soap_in_eml__EnergyPerMassUom(struct soap*, const char*, enum eml__EnergyPerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__EnergyPerMassUom(struct soap*, const char*, enum eml__EnergyPerMassUom *);

inline enum eml__EnergyPerMassUom * soap_new_eml__EnergyPerMassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__EnergyPerMassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__EnergyPerMassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__EnergyPerMassUom(struct soap*, const enum eml__EnergyPerMassUom *, const char*, const char*);

inline int soap_write_eml__EnergyPerMassUom(struct soap *soap, enum eml__EnergyPerMassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__EnergyPerMassUom(soap, p, "eml:EnergyPerMassUom", "eml:EnergyPerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__EnergyPerMassUom * SOAP_FMAC4 soap_get_eml__EnergyPerMassUom(struct soap*, enum eml__EnergyPerMassUom *, const char*, const char*);

inline int soap_read_eml__EnergyPerMassUom(struct soap *soap, enum eml__EnergyPerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__EnergyPerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AmountOfSubstancePerVolumeUom(struct soap*, enum eml__AmountOfSubstancePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerVolumeUom(struct soap*, const char*, int, const enum eml__AmountOfSubstancePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AmountOfSubstancePerVolumeUom2s(struct soap*, enum eml__AmountOfSubstancePerVolumeUom);
SOAP_FMAC3 enum eml__AmountOfSubstancePerVolumeUom * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerVolumeUom(struct soap*, const char*, enum eml__AmountOfSubstancePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AmountOfSubstancePerVolumeUom(struct soap*, const char*, enum eml__AmountOfSubstancePerVolumeUom *);

inline enum eml__AmountOfSubstancePerVolumeUom * soap_new_eml__AmountOfSubstancePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AmountOfSubstancePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AmountOfSubstancePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AmountOfSubstancePerVolumeUom(struct soap*, const enum eml__AmountOfSubstancePerVolumeUom *, const char*, const char*);

inline int soap_write_eml__AmountOfSubstancePerVolumeUom(struct soap *soap, enum eml__AmountOfSubstancePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AmountOfSubstancePerVolumeUom(soap, p, "eml:AmountOfSubstancePerVolumeUom", "eml:AmountOfSubstancePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AmountOfSubstancePerVolumeUom * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerVolumeUom(struct soap*, enum eml__AmountOfSubstancePerVolumeUom *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerVolumeUom(struct soap *soap, enum eml__AmountOfSubstancePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerPressureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerTimePerPressureUom(struct soap*, enum eml__VolumePerTimePerPressureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerPressureUom(struct soap*, const char*, int, const enum eml__VolumePerTimePerPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerTimePerPressureUom2s(struct soap*, enum eml__VolumePerTimePerPressureUom);
SOAP_FMAC3 enum eml__VolumePerTimePerPressureUom * SOAP_FMAC4 soap_in_eml__VolumePerTimePerPressureUom(struct soap*, const char*, enum eml__VolumePerTimePerPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerTimePerPressureUom(struct soap*, const char*, enum eml__VolumePerTimePerPressureUom *);

inline enum eml__VolumePerTimePerPressureUom * soap_new_eml__VolumePerTimePerPressureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerTimePerPressureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerTimePerPressureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerTimePerPressureUom(struct soap*, const enum eml__VolumePerTimePerPressureUom *, const char*, const char*);

inline int soap_write_eml__VolumePerTimePerPressureUom(struct soap *soap, enum eml__VolumePerTimePerPressureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerTimePerPressureUom(soap, p, "eml:VolumePerTimePerPressureUom", "eml:VolumePerTimePerPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerTimePerPressureUom * SOAP_FMAC4 soap_get_eml__VolumePerTimePerPressureUom(struct soap*, enum eml__VolumePerTimePerPressureUom *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerPressureUom(struct soap *soap, enum eml__VolumePerTimePerPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousFluxUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousFluxUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LuminousFluxUom(struct soap*, enum eml__LuminousFluxUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LuminousFluxUom(struct soap*, const char*, int, const enum eml__LuminousFluxUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LuminousFluxUom2s(struct soap*, enum eml__LuminousFluxUom);
SOAP_FMAC3 enum eml__LuminousFluxUom * SOAP_FMAC4 soap_in_eml__LuminousFluxUom(struct soap*, const char*, enum eml__LuminousFluxUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LuminousFluxUom(struct soap*, const char*, enum eml__LuminousFluxUom *);

inline enum eml__LuminousFluxUom * soap_new_eml__LuminousFluxUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LuminousFluxUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LuminousFluxUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LuminousFluxUom(struct soap*, const enum eml__LuminousFluxUom *, const char*, const char*);

inline int soap_write_eml__LuminousFluxUom(struct soap *soap, enum eml__LuminousFluxUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LuminousFluxUom(soap, p, "eml:LuminousFluxUom", "eml:LuminousFluxUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LuminousFluxUom * SOAP_FMAC4 soap_get_eml__LuminousFluxUom(struct soap*, enum eml__LuminousFluxUom *, const char*, const char*);

inline int soap_read_eml__LuminousFluxUom(struct soap *soap, enum eml__LuminousFluxUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LuminousFluxUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureSquaredPerForceTimePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureSquaredPerForceTimePerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PressureSquaredPerForceTimePerAreaUom(struct soap*, enum eml__PressureSquaredPerForceTimePerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressureSquaredPerForceTimePerAreaUom(struct soap*, const char*, int, const enum eml__PressureSquaredPerForceTimePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PressureSquaredPerForceTimePerAreaUom2s(struct soap*, enum eml__PressureSquaredPerForceTimePerAreaUom);
SOAP_FMAC3 enum eml__PressureSquaredPerForceTimePerAreaUom * SOAP_FMAC4 soap_in_eml__PressureSquaredPerForceTimePerAreaUom(struct soap*, const char*, enum eml__PressureSquaredPerForceTimePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PressureSquaredPerForceTimePerAreaUom(struct soap*, const char*, enum eml__PressureSquaredPerForceTimePerAreaUom *);

inline enum eml__PressureSquaredPerForceTimePerAreaUom * soap_new_eml__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PressureSquaredPerForceTimePerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PressureSquaredPerForceTimePerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PressureSquaredPerForceTimePerAreaUom(struct soap*, const enum eml__PressureSquaredPerForceTimePerAreaUom *, const char*, const char*);

inline int soap_write_eml__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, enum eml__PressureSquaredPerForceTimePerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PressureSquaredPerForceTimePerAreaUom(soap, p, "eml:PressureSquaredPerForceTimePerAreaUom", "eml:PressureSquaredPerForceTimePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PressureSquaredPerForceTimePerAreaUom * SOAP_FMAC4 soap_get_eml__PressureSquaredPerForceTimePerAreaUom(struct soap*, enum eml__PressureSquaredPerForceTimePerAreaUom *, const char*, const char*);

inline int soap_read_eml__PressureSquaredPerForceTimePerAreaUom(struct soap *soap, enum eml__PressureSquaredPerForceTimePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PressureSquaredPerForceTimePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerMassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassPerMassUom(struct soap*, enum eml__MassPerMassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerMassUom(struct soap*, const char*, int, const enum eml__MassPerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassPerMassUom2s(struct soap*, enum eml__MassPerMassUom);
SOAP_FMAC3 enum eml__MassPerMassUom * SOAP_FMAC4 soap_in_eml__MassPerMassUom(struct soap*, const char*, enum eml__MassPerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassPerMassUom(struct soap*, const char*, enum eml__MassPerMassUom *);

inline enum eml__MassPerMassUom * soap_new_eml__MassPerMassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassPerMassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassPerMassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassPerMassUom(struct soap*, const enum eml__MassPerMassUom *, const char*, const char*);

inline int soap_write_eml__MassPerMassUom(struct soap *soap, enum eml__MassPerMassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassPerMassUom(soap, p, "eml:MassPerMassUom", "eml:MassPerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassPerMassUom * SOAP_FMAC4 soap_get_eml__MassPerMassUom(struct soap*, enum eml__MassPerMassUom *, const char*, const char*);

inline int soap_read_eml__MassPerMassUom(struct soap *soap, enum eml__MassPerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassPerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricalResistivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricalResistivityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricalResistivityUom(struct soap*, enum eml__ElectricalResistivityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricalResistivityUom(struct soap*, const char*, int, const enum eml__ElectricalResistivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricalResistivityUom2s(struct soap*, enum eml__ElectricalResistivityUom);
SOAP_FMAC3 enum eml__ElectricalResistivityUom * SOAP_FMAC4 soap_in_eml__ElectricalResistivityUom(struct soap*, const char*, enum eml__ElectricalResistivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricalResistivityUom(struct soap*, const char*, enum eml__ElectricalResistivityUom *);

inline enum eml__ElectricalResistivityUom * soap_new_eml__ElectricalResistivityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricalResistivityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricalResistivityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricalResistivityUom(struct soap*, const enum eml__ElectricalResistivityUom *, const char*, const char*);

inline int soap_write_eml__ElectricalResistivityUom(struct soap *soap, enum eml__ElectricalResistivityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricalResistivityUom(soap, p, "eml:ElectricalResistivityUom", "eml:ElectricalResistivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricalResistivityUom * SOAP_FMAC4 soap_get_eml__ElectricalResistivityUom(struct soap*, enum eml__ElectricalResistivityUom *, const char*, const char*);

inline int soap_read_eml__ElectricalResistivityUom(struct soap *soap, enum eml__ElectricalResistivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricalResistivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassPerLengthUom(struct soap*, enum eml__MassPerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerLengthUom(struct soap*, const char*, int, const enum eml__MassPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassPerLengthUom2s(struct soap*, enum eml__MassPerLengthUom);
SOAP_FMAC3 enum eml__MassPerLengthUom * SOAP_FMAC4 soap_in_eml__MassPerLengthUom(struct soap*, const char*, enum eml__MassPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassPerLengthUom(struct soap*, const char*, enum eml__MassPerLengthUom *);

inline enum eml__MassPerLengthUom * soap_new_eml__MassPerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassPerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassPerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassPerLengthUom(struct soap*, const enum eml__MassPerLengthUom *, const char*, const char*);

inline int soap_write_eml__MassPerLengthUom(struct soap *soap, enum eml__MassPerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassPerLengthUom(soap, p, "eml:MassPerLengthUom", "eml:MassPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassPerLengthUom * SOAP_FMAC4 soap_get_eml__MassPerLengthUom(struct soap*, enum eml__MassPerLengthUom *, const char*, const char*);

inline int soap_read_eml__MassPerLengthUom(struct soap *soap, enum eml__MassPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LinearThermalExpansionUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LinearThermalExpansionUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LinearThermalExpansionUom(struct soap*, enum eml__LinearThermalExpansionUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LinearThermalExpansionUom(struct soap*, const char*, int, const enum eml__LinearThermalExpansionUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LinearThermalExpansionUom2s(struct soap*, enum eml__LinearThermalExpansionUom);
SOAP_FMAC3 enum eml__LinearThermalExpansionUom * SOAP_FMAC4 soap_in_eml__LinearThermalExpansionUom(struct soap*, const char*, enum eml__LinearThermalExpansionUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LinearThermalExpansionUom(struct soap*, const char*, enum eml__LinearThermalExpansionUom *);

inline enum eml__LinearThermalExpansionUom * soap_new_eml__LinearThermalExpansionUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LinearThermalExpansionUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LinearThermalExpansionUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LinearThermalExpansionUom(struct soap*, const enum eml__LinearThermalExpansionUom *, const char*, const char*);

inline int soap_write_eml__LinearThermalExpansionUom(struct soap *soap, enum eml__LinearThermalExpansionUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LinearThermalExpansionUom(soap, p, "eml:LinearThermalExpansionUom", "eml:LinearThermalExpansionUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LinearThermalExpansionUom * SOAP_FMAC4 soap_get_eml__LinearThermalExpansionUom(struct soap*, enum eml__LinearThermalExpansionUom *, const char*, const char*);

inline int soap_read_eml__LinearThermalExpansionUom(struct soap *soap, enum eml__LinearThermalExpansionUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LinearThermalExpansionUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermodynamicTemperatureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermodynamicTemperatureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ThermodynamicTemperatureUom(struct soap*, enum eml__ThermodynamicTemperatureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermodynamicTemperatureUom(struct soap*, const char*, int, const enum eml__ThermodynamicTemperatureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ThermodynamicTemperatureUom2s(struct soap*, enum eml__ThermodynamicTemperatureUom);
SOAP_FMAC3 enum eml__ThermodynamicTemperatureUom * SOAP_FMAC4 soap_in_eml__ThermodynamicTemperatureUom(struct soap*, const char*, enum eml__ThermodynamicTemperatureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ThermodynamicTemperatureUom(struct soap*, const char*, enum eml__ThermodynamicTemperatureUom *);

inline enum eml__ThermodynamicTemperatureUom * soap_new_eml__ThermodynamicTemperatureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ThermodynamicTemperatureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ThermodynamicTemperatureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ThermodynamicTemperatureUom(struct soap*, const enum eml__ThermodynamicTemperatureUom *, const char*, const char*);

inline int soap_write_eml__ThermodynamicTemperatureUom(struct soap *soap, enum eml__ThermodynamicTemperatureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ThermodynamicTemperatureUom(soap, p, "eml:ThermodynamicTemperatureUom", "eml:ThermodynamicTemperatureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ThermodynamicTemperatureUom * SOAP_FMAC4 soap_get_eml__ThermodynamicTemperatureUom(struct soap*, enum eml__ThermodynamicTemperatureUom *, const char*, const char*);

inline int soap_read_eml__ThermodynamicTemperatureUom(struct soap *soap, enum eml__ThermodynamicTemperatureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ThermodynamicTemperatureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerTimePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerTimePerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AmountOfSubstancePerTimePerAreaUom(struct soap*, enum eml__AmountOfSubstancePerTimePerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerTimePerAreaUom(struct soap*, const char*, int, const enum eml__AmountOfSubstancePerTimePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AmountOfSubstancePerTimePerAreaUom2s(struct soap*, enum eml__AmountOfSubstancePerTimePerAreaUom);
SOAP_FMAC3 enum eml__AmountOfSubstancePerTimePerAreaUom * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerTimePerAreaUom(struct soap*, const char*, enum eml__AmountOfSubstancePerTimePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AmountOfSubstancePerTimePerAreaUom(struct soap*, const char*, enum eml__AmountOfSubstancePerTimePerAreaUom *);

inline enum eml__AmountOfSubstancePerTimePerAreaUom * soap_new_eml__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AmountOfSubstancePerTimePerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AmountOfSubstancePerTimePerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AmountOfSubstancePerTimePerAreaUom(struct soap*, const enum eml__AmountOfSubstancePerTimePerAreaUom *, const char*, const char*);

inline int soap_write_eml__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, enum eml__AmountOfSubstancePerTimePerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AmountOfSubstancePerTimePerAreaUom(soap, p, "eml:AmountOfSubstancePerTimePerAreaUom", "eml:AmountOfSubstancePerTimePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AmountOfSubstancePerTimePerAreaUom * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerTimePerAreaUom(struct soap*, enum eml__AmountOfSubstancePerTimePerAreaUom *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerTimePerAreaUom(struct soap *soap, enum eml__AmountOfSubstancePerTimePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerTimePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerMassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LengthPerMassUom(struct soap*, enum eml__LengthPerMassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerMassUom(struct soap*, const char*, int, const enum eml__LengthPerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LengthPerMassUom2s(struct soap*, enum eml__LengthPerMassUom);
SOAP_FMAC3 enum eml__LengthPerMassUom * SOAP_FMAC4 soap_in_eml__LengthPerMassUom(struct soap*, const char*, enum eml__LengthPerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LengthPerMassUom(struct soap*, const char*, enum eml__LengthPerMassUom *);

inline enum eml__LengthPerMassUom * soap_new_eml__LengthPerMassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LengthPerMassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LengthPerMassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LengthPerMassUom(struct soap*, const enum eml__LengthPerMassUom *, const char*, const char*);

inline int soap_write_eml__LengthPerMassUom(struct soap *soap, enum eml__LengthPerMassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LengthPerMassUom(soap, p, "eml:LengthPerMassUom", "eml:LengthPerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LengthPerMassUom * SOAP_FMAC4 soap_get_eml__LengthPerMassUom(struct soap*, enum eml__LengthPerMassUom *, const char*, const char*);

inline int soap_read_eml__LengthPerMassUom(struct soap *soap, enum eml__LengthPerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LengthPerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__SpecificHeatCapacityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__SpecificHeatCapacityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__SpecificHeatCapacityUom(struct soap*, enum eml__SpecificHeatCapacityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__SpecificHeatCapacityUom(struct soap*, const char*, int, const enum eml__SpecificHeatCapacityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__SpecificHeatCapacityUom2s(struct soap*, enum eml__SpecificHeatCapacityUom);
SOAP_FMAC3 enum eml__SpecificHeatCapacityUom * SOAP_FMAC4 soap_in_eml__SpecificHeatCapacityUom(struct soap*, const char*, enum eml__SpecificHeatCapacityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__SpecificHeatCapacityUom(struct soap*, const char*, enum eml__SpecificHeatCapacityUom *);

inline enum eml__SpecificHeatCapacityUom * soap_new_eml__SpecificHeatCapacityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__SpecificHeatCapacityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__SpecificHeatCapacityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__SpecificHeatCapacityUom(struct soap*, const enum eml__SpecificHeatCapacityUom *, const char*, const char*);

inline int soap_write_eml__SpecificHeatCapacityUom(struct soap *soap, enum eml__SpecificHeatCapacityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__SpecificHeatCapacityUom(soap, p, "eml:SpecificHeatCapacityUom", "eml:SpecificHeatCapacityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__SpecificHeatCapacityUom * SOAP_FMAC4 soap_get_eml__SpecificHeatCapacityUom(struct soap*, enum eml__SpecificHeatCapacityUom *, const char*, const char*);

inline int soap_read_eml__SpecificHeatCapacityUom(struct soap *soap, enum eml__SpecificHeatCapacityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__SpecificHeatCapacityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassUom(struct soap*, enum eml__MassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassUom(struct soap*, const char*, int, const enum eml__MassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassUom2s(struct soap*, enum eml__MassUom);
SOAP_FMAC3 enum eml__MassUom * SOAP_FMAC4 soap_in_eml__MassUom(struct soap*, const char*, enum eml__MassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassUom(struct soap*, const char*, enum eml__MassUom *);

inline enum eml__MassUom * soap_new_eml__MassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassUom(struct soap*, const enum eml__MassUom *, const char*, const char*);

inline int soap_write_eml__MassUom(struct soap *soap, enum eml__MassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassUom(soap, p, "eml:MassUom", "eml:MassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassUom * SOAP_FMAC4 soap_get_eml__MassUom(struct soap*, enum eml__MassUom *, const char*, const char*);

inline int soap_read_eml__MassUom(struct soap *soap, enum eml__MassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerForceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerForceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ForcePerForceUom(struct soap*, enum eml__ForcePerForceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForcePerForceUom(struct soap*, const char*, int, const enum eml__ForcePerForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ForcePerForceUom2s(struct soap*, enum eml__ForcePerForceUom);
SOAP_FMAC3 enum eml__ForcePerForceUom * SOAP_FMAC4 soap_in_eml__ForcePerForceUom(struct soap*, const char*, enum eml__ForcePerForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ForcePerForceUom(struct soap*, const char*, enum eml__ForcePerForceUom *);

inline enum eml__ForcePerForceUom * soap_new_eml__ForcePerForceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ForcePerForceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ForcePerForceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ForcePerForceUom(struct soap*, const enum eml__ForcePerForceUom *, const char*, const char*);

inline int soap_write_eml__ForcePerForceUom(struct soap *soap, enum eml__ForcePerForceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ForcePerForceUom(soap, p, "eml:ForcePerForceUom", "eml:ForcePerForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ForcePerForceUom * SOAP_FMAC4 soap_get_eml__ForcePerForceUom(struct soap*, enum eml__ForcePerForceUom *, const char*, const char*);

inline int soap_read_eml__ForcePerForceUom(struct soap *soap, enum eml__ForcePerForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ForcePerForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalResistanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalResistanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ThermalResistanceUom(struct soap*, enum eml__ThermalResistanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalResistanceUom(struct soap*, const char*, int, const enum eml__ThermalResistanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ThermalResistanceUom2s(struct soap*, enum eml__ThermalResistanceUom);
SOAP_FMAC3 enum eml__ThermalResistanceUom * SOAP_FMAC4 soap_in_eml__ThermalResistanceUom(struct soap*, const char*, enum eml__ThermalResistanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ThermalResistanceUom(struct soap*, const char*, enum eml__ThermalResistanceUom *);

inline enum eml__ThermalResistanceUom * soap_new_eml__ThermalResistanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ThermalResistanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ThermalResistanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ThermalResistanceUom(struct soap*, const enum eml__ThermalResistanceUom *, const char*, const char*);

inline int soap_write_eml__ThermalResistanceUom(struct soap *soap, enum eml__ThermalResistanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ThermalResistanceUom(soap, p, "eml:ThermalResistanceUom", "eml:ThermalResistanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ThermalResistanceUom * SOAP_FMAC4 soap_get_eml__ThermalResistanceUom(struct soap*, enum eml__ThermalResistanceUom *, const char*, const char*);

inline int soap_read_eml__ThermalResistanceUom(struct soap *soap, enum eml__ThermalResistanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ThermalResistanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerMassUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerMassUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AreaPerMassUom(struct soap*, enum eml__AreaPerMassUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerMassUom(struct soap*, const char*, int, const enum eml__AreaPerMassUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AreaPerMassUom2s(struct soap*, enum eml__AreaPerMassUom);
SOAP_FMAC3 enum eml__AreaPerMassUom * SOAP_FMAC4 soap_in_eml__AreaPerMassUom(struct soap*, const char*, enum eml__AreaPerMassUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AreaPerMassUom(struct soap*, const char*, enum eml__AreaPerMassUom *);

inline enum eml__AreaPerMassUom * soap_new_eml__AreaPerMassUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AreaPerMassUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AreaPerMassUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AreaPerMassUom(struct soap*, const enum eml__AreaPerMassUom *, const char*, const char*);

inline int soap_write_eml__AreaPerMassUom(struct soap *soap, enum eml__AreaPerMassUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AreaPerMassUom(soap, p, "eml:AreaPerMassUom", "eml:AreaPerMassUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AreaPerMassUom * SOAP_FMAC4 soap_get_eml__AreaPerMassUom(struct soap*, enum eml__AreaPerMassUom *, const char*, const char*);

inline int soap_read_eml__AreaPerMassUom(struct soap *soap, enum eml__AreaPerMassUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AreaPerMassUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LengthUom(struct soap*, enum eml__LengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthUom(struct soap*, const char*, int, const enum eml__LengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LengthUom2s(struct soap*, enum eml__LengthUom);
SOAP_FMAC3 enum eml__LengthUom * SOAP_FMAC4 soap_in_eml__LengthUom(struct soap*, const char*, enum eml__LengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LengthUom(struct soap*, const char*, enum eml__LengthUom *);

inline enum eml__LengthUom * soap_new_eml__LengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LengthUom(struct soap*, const enum eml__LengthUom *, const char*, const char*);

inline int soap_write_eml__LengthUom(struct soap *soap, enum eml__LengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LengthUom(soap, p, "eml:LengthUom", "eml:LengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LengthUom * SOAP_FMAC4 soap_get_eml__LengthUom(struct soap*, enum eml__LengthUom *, const char*, const char*);

inline int soap_read_eml__LengthUom(struct soap *soap, enum eml__LengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerTimeUom(struct soap*, enum eml__VolumePerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimeUom(struct soap*, const char*, int, const enum eml__VolumePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerTimeUom2s(struct soap*, enum eml__VolumePerTimeUom);
SOAP_FMAC3 enum eml__VolumePerTimeUom * SOAP_FMAC4 soap_in_eml__VolumePerTimeUom(struct soap*, const char*, enum eml__VolumePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerTimeUom(struct soap*, const char*, enum eml__VolumePerTimeUom *);

inline enum eml__VolumePerTimeUom * soap_new_eml__VolumePerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerTimeUom(struct soap*, const enum eml__VolumePerTimeUom *, const char*, const char*);

inline int soap_write_eml__VolumePerTimeUom(struct soap *soap, enum eml__VolumePerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerTimeUom(soap, p, "eml:VolumePerTimeUom", "eml:VolumePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerTimeUom * SOAP_FMAC4 soap_get_eml__VolumePerTimeUom(struct soap*, enum eml__VolumePerTimeUom *, const char*, const char*);

inline int soap_read_eml__VolumePerTimeUom(struct soap *soap, enum eml__VolumePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFieldStrengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFieldStrengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MagneticFieldStrengthUom(struct soap*, enum eml__MagneticFieldStrengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticFieldStrengthUom(struct soap*, const char*, int, const enum eml__MagneticFieldStrengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MagneticFieldStrengthUom2s(struct soap*, enum eml__MagneticFieldStrengthUom);
SOAP_FMAC3 enum eml__MagneticFieldStrengthUom * SOAP_FMAC4 soap_in_eml__MagneticFieldStrengthUom(struct soap*, const char*, enum eml__MagneticFieldStrengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MagneticFieldStrengthUom(struct soap*, const char*, enum eml__MagneticFieldStrengthUom *);

inline enum eml__MagneticFieldStrengthUom * soap_new_eml__MagneticFieldStrengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MagneticFieldStrengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MagneticFieldStrengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MagneticFieldStrengthUom(struct soap*, const enum eml__MagneticFieldStrengthUom *, const char*, const char*);

inline int soap_write_eml__MagneticFieldStrengthUom(struct soap *soap, enum eml__MagneticFieldStrengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MagneticFieldStrengthUom(soap, p, "eml:MagneticFieldStrengthUom", "eml:MagneticFieldStrengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MagneticFieldStrengthUom * SOAP_FMAC4 soap_get_eml__MagneticFieldStrengthUom(struct soap*, enum eml__MagneticFieldStrengthUom *, const char*, const char*);

inline int soap_read_eml__MagneticFieldStrengthUom(struct soap *soap, enum eml__MagneticFieldStrengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MagneticFieldStrengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticVectorPotentialUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticVectorPotentialUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MagneticVectorPotentialUom(struct soap*, enum eml__MagneticVectorPotentialUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticVectorPotentialUom(struct soap*, const char*, int, const enum eml__MagneticVectorPotentialUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MagneticVectorPotentialUom2s(struct soap*, enum eml__MagneticVectorPotentialUom);
SOAP_FMAC3 enum eml__MagneticVectorPotentialUom * SOAP_FMAC4 soap_in_eml__MagneticVectorPotentialUom(struct soap*, const char*, enum eml__MagneticVectorPotentialUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MagneticVectorPotentialUom(struct soap*, const char*, enum eml__MagneticVectorPotentialUom *);

inline enum eml__MagneticVectorPotentialUom * soap_new_eml__MagneticVectorPotentialUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MagneticVectorPotentialUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MagneticVectorPotentialUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MagneticVectorPotentialUom(struct soap*, const enum eml__MagneticVectorPotentialUom *, const char*, const char*);

inline int soap_write_eml__MagneticVectorPotentialUom(struct soap *soap, enum eml__MagneticVectorPotentialUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MagneticVectorPotentialUom(soap, p, "eml:MagneticVectorPotentialUom", "eml:MagneticVectorPotentialUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MagneticVectorPotentialUom * SOAP_FMAC4 soap_get_eml__MagneticVectorPotentialUom(struct soap*, enum eml__MagneticVectorPotentialUom *, const char*, const char*);

inline int soap_read_eml__MagneticVectorPotentialUom(struct soap *soap, enum eml__MagneticVectorPotentialUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MagneticVectorPotentialUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerPressureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LengthPerPressureUom(struct soap*, enum eml__LengthPerPressureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerPressureUom(struct soap*, const char*, int, const enum eml__LengthPerPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LengthPerPressureUom2s(struct soap*, enum eml__LengthPerPressureUom);
SOAP_FMAC3 enum eml__LengthPerPressureUom * SOAP_FMAC4 soap_in_eml__LengthPerPressureUom(struct soap*, const char*, enum eml__LengthPerPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LengthPerPressureUom(struct soap*, const char*, enum eml__LengthPerPressureUom *);

inline enum eml__LengthPerPressureUom * soap_new_eml__LengthPerPressureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LengthPerPressureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LengthPerPressureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LengthPerPressureUom(struct soap*, const enum eml__LengthPerPressureUom *, const char*, const char*);

inline int soap_write_eml__LengthPerPressureUom(struct soap *soap, enum eml__LengthPerPressureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LengthPerPressureUom(soap, p, "eml:LengthPerPressureUom", "eml:LengthPerPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LengthPerPressureUom * SOAP_FMAC4 soap_get_eml__LengthPerPressureUom(struct soap*, enum eml__LengthPerPressureUom *, const char*, const char*);

inline int soap_read_eml__LengthPerPressureUom(struct soap *soap, enum eml__LengthPerPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LengthPerPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricPotentialDifferenceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricPotentialDifferenceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricPotentialDifferenceUom(struct soap*, enum eml__ElectricPotentialDifferenceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricPotentialDifferenceUom(struct soap*, const char*, int, const enum eml__ElectricPotentialDifferenceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricPotentialDifferenceUom2s(struct soap*, enum eml__ElectricPotentialDifferenceUom);
SOAP_FMAC3 enum eml__ElectricPotentialDifferenceUom * SOAP_FMAC4 soap_in_eml__ElectricPotentialDifferenceUom(struct soap*, const char*, enum eml__ElectricPotentialDifferenceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricPotentialDifferenceUom(struct soap*, const char*, enum eml__ElectricPotentialDifferenceUom *);

inline enum eml__ElectricPotentialDifferenceUom * soap_new_eml__ElectricPotentialDifferenceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricPotentialDifferenceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricPotentialDifferenceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricPotentialDifferenceUom(struct soap*, const enum eml__ElectricPotentialDifferenceUom *, const char*, const char*);

inline int soap_write_eml__ElectricPotentialDifferenceUom(struct soap *soap, enum eml__ElectricPotentialDifferenceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricPotentialDifferenceUom(soap, p, "eml:ElectricPotentialDifferenceUom", "eml:ElectricPotentialDifferenceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricPotentialDifferenceUom * SOAP_FMAC4 soap_get_eml__ElectricPotentialDifferenceUom(struct soap*, enum eml__ElectricPotentialDifferenceUom *, const char*, const char*);

inline int soap_read_eml__ElectricPotentialDifferenceUom(struct soap *soap, enum eml__ElectricPotentialDifferenceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricPotentialDifferenceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ActivityOfRadioactivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ActivityOfRadioactivityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ActivityOfRadioactivityUom(struct soap*, enum eml__ActivityOfRadioactivityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ActivityOfRadioactivityUom(struct soap*, const char*, int, const enum eml__ActivityOfRadioactivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ActivityOfRadioactivityUom2s(struct soap*, enum eml__ActivityOfRadioactivityUom);
SOAP_FMAC3 enum eml__ActivityOfRadioactivityUom * SOAP_FMAC4 soap_in_eml__ActivityOfRadioactivityUom(struct soap*, const char*, enum eml__ActivityOfRadioactivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ActivityOfRadioactivityUom(struct soap*, const char*, enum eml__ActivityOfRadioactivityUom *);

inline enum eml__ActivityOfRadioactivityUom * soap_new_eml__ActivityOfRadioactivityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ActivityOfRadioactivityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ActivityOfRadioactivityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ActivityOfRadioactivityUom(struct soap*, const enum eml__ActivityOfRadioactivityUom *, const char*, const char*);

inline int soap_write_eml__ActivityOfRadioactivityUom(struct soap *soap, enum eml__ActivityOfRadioactivityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ActivityOfRadioactivityUom(soap, p, "eml:ActivityOfRadioactivityUom", "eml:ActivityOfRadioactivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ActivityOfRadioactivityUom * SOAP_FMAC4 soap_get_eml__ActivityOfRadioactivityUom(struct soap*, enum eml__ActivityOfRadioactivityUom *, const char*, const char*);

inline int soap_read_eml__ActivityOfRadioactivityUom(struct soap *soap, enum eml__ActivityOfRadioactivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ActivityOfRadioactivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressurePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressurePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PressurePerVolumeUom(struct soap*, enum eml__PressurePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressurePerVolumeUom(struct soap*, const char*, int, const enum eml__PressurePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PressurePerVolumeUom2s(struct soap*, enum eml__PressurePerVolumeUom);
SOAP_FMAC3 enum eml__PressurePerVolumeUom * SOAP_FMAC4 soap_in_eml__PressurePerVolumeUom(struct soap*, const char*, enum eml__PressurePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PressurePerVolumeUom(struct soap*, const char*, enum eml__PressurePerVolumeUom *);

inline enum eml__PressurePerVolumeUom * soap_new_eml__PressurePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PressurePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PressurePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PressurePerVolumeUom(struct soap*, const enum eml__PressurePerVolumeUom *, const char*, const char*);

inline int soap_write_eml__PressurePerVolumeUom(struct soap *soap, enum eml__PressurePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PressurePerVolumeUom(soap, p, "eml:PressurePerVolumeUom", "eml:PressurePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PressurePerVolumeUom * SOAP_FMAC4 soap_get_eml__PressurePerVolumeUom(struct soap*, enum eml__PressurePerVolumeUom *, const char*, const char*);

inline int soap_read_eml__PressurePerVolumeUom(struct soap *soap, enum eml__PressurePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PressurePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PowerUom(struct soap*, enum eml__PowerUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PowerUom(struct soap*, const char*, int, const enum eml__PowerUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PowerUom2s(struct soap*, enum eml__PowerUom);
SOAP_FMAC3 enum eml__PowerUom * SOAP_FMAC4 soap_in_eml__PowerUom(struct soap*, const char*, enum eml__PowerUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PowerUom(struct soap*, const char*, enum eml__PowerUom *);

inline enum eml__PowerUom * soap_new_eml__PowerUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PowerUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PowerUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PowerUom(struct soap*, const enum eml__PowerUom *, const char*, const char*);

inline int soap_write_eml__PowerUom(struct soap *soap, enum eml__PowerUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PowerUom(soap, p, "eml:PowerUom", "eml:PowerUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PowerUom * SOAP_FMAC4 soap_get_eml__PowerUom(struct soap*, enum eml__PowerUom *, const char*, const char*);

inline int soap_read_eml__PowerUom(struct soap *soap, enum eml__PowerUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PowerUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousEfficacyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousEfficacyUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LuminousEfficacyUom(struct soap*, enum eml__LuminousEfficacyUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LuminousEfficacyUom(struct soap*, const char*, int, const enum eml__LuminousEfficacyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LuminousEfficacyUom2s(struct soap*, enum eml__LuminousEfficacyUom);
SOAP_FMAC3 enum eml__LuminousEfficacyUom * SOAP_FMAC4 soap_in_eml__LuminousEfficacyUom(struct soap*, const char*, enum eml__LuminousEfficacyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LuminousEfficacyUom(struct soap*, const char*, enum eml__LuminousEfficacyUom *);

inline enum eml__LuminousEfficacyUom * soap_new_eml__LuminousEfficacyUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LuminousEfficacyUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LuminousEfficacyUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LuminousEfficacyUom(struct soap*, const enum eml__LuminousEfficacyUom *, const char*, const char*);

inline int soap_write_eml__LuminousEfficacyUom(struct soap *soap, enum eml__LuminousEfficacyUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LuminousEfficacyUom(soap, p, "eml:LuminousEfficacyUom", "eml:LuminousEfficacyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LuminousEfficacyUom * SOAP_FMAC4 soap_get_eml__LuminousEfficacyUom(struct soap*, enum eml__LuminousEfficacyUom *, const char*, const char*);

inline int soap_read_eml__LuminousEfficacyUom(struct soap *soap, enum eml__LuminousEfficacyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LuminousEfficacyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricChargeUom(struct soap*, enum eml__ElectricChargeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricChargeUom(struct soap*, const char*, int, const enum eml__ElectricChargeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricChargeUom2s(struct soap*, enum eml__ElectricChargeUom);
SOAP_FMAC3 enum eml__ElectricChargeUom * SOAP_FMAC4 soap_in_eml__ElectricChargeUom(struct soap*, const char*, enum eml__ElectricChargeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricChargeUom(struct soap*, const char*, enum eml__ElectricChargeUom *);

inline enum eml__ElectricChargeUom * soap_new_eml__ElectricChargeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricChargeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricChargeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricChargeUom(struct soap*, const enum eml__ElectricChargeUom *, const char*, const char*);

inline int soap_write_eml__ElectricChargeUom(struct soap *soap, enum eml__ElectricChargeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricChargeUom(soap, p, "eml:ElectricChargeUom", "eml:ElectricChargeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricChargeUom * SOAP_FMAC4 soap_get_eml__ElectricChargeUom(struct soap*, enum eml__ElectricChargeUom *, const char*, const char*);

inline int soap_read_eml__ElectricChargeUom(struct soap *soap, enum eml__ElectricChargeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricChargeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressurePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressurePerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PressurePerTimeUom(struct soap*, enum eml__PressurePerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressurePerTimeUom(struct soap*, const char*, int, const enum eml__PressurePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PressurePerTimeUom2s(struct soap*, enum eml__PressurePerTimeUom);
SOAP_FMAC3 enum eml__PressurePerTimeUom * SOAP_FMAC4 soap_in_eml__PressurePerTimeUom(struct soap*, const char*, enum eml__PressurePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PressurePerTimeUom(struct soap*, const char*, enum eml__PressurePerTimeUom *);

inline enum eml__PressurePerTimeUom * soap_new_eml__PressurePerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PressurePerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PressurePerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PressurePerTimeUom(struct soap*, const enum eml__PressurePerTimeUom *, const char*, const char*);

inline int soap_write_eml__PressurePerTimeUom(struct soap *soap, enum eml__PressurePerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PressurePerTimeUom(soap, p, "eml:PressurePerTimeUom", "eml:PressurePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PressurePerTimeUom * SOAP_FMAC4 soap_get_eml__PressurePerTimeUom(struct soap*, enum eml__PressurePerTimeUom *, const char*, const char*);

inline int soap_read_eml__PressurePerTimeUom(struct soap *soap, enum eml__PressurePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PressurePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReciprocalAreaUom(struct soap*, enum eml__ReciprocalAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalAreaUom(struct soap*, const char*, int, const enum eml__ReciprocalAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReciprocalAreaUom2s(struct soap*, enum eml__ReciprocalAreaUom);
SOAP_FMAC3 enum eml__ReciprocalAreaUom * SOAP_FMAC4 soap_in_eml__ReciprocalAreaUom(struct soap*, const char*, enum eml__ReciprocalAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReciprocalAreaUom(struct soap*, const char*, enum eml__ReciprocalAreaUom *);

inline enum eml__ReciprocalAreaUom * soap_new_eml__ReciprocalAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReciprocalAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReciprocalAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReciprocalAreaUom(struct soap*, const enum eml__ReciprocalAreaUom *, const char*, const char*);

inline int soap_write_eml__ReciprocalAreaUom(struct soap *soap, enum eml__ReciprocalAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReciprocalAreaUom(soap, p, "eml:ReciprocalAreaUom", "eml:ReciprocalAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReciprocalAreaUom * SOAP_FMAC4 soap_get_eml__ReciprocalAreaUom(struct soap*, enum eml__ReciprocalAreaUom *, const char*, const char*);

inline int soap_read_eml__ReciprocalAreaUom(struct soap *soap, enum eml__ReciprocalAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReciprocalAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalForceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalForceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReciprocalForceUom(struct soap*, enum eml__ReciprocalForceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalForceUom(struct soap*, const char*, int, const enum eml__ReciprocalForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReciprocalForceUom2s(struct soap*, enum eml__ReciprocalForceUom);
SOAP_FMAC3 enum eml__ReciprocalForceUom * SOAP_FMAC4 soap_in_eml__ReciprocalForceUom(struct soap*, const char*, enum eml__ReciprocalForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReciprocalForceUom(struct soap*, const char*, enum eml__ReciprocalForceUom *);

inline enum eml__ReciprocalForceUom * soap_new_eml__ReciprocalForceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReciprocalForceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReciprocalForceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReciprocalForceUom(struct soap*, const enum eml__ReciprocalForceUom *, const char*, const char*);

inline int soap_write_eml__ReciprocalForceUom(struct soap *soap, enum eml__ReciprocalForceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReciprocalForceUom(soap, p, "eml:ReciprocalForceUom", "eml:ReciprocalForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReciprocalForceUom * SOAP_FMAC4 soap_get_eml__ReciprocalForceUom(struct soap*, enum eml__ReciprocalForceUom *, const char*, const char*);

inline int soap_read_eml__ReciprocalForceUom(struct soap *soap, enum eml__ReciprocalForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReciprocalForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerPressureLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerPressureLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerTimePerPressureLengthUom(struct soap*, enum eml__VolumePerTimePerPressureLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerPressureLengthUom(struct soap*, const char*, int, const enum eml__VolumePerTimePerPressureLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerTimePerPressureLengthUom2s(struct soap*, enum eml__VolumePerTimePerPressureLengthUom);
SOAP_FMAC3 enum eml__VolumePerTimePerPressureLengthUom * SOAP_FMAC4 soap_in_eml__VolumePerTimePerPressureLengthUom(struct soap*, const char*, enum eml__VolumePerTimePerPressureLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerTimePerPressureLengthUom(struct soap*, const char*, enum eml__VolumePerTimePerPressureLengthUom *);

inline enum eml__VolumePerTimePerPressureLengthUom * soap_new_eml__VolumePerTimePerPressureLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerTimePerPressureLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerTimePerPressureLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerTimePerPressureLengthUom(struct soap*, const enum eml__VolumePerTimePerPressureLengthUom *, const char*, const char*);

inline int soap_write_eml__VolumePerTimePerPressureLengthUom(struct soap *soap, enum eml__VolumePerTimePerPressureLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerTimePerPressureLengthUom(soap, p, "eml:VolumePerTimePerPressureLengthUom", "eml:VolumePerTimePerPressureLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerTimePerPressureLengthUom * SOAP_FMAC4 soap_get_eml__VolumePerTimePerPressureLengthUom(struct soap*, enum eml__VolumePerTimePerPressureLengthUom *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerPressureLengthUom(struct soap *soap, enum eml__VolumePerTimePerPressureLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerPressureLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__KinematicViscosityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__KinematicViscosityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__KinematicViscosityUom(struct soap*, enum eml__KinematicViscosityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__KinematicViscosityUom(struct soap*, const char*, int, const enum eml__KinematicViscosityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__KinematicViscosityUom2s(struct soap*, enum eml__KinematicViscosityUom);
SOAP_FMAC3 enum eml__KinematicViscosityUom * SOAP_FMAC4 soap_in_eml__KinematicViscosityUom(struct soap*, const char*, enum eml__KinematicViscosityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__KinematicViscosityUom(struct soap*, const char*, enum eml__KinematicViscosityUom *);

inline enum eml__KinematicViscosityUom * soap_new_eml__KinematicViscosityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__KinematicViscosityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__KinematicViscosityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__KinematicViscosityUom(struct soap*, const enum eml__KinematicViscosityUom *, const char*, const char*);

inline int soap_write_eml__KinematicViscosityUom(struct soap *soap, enum eml__KinematicViscosityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__KinematicViscosityUom(soap, p, "eml:KinematicViscosityUom", "eml:KinematicViscosityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__KinematicViscosityUom * SOAP_FMAC4 soap_get_eml__KinematicViscosityUom(struct soap*, enum eml__KinematicViscosityUom *, const char*, const char*);

inline int soap_read_eml__KinematicViscosityUom(struct soap *soap, enum eml__KinematicViscosityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__KinematicViscosityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__InductanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__InductanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__InductanceUom(struct soap*, enum eml__InductanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__InductanceUom(struct soap*, const char*, int, const enum eml__InductanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__InductanceUom2s(struct soap*, enum eml__InductanceUom);
SOAP_FMAC3 enum eml__InductanceUom * SOAP_FMAC4 soap_in_eml__InductanceUom(struct soap*, const char*, enum eml__InductanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__InductanceUom(struct soap*, const char*, enum eml__InductanceUom *);

inline enum eml__InductanceUom * soap_new_eml__InductanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__InductanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__InductanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__InductanceUom(struct soap*, const enum eml__InductanceUom *, const char*, const char*);

inline int soap_write_eml__InductanceUom(struct soap *soap, enum eml__InductanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__InductanceUom(soap, p, "eml:InductanceUom", "eml:InductanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__InductanceUom * SOAP_FMAC4 soap_get_eml__InductanceUom(struct soap*, enum eml__InductanceUom *, const char*, const char*);

inline int soap_read_eml__InductanceUom(struct soap *soap, enum eml__InductanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__InductanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DataTransferSpeedUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DataTransferSpeedUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__DataTransferSpeedUom(struct soap*, enum eml__DataTransferSpeedUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DataTransferSpeedUom(struct soap*, const char*, int, const enum eml__DataTransferSpeedUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__DataTransferSpeedUom2s(struct soap*, enum eml__DataTransferSpeedUom);
SOAP_FMAC3 enum eml__DataTransferSpeedUom * SOAP_FMAC4 soap_in_eml__DataTransferSpeedUom(struct soap*, const char*, enum eml__DataTransferSpeedUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__DataTransferSpeedUom(struct soap*, const char*, enum eml__DataTransferSpeedUom *);

inline enum eml__DataTransferSpeedUom * soap_new_eml__DataTransferSpeedUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__DataTransferSpeedUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__DataTransferSpeedUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__DataTransferSpeedUom(struct soap*, const enum eml__DataTransferSpeedUom *, const char*, const char*);

inline int soap_write_eml__DataTransferSpeedUom(struct soap *soap, enum eml__DataTransferSpeedUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__DataTransferSpeedUom(soap, p, "eml:DataTransferSpeedUom", "eml:DataTransferSpeedUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__DataTransferSpeedUom * SOAP_FMAC4 soap_get_eml__DataTransferSpeedUom(struct soap*, enum eml__DataTransferSpeedUom *, const char*, const char*);

inline int soap_read_eml__DataTransferSpeedUom(struct soap *soap, enum eml__DataTransferSpeedUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__DataTransferSpeedUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PermeabilityLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PermeabilityLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PermeabilityLengthUom(struct soap*, enum eml__PermeabilityLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PermeabilityLengthUom(struct soap*, const char*, int, const enum eml__PermeabilityLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PermeabilityLengthUom2s(struct soap*, enum eml__PermeabilityLengthUom);
SOAP_FMAC3 enum eml__PermeabilityLengthUom * SOAP_FMAC4 soap_in_eml__PermeabilityLengthUom(struct soap*, const char*, enum eml__PermeabilityLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PermeabilityLengthUom(struct soap*, const char*, enum eml__PermeabilityLengthUom *);

inline enum eml__PermeabilityLengthUom * soap_new_eml__PermeabilityLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PermeabilityLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PermeabilityLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PermeabilityLengthUom(struct soap*, const enum eml__PermeabilityLengthUom *, const char*, const char*);

inline int soap_write_eml__PermeabilityLengthUom(struct soap *soap, enum eml__PermeabilityLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PermeabilityLengthUom(soap, p, "eml:PermeabilityLengthUom", "eml:PermeabilityLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PermeabilityLengthUom * SOAP_FMAC4 soap_get_eml__PermeabilityLengthUom(struct soap*, enum eml__PermeabilityLengthUom *, const char*, const char*);

inline int soap_read_eml__PermeabilityLengthUom(struct soap *soap, enum eml__PermeabilityLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PermeabilityLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__RadiantIntensityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__RadiantIntensityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__RadiantIntensityUom(struct soap*, enum eml__RadiantIntensityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__RadiantIntensityUom(struct soap*, const char*, int, const enum eml__RadiantIntensityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__RadiantIntensityUom2s(struct soap*, enum eml__RadiantIntensityUom);
SOAP_FMAC3 enum eml__RadiantIntensityUom * SOAP_FMAC4 soap_in_eml__RadiantIntensityUom(struct soap*, const char*, enum eml__RadiantIntensityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__RadiantIntensityUom(struct soap*, const char*, enum eml__RadiantIntensityUom *);

inline enum eml__RadiantIntensityUom * soap_new_eml__RadiantIntensityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__RadiantIntensityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__RadiantIntensityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__RadiantIntensityUom(struct soap*, const enum eml__RadiantIntensityUom *, const char*, const char*);

inline int soap_write_eml__RadiantIntensityUom(struct soap *soap, enum eml__RadiantIntensityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__RadiantIntensityUom(soap, p, "eml:RadiantIntensityUom", "eml:RadiantIntensityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__RadiantIntensityUom * SOAP_FMAC4 soap_get_eml__RadiantIntensityUom(struct soap*, enum eml__RadiantIntensityUom *, const char*, const char*);

inline int soap_read_eml__RadiantIntensityUom(struct soap *soap, enum eml__RadiantIntensityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__RadiantIntensityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TemperatureIntervalUom(struct soap*, enum eml__TemperatureIntervalUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TemperatureIntervalUom(struct soap*, const char*, int, const enum eml__TemperatureIntervalUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__TemperatureIntervalUom2s(struct soap*, enum eml__TemperatureIntervalUom);
SOAP_FMAC3 enum eml__TemperatureIntervalUom * SOAP_FMAC4 soap_in_eml__TemperatureIntervalUom(struct soap*, const char*, enum eml__TemperatureIntervalUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__TemperatureIntervalUom(struct soap*, const char*, enum eml__TemperatureIntervalUom *);

inline enum eml__TemperatureIntervalUom * soap_new_eml__TemperatureIntervalUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__TemperatureIntervalUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__TemperatureIntervalUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TemperatureIntervalUom(struct soap*, const enum eml__TemperatureIntervalUom *, const char*, const char*);

inline int soap_write_eml__TemperatureIntervalUom(struct soap *soap, enum eml__TemperatureIntervalUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TemperatureIntervalUom(soap, p, "eml:TemperatureIntervalUom", "eml:TemperatureIntervalUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__TemperatureIntervalUom * SOAP_FMAC4 soap_get_eml__TemperatureIntervalUom(struct soap*, enum eml__TemperatureIntervalUom *, const char*, const char*);

inline int soap_read_eml__TemperatureIntervalUom(struct soap *soap, enum eml__TemperatureIntervalUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TemperatureIntervalUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__FrequencyIntervalUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__FrequencyIntervalUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__FrequencyIntervalUom(struct soap*, enum eml__FrequencyIntervalUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__FrequencyIntervalUom(struct soap*, const char*, int, const enum eml__FrequencyIntervalUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__FrequencyIntervalUom2s(struct soap*, enum eml__FrequencyIntervalUom);
SOAP_FMAC3 enum eml__FrequencyIntervalUom * SOAP_FMAC4 soap_in_eml__FrequencyIntervalUom(struct soap*, const char*, enum eml__FrequencyIntervalUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__FrequencyIntervalUom(struct soap*, const char*, enum eml__FrequencyIntervalUom *);

inline enum eml__FrequencyIntervalUom * soap_new_eml__FrequencyIntervalUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__FrequencyIntervalUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__FrequencyIntervalUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__FrequencyIntervalUom(struct soap*, const enum eml__FrequencyIntervalUom *, const char*, const char*);

inline int soap_write_eml__FrequencyIntervalUom(struct soap *soap, enum eml__FrequencyIntervalUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__FrequencyIntervalUom(soap, p, "eml:FrequencyIntervalUom", "eml:FrequencyIntervalUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__FrequencyIntervalUom * SOAP_FMAC4 soap_get_eml__FrequencyIntervalUom(struct soap*, enum eml__FrequencyIntervalUom *, const char*, const char*);

inline int soap_read_eml__FrequencyIntervalUom(struct soap *soap, enum eml__FrequencyIntervalUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__FrequencyIntervalUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumeFlowRatePerVolumeFlowRateUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumeFlowRatePerVolumeFlowRateUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, enum eml__VolumeFlowRatePerVolumeFlowRateUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, const char*, int, const enum eml__VolumeFlowRatePerVolumeFlowRateUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumeFlowRatePerVolumeFlowRateUom2s(struct soap*, enum eml__VolumeFlowRatePerVolumeFlowRateUom);
SOAP_FMAC3 enum eml__VolumeFlowRatePerVolumeFlowRateUom * SOAP_FMAC4 soap_in_eml__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, const char*, enum eml__VolumeFlowRatePerVolumeFlowRateUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, const char*, enum eml__VolumeFlowRatePerVolumeFlowRateUom *);

inline enum eml__VolumeFlowRatePerVolumeFlowRateUom * soap_new_eml__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumeFlowRatePerVolumeFlowRateUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumeFlowRatePerVolumeFlowRateUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, const enum eml__VolumeFlowRatePerVolumeFlowRateUom *, const char*, const char*);

inline int soap_write_eml__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, enum eml__VolumeFlowRatePerVolumeFlowRateUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumeFlowRatePerVolumeFlowRateUom(soap, p, "eml:VolumeFlowRatePerVolumeFlowRateUom", "eml:VolumeFlowRatePerVolumeFlowRateUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumeFlowRatePerVolumeFlowRateUom * SOAP_FMAC4 soap_get_eml__VolumeFlowRatePerVolumeFlowRateUom(struct soap*, enum eml__VolumeFlowRatePerVolumeFlowRateUom *, const char*, const char*);

inline int soap_read_eml__VolumeFlowRatePerVolumeFlowRateUom(struct soap *soap, enum eml__VolumeFlowRatePerVolumeFlowRateUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumeFlowRatePerVolumeFlowRateUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarHeatCapacityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarHeatCapacityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MolarHeatCapacityUom(struct soap*, enum eml__MolarHeatCapacityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MolarHeatCapacityUom(struct soap*, const char*, int, const enum eml__MolarHeatCapacityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MolarHeatCapacityUom2s(struct soap*, enum eml__MolarHeatCapacityUom);
SOAP_FMAC3 enum eml__MolarHeatCapacityUom * SOAP_FMAC4 soap_in_eml__MolarHeatCapacityUom(struct soap*, const char*, enum eml__MolarHeatCapacityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MolarHeatCapacityUom(struct soap*, const char*, enum eml__MolarHeatCapacityUom *);

inline enum eml__MolarHeatCapacityUom * soap_new_eml__MolarHeatCapacityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MolarHeatCapacityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MolarHeatCapacityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MolarHeatCapacityUom(struct soap*, const enum eml__MolarHeatCapacityUom *, const char*, const char*);

inline int soap_write_eml__MolarHeatCapacityUom(struct soap *soap, enum eml__MolarHeatCapacityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MolarHeatCapacityUom(soap, p, "eml:MolarHeatCapacityUom", "eml:MolarHeatCapacityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MolarHeatCapacityUom * SOAP_FMAC4 soap_get_eml__MolarHeatCapacityUom(struct soap*, enum eml__MolarHeatCapacityUom *, const char*, const char*);

inline int soap_read_eml__MolarHeatCapacityUom(struct soap *soap, enum eml__MolarHeatCapacityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MolarHeatCapacityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerTimePerTimeUom(struct soap*, enum eml__VolumePerTimePerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerTimeUom(struct soap*, const char*, int, const enum eml__VolumePerTimePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerTimePerTimeUom2s(struct soap*, enum eml__VolumePerTimePerTimeUom);
SOAP_FMAC3 enum eml__VolumePerTimePerTimeUom * SOAP_FMAC4 soap_in_eml__VolumePerTimePerTimeUom(struct soap*, const char*, enum eml__VolumePerTimePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerTimePerTimeUom(struct soap*, const char*, enum eml__VolumePerTimePerTimeUom *);

inline enum eml__VolumePerTimePerTimeUom * soap_new_eml__VolumePerTimePerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerTimePerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerTimePerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerTimePerTimeUom(struct soap*, const enum eml__VolumePerTimePerTimeUom *, const char*, const char*);

inline int soap_write_eml__VolumePerTimePerTimeUom(struct soap *soap, enum eml__VolumePerTimePerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerTimePerTimeUom(soap, p, "eml:VolumePerTimePerTimeUom", "eml:VolumePerTimePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerTimePerTimeUom * SOAP_FMAC4 soap_get_eml__VolumePerTimePerTimeUom(struct soap*, enum eml__VolumePerTimePerTimeUom *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerTimeUom(struct soap *soap, enum eml__VolumePerTimePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LuminanceUom(struct soap*, enum eml__LuminanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LuminanceUom(struct soap*, const char*, int, const enum eml__LuminanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LuminanceUom2s(struct soap*, enum eml__LuminanceUom);
SOAP_FMAC3 enum eml__LuminanceUom * SOAP_FMAC4 soap_in_eml__LuminanceUom(struct soap*, const char*, enum eml__LuminanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LuminanceUom(struct soap*, const char*, enum eml__LuminanceUom *);

inline enum eml__LuminanceUom * soap_new_eml__LuminanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LuminanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LuminanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LuminanceUom(struct soap*, const enum eml__LuminanceUom *, const char*, const char*);

inline int soap_write_eml__LuminanceUom(struct soap *soap, enum eml__LuminanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LuminanceUom(soap, p, "eml:LuminanceUom", "eml:LuminanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LuminanceUom * SOAP_FMAC4 soap_get_eml__LuminanceUom(struct soap*, enum eml__LuminanceUom *, const char*, const char*);

inline int soap_read_eml__LuminanceUom(struct soap *soap, enum eml__LuminanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LuminanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReciprocalLengthUom(struct soap*, enum eml__ReciprocalLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalLengthUom(struct soap*, const char*, int, const enum eml__ReciprocalLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReciprocalLengthUom2s(struct soap*, enum eml__ReciprocalLengthUom);
SOAP_FMAC3 enum eml__ReciprocalLengthUom * SOAP_FMAC4 soap_in_eml__ReciprocalLengthUom(struct soap*, const char*, enum eml__ReciprocalLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReciprocalLengthUom(struct soap*, const char*, enum eml__ReciprocalLengthUom *);

inline enum eml__ReciprocalLengthUom * soap_new_eml__ReciprocalLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReciprocalLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReciprocalLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReciprocalLengthUom(struct soap*, const enum eml__ReciprocalLengthUom *, const char*, const char*);

inline int soap_write_eml__ReciprocalLengthUom(struct soap *soap, enum eml__ReciprocalLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReciprocalLengthUom(soap, p, "eml:ReciprocalLengthUom", "eml:ReciprocalLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReciprocalLengthUom * SOAP_FMAC4 soap_get_eml__ReciprocalLengthUom(struct soap*, enum eml__ReciprocalLengthUom *, const char*, const char*);

inline int soap_read_eml__ReciprocalLengthUom(struct soap *soap, enum eml__ReciprocalLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReciprocalLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LogarithmicPowerRatioPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LogarithmicPowerRatioPerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LogarithmicPowerRatioPerLengthUom(struct soap*, enum eml__LogarithmicPowerRatioPerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LogarithmicPowerRatioPerLengthUom(struct soap*, const char*, int, const enum eml__LogarithmicPowerRatioPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LogarithmicPowerRatioPerLengthUom2s(struct soap*, enum eml__LogarithmicPowerRatioPerLengthUom);
SOAP_FMAC3 enum eml__LogarithmicPowerRatioPerLengthUom * SOAP_FMAC4 soap_in_eml__LogarithmicPowerRatioPerLengthUom(struct soap*, const char*, enum eml__LogarithmicPowerRatioPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LogarithmicPowerRatioPerLengthUom(struct soap*, const char*, enum eml__LogarithmicPowerRatioPerLengthUom *);

inline enum eml__LogarithmicPowerRatioPerLengthUom * soap_new_eml__LogarithmicPowerRatioPerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LogarithmicPowerRatioPerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LogarithmicPowerRatioPerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LogarithmicPowerRatioPerLengthUom(struct soap*, const enum eml__LogarithmicPowerRatioPerLengthUom *, const char*, const char*);

inline int soap_write_eml__LogarithmicPowerRatioPerLengthUom(struct soap *soap, enum eml__LogarithmicPowerRatioPerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LogarithmicPowerRatioPerLengthUom(soap, p, "eml:LogarithmicPowerRatioPerLengthUom", "eml:LogarithmicPowerRatioPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LogarithmicPowerRatioPerLengthUom * SOAP_FMAC4 soap_get_eml__LogarithmicPowerRatioPerLengthUom(struct soap*, enum eml__LogarithmicPowerRatioPerLengthUom *, const char*, const char*);

inline int soap_read_eml__LogarithmicPowerRatioPerLengthUom(struct soap *soap, enum eml__LogarithmicPowerRatioPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LogarithmicPowerRatioPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerAmountOfSubstanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerAmountOfSubstanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AreaPerAmountOfSubstanceUom(struct soap*, enum eml__AreaPerAmountOfSubstanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerAmountOfSubstanceUom(struct soap*, const char*, int, const enum eml__AreaPerAmountOfSubstanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AreaPerAmountOfSubstanceUom2s(struct soap*, enum eml__AreaPerAmountOfSubstanceUom);
SOAP_FMAC3 enum eml__AreaPerAmountOfSubstanceUom * SOAP_FMAC4 soap_in_eml__AreaPerAmountOfSubstanceUom(struct soap*, const char*, enum eml__AreaPerAmountOfSubstanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AreaPerAmountOfSubstanceUom(struct soap*, const char*, enum eml__AreaPerAmountOfSubstanceUom *);

inline enum eml__AreaPerAmountOfSubstanceUom * soap_new_eml__AreaPerAmountOfSubstanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AreaPerAmountOfSubstanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AreaPerAmountOfSubstanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AreaPerAmountOfSubstanceUom(struct soap*, const enum eml__AreaPerAmountOfSubstanceUom *, const char*, const char*);

inline int soap_write_eml__AreaPerAmountOfSubstanceUom(struct soap *soap, enum eml__AreaPerAmountOfSubstanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AreaPerAmountOfSubstanceUom(soap, p, "eml:AreaPerAmountOfSubstanceUom", "eml:AreaPerAmountOfSubstanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AreaPerAmountOfSubstanceUom * SOAP_FMAC4 soap_get_eml__AreaPerAmountOfSubstanceUom(struct soap*, enum eml__AreaPerAmountOfSubstanceUom *, const char*, const char*);

inline int soap_read_eml__AreaPerAmountOfSubstanceUom(struct soap *soap, enum eml__AreaPerAmountOfSubstanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AreaPerAmountOfSubstanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalConductivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalConductivityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ThermalConductivityUom(struct soap*, enum eml__ThermalConductivityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalConductivityUom(struct soap*, const char*, int, const enum eml__ThermalConductivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ThermalConductivityUom2s(struct soap*, enum eml__ThermalConductivityUom);
SOAP_FMAC3 enum eml__ThermalConductivityUom * SOAP_FMAC4 soap_in_eml__ThermalConductivityUom(struct soap*, const char*, enum eml__ThermalConductivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ThermalConductivityUom(struct soap*, const char*, enum eml__ThermalConductivityUom *);

inline enum eml__ThermalConductivityUom * soap_new_eml__ThermalConductivityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ThermalConductivityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ThermalConductivityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ThermalConductivityUom(struct soap*, const enum eml__ThermalConductivityUom *, const char*, const char*);

inline int soap_write_eml__ThermalConductivityUom(struct soap *soap, enum eml__ThermalConductivityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ThermalConductivityUom(soap, p, "eml:ThermalConductivityUom", "eml:ThermalConductivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ThermalConductivityUom * SOAP_FMAC4 soap_get_eml__ThermalConductivityUom(struct soap*, enum eml__ThermalConductivityUom *, const char*, const char*);

inline int soap_read_eml__ThermalConductivityUom(struct soap *soap, enum eml__ThermalConductivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ThermalConductivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TimeUom(struct soap*, enum eml__TimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimeUom(struct soap*, const char*, int, const enum eml__TimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__TimeUom2s(struct soap*, enum eml__TimeUom);
SOAP_FMAC3 enum eml__TimeUom * SOAP_FMAC4 soap_in_eml__TimeUom(struct soap*, const char*, enum eml__TimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__TimeUom(struct soap*, const char*, enum eml__TimeUom *);

inline enum eml__TimeUom * soap_new_eml__TimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__TimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__TimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TimeUom(struct soap*, const enum eml__TimeUom *, const char*, const char*);

inline int soap_write_eml__TimeUom(struct soap *soap, enum eml__TimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TimeUom(soap, p, "eml:TimeUom", "eml:TimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__TimeUom * SOAP_FMAC4 soap_get_eml__TimeUom(struct soap*, enum eml__TimeUom *, const char*, const char*);

inline int soap_read_eml__TimeUom(struct soap *soap, enum eml__TimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AmountOfSubstancePerAreaUom(struct soap*, enum eml__AmountOfSubstancePerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerAreaUom(struct soap*, const char*, int, const enum eml__AmountOfSubstancePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AmountOfSubstancePerAreaUom2s(struct soap*, enum eml__AmountOfSubstancePerAreaUom);
SOAP_FMAC3 enum eml__AmountOfSubstancePerAreaUom * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerAreaUom(struct soap*, const char*, enum eml__AmountOfSubstancePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AmountOfSubstancePerAreaUom(struct soap*, const char*, enum eml__AmountOfSubstancePerAreaUom *);

inline enum eml__AmountOfSubstancePerAreaUom * soap_new_eml__AmountOfSubstancePerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AmountOfSubstancePerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AmountOfSubstancePerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AmountOfSubstancePerAreaUom(struct soap*, const enum eml__AmountOfSubstancePerAreaUom *, const char*, const char*);

inline int soap_write_eml__AmountOfSubstancePerAreaUom(struct soap *soap, enum eml__AmountOfSubstancePerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AmountOfSubstancePerAreaUom(soap, p, "eml:AmountOfSubstancePerAreaUom", "eml:AmountOfSubstancePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AmountOfSubstancePerAreaUom * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerAreaUom(struct soap*, enum eml__AmountOfSubstancePerAreaUom *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerAreaUom(struct soap *soap, enum eml__AmountOfSubstancePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricFieldStrengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricFieldStrengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricFieldStrengthUom(struct soap*, enum eml__ElectricFieldStrengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricFieldStrengthUom(struct soap*, const char*, int, const enum eml__ElectricFieldStrengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricFieldStrengthUom2s(struct soap*, enum eml__ElectricFieldStrengthUom);
SOAP_FMAC3 enum eml__ElectricFieldStrengthUom * SOAP_FMAC4 soap_in_eml__ElectricFieldStrengthUom(struct soap*, const char*, enum eml__ElectricFieldStrengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricFieldStrengthUom(struct soap*, const char*, enum eml__ElectricFieldStrengthUom *);

inline enum eml__ElectricFieldStrengthUom * soap_new_eml__ElectricFieldStrengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricFieldStrengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricFieldStrengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricFieldStrengthUom(struct soap*, const enum eml__ElectricFieldStrengthUom *, const char*, const char*);

inline int soap_write_eml__ElectricFieldStrengthUom(struct soap *soap, enum eml__ElectricFieldStrengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricFieldStrengthUom(soap, p, "eml:ElectricFieldStrengthUom", "eml:ElectricFieldStrengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricFieldStrengthUom * SOAP_FMAC4 soap_get_eml__ElectricFieldStrengthUom(struct soap*, enum eml__ElectricFieldStrengthUom *, const char*, const char*);

inline int soap_read_eml__ElectricFieldStrengthUom(struct soap *soap, enum eml__ElectricFieldStrengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricFieldStrengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ForceAreaUom(struct soap*, enum eml__ForceAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForceAreaUom(struct soap*, const char*, int, const enum eml__ForceAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ForceAreaUom2s(struct soap*, enum eml__ForceAreaUom);
SOAP_FMAC3 enum eml__ForceAreaUom * SOAP_FMAC4 soap_in_eml__ForceAreaUom(struct soap*, const char*, enum eml__ForceAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ForceAreaUom(struct soap*, const char*, enum eml__ForceAreaUom *);

inline enum eml__ForceAreaUom * soap_new_eml__ForceAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ForceAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ForceAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ForceAreaUom(struct soap*, const enum eml__ForceAreaUom *, const char*, const char*);

inline int soap_write_eml__ForceAreaUom(struct soap *soap, enum eml__ForceAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ForceAreaUom(soap, p, "eml:ForceAreaUom", "eml:ForceAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ForceAreaUom * SOAP_FMAC4 soap_get_eml__ForceAreaUom(struct soap*, enum eml__ForceAreaUom *, const char*, const char*);

inline int soap_read_eml__ForceAreaUom(struct soap *soap, enum eml__ForceAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ForceAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__SecondMomentOfAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__SecondMomentOfAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__SecondMomentOfAreaUom(struct soap*, enum eml__SecondMomentOfAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__SecondMomentOfAreaUom(struct soap*, const char*, int, const enum eml__SecondMomentOfAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__SecondMomentOfAreaUom2s(struct soap*, enum eml__SecondMomentOfAreaUom);
SOAP_FMAC3 enum eml__SecondMomentOfAreaUom * SOAP_FMAC4 soap_in_eml__SecondMomentOfAreaUom(struct soap*, const char*, enum eml__SecondMomentOfAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__SecondMomentOfAreaUom(struct soap*, const char*, enum eml__SecondMomentOfAreaUom *);

inline enum eml__SecondMomentOfAreaUom * soap_new_eml__SecondMomentOfAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__SecondMomentOfAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__SecondMomentOfAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__SecondMomentOfAreaUom(struct soap*, const enum eml__SecondMomentOfAreaUom *, const char*, const char*);

inline int soap_write_eml__SecondMomentOfAreaUom(struct soap *soap, enum eml__SecondMomentOfAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__SecondMomentOfAreaUom(soap, p, "eml:SecondMomentOfAreaUom", "eml:SecondMomentOfAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__SecondMomentOfAreaUom * SOAP_FMAC4 soap_get_eml__SecondMomentOfAreaUom(struct soap*, enum eml__SecondMomentOfAreaUom *, const char*, const char*);

inline int soap_read_eml__SecondMomentOfAreaUom(struct soap *soap, enum eml__SecondMomentOfAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__SecondMomentOfAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PermeabilityRockUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PermeabilityRockUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PermeabilityRockUom(struct soap*, enum eml__PermeabilityRockUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PermeabilityRockUom(struct soap*, const char*, int, const enum eml__PermeabilityRockUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PermeabilityRockUom2s(struct soap*, enum eml__PermeabilityRockUom);
SOAP_FMAC3 enum eml__PermeabilityRockUom * SOAP_FMAC4 soap_in_eml__PermeabilityRockUom(struct soap*, const char*, enum eml__PermeabilityRockUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PermeabilityRockUom(struct soap*, const char*, enum eml__PermeabilityRockUom *);

inline enum eml__PermeabilityRockUom * soap_new_eml__PermeabilityRockUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PermeabilityRockUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PermeabilityRockUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PermeabilityRockUom(struct soap*, const enum eml__PermeabilityRockUom *, const char*, const char*);

inline int soap_write_eml__PermeabilityRockUom(struct soap *soap, enum eml__PermeabilityRockUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PermeabilityRockUom(soap, p, "eml:PermeabilityRockUom", "eml:PermeabilityRockUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PermeabilityRockUom * SOAP_FMAC4 soap_get_eml__PermeabilityRockUom(struct soap*, enum eml__PermeabilityRockUom *, const char*, const char*);

inline int soap_read_eml__PermeabilityRockUom(struct soap *soap, enum eml__PermeabilityRockUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PermeabilityRockUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimeLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimeLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerTimeLengthUom(struct soap*, enum eml__VolumePerTimeLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimeLengthUom(struct soap*, const char*, int, const enum eml__VolumePerTimeLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerTimeLengthUom2s(struct soap*, enum eml__VolumePerTimeLengthUom);
SOAP_FMAC3 enum eml__VolumePerTimeLengthUom * SOAP_FMAC4 soap_in_eml__VolumePerTimeLengthUom(struct soap*, const char*, enum eml__VolumePerTimeLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerTimeLengthUom(struct soap*, const char*, enum eml__VolumePerTimeLengthUom *);

inline enum eml__VolumePerTimeLengthUom * soap_new_eml__VolumePerTimeLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerTimeLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerTimeLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerTimeLengthUom(struct soap*, const enum eml__VolumePerTimeLengthUom *, const char*, const char*);

inline int soap_write_eml__VolumePerTimeLengthUom(struct soap *soap, enum eml__VolumePerTimeLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerTimeLengthUom(soap, p, "eml:VolumePerTimeLengthUom", "eml:VolumePerTimeLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerTimeLengthUom * SOAP_FMAC4 soap_get_eml__VolumePerTimeLengthUom(struct soap*, enum eml__VolumePerTimeLengthUom *, const char*, const char*);

inline int soap_read_eml__VolumePerTimeLengthUom(struct soap *soap, enum eml__VolumePerTimeLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimeLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalDiffusivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalDiffusivityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ThermalDiffusivityUom(struct soap*, enum eml__ThermalDiffusivityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalDiffusivityUom(struct soap*, const char*, int, const enum eml__ThermalDiffusivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ThermalDiffusivityUom2s(struct soap*, enum eml__ThermalDiffusivityUom);
SOAP_FMAC3 enum eml__ThermalDiffusivityUom * SOAP_FMAC4 soap_in_eml__ThermalDiffusivityUom(struct soap*, const char*, enum eml__ThermalDiffusivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ThermalDiffusivityUom(struct soap*, const char*, enum eml__ThermalDiffusivityUom *);

inline enum eml__ThermalDiffusivityUom * soap_new_eml__ThermalDiffusivityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ThermalDiffusivityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ThermalDiffusivityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ThermalDiffusivityUom(struct soap*, const enum eml__ThermalDiffusivityUom *, const char*, const char*);

inline int soap_write_eml__ThermalDiffusivityUom(struct soap *soap, enum eml__ThermalDiffusivityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ThermalDiffusivityUom(soap, p, "eml:ThermalDiffusivityUom", "eml:ThermalDiffusivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ThermalDiffusivityUom * SOAP_FMAC4 soap_get_eml__ThermalDiffusivityUom(struct soap*, enum eml__ThermalDiffusivityUom *, const char*, const char*);

inline int soap_read_eml__ThermalDiffusivityUom(struct soap *soap, enum eml__ThermalDiffusivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ThermalDiffusivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalMassTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalMassTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReciprocalMassTimeUom(struct soap*, enum eml__ReciprocalMassTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalMassTimeUom(struct soap*, const char*, int, const enum eml__ReciprocalMassTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReciprocalMassTimeUom2s(struct soap*, enum eml__ReciprocalMassTimeUom);
SOAP_FMAC3 enum eml__ReciprocalMassTimeUom * SOAP_FMAC4 soap_in_eml__ReciprocalMassTimeUom(struct soap*, const char*, enum eml__ReciprocalMassTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReciprocalMassTimeUom(struct soap*, const char*, enum eml__ReciprocalMassTimeUom *);

inline enum eml__ReciprocalMassTimeUom * soap_new_eml__ReciprocalMassTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReciprocalMassTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReciprocalMassTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReciprocalMassTimeUom(struct soap*, const enum eml__ReciprocalMassTimeUom *, const char*, const char*);

inline int soap_write_eml__ReciprocalMassTimeUom(struct soap *soap, enum eml__ReciprocalMassTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReciprocalMassTimeUom(soap, p, "eml:ReciprocalMassTimeUom", "eml:ReciprocalMassTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReciprocalMassTimeUom * SOAP_FMAC4 soap_get_eml__ReciprocalMassTimeUom(struct soap*, enum eml__ReciprocalMassTimeUom *, const char*, const char*);

inline int soap_read_eml__ReciprocalMassTimeUom(struct soap *soap, enum eml__ReciprocalMassTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReciprocalMassTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AngularAccelerationUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AngularAccelerationUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AngularAccelerationUom(struct soap*, enum eml__AngularAccelerationUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AngularAccelerationUom(struct soap*, const char*, int, const enum eml__AngularAccelerationUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AngularAccelerationUom2s(struct soap*, enum eml__AngularAccelerationUom);
SOAP_FMAC3 enum eml__AngularAccelerationUom * SOAP_FMAC4 soap_in_eml__AngularAccelerationUom(struct soap*, const char*, enum eml__AngularAccelerationUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AngularAccelerationUom(struct soap*, const char*, enum eml__AngularAccelerationUom *);

inline enum eml__AngularAccelerationUom * soap_new_eml__AngularAccelerationUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AngularAccelerationUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AngularAccelerationUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AngularAccelerationUom(struct soap*, const enum eml__AngularAccelerationUom *, const char*, const char*);

inline int soap_write_eml__AngularAccelerationUom(struct soap *soap, enum eml__AngularAccelerationUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AngularAccelerationUom(soap, p, "eml:AngularAccelerationUom", "eml:AngularAccelerationUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AngularAccelerationUom * SOAP_FMAC4 soap_get_eml__AngularAccelerationUom(struct soap*, enum eml__AngularAccelerationUom *, const char*, const char*);

inline int soap_read_eml__AngularAccelerationUom(struct soap *soap, enum eml__AngularAccelerationUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AngularAccelerationUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureSquaredUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureSquaredUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PressureSquaredUom(struct soap*, enum eml__PressureSquaredUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressureSquaredUom(struct soap*, const char*, int, const enum eml__PressureSquaredUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PressureSquaredUom2s(struct soap*, enum eml__PressureSquaredUom);
SOAP_FMAC3 enum eml__PressureSquaredUom * SOAP_FMAC4 soap_in_eml__PressureSquaredUom(struct soap*, const char*, enum eml__PressureSquaredUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PressureSquaredUom(struct soap*, const char*, enum eml__PressureSquaredUom *);

inline enum eml__PressureSquaredUom * soap_new_eml__PressureSquaredUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PressureSquaredUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PressureSquaredUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PressureSquaredUom(struct soap*, const enum eml__PressureSquaredUom *, const char*, const char*);

inline int soap_write_eml__PressureSquaredUom(struct soap *soap, enum eml__PressureSquaredUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PressureSquaredUom(soap, p, "eml:PressureSquaredUom", "eml:PressureSquaredUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PressureSquaredUom * SOAP_FMAC4 soap_get_eml__PressureSquaredUom(struct soap*, enum eml__PressureSquaredUom *, const char*, const char*);

inline int soap_read_eml__PressureSquaredUom(struct soap *soap, enum eml__PressureSquaredUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PressureSquaredUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricCurrentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricCurrentUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricCurrentUom(struct soap*, enum eml__ElectricCurrentUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricCurrentUom(struct soap*, const char*, int, const enum eml__ElectricCurrentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricCurrentUom2s(struct soap*, enum eml__ElectricCurrentUom);
SOAP_FMAC3 enum eml__ElectricCurrentUom * SOAP_FMAC4 soap_in_eml__ElectricCurrentUom(struct soap*, const char*, enum eml__ElectricCurrentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricCurrentUom(struct soap*, const char*, enum eml__ElectricCurrentUom *);

inline enum eml__ElectricCurrentUom * soap_new_eml__ElectricCurrentUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricCurrentUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricCurrentUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricCurrentUom(struct soap*, const enum eml__ElectricCurrentUom *, const char*, const char*);

inline int soap_write_eml__ElectricCurrentUom(struct soap *soap, enum eml__ElectricCurrentUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricCurrentUom(soap, p, "eml:ElectricCurrentUom", "eml:ElectricCurrentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricCurrentUom * SOAP_FMAC4 soap_get_eml__ElectricCurrentUom(struct soap*, enum eml__ElectricCurrentUom *, const char*, const char*);

inline int soap_read_eml__ElectricCurrentUom(struct soap *soap, enum eml__ElectricCurrentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricCurrentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__EnergyPerLengthUom(struct soap*, enum eml__EnergyPerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerLengthUom(struct soap*, const char*, int, const enum eml__EnergyPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__EnergyPerLengthUom2s(struct soap*, enum eml__EnergyPerLengthUom);
SOAP_FMAC3 enum eml__EnergyPerLengthUom * SOAP_FMAC4 soap_in_eml__EnergyPerLengthUom(struct soap*, const char*, enum eml__EnergyPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__EnergyPerLengthUom(struct soap*, const char*, enum eml__EnergyPerLengthUom *);

inline enum eml__EnergyPerLengthUom * soap_new_eml__EnergyPerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__EnergyPerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__EnergyPerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__EnergyPerLengthUom(struct soap*, const enum eml__EnergyPerLengthUom *, const char*, const char*);

inline int soap_write_eml__EnergyPerLengthUom(struct soap *soap, enum eml__EnergyPerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__EnergyPerLengthUom(soap, p, "eml:EnergyPerLengthUom", "eml:EnergyPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__EnergyPerLengthUom * SOAP_FMAC4 soap_get_eml__EnergyPerLengthUom(struct soap*, enum eml__EnergyPerLengthUom *, const char*, const char*);

inline int soap_read_eml__EnergyPerLengthUom(struct soap *soap, enum eml__EnergyPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__EnergyPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__SignalingEventPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__SignalingEventPerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__SignalingEventPerTimeUom(struct soap*, enum eml__SignalingEventPerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__SignalingEventPerTimeUom(struct soap*, const char*, int, const enum eml__SignalingEventPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__SignalingEventPerTimeUom2s(struct soap*, enum eml__SignalingEventPerTimeUom);
SOAP_FMAC3 enum eml__SignalingEventPerTimeUom * SOAP_FMAC4 soap_in_eml__SignalingEventPerTimeUom(struct soap*, const char*, enum eml__SignalingEventPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__SignalingEventPerTimeUom(struct soap*, const char*, enum eml__SignalingEventPerTimeUom *);

inline enum eml__SignalingEventPerTimeUom * soap_new_eml__SignalingEventPerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__SignalingEventPerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__SignalingEventPerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__SignalingEventPerTimeUom(struct soap*, const enum eml__SignalingEventPerTimeUom *, const char*, const char*);

inline int soap_write_eml__SignalingEventPerTimeUom(struct soap *soap, enum eml__SignalingEventPerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__SignalingEventPerTimeUom(soap, p, "eml:SignalingEventPerTimeUom", "eml:SignalingEventPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__SignalingEventPerTimeUom * SOAP_FMAC4 soap_get_eml__SignalingEventPerTimeUom(struct soap*, enum eml__SignalingEventPerTimeUom *, const char*, const char*);

inline int soap_read_eml__SignalingEventPerTimeUom(struct soap *soap, enum eml__SignalingEventPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__SignalingEventPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PlaneAngleUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PlaneAngleUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__PlaneAngleUom(struct soap*, enum eml__PlaneAngleUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PlaneAngleUom(struct soap*, const char*, int, const enum eml__PlaneAngleUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__PlaneAngleUom2s(struct soap*, enum eml__PlaneAngleUom);
SOAP_FMAC3 enum eml__PlaneAngleUom * SOAP_FMAC4 soap_in_eml__PlaneAngleUom(struct soap*, const char*, enum eml__PlaneAngleUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__PlaneAngleUom(struct soap*, const char*, enum eml__PlaneAngleUom *);

inline enum eml__PlaneAngleUom * soap_new_eml__PlaneAngleUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__PlaneAngleUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__PlaneAngleUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__PlaneAngleUom(struct soap*, const enum eml__PlaneAngleUom *, const char*, const char*);

inline int soap_write_eml__PlaneAngleUom(struct soap *soap, enum eml__PlaneAngleUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__PlaneAngleUom(soap, p, "eml:PlaneAngleUom", "eml:PlaneAngleUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__PlaneAngleUom * SOAP_FMAC4 soap_get_eml__PlaneAngleUom(struct soap*, enum eml__PlaneAngleUom *, const char*, const char*);

inline int soap_read_eml__PlaneAngleUom(struct soap *soap, enum eml__PlaneAngleUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__PlaneAngleUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxDensityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxDensityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MagneticFluxDensityUom(struct soap*, enum eml__MagneticFluxDensityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticFluxDensityUom(struct soap*, const char*, int, const enum eml__MagneticFluxDensityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MagneticFluxDensityUom2s(struct soap*, enum eml__MagneticFluxDensityUom);
SOAP_FMAC3 enum eml__MagneticFluxDensityUom * SOAP_FMAC4 soap_in_eml__MagneticFluxDensityUom(struct soap*, const char*, enum eml__MagneticFluxDensityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MagneticFluxDensityUom(struct soap*, const char*, enum eml__MagneticFluxDensityUom *);

inline enum eml__MagneticFluxDensityUom * soap_new_eml__MagneticFluxDensityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MagneticFluxDensityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MagneticFluxDensityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MagneticFluxDensityUom(struct soap*, const enum eml__MagneticFluxDensityUom *, const char*, const char*);

inline int soap_write_eml__MagneticFluxDensityUom(struct soap *soap, enum eml__MagneticFluxDensityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MagneticFluxDensityUom(soap, p, "eml:MagneticFluxDensityUom", "eml:MagneticFluxDensityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MagneticFluxDensityUom * SOAP_FMAC4 soap_get_eml__MagneticFluxDensityUom(struct soap*, enum eml__MagneticFluxDensityUom *, const char*, const char*);

inline int soap_read_eml__MagneticFluxDensityUom(struct soap *soap, enum eml__MagneticFluxDensityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MagneticFluxDensityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassPerTimePerLengthUom(struct soap*, enum eml__MassPerTimePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerTimePerLengthUom(struct soap*, const char*, int, const enum eml__MassPerTimePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassPerTimePerLengthUom2s(struct soap*, enum eml__MassPerTimePerLengthUom);
SOAP_FMAC3 enum eml__MassPerTimePerLengthUom * SOAP_FMAC4 soap_in_eml__MassPerTimePerLengthUom(struct soap*, const char*, enum eml__MassPerTimePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassPerTimePerLengthUom(struct soap*, const char*, enum eml__MassPerTimePerLengthUom *);

inline enum eml__MassPerTimePerLengthUom * soap_new_eml__MassPerTimePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassPerTimePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassPerTimePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassPerTimePerLengthUom(struct soap*, const enum eml__MassPerTimePerLengthUom *, const char*, const char*);

inline int soap_write_eml__MassPerTimePerLengthUom(struct soap *soap, enum eml__MassPerTimePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassPerTimePerLengthUom(soap, p, "eml:MassPerTimePerLengthUom", "eml:MassPerTimePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassPerTimePerLengthUom * SOAP_FMAC4 soap_get_eml__MassPerTimePerLengthUom(struct soap*, enum eml__MassPerTimePerLengthUom *, const char*, const char*);

inline int soap_read_eml__MassPerTimePerLengthUom(struct soap *soap, enum eml__MassPerTimePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassPerTimePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricChargePerAreaUom(struct soap*, enum eml__ElectricChargePerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricChargePerAreaUom(struct soap*, const char*, int, const enum eml__ElectricChargePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricChargePerAreaUom2s(struct soap*, enum eml__ElectricChargePerAreaUom);
SOAP_FMAC3 enum eml__ElectricChargePerAreaUom * SOAP_FMAC4 soap_in_eml__ElectricChargePerAreaUom(struct soap*, const char*, enum eml__ElectricChargePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricChargePerAreaUom(struct soap*, const char*, enum eml__ElectricChargePerAreaUom *);

inline enum eml__ElectricChargePerAreaUom * soap_new_eml__ElectricChargePerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricChargePerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricChargePerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricChargePerAreaUom(struct soap*, const enum eml__ElectricChargePerAreaUom *, const char*, const char*);

inline int soap_write_eml__ElectricChargePerAreaUom(struct soap *soap, enum eml__ElectricChargePerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricChargePerAreaUom(soap, p, "eml:ElectricChargePerAreaUom", "eml:ElectricChargePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricChargePerAreaUom * SOAP_FMAC4 soap_get_eml__ElectricChargePerAreaUom(struct soap*, enum eml__ElectricChargePerAreaUom *, const char*, const char*);

inline int soap_read_eml__ElectricChargePerAreaUom(struct soap *soap, enum eml__ElectricChargePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricChargePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerPressureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerPressureUom(struct soap*, enum eml__VolumePerPressureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerPressureUom(struct soap*, const char*, int, const enum eml__VolumePerPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerPressureUom2s(struct soap*, enum eml__VolumePerPressureUom);
SOAP_FMAC3 enum eml__VolumePerPressureUom * SOAP_FMAC4 soap_in_eml__VolumePerPressureUom(struct soap*, const char*, enum eml__VolumePerPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerPressureUom(struct soap*, const char*, enum eml__VolumePerPressureUom *);

inline enum eml__VolumePerPressureUom * soap_new_eml__VolumePerPressureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerPressureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerPressureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerPressureUom(struct soap*, const enum eml__VolumePerPressureUom *, const char*, const char*);

inline int soap_write_eml__VolumePerPressureUom(struct soap *soap, enum eml__VolumePerPressureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerPressureUom(soap, p, "eml:VolumePerPressureUom", "eml:VolumePerPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerPressureUom * SOAP_FMAC4 soap_get_eml__VolumePerPressureUom(struct soap*, enum eml__VolumePerPressureUom *, const char*, const char*);

inline int soap_read_eml__VolumePerPressureUom(struct soap *soap, enum eml__VolumePerPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TimePerLengthUom(struct soap*, enum eml__TimePerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimePerLengthUom(struct soap*, const char*, int, const enum eml__TimePerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__TimePerLengthUom2s(struct soap*, enum eml__TimePerLengthUom);
SOAP_FMAC3 enum eml__TimePerLengthUom * SOAP_FMAC4 soap_in_eml__TimePerLengthUom(struct soap*, const char*, enum eml__TimePerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__TimePerLengthUom(struct soap*, const char*, enum eml__TimePerLengthUom *);

inline enum eml__TimePerLengthUom * soap_new_eml__TimePerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__TimePerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__TimePerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TimePerLengthUom(struct soap*, const enum eml__TimePerLengthUom *, const char*, const char*);

inline int soap_write_eml__TimePerLengthUom(struct soap *soap, enum eml__TimePerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TimePerLengthUom(soap, p, "eml:TimePerLengthUom", "eml:TimePerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__TimePerLengthUom * SOAP_FMAC4 soap_get_eml__TimePerLengthUom(struct soap*, enum eml__TimePerLengthUom *, const char*, const char*);

inline int soap_read_eml__TimePerLengthUom(struct soap *soap, enum eml__TimePerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TimePerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalElectricPotentialDifferenceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalElectricPotentialDifferenceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReciprocalElectricPotentialDifferenceUom(struct soap*, enum eml__ReciprocalElectricPotentialDifferenceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalElectricPotentialDifferenceUom(struct soap*, const char*, int, const enum eml__ReciprocalElectricPotentialDifferenceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReciprocalElectricPotentialDifferenceUom2s(struct soap*, enum eml__ReciprocalElectricPotentialDifferenceUom);
SOAP_FMAC3 enum eml__ReciprocalElectricPotentialDifferenceUom * SOAP_FMAC4 soap_in_eml__ReciprocalElectricPotentialDifferenceUom(struct soap*, const char*, enum eml__ReciprocalElectricPotentialDifferenceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReciprocalElectricPotentialDifferenceUom(struct soap*, const char*, enum eml__ReciprocalElectricPotentialDifferenceUom *);

inline enum eml__ReciprocalElectricPotentialDifferenceUom * soap_new_eml__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReciprocalElectricPotentialDifferenceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReciprocalElectricPotentialDifferenceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReciprocalElectricPotentialDifferenceUom(struct soap*, const enum eml__ReciprocalElectricPotentialDifferenceUom *, const char*, const char*);

inline int soap_write_eml__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, enum eml__ReciprocalElectricPotentialDifferenceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReciprocalElectricPotentialDifferenceUom(soap, p, "eml:ReciprocalElectricPotentialDifferenceUom", "eml:ReciprocalElectricPotentialDifferenceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReciprocalElectricPotentialDifferenceUom * SOAP_FMAC4 soap_get_eml__ReciprocalElectricPotentialDifferenceUom(struct soap*, enum eml__ReciprocalElectricPotentialDifferenceUom *, const char*, const char*);

inline int soap_read_eml__ReciprocalElectricPotentialDifferenceUom(struct soap *soap, enum eml__ReciprocalElectricPotentialDifferenceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReciprocalElectricPotentialDifferenceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerAreaUom(struct soap*, enum eml__VolumePerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerAreaUom(struct soap*, const char*, int, const enum eml__VolumePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerAreaUom2s(struct soap*, enum eml__VolumePerAreaUom);
SOAP_FMAC3 enum eml__VolumePerAreaUom * SOAP_FMAC4 soap_in_eml__VolumePerAreaUom(struct soap*, const char*, enum eml__VolumePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerAreaUom(struct soap*, const char*, enum eml__VolumePerAreaUom *);

inline enum eml__VolumePerAreaUom * soap_new_eml__VolumePerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerAreaUom(struct soap*, const enum eml__VolumePerAreaUom *, const char*, const char*);

inline int soap_write_eml__VolumePerAreaUom(struct soap *soap, enum eml__VolumePerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerAreaUom(soap, p, "eml:VolumePerAreaUom", "eml:VolumePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerAreaUom * SOAP_FMAC4 soap_get_eml__VolumePerAreaUom(struct soap*, enum eml__VolumePerAreaUom *, const char*, const char*);

inline int soap_read_eml__VolumePerAreaUom(struct soap *soap, enum eml__VolumePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ForceUom(struct soap*, enum eml__ForceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForceUom(struct soap*, const char*, int, const enum eml__ForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ForceUom2s(struct soap*, enum eml__ForceUom);
SOAP_FMAC3 enum eml__ForceUom * SOAP_FMAC4 soap_in_eml__ForceUom(struct soap*, const char*, enum eml__ForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ForceUom(struct soap*, const char*, enum eml__ForceUom *);

inline enum eml__ForceUom * soap_new_eml__ForceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ForceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ForceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ForceUom(struct soap*, const enum eml__ForceUom *, const char*, const char*);

inline int soap_write_eml__ForceUom(struct soap *soap, enum eml__ForceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ForceUom(soap, p, "eml:ForceUom", "eml:ForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ForceUom * SOAP_FMAC4 soap_get_eml__ForceUom(struct soap*, enum eml__ForceUom *, const char*, const char*);

inline int soap_read_eml__ForceUom(struct soap *soap, enum eml__ForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricCurrentDensityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricCurrentDensityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricCurrentDensityUom(struct soap*, enum eml__ElectricCurrentDensityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricCurrentDensityUom(struct soap*, const char*, int, const enum eml__ElectricCurrentDensityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricCurrentDensityUom2s(struct soap*, enum eml__ElectricCurrentDensityUom);
SOAP_FMAC3 enum eml__ElectricCurrentDensityUom * SOAP_FMAC4 soap_in_eml__ElectricCurrentDensityUom(struct soap*, const char*, enum eml__ElectricCurrentDensityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricCurrentDensityUom(struct soap*, const char*, enum eml__ElectricCurrentDensityUom *);

inline enum eml__ElectricCurrentDensityUom * soap_new_eml__ElectricCurrentDensityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricCurrentDensityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricCurrentDensityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricCurrentDensityUom(struct soap*, const enum eml__ElectricCurrentDensityUom *, const char*, const char*);

inline int soap_write_eml__ElectricCurrentDensityUom(struct soap *soap, enum eml__ElectricCurrentDensityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricCurrentDensityUom(soap, p, "eml:ElectricCurrentDensityUom", "eml:ElectricCurrentDensityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricCurrentDensityUom * SOAP_FMAC4 soap_get_eml__ElectricCurrentDensityUom(struct soap*, enum eml__ElectricCurrentDensityUom *, const char*, const char*);

inline int soap_read_eml__ElectricCurrentDensityUom(struct soap *soap, enum eml__ElectricCurrentDensityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricCurrentDensityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumetricThermalExpansionUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumetricThermalExpansionUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumetricThermalExpansionUom(struct soap*, enum eml__VolumetricThermalExpansionUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumetricThermalExpansionUom(struct soap*, const char*, int, const enum eml__VolumetricThermalExpansionUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumetricThermalExpansionUom2s(struct soap*, enum eml__VolumetricThermalExpansionUom);
SOAP_FMAC3 enum eml__VolumetricThermalExpansionUom * SOAP_FMAC4 soap_in_eml__VolumetricThermalExpansionUom(struct soap*, const char*, enum eml__VolumetricThermalExpansionUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumetricThermalExpansionUom(struct soap*, const char*, enum eml__VolumetricThermalExpansionUom *);

inline enum eml__VolumetricThermalExpansionUom * soap_new_eml__VolumetricThermalExpansionUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumetricThermalExpansionUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumetricThermalExpansionUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumetricThermalExpansionUom(struct soap*, const enum eml__VolumetricThermalExpansionUom *, const char*, const char*);

inline int soap_write_eml__VolumetricThermalExpansionUom(struct soap *soap, enum eml__VolumetricThermalExpansionUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumetricThermalExpansionUom(soap, p, "eml:VolumetricThermalExpansionUom", "eml:VolumetricThermalExpansionUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumetricThermalExpansionUom * SOAP_FMAC4 soap_get_eml__VolumetricThermalExpansionUom(struct soap*, enum eml__VolumetricThermalExpansionUom *, const char*, const char*);

inline int soap_read_eml__VolumetricThermalExpansionUom(struct soap *soap, enum eml__VolumetricThermalExpansionUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumetricThermalExpansionUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__APIGammaRayUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__APIGammaRayUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__APIGammaRayUom(struct soap*, enum eml__APIGammaRayUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__APIGammaRayUom(struct soap*, const char*, int, const enum eml__APIGammaRayUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__APIGammaRayUom2s(struct soap*, enum eml__APIGammaRayUom);
SOAP_FMAC3 enum eml__APIGammaRayUom * SOAP_FMAC4 soap_in_eml__APIGammaRayUom(struct soap*, const char*, enum eml__APIGammaRayUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__APIGammaRayUom(struct soap*, const char*, enum eml__APIGammaRayUom *);

inline enum eml__APIGammaRayUom * soap_new_eml__APIGammaRayUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__APIGammaRayUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__APIGammaRayUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__APIGammaRayUom(struct soap*, const enum eml__APIGammaRayUom *, const char*, const char*);

inline int soap_write_eml__APIGammaRayUom(struct soap *soap, enum eml__APIGammaRayUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__APIGammaRayUom(soap, p, "eml:APIGammaRayUom", "eml:APIGammaRayUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__APIGammaRayUom * SOAP_FMAC4 soap_get_eml__APIGammaRayUom(struct soap*, enum eml__APIGammaRayUom *, const char*, const char*);

inline int soap_read_eml__APIGammaRayUom(struct soap *soap, enum eml__APIGammaRayUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__APIGammaRayUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AreaUom(struct soap*, enum eml__AreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaUom(struct soap*, const char*, int, const enum eml__AreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AreaUom2s(struct soap*, enum eml__AreaUom);
SOAP_FMAC3 enum eml__AreaUom * SOAP_FMAC4 soap_in_eml__AreaUom(struct soap*, const char*, enum eml__AreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AreaUom(struct soap*, const char*, enum eml__AreaUom *);

inline enum eml__AreaUom * soap_new_eml__AreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AreaUom(struct soap*, const enum eml__AreaUom *, const char*, const char*);

inline int soap_write_eml__AreaUom(struct soap *soap, enum eml__AreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AreaUom(soap, p, "eml:AreaUom", "eml:AreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AreaUom * SOAP_FMAC4 soap_get_eml__AreaUom(struct soap*, enum eml__AreaUom *, const char*, const char*);

inline int soap_read_eml__AreaUom(struct soap *soap, enum eml__AreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LengthPerLengthUom(struct soap*, enum eml__LengthPerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerLengthUom(struct soap*, const char*, int, const enum eml__LengthPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LengthPerLengthUom2s(struct soap*, enum eml__LengthPerLengthUom);
SOAP_FMAC3 enum eml__LengthPerLengthUom * SOAP_FMAC4 soap_in_eml__LengthPerLengthUom(struct soap*, const char*, enum eml__LengthPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LengthPerLengthUom(struct soap*, const char*, enum eml__LengthPerLengthUom *);

inline enum eml__LengthPerLengthUom * soap_new_eml__LengthPerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LengthPerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LengthPerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LengthPerLengthUom(struct soap*, const enum eml__LengthPerLengthUom *, const char*, const char*);

inline int soap_write_eml__LengthPerLengthUom(struct soap *soap, enum eml__LengthPerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LengthPerLengthUom(soap, p, "eml:LengthPerLengthUom", "eml:LengthPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LengthPerLengthUom * SOAP_FMAC4 soap_get_eml__LengthPerLengthUom(struct soap*, enum eml__LengthPerLengthUom *, const char*, const char*);

inline int soap_read_eml__LengthPerLengthUom(struct soap *soap, enum eml__LengthPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LengthPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerPressureUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerPressureUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TemperatureIntervalPerPressureUom(struct soap*, enum eml__TemperatureIntervalPerPressureUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TemperatureIntervalPerPressureUom(struct soap*, const char*, int, const enum eml__TemperatureIntervalPerPressureUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__TemperatureIntervalPerPressureUom2s(struct soap*, enum eml__TemperatureIntervalPerPressureUom);
SOAP_FMAC3 enum eml__TemperatureIntervalPerPressureUom * SOAP_FMAC4 soap_in_eml__TemperatureIntervalPerPressureUom(struct soap*, const char*, enum eml__TemperatureIntervalPerPressureUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__TemperatureIntervalPerPressureUom(struct soap*, const char*, enum eml__TemperatureIntervalPerPressureUom *);

inline enum eml__TemperatureIntervalPerPressureUom * soap_new_eml__TemperatureIntervalPerPressureUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__TemperatureIntervalPerPressureUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__TemperatureIntervalPerPressureUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TemperatureIntervalPerPressureUom(struct soap*, const enum eml__TemperatureIntervalPerPressureUom *, const char*, const char*);

inline int soap_write_eml__TemperatureIntervalPerPressureUom(struct soap *soap, enum eml__TemperatureIntervalPerPressureUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TemperatureIntervalPerPressureUom(soap, p, "eml:TemperatureIntervalPerPressureUom", "eml:TemperatureIntervalPerPressureUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__TemperatureIntervalPerPressureUom * SOAP_FMAC4 soap_get_eml__TemperatureIntervalPerPressureUom(struct soap*, enum eml__TemperatureIntervalPerPressureUom *, const char*, const char*);

inline int soap_read_eml__TemperatureIntervalPerPressureUom(struct soap *soap, enum eml__TemperatureIntervalPerPressureUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TemperatureIntervalPerPressureUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ReciprocalTimeUom(struct soap*, enum eml__ReciprocalTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalTimeUom(struct soap*, const char*, int, const enum eml__ReciprocalTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ReciprocalTimeUom2s(struct soap*, enum eml__ReciprocalTimeUom);
SOAP_FMAC3 enum eml__ReciprocalTimeUom * SOAP_FMAC4 soap_in_eml__ReciprocalTimeUom(struct soap*, const char*, enum eml__ReciprocalTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ReciprocalTimeUom(struct soap*, const char*, enum eml__ReciprocalTimeUom *);

inline enum eml__ReciprocalTimeUom * soap_new_eml__ReciprocalTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ReciprocalTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ReciprocalTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ReciprocalTimeUom(struct soap*, const enum eml__ReciprocalTimeUom *, const char*, const char*);

inline int soap_write_eml__ReciprocalTimeUom(struct soap *soap, enum eml__ReciprocalTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ReciprocalTimeUom(soap, p, "eml:ReciprocalTimeUom", "eml:ReciprocalTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ReciprocalTimeUom * SOAP_FMAC4 soap_get_eml__ReciprocalTimeUom(struct soap*, enum eml__ReciprocalTimeUom *, const char*, const char*);

inline int soap_read_eml__ReciprocalTimeUom(struct soap *soap, enum eml__ReciprocalTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ReciprocalTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__APINeutronUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__APINeutronUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__APINeutronUom(struct soap*, enum eml__APINeutronUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__APINeutronUom(struct soap*, const char*, int, const enum eml__APINeutronUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__APINeutronUom2s(struct soap*, enum eml__APINeutronUom);
SOAP_FMAC3 enum eml__APINeutronUom * SOAP_FMAC4 soap_in_eml__APINeutronUom(struct soap*, const char*, enum eml__APINeutronUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__APINeutronUom(struct soap*, const char*, enum eml__APINeutronUom *);

inline enum eml__APINeutronUom * soap_new_eml__APINeutronUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__APINeutronUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__APINeutronUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__APINeutronUom(struct soap*, const enum eml__APINeutronUom *, const char*, const char*);

inline int soap_write_eml__APINeutronUom(struct soap *soap, enum eml__APINeutronUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__APINeutronUom(soap, p, "eml:APINeutronUom", "eml:APINeutronUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__APINeutronUom * SOAP_FMAC4 soap_get_eml__APINeutronUom(struct soap*, enum eml__APINeutronUom *, const char*, const char*);

inline int soap_read_eml__APINeutronUom(struct soap *soap, enum eml__APINeutronUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__APINeutronUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DipoleMomentUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DipoleMomentUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__DipoleMomentUom(struct soap*, enum eml__DipoleMomentUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DipoleMomentUom(struct soap*, const char*, int, const enum eml__DipoleMomentUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__DipoleMomentUom2s(struct soap*, enum eml__DipoleMomentUom);
SOAP_FMAC3 enum eml__DipoleMomentUom * SOAP_FMAC4 soap_in_eml__DipoleMomentUom(struct soap*, const char*, enum eml__DipoleMomentUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__DipoleMomentUom(struct soap*, const char*, enum eml__DipoleMomentUom *);

inline enum eml__DipoleMomentUom * soap_new_eml__DipoleMomentUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__DipoleMomentUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__DipoleMomentUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__DipoleMomentUom(struct soap*, const enum eml__DipoleMomentUom *, const char*, const char*);

inline int soap_write_eml__DipoleMomentUom(struct soap *soap, enum eml__DipoleMomentUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__DipoleMomentUom(soap, p, "eml:DipoleMomentUom", "eml:DipoleMomentUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__DipoleMomentUom * SOAP_FMAC4 soap_get_eml__DipoleMomentUom(struct soap*, enum eml__DipoleMomentUom *, const char*, const char*);

inline int soap_read_eml__DipoleMomentUom(struct soap *soap, enum eml__DipoleMomentUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__DipoleMomentUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AmountOfSubstanceUom(struct soap*, enum eml__AmountOfSubstanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstanceUom(struct soap*, const char*, int, const enum eml__AmountOfSubstanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AmountOfSubstanceUom2s(struct soap*, enum eml__AmountOfSubstanceUom);
SOAP_FMAC3 enum eml__AmountOfSubstanceUom * SOAP_FMAC4 soap_in_eml__AmountOfSubstanceUom(struct soap*, const char*, enum eml__AmountOfSubstanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AmountOfSubstanceUom(struct soap*, const char*, enum eml__AmountOfSubstanceUom *);

inline enum eml__AmountOfSubstanceUom * soap_new_eml__AmountOfSubstanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AmountOfSubstanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AmountOfSubstanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AmountOfSubstanceUom(struct soap*, const enum eml__AmountOfSubstanceUom *, const char*, const char*);

inline int soap_write_eml__AmountOfSubstanceUom(struct soap *soap, enum eml__AmountOfSubstanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AmountOfSubstanceUom(soap, p, "eml:AmountOfSubstanceUom", "eml:AmountOfSubstanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AmountOfSubstanceUom * SOAP_FMAC4 soap_get_eml__AmountOfSubstanceUom(struct soap*, enum eml__AmountOfSubstanceUom *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstanceUom(struct soap *soap, enum eml__AmountOfSubstanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MolarVolumeUom(struct soap*, enum eml__MolarVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MolarVolumeUom(struct soap*, const char*, int, const enum eml__MolarVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MolarVolumeUom2s(struct soap*, enum eml__MolarVolumeUom);
SOAP_FMAC3 enum eml__MolarVolumeUom * SOAP_FMAC4 soap_in_eml__MolarVolumeUom(struct soap*, const char*, enum eml__MolarVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MolarVolumeUom(struct soap*, const char*, enum eml__MolarVolumeUom *);

inline enum eml__MolarVolumeUom * soap_new_eml__MolarVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MolarVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MolarVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MolarVolumeUom(struct soap*, const enum eml__MolarVolumeUom *, const char*, const char*);

inline int soap_write_eml__MolarVolumeUom(struct soap *soap, enum eml__MolarVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MolarVolumeUom(soap, p, "eml:MolarVolumeUom", "eml:MolarVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MolarVolumeUom * SOAP_FMAC4 soap_get_eml__MolarVolumeUom(struct soap*, enum eml__MolarVolumeUom *, const char*, const char*);

inline int soap_read_eml__MolarVolumeUom(struct soap *soap, enum eml__MolarVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MolarVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassPerVolumeUom(struct soap*, enum eml__MassPerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerVolumeUom(struct soap*, const char*, int, const enum eml__MassPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassPerVolumeUom2s(struct soap*, enum eml__MassPerVolumeUom);
SOAP_FMAC3 enum eml__MassPerVolumeUom * SOAP_FMAC4 soap_in_eml__MassPerVolumeUom(struct soap*, const char*, enum eml__MassPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassPerVolumeUom(struct soap*, const char*, enum eml__MassPerVolumeUom *);

inline enum eml__MassPerVolumeUom * soap_new_eml__MassPerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassPerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassPerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassPerVolumeUom(struct soap*, const enum eml__MassPerVolumeUom *, const char*, const char*);

inline int soap_write_eml__MassPerVolumeUom(struct soap *soap, enum eml__MassPerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassPerVolumeUom(soap, p, "eml:MassPerVolumeUom", "eml:MassPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassPerVolumeUom * SOAP_FMAC4 soap_get_eml__MassPerVolumeUom(struct soap*, enum eml__MassPerVolumeUom *, const char*, const char*);

inline int soap_read_eml__MassPerVolumeUom(struct soap *soap, enum eml__MassPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentOfForceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentOfForceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MomentOfForceUom(struct soap*, enum eml__MomentOfForceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MomentOfForceUom(struct soap*, const char*, int, const enum eml__MomentOfForceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MomentOfForceUom2s(struct soap*, enum eml__MomentOfForceUom);
SOAP_FMAC3 enum eml__MomentOfForceUom * SOAP_FMAC4 soap_in_eml__MomentOfForceUom(struct soap*, const char*, enum eml__MomentOfForceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MomentOfForceUom(struct soap*, const char*, enum eml__MomentOfForceUom *);

inline enum eml__MomentOfForceUom * soap_new_eml__MomentOfForceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MomentOfForceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MomentOfForceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MomentOfForceUom(struct soap*, const enum eml__MomentOfForceUom *, const char*, const char*);

inline int soap_write_eml__MomentOfForceUom(struct soap *soap, enum eml__MomentOfForceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MomentOfForceUom(soap, p, "eml:MomentOfForceUom", "eml:MomentOfForceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MomentOfForceUom * SOAP_FMAC4 soap_get_eml__MomentOfForceUom(struct soap*, enum eml__MomentOfForceUom *, const char*, const char*);

inline int soap_read_eml__MomentOfForceUom(struct soap *soap, enum eml__MomentOfForceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MomentOfForceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerTimePerVolumeUom(struct soap*, enum eml__VolumePerTimePerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerVolumeUom(struct soap*, const char*, int, const enum eml__VolumePerTimePerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerTimePerVolumeUom2s(struct soap*, enum eml__VolumePerTimePerVolumeUom);
SOAP_FMAC3 enum eml__VolumePerTimePerVolumeUom * SOAP_FMAC4 soap_in_eml__VolumePerTimePerVolumeUom(struct soap*, const char*, enum eml__VolumePerTimePerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerTimePerVolumeUom(struct soap*, const char*, enum eml__VolumePerTimePerVolumeUom *);

inline enum eml__VolumePerTimePerVolumeUom * soap_new_eml__VolumePerTimePerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerTimePerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerTimePerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerTimePerVolumeUom(struct soap*, const enum eml__VolumePerTimePerVolumeUom *, const char*, const char*);

inline int soap_write_eml__VolumePerTimePerVolumeUom(struct soap *soap, enum eml__VolumePerTimePerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerTimePerVolumeUom(soap, p, "eml:VolumePerTimePerVolumeUom", "eml:VolumePerTimePerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerTimePerVolumeUom * SOAP_FMAC4 soap_get_eml__VolumePerTimePerVolumeUom(struct soap*, enum eml__VolumePerTimePerVolumeUom *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerVolumeUom(struct soap *soap, enum eml__VolumePerTimePerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__SolidAngleUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__SolidAngleUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__SolidAngleUom(struct soap*, enum eml__SolidAngleUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__SolidAngleUom(struct soap*, const char*, int, const enum eml__SolidAngleUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__SolidAngleUom2s(struct soap*, enum eml__SolidAngleUom);
SOAP_FMAC3 enum eml__SolidAngleUom * SOAP_FMAC4 soap_in_eml__SolidAngleUom(struct soap*, const char*, enum eml__SolidAngleUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__SolidAngleUom(struct soap*, const char*, enum eml__SolidAngleUom *);

inline enum eml__SolidAngleUom * soap_new_eml__SolidAngleUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__SolidAngleUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__SolidAngleUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__SolidAngleUom(struct soap*, const enum eml__SolidAngleUom *, const char*, const char*);

inline int soap_write_eml__SolidAngleUom(struct soap *soap, enum eml__SolidAngleUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__SolidAngleUom(soap, p, "eml:SolidAngleUom", "eml:SolidAngleUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__SolidAngleUom * SOAP_FMAC4 soap_get_eml__SolidAngleUom(struct soap*, enum eml__SolidAngleUom *, const char*, const char*);

inline int soap_read_eml__SolidAngleUom(struct soap *soap, enum eml__SolidAngleUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__SolidAngleUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceLengthPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceLengthPerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ForceLengthPerLengthUom(struct soap*, enum eml__ForceLengthPerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForceLengthPerLengthUom(struct soap*, const char*, int, const enum eml__ForceLengthPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ForceLengthPerLengthUom2s(struct soap*, enum eml__ForceLengthPerLengthUom);
SOAP_FMAC3 enum eml__ForceLengthPerLengthUom * SOAP_FMAC4 soap_in_eml__ForceLengthPerLengthUom(struct soap*, const char*, enum eml__ForceLengthPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ForceLengthPerLengthUom(struct soap*, const char*, enum eml__ForceLengthPerLengthUom *);

inline enum eml__ForceLengthPerLengthUom * soap_new_eml__ForceLengthPerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ForceLengthPerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ForceLengthPerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ForceLengthPerLengthUom(struct soap*, const enum eml__ForceLengthPerLengthUom *, const char*, const char*);

inline int soap_write_eml__ForceLengthPerLengthUom(struct soap *soap, enum eml__ForceLengthPerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ForceLengthPerLengthUom(soap, p, "eml:ForceLengthPerLengthUom", "eml:ForceLengthPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ForceLengthPerLengthUom * SOAP_FMAC4 soap_get_eml__ForceLengthPerLengthUom(struct soap*, enum eml__ForceLengthPerLengthUom *, const char*, const char*);

inline int soap_read_eml__ForceLengthPerLengthUom(struct soap *soap, enum eml__ForceLengthPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ForceLengthPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LengthPerTimeUom(struct soap*, enum eml__LengthPerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerTimeUom(struct soap*, const char*, int, const enum eml__LengthPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LengthPerTimeUom2s(struct soap*, enum eml__LengthPerTimeUom);
SOAP_FMAC3 enum eml__LengthPerTimeUom * SOAP_FMAC4 soap_in_eml__LengthPerTimeUom(struct soap*, const char*, enum eml__LengthPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LengthPerTimeUom(struct soap*, const char*, enum eml__LengthPerTimeUom *);

inline enum eml__LengthPerTimeUom * soap_new_eml__LengthPerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LengthPerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LengthPerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LengthPerTimeUom(struct soap*, const enum eml__LengthPerTimeUom *, const char*, const char*);

inline int soap_write_eml__LengthPerTimeUom(struct soap *soap, enum eml__LengthPerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LengthPerTimeUom(soap, p, "eml:LengthPerTimeUom", "eml:LengthPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LengthPerTimeUom * SOAP_FMAC4 soap_get_eml__LengthPerTimeUom(struct soap*, enum eml__LengthPerTimeUom *, const char*, const char*);

inline int soap_read_eml__LengthPerTimeUom(struct soap *soap, enum eml__LengthPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LengthPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__QuantityOfLightUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__QuantityOfLightUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__QuantityOfLightUom(struct soap*, enum eml__QuantityOfLightUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__QuantityOfLightUom(struct soap*, const char*, int, const enum eml__QuantityOfLightUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__QuantityOfLightUom2s(struct soap*, enum eml__QuantityOfLightUom);
SOAP_FMAC3 enum eml__QuantityOfLightUom * SOAP_FMAC4 soap_in_eml__QuantityOfLightUom(struct soap*, const char*, enum eml__QuantityOfLightUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__QuantityOfLightUom(struct soap*, const char*, enum eml__QuantityOfLightUom *);

inline enum eml__QuantityOfLightUom * soap_new_eml__QuantityOfLightUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__QuantityOfLightUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__QuantityOfLightUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__QuantityOfLightUom(struct soap*, const enum eml__QuantityOfLightUom *, const char*, const char*);

inline int soap_write_eml__QuantityOfLightUom(struct soap *soap, enum eml__QuantityOfLightUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__QuantityOfLightUom(soap, p, "eml:QuantityOfLightUom", "eml:QuantityOfLightUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__QuantityOfLightUom * SOAP_FMAC4 soap_get_eml__QuantityOfLightUom(struct soap*, enum eml__QuantityOfLightUom *, const char*, const char*);

inline int soap_read_eml__QuantityOfLightUom(struct soap *soap, enum eml__QuantityOfLightUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__QuantityOfLightUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalConductanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalConductanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ThermalConductanceUom(struct soap*, enum eml__ThermalConductanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalConductanceUom(struct soap*, const char*, int, const enum eml__ThermalConductanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ThermalConductanceUom2s(struct soap*, enum eml__ThermalConductanceUom);
SOAP_FMAC3 enum eml__ThermalConductanceUom * SOAP_FMAC4 soap_in_eml__ThermalConductanceUom(struct soap*, const char*, enum eml__ThermalConductanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ThermalConductanceUom(struct soap*, const char*, enum eml__ThermalConductanceUom *);

inline enum eml__ThermalConductanceUom * soap_new_eml__ThermalConductanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ThermalConductanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ThermalConductanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ThermalConductanceUom(struct soap*, const enum eml__ThermalConductanceUom *, const char*, const char*);

inline int soap_write_eml__ThermalConductanceUom(struct soap *soap, enum eml__ThermalConductanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ThermalConductanceUom(soap, p, "eml:ThermalConductanceUom", "eml:ThermalConductanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ThermalConductanceUom * SOAP_FMAC4 soap_get_eml__ThermalConductanceUom(struct soap*, enum eml__ThermalConductanceUom *, const char*, const char*);

inline int soap_read_eml__ThermalConductanceUom(struct soap *soap, enum eml__ThermalConductanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ThermalConductanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumeUom(struct soap*, enum eml__VolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumeUom(struct soap*, const char*, int, const enum eml__VolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumeUom2s(struct soap*, enum eml__VolumeUom);
SOAP_FMAC3 enum eml__VolumeUom * SOAP_FMAC4 soap_in_eml__VolumeUom(struct soap*, const char*, enum eml__VolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumeUom(struct soap*, const char*, enum eml__VolumeUom *);

inline enum eml__VolumeUom * soap_new_eml__VolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumeUom(struct soap*, const enum eml__VolumeUom *, const char*, const char*);

inline int soap_write_eml__VolumeUom(struct soap *soap, enum eml__VolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumeUom(soap, p, "eml:VolumeUom", "eml:VolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumeUom * SOAP_FMAC4 soap_get_eml__VolumeUom(struct soap*, enum eml__VolumeUom *, const char*, const char*);

inline int soap_read_eml__VolumeUom(struct soap *soap, enum eml__VolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MagneticFluxUom(struct soap*, enum eml__MagneticFluxUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticFluxUom(struct soap*, const char*, int, const enum eml__MagneticFluxUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MagneticFluxUom2s(struct soap*, enum eml__MagneticFluxUom);
SOAP_FMAC3 enum eml__MagneticFluxUom * SOAP_FMAC4 soap_in_eml__MagneticFluxUom(struct soap*, const char*, enum eml__MagneticFluxUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MagneticFluxUom(struct soap*, const char*, enum eml__MagneticFluxUom *);

inline enum eml__MagneticFluxUom * soap_new_eml__MagneticFluxUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MagneticFluxUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MagneticFluxUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MagneticFluxUom(struct soap*, const enum eml__MagneticFluxUom *, const char*, const char*);

inline int soap_write_eml__MagneticFluxUom(struct soap *soap, enum eml__MagneticFluxUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MagneticFluxUom(soap, p, "eml:MagneticFluxUom", "eml:MagneticFluxUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MagneticFluxUom * SOAP_FMAC4 soap_get_eml__MagneticFluxUom(struct soap*, enum eml__MagneticFluxUom *, const char*, const char*);

inline int soap_read_eml__MagneticFluxUom(struct soap *soap, enum eml__MagneticFluxUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MagneticFluxUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MolecularWeightUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MolecularWeightUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MolecularWeightUom(struct soap*, enum eml__MolecularWeightUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MolecularWeightUom(struct soap*, const char*, int, const enum eml__MolecularWeightUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MolecularWeightUom2s(struct soap*, enum eml__MolecularWeightUom);
SOAP_FMAC3 enum eml__MolecularWeightUom * SOAP_FMAC4 soap_in_eml__MolecularWeightUom(struct soap*, const char*, enum eml__MolecularWeightUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MolecularWeightUom(struct soap*, const char*, enum eml__MolecularWeightUom *);

inline enum eml__MolecularWeightUom * soap_new_eml__MolecularWeightUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MolecularWeightUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MolecularWeightUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MolecularWeightUom(struct soap*, const enum eml__MolecularWeightUom *, const char*, const char*);

inline int soap_write_eml__MolecularWeightUom(struct soap *soap, enum eml__MolecularWeightUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MolecularWeightUom(soap, p, "eml:MolecularWeightUom", "eml:MolecularWeightUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MolecularWeightUom * SOAP_FMAC4 soap_get_eml__MolecularWeightUom(struct soap*, enum eml__MolecularWeightUom *, const char*, const char*);

inline int soap_read_eml__MolecularWeightUom(struct soap *soap, enum eml__MolecularWeightUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MolecularWeightUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassPerTimeUom(struct soap*, enum eml__MassPerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerTimeUom(struct soap*, const char*, int, const enum eml__MassPerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassPerTimeUom2s(struct soap*, enum eml__MassPerTimeUom);
SOAP_FMAC3 enum eml__MassPerTimeUom * SOAP_FMAC4 soap_in_eml__MassPerTimeUom(struct soap*, const char*, enum eml__MassPerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassPerTimeUom(struct soap*, const char*, enum eml__MassPerTimeUom *);

inline enum eml__MassPerTimeUom * soap_new_eml__MassPerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassPerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassPerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassPerTimeUom(struct soap*, const enum eml__MassPerTimeUom *, const char*, const char*);

inline int soap_write_eml__MassPerTimeUom(struct soap *soap, enum eml__MassPerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassPerTimeUom(soap, p, "eml:MassPerTimeUom", "eml:MassPerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassPerTimeUom * SOAP_FMAC4 soap_get_eml__MassPerTimeUom(struct soap*, enum eml__MassPerTimeUom *, const char*, const char*);

inline int soap_read_eml__MassPerTimeUom(struct soap *soap, enum eml__MassPerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassPerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerVolumeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerVolumeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LengthPerVolumeUom(struct soap*, enum eml__LengthPerVolumeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerVolumeUom(struct soap*, const char*, int, const enum eml__LengthPerVolumeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LengthPerVolumeUom2s(struct soap*, enum eml__LengthPerVolumeUom);
SOAP_FMAC3 enum eml__LengthPerVolumeUom * SOAP_FMAC4 soap_in_eml__LengthPerVolumeUom(struct soap*, const char*, enum eml__LengthPerVolumeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LengthPerVolumeUom(struct soap*, const char*, enum eml__LengthPerVolumeUom *);

inline enum eml__LengthPerVolumeUom * soap_new_eml__LengthPerVolumeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LengthPerVolumeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LengthPerVolumeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LengthPerVolumeUom(struct soap*, const enum eml__LengthPerVolumeUom *, const char*, const char*);

inline int soap_write_eml__LengthPerVolumeUom(struct soap *soap, enum eml__LengthPerVolumeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LengthPerVolumeUom(soap, p, "eml:LengthPerVolumeUom", "eml:LengthPerVolumeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LengthPerVolumeUom * SOAP_FMAC4 soap_get_eml__LengthPerVolumeUom(struct soap*, enum eml__LengthPerVolumeUom *, const char*, const char*);

inline int soap_read_eml__LengthPerVolumeUom(struct soap *soap, enum eml__LengthPerVolumeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LengthPerVolumeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxDensityPerLengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxDensityPerLengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MagneticFluxDensityPerLengthUom(struct soap*, enum eml__MagneticFluxDensityPerLengthUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticFluxDensityPerLengthUom(struct soap*, const char*, int, const enum eml__MagneticFluxDensityPerLengthUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MagneticFluxDensityPerLengthUom2s(struct soap*, enum eml__MagneticFluxDensityPerLengthUom);
SOAP_FMAC3 enum eml__MagneticFluxDensityPerLengthUom * SOAP_FMAC4 soap_in_eml__MagneticFluxDensityPerLengthUom(struct soap*, const char*, enum eml__MagneticFluxDensityPerLengthUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MagneticFluxDensityPerLengthUom(struct soap*, const char*, enum eml__MagneticFluxDensityPerLengthUom *);

inline enum eml__MagneticFluxDensityPerLengthUom * soap_new_eml__MagneticFluxDensityPerLengthUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MagneticFluxDensityPerLengthUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MagneticFluxDensityPerLengthUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MagneticFluxDensityPerLengthUom(struct soap*, const enum eml__MagneticFluxDensityPerLengthUom *, const char*, const char*);

inline int soap_write_eml__MagneticFluxDensityPerLengthUom(struct soap *soap, enum eml__MagneticFluxDensityPerLengthUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MagneticFluxDensityPerLengthUom(soap, p, "eml:MagneticFluxDensityPerLengthUom", "eml:MagneticFluxDensityPerLengthUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MagneticFluxDensityPerLengthUom * SOAP_FMAC4 soap_get_eml__MagneticFluxDensityPerLengthUom(struct soap*, enum eml__MagneticFluxDensityPerLengthUom *, const char*, const char*);

inline int soap_read_eml__MagneticFluxDensityPerLengthUom(struct soap *soap, enum eml__MagneticFluxDensityPerLengthUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MagneticFluxDensityPerLengthUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__CapacitanceUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__CapacitanceUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__CapacitanceUom(struct soap*, enum eml__CapacitanceUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__CapacitanceUom(struct soap*, const char*, int, const enum eml__CapacitanceUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__CapacitanceUom2s(struct soap*, enum eml__CapacitanceUom);
SOAP_FMAC3 enum eml__CapacitanceUom * SOAP_FMAC4 soap_in_eml__CapacitanceUom(struct soap*, const char*, enum eml__CapacitanceUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__CapacitanceUom(struct soap*, const char*, enum eml__CapacitanceUom *);

inline enum eml__CapacitanceUom * soap_new_eml__CapacitanceUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__CapacitanceUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__CapacitanceUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__CapacitanceUom(struct soap*, const enum eml__CapacitanceUom *, const char*, const char*);

inline int soap_write_eml__CapacitanceUom(struct soap *soap, enum eml__CapacitanceUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__CapacitanceUom(soap, p, "eml:CapacitanceUom", "eml:CapacitanceUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__CapacitanceUom * SOAP_FMAC4 soap_get_eml__CapacitanceUom(struct soap*, enum eml__CapacitanceUom *, const char*, const char*);

inline int soap_read_eml__CapacitanceUom(struct soap *soap, enum eml__CapacitanceUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__CapacitanceUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentOfInertiaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentOfInertiaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MomentOfInertiaUom(struct soap*, enum eml__MomentOfInertiaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MomentOfInertiaUom(struct soap*, const char*, int, const enum eml__MomentOfInertiaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MomentOfInertiaUom2s(struct soap*, enum eml__MomentOfInertiaUom);
SOAP_FMAC3 enum eml__MomentOfInertiaUom * SOAP_FMAC4 soap_in_eml__MomentOfInertiaUom(struct soap*, const char*, enum eml__MomentOfInertiaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MomentOfInertiaUom(struct soap*, const char*, enum eml__MomentOfInertiaUom *);

inline enum eml__MomentOfInertiaUom * soap_new_eml__MomentOfInertiaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MomentOfInertiaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MomentOfInertiaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MomentOfInertiaUom(struct soap*, const enum eml__MomentOfInertiaUom *, const char*, const char*);

inline int soap_write_eml__MomentOfInertiaUom(struct soap *soap, enum eml__MomentOfInertiaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MomentOfInertiaUom(soap, p, "eml:MomentOfInertiaUom", "eml:MomentOfInertiaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MomentOfInertiaUom * SOAP_FMAC4 soap_get_eml__MomentOfInertiaUom(struct soap*, enum eml__MomentOfInertiaUom *, const char*, const char*);

inline int soap_read_eml__MomentOfInertiaUom(struct soap *soap, enum eml__MomentOfInertiaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MomentOfInertiaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerEnergyUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerEnergyUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MassPerEnergyUom(struct soap*, enum eml__MassPerEnergyUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerEnergyUom(struct soap*, const char*, int, const enum eml__MassPerEnergyUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MassPerEnergyUom2s(struct soap*, enum eml__MassPerEnergyUom);
SOAP_FMAC3 enum eml__MassPerEnergyUom * SOAP_FMAC4 soap_in_eml__MassPerEnergyUom(struct soap*, const char*, enum eml__MassPerEnergyUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MassPerEnergyUom(struct soap*, const char*, enum eml__MassPerEnergyUom *);

inline enum eml__MassPerEnergyUom * soap_new_eml__MassPerEnergyUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MassPerEnergyUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MassPerEnergyUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MassPerEnergyUom(struct soap*, const enum eml__MassPerEnergyUom *, const char*, const char*);

inline int soap_write_eml__MassPerEnergyUom(struct soap *soap, enum eml__MassPerEnergyUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MassPerEnergyUom(soap, p, "eml:MassPerEnergyUom", "eml:MassPerEnergyUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MassPerEnergyUom * SOAP_FMAC4 soap_get_eml__MassPerEnergyUom(struct soap*, enum eml__MassPerEnergyUom *, const char*, const char*);

inline int soap_read_eml__MassPerEnergyUom(struct soap *soap, enum eml__MassPerEnergyUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MassPerEnergyUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatTransferCoefficientUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatTransferCoefficientUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__HeatTransferCoefficientUom(struct soap*, enum eml__HeatTransferCoefficientUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__HeatTransferCoefficientUom(struct soap*, const char*, int, const enum eml__HeatTransferCoefficientUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__HeatTransferCoefficientUom2s(struct soap*, enum eml__HeatTransferCoefficientUom);
SOAP_FMAC3 enum eml__HeatTransferCoefficientUom * SOAP_FMAC4 soap_in_eml__HeatTransferCoefficientUom(struct soap*, const char*, enum eml__HeatTransferCoefficientUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__HeatTransferCoefficientUom(struct soap*, const char*, enum eml__HeatTransferCoefficientUom *);

inline enum eml__HeatTransferCoefficientUom * soap_new_eml__HeatTransferCoefficientUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__HeatTransferCoefficientUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__HeatTransferCoefficientUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__HeatTransferCoefficientUom(struct soap*, const enum eml__HeatTransferCoefficientUom *, const char*, const char*);

inline int soap_write_eml__HeatTransferCoefficientUom(struct soap *soap, enum eml__HeatTransferCoefficientUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__HeatTransferCoefficientUom(soap, p, "eml:HeatTransferCoefficientUom", "eml:HeatTransferCoefficientUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__HeatTransferCoefficientUom * SOAP_FMAC4 soap_get_eml__HeatTransferCoefficientUom(struct soap*, enum eml__HeatTransferCoefficientUom *, const char*, const char*);

inline int soap_read_eml__HeatTransferCoefficientUom(struct soap *soap, enum eml__HeatTransferCoefficientUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__HeatTransferCoefficientUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MobilityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MobilityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MobilityUom(struct soap*, enum eml__MobilityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MobilityUom(struct soap*, const char*, int, const enum eml__MobilityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__MobilityUom2s(struct soap*, enum eml__MobilityUom);
SOAP_FMAC3 enum eml__MobilityUom * SOAP_FMAC4 soap_in_eml__MobilityUom(struct soap*, const char*, enum eml__MobilityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__MobilityUom(struct soap*, const char*, enum eml__MobilityUom *);

inline enum eml__MobilityUom * soap_new_eml__MobilityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__MobilityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__MobilityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MobilityUom(struct soap*, const enum eml__MobilityUom *, const char*, const char*);

inline int soap_write_eml__MobilityUom(struct soap *soap, enum eml__MobilityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MobilityUom(soap, p, "eml:MobilityUom", "eml:MobilityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__MobilityUom * SOAP_FMAC4 soap_get_eml__MobilityUom(struct soap*, enum eml__MobilityUom *, const char*, const char*);

inline int soap_read_eml__MobilityUom(struct soap *soap, enum eml__MobilityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MobilityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerAreaUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerAreaUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerTimePerAreaUom(struct soap*, enum eml__VolumePerTimePerAreaUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerAreaUom(struct soap*, const char*, int, const enum eml__VolumePerTimePerAreaUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerTimePerAreaUom2s(struct soap*, enum eml__VolumePerTimePerAreaUom);
SOAP_FMAC3 enum eml__VolumePerTimePerAreaUom * SOAP_FMAC4 soap_in_eml__VolumePerTimePerAreaUom(struct soap*, const char*, enum eml__VolumePerTimePerAreaUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerTimePerAreaUom(struct soap*, const char*, enum eml__VolumePerTimePerAreaUom *);

inline enum eml__VolumePerTimePerAreaUom * soap_new_eml__VolumePerTimePerAreaUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerTimePerAreaUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerTimePerAreaUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerTimePerAreaUom(struct soap*, const enum eml__VolumePerTimePerAreaUom *, const char*, const char*);

inline int soap_write_eml__VolumePerTimePerAreaUom(struct soap *soap, enum eml__VolumePerTimePerAreaUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerTimePerAreaUom(soap, p, "eml:VolumePerTimePerAreaUom", "eml:VolumePerTimePerAreaUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerTimePerAreaUom * SOAP_FMAC4 soap_get_eml__VolumePerTimePerAreaUom(struct soap*, enum eml__VolumePerTimePerAreaUom *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerAreaUom(struct soap *soap, enum eml__VolumePerTimePerAreaUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerAreaUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerRotationUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerRotationUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VolumePerRotationUom(struct soap*, enum eml__VolumePerRotationUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerRotationUom(struct soap*, const char*, int, const enum eml__VolumePerRotationUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VolumePerRotationUom2s(struct soap*, enum eml__VolumePerRotationUom);
SOAP_FMAC3 enum eml__VolumePerRotationUom * SOAP_FMAC4 soap_in_eml__VolumePerRotationUom(struct soap*, const char*, enum eml__VolumePerRotationUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VolumePerRotationUom(struct soap*, const char*, enum eml__VolumePerRotationUom *);

inline enum eml__VolumePerRotationUom * soap_new_eml__VolumePerRotationUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VolumePerRotationUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VolumePerRotationUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VolumePerRotationUom(struct soap*, const enum eml__VolumePerRotationUom *, const char*, const char*);

inline int soap_write_eml__VolumePerRotationUom(struct soap *soap, enum eml__VolumePerRotationUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VolumePerRotationUom(soap, p, "eml:VolumePerRotationUom", "eml:VolumePerRotationUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VolumePerRotationUom * SOAP_FMAC4 soap_get_eml__VolumePerRotationUom(struct soap*, enum eml__VolumePerRotationUom *, const char*, const char*);

inline int soap_read_eml__VolumePerRotationUom(struct soap *soap, enum eml__VolumePerRotationUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VolumePerRotationUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricConductivityUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricConductivityUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__ElectricConductivityUom(struct soap*, enum eml__ElectricConductivityUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricConductivityUom(struct soap*, const char*, int, const enum eml__ElectricConductivityUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__ElectricConductivityUom2s(struct soap*, enum eml__ElectricConductivityUom);
SOAP_FMAC3 enum eml__ElectricConductivityUom * SOAP_FMAC4 soap_in_eml__ElectricConductivityUom(struct soap*, const char*, enum eml__ElectricConductivityUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__ElectricConductivityUom(struct soap*, const char*, enum eml__ElectricConductivityUom *);

inline enum eml__ElectricConductivityUom * soap_new_eml__ElectricConductivityUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__ElectricConductivityUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__ElectricConductivityUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__ElectricConductivityUom(struct soap*, const enum eml__ElectricConductivityUom *, const char*, const char*);

inline int soap_write_eml__ElectricConductivityUom(struct soap *soap, enum eml__ElectricConductivityUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__ElectricConductivityUom(soap, p, "eml:ElectricConductivityUom", "eml:ElectricConductivityUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__ElectricConductivityUom * SOAP_FMAC4 soap_get_eml__ElectricConductivityUom(struct soap*, enum eml__ElectricConductivityUom *, const char*, const char*);

inline int soap_read_eml__ElectricConductivityUom(struct soap *soap, enum eml__ElectricConductivityUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__ElectricConductivityUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerTimeUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerTimeUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AmountOfSubstancePerTimeUom(struct soap*, enum eml__AmountOfSubstancePerTimeUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerTimeUom(struct soap*, const char*, int, const enum eml__AmountOfSubstancePerTimeUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AmountOfSubstancePerTimeUom2s(struct soap*, enum eml__AmountOfSubstancePerTimeUom);
SOAP_FMAC3 enum eml__AmountOfSubstancePerTimeUom * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerTimeUom(struct soap*, const char*, enum eml__AmountOfSubstancePerTimeUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AmountOfSubstancePerTimeUom(struct soap*, const char*, enum eml__AmountOfSubstancePerTimeUom *);

inline enum eml__AmountOfSubstancePerTimeUom * soap_new_eml__AmountOfSubstancePerTimeUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AmountOfSubstancePerTimeUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AmountOfSubstancePerTimeUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AmountOfSubstancePerTimeUom(struct soap*, const enum eml__AmountOfSubstancePerTimeUom *, const char*, const char*);

inline int soap_write_eml__AmountOfSubstancePerTimeUom(struct soap *soap, enum eml__AmountOfSubstancePerTimeUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AmountOfSubstancePerTimeUom(soap, p, "eml:AmountOfSubstancePerTimeUom", "eml:AmountOfSubstancePerTimeUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AmountOfSubstancePerTimeUom * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerTimeUom(struct soap*, enum eml__AmountOfSubstancePerTimeUom *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerTimeUom(struct soap *soap, enum eml__AmountOfSubstancePerTimeUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerTimeUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LogarithmicPowerRatioUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LogarithmicPowerRatioUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__LogarithmicPowerRatioUom(struct soap*, enum eml__LogarithmicPowerRatioUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LogarithmicPowerRatioUom(struct soap*, const char*, int, const enum eml__LogarithmicPowerRatioUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__LogarithmicPowerRatioUom2s(struct soap*, enum eml__LogarithmicPowerRatioUom);
SOAP_FMAC3 enum eml__LogarithmicPowerRatioUom * SOAP_FMAC4 soap_in_eml__LogarithmicPowerRatioUom(struct soap*, const char*, enum eml__LogarithmicPowerRatioUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__LogarithmicPowerRatioUom(struct soap*, const char*, enum eml__LogarithmicPowerRatioUom *);

inline enum eml__LogarithmicPowerRatioUom * soap_new_eml__LogarithmicPowerRatioUom(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__LogarithmicPowerRatioUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__LogarithmicPowerRatioUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__LogarithmicPowerRatioUom(struct soap*, const enum eml__LogarithmicPowerRatioUom *, const char*, const char*);

inline int soap_write_eml__LogarithmicPowerRatioUom(struct soap *soap, enum eml__LogarithmicPowerRatioUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__LogarithmicPowerRatioUom(soap, p, "eml:LogarithmicPowerRatioUom", "eml:LogarithmicPowerRatioUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__LogarithmicPowerRatioUom * SOAP_FMAC4 soap_get_eml__LogarithmicPowerRatioUom(struct soap*, enum eml__LogarithmicPowerRatioUom *, const char*, const char*);

inline int soap_read_eml__LogarithmicPowerRatioUom(struct soap *soap, enum eml__LogarithmicPowerRatioUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__LogarithmicPowerRatioUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalDirection_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalDirection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__VerticalDirection(struct soap*, enum eml__VerticalDirection *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VerticalDirection(struct soap*, const char*, int, const enum eml__VerticalDirection *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__VerticalDirection2s(struct soap*, enum eml__VerticalDirection);
SOAP_FMAC3 enum eml__VerticalDirection * SOAP_FMAC4 soap_in_eml__VerticalDirection(struct soap*, const char*, enum eml__VerticalDirection *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__VerticalDirection(struct soap*, const char*, enum eml__VerticalDirection *);

inline enum eml__VerticalDirection * soap_new_eml__VerticalDirection(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__VerticalDirection *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__VerticalDirection)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__VerticalDirection(struct soap*, const enum eml__VerticalDirection *, const char*, const char*);

inline int soap_write_eml__VerticalDirection(struct soap *soap, enum eml__VerticalDirection const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__VerticalDirection(soap, p, "eml:VerticalDirection", "eml:VerticalDirection") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__VerticalDirection * SOAP_FMAC4 soap_get_eml__VerticalDirection(struct soap*, enum eml__VerticalDirection *, const char*, const char*);

inline int soap_read_eml__VerticalDirection(struct soap *soap, enum eml__VerticalDirection *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__VerticalDirection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AxisOrder2d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AxisOrder2d_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__AxisOrder2d(struct soap*, enum eml__AxisOrder2d *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AxisOrder2d(struct soap*, const char*, int, const enum eml__AxisOrder2d *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_eml__AxisOrder2d2s(struct soap*, enum eml__AxisOrder2d);
SOAP_FMAC3 enum eml__AxisOrder2d * SOAP_FMAC4 soap_in_eml__AxisOrder2d(struct soap*, const char*, enum eml__AxisOrder2d *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2eml__AxisOrder2d(struct soap*, const char*, enum eml__AxisOrder2d *);

inline enum eml__AxisOrder2d * soap_new_eml__AxisOrder2d(struct soap *soap, int n = -1)
{
	return static_cast<enum eml__AxisOrder2d *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum eml__AxisOrder2d)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__AxisOrder2d(struct soap*, const enum eml__AxisOrder2d *, const char*, const char*);

inline int soap_write_eml__AxisOrder2d(struct soap *soap, enum eml__AxisOrder2d const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__AxisOrder2d(soap, p, "eml:AxisOrder2d", "eml:AxisOrder2d") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum eml__AxisOrder2d * SOAP_FMAC4 soap_get_eml__AxisOrder2d(struct soap*, enum eml__AxisOrder2d *, const char*, const char*);

inline int soap_read_eml__AxisOrder2d(struct soap *soap, enum eml__AxisOrder2d *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__AxisOrder2d(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__OrganizationKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__OrganizationKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__OrganizationKind(struct soap*, enum resqml2__OrganizationKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__OrganizationKind(struct soap*, const char*, int, const enum resqml2__OrganizationKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__OrganizationKind2s(struct soap*, enum resqml2__OrganizationKind);
SOAP_FMAC3 enum resqml2__OrganizationKind * SOAP_FMAC4 soap_in_resqml2__OrganizationKind(struct soap*, const char*, enum resqml2__OrganizationKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__OrganizationKind(struct soap*, const char*, enum resqml2__OrganizationKind *);

inline enum resqml2__OrganizationKind * soap_new_resqml2__OrganizationKind(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__OrganizationKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__OrganizationKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__OrganizationKind(struct soap*, const enum resqml2__OrganizationKind *, const char*, const char*);

inline int soap_write_resqml2__OrganizationKind(struct soap *soap, enum resqml2__OrganizationKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__OrganizationKind(soap, p, "resqml2:OrganizationKind", "resqml2:OrganizationKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__OrganizationKind * SOAP_FMAC4 soap_get_resqml2__OrganizationKind(struct soap*, enum resqml2__OrganizationKind *, const char*, const char*);

inline int soap_read_resqml2__OrganizationKind(struct soap *soap, enum resqml2__OrganizationKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__OrganizationKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ResqmlPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ResqmlPropertyKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__ResqmlPropertyKind(struct soap*, enum resqml2__ResqmlPropertyKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ResqmlPropertyKind(struct soap*, const char*, int, const enum resqml2__ResqmlPropertyKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__ResqmlPropertyKind2s(struct soap*, enum resqml2__ResqmlPropertyKind);
SOAP_FMAC3 enum resqml2__ResqmlPropertyKind * SOAP_FMAC4 soap_in_resqml2__ResqmlPropertyKind(struct soap*, const char*, enum resqml2__ResqmlPropertyKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__ResqmlPropertyKind(struct soap*, const char*, enum resqml2__ResqmlPropertyKind *);

inline enum resqml2__ResqmlPropertyKind * soap_new_resqml2__ResqmlPropertyKind(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__ResqmlPropertyKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__ResqmlPropertyKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__ResqmlPropertyKind(struct soap*, const enum resqml2__ResqmlPropertyKind *, const char*, const char*);

inline int soap_write_resqml2__ResqmlPropertyKind(struct soap *soap, enum resqml2__ResqmlPropertyKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__ResqmlPropertyKind(soap, p, "resqml2:ResqmlPropertyKind", "resqml2:ResqmlPropertyKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__ResqmlPropertyKind * SOAP_FMAC4 soap_get_resqml2__ResqmlPropertyKind(struct soap*, enum resqml2__ResqmlPropertyKind *, const char*, const char*);

inline int soap_read_resqml2__ResqmlPropertyKind(struct soap *soap, enum resqml2__ResqmlPropertyKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__ResqmlPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__actuate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__actuate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xlink__actuate(struct soap*, enum _xlink__actuate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xlink__actuate(struct soap*, const char*, int, const enum _xlink__actuate *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__xlink__actuate2s(struct soap*, enum _xlink__actuate);
SOAP_FMAC3 enum _xlink__actuate * SOAP_FMAC4 soap_in__xlink__actuate(struct soap*, const char*, enum _xlink__actuate *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_xlink__actuate(struct soap*, const char*, enum _xlink__actuate *);

inline enum _xlink__actuate * soap_new__xlink__actuate(struct soap *soap, int n = -1)
{
	return static_cast<enum _xlink__actuate *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum _xlink__actuate)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put__xlink__actuate(struct soap*, const enum _xlink__actuate *, const char*, const char*);

inline int soap_write__xlink__actuate(struct soap *soap, enum _xlink__actuate const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__xlink__actuate(soap, p, "xlink:actuate", "xlink:actuate") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum _xlink__actuate * SOAP_FMAC4 soap_get__xlink__actuate(struct soap*, enum _xlink__actuate *, const char*, const char*);

inline int soap_read__xlink__actuate(struct soap *soap, enum _xlink__actuate *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get__xlink__actuate(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__show_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__show_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xlink__show(struct soap*, enum _xlink__show *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xlink__show(struct soap*, const char*, int, const enum _xlink__show *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__xlink__show2s(struct soap*, enum _xlink__show);
SOAP_FMAC3 enum _xlink__show * SOAP_FMAC4 soap_in__xlink__show(struct soap*, const char*, enum _xlink__show *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_xlink__show(struct soap*, const char*, enum _xlink__show *);

inline enum _xlink__show * soap_new__xlink__show(struct soap *soap, int n = -1)
{
	return static_cast<enum _xlink__show *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum _xlink__show)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put__xlink__show(struct soap*, const enum _xlink__show *, const char*, const char*);

inline int soap_write__xlink__show(struct soap *soap, enum _xlink__show const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__xlink__show(soap, p, "xlink:show", "xlink:show") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum _xlink__show * SOAP_FMAC4 soap_get__xlink__show(struct soap*, enum _xlink__show *, const char*, const char*);

inline int soap_read__xlink__show(struct soap *soap, enum _xlink__show *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get__xlink__show(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AggregationType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AggregationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__AggregationType(struct soap*, enum gml__AggregationType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AggregationType(struct soap*, const char*, int, const enum gml__AggregationType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_gml__AggregationType2s(struct soap*, enum gml__AggregationType);
SOAP_FMAC3 enum gml__AggregationType * SOAP_FMAC4 soap_in_gml__AggregationType(struct soap*, const char*, enum gml__AggregationType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2gml__AggregationType(struct soap*, const char*, enum gml__AggregationType *);

inline enum gml__AggregationType * soap_new_gml__AggregationType(struct soap *soap, int n = -1)
{
	return static_cast<enum gml__AggregationType *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum gml__AggregationType)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__AggregationType(struct soap*, const enum gml__AggregationType *, const char*, const char*);

inline int soap_write_gml__AggregationType(struct soap *soap, enum gml__AggregationType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__AggregationType(soap, p, "gml:AggregationType", "gml:AggregationType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum gml__AggregationType * SOAP_FMAC4 soap_get_gml__AggregationType(struct soap*, enum gml__AggregationType *, const char*, const char*);

inline int soap_read_gml__AggregationType(struct soap *soap, enum gml__AggregationType *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__AggregationType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StreamlineFlux_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StreamlineFlux_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__StreamlineFlux(struct soap*, enum resqml2__StreamlineFlux *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__StreamlineFlux(struct soap*, const char*, int, const enum resqml2__StreamlineFlux *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__StreamlineFlux2s(struct soap*, enum resqml2__StreamlineFlux);
SOAP_FMAC3 enum resqml2__StreamlineFlux * SOAP_FMAC4 soap_in_resqml2__StreamlineFlux(struct soap*, const char*, enum resqml2__StreamlineFlux *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__StreamlineFlux(struct soap*, const char*, enum resqml2__StreamlineFlux *);

inline enum resqml2__StreamlineFlux * soap_new_resqml2__StreamlineFlux(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__StreamlineFlux *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__StreamlineFlux)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__StreamlineFlux(struct soap*, const enum resqml2__StreamlineFlux *, const char*, const char*);

inline int soap_write_resqml2__StreamlineFlux(struct soap *soap, enum resqml2__StreamlineFlux const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__StreamlineFlux(soap, p, "resqml2:StreamlineFlux", "resqml2:StreamlineFlux") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__StreamlineFlux * SOAP_FMAC4 soap_get_resqml2__StreamlineFlux(struct soap*, enum resqml2__StreamlineFlux *, const char*, const char*);

inline int soap_read_resqml2__StreamlineFlux(struct soap *soap, enum resqml2__StreamlineFlux *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__StreamlineFlux(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParameterKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParameterKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__ParameterKind(struct soap*, enum resqml2__ParameterKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ParameterKind(struct soap*, const char*, int, const enum resqml2__ParameterKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__ParameterKind2s(struct soap*, enum resqml2__ParameterKind);
SOAP_FMAC3 enum resqml2__ParameterKind * SOAP_FMAC4 soap_in_resqml2__ParameterKind(struct soap*, const char*, enum resqml2__ParameterKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__ParameterKind(struct soap*, const char*, enum resqml2__ParameterKind *);

inline enum resqml2__ParameterKind * soap_new_resqml2__ParameterKind(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__ParameterKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__ParameterKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__ParameterKind(struct soap*, const enum resqml2__ParameterKind *, const char*, const char*);

inline int soap_write_resqml2__ParameterKind(struct soap *soap, enum resqml2__ParameterKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__ParameterKind(soap, p, "resqml2:ParameterKind", "resqml2:ParameterKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__ParameterKind * SOAP_FMAC4 soap_get_resqml2__ParameterKind(struct soap*, enum resqml2__ParameterKind *, const char*, const char*);

inline int soap_read_resqml2__ParameterKind(struct soap *soap, enum resqml2__ParameterKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__ParameterKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__LineRole_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__LineRole_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__LineRole(struct soap*, enum resqml2__LineRole *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__LineRole(struct soap*, const char*, int, const enum resqml2__LineRole *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__LineRole2s(struct soap*, enum resqml2__LineRole);
SOAP_FMAC3 enum resqml2__LineRole * SOAP_FMAC4 soap_in_resqml2__LineRole(struct soap*, const char*, enum resqml2__LineRole *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__LineRole(struct soap*, const char*, enum resqml2__LineRole *);

inline enum resqml2__LineRole * soap_new_resqml2__LineRole(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__LineRole *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__LineRole)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__LineRole(struct soap*, const enum resqml2__LineRole *, const char*, const char*);

inline int soap_write_resqml2__LineRole(struct soap *soap, enum resqml2__LineRole const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__LineRole(soap, p, "resqml2:LineRole", "resqml2:LineRole") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__LineRole * SOAP_FMAC4 soap_get_resqml2__LineRole(struct soap*, enum resqml2__LineRole *, const char*, const char*);

inline int soap_read_resqml2__LineRole(struct soap *soap, enum resqml2__LineRole *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__LineRole(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SurfaceRole_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SurfaceRole_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__SurfaceRole(struct soap*, enum resqml2__SurfaceRole *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SurfaceRole(struct soap*, const char*, int, const enum resqml2__SurfaceRole *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__SurfaceRole2s(struct soap*, enum resqml2__SurfaceRole);
SOAP_FMAC3 enum resqml2__SurfaceRole * SOAP_FMAC4 soap_in_resqml2__SurfaceRole(struct soap*, const char*, enum resqml2__SurfaceRole *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__SurfaceRole(struct soap*, const char*, enum resqml2__SurfaceRole *);

inline enum resqml2__SurfaceRole * soap_new_resqml2__SurfaceRole(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__SurfaceRole *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__SurfaceRole)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__SurfaceRole(struct soap*, const enum resqml2__SurfaceRole *, const char*, const char*);

inline int soap_write_resqml2__SurfaceRole(struct soap *soap, enum resqml2__SurfaceRole const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__SurfaceRole(soap, p, "resqml2:SurfaceRole", "resqml2:SurfaceRole") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__SurfaceRole * SOAP_FMAC4 soap_get_resqml2__SurfaceRole(struct soap*, enum resqml2__SurfaceRole *, const char*, const char*);

inline int soap_read_resqml2__SurfaceRole(struct soap *soap, enum resqml2__SurfaceRole *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__SurfaceRole(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__FluidMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__FluidMarker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__FluidMarker(struct soap*, enum resqml2__FluidMarker *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__FluidMarker(struct soap*, const char*, int, const enum resqml2__FluidMarker *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__FluidMarker2s(struct soap*, enum resqml2__FluidMarker);
SOAP_FMAC3 enum resqml2__FluidMarker * SOAP_FMAC4 soap_in_resqml2__FluidMarker(struct soap*, const char*, enum resqml2__FluidMarker *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__FluidMarker(struct soap*, const char*, enum resqml2__FluidMarker *);

inline enum resqml2__FluidMarker * soap_new_resqml2__FluidMarker(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__FluidMarker *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__FluidMarker)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__FluidMarker(struct soap*, const enum resqml2__FluidMarker *, const char*, const char*);

inline int soap_write_resqml2__FluidMarker(struct soap *soap, enum resqml2__FluidMarker const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__FluidMarker(soap, p, "resqml2:FluidMarker", "resqml2:FluidMarker") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__FluidMarker * SOAP_FMAC4 soap_get_resqml2__FluidMarker(struct soap*, enum resqml2__FluidMarker *, const char*, const char*);

inline int soap_read_resqml2__FluidMarker(struct soap *soap, enum resqml2__FluidMarker *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__FluidMarker(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__MdReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__MdReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__MdReference(struct soap*, enum resqml2__MdReference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__MdReference(struct soap*, const char*, int, const enum resqml2__MdReference *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__MdReference2s(struct soap*, enum resqml2__MdReference);
SOAP_FMAC3 enum resqml2__MdReference * SOAP_FMAC4 soap_in_resqml2__MdReference(struct soap*, const char*, enum resqml2__MdReference *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__MdReference(struct soap*, const char*, enum resqml2__MdReference *);

inline enum resqml2__MdReference * soap_new_resqml2__MdReference(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__MdReference *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__MdReference)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__MdReference(struct soap*, const enum resqml2__MdReference *, const char*, const char*);

inline int soap_write_resqml2__MdReference(struct soap *soap, enum resqml2__MdReference const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__MdReference(soap, p, "resqml2:MdReference", "resqml2:MdReference") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__MdReference * SOAP_FMAC4 soap_get_resqml2__MdReference(struct soap*, enum resqml2__MdReference *, const char*, const char*);

inline int soap_read_resqml2__MdReference(struct soap *soap, enum resqml2__MdReference *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__MdReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__MdDomain_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__MdDomain_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__MdDomain(struct soap*, enum resqml2__MdDomain *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__MdDomain(struct soap*, const char*, int, const enum resqml2__MdDomain *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__MdDomain2s(struct soap*, enum resqml2__MdDomain);
SOAP_FMAC3 enum resqml2__MdDomain * SOAP_FMAC4 soap_in_resqml2__MdDomain(struct soap*, const char*, enum resqml2__MdDomain *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__MdDomain(struct soap*, const char*, enum resqml2__MdDomain *);

inline enum resqml2__MdDomain * soap_new_resqml2__MdDomain(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__MdDomain *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__MdDomain)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__MdDomain(struct soap*, const enum resqml2__MdDomain *, const char*, const char*);

inline int soap_write_resqml2__MdDomain(struct soap *soap, enum resqml2__MdDomain const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__MdDomain(soap, p, "resqml2:MdDomain", "resqml2:MdDomain") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__MdDomain * SOAP_FMAC4 soap_get_resqml2__MdDomain(struct soap*, enum resqml2__MdDomain *, const char*, const char*);

inline int soap_read_resqml2__MdDomain(struct soap *soap, enum resqml2__MdDomain *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__MdDomain(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__WellboreFrameIndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__WellboreFrameIndexableElements_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__WellboreFrameIndexableElements(struct soap*, enum resqml2__WellboreFrameIndexableElements *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__WellboreFrameIndexableElements(struct soap*, const char*, int, const enum resqml2__WellboreFrameIndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__WellboreFrameIndexableElements2s(struct soap*, enum resqml2__WellboreFrameIndexableElements);
SOAP_FMAC3 enum resqml2__WellboreFrameIndexableElements * SOAP_FMAC4 soap_in_resqml2__WellboreFrameIndexableElements(struct soap*, const char*, enum resqml2__WellboreFrameIndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__WellboreFrameIndexableElements(struct soap*, const char*, enum resqml2__WellboreFrameIndexableElements *);

inline enum resqml2__WellboreFrameIndexableElements * soap_new_resqml2__WellboreFrameIndexableElements(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__WellboreFrameIndexableElements *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__WellboreFrameIndexableElements)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__WellboreFrameIndexableElements(struct soap*, const enum resqml2__WellboreFrameIndexableElements *, const char*, const char*);

inline int soap_write_resqml2__WellboreFrameIndexableElements(struct soap *soap, enum resqml2__WellboreFrameIndexableElements const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__WellboreFrameIndexableElements(soap, p, "resqml2:WellboreFrameIndexableElements", "resqml2:WellboreFrameIndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__WellboreFrameIndexableElements * SOAP_FMAC4 soap_get_resqml2__WellboreFrameIndexableElements(struct soap*, enum resqml2__WellboreFrameIndexableElements *, const char*, const char*);

inline int soap_read_resqml2__WellboreFrameIndexableElements(struct soap *soap, enum resqml2__WellboreFrameIndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__WellboreFrameIndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeologicBoundaryKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeologicBoundaryKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__GeologicBoundaryKind(struct soap*, enum resqml2__GeologicBoundaryKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GeologicBoundaryKind(struct soap*, const char*, int, const enum resqml2__GeologicBoundaryKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__GeologicBoundaryKind2s(struct soap*, enum resqml2__GeologicBoundaryKind);
SOAP_FMAC3 enum resqml2__GeologicBoundaryKind * SOAP_FMAC4 soap_in_resqml2__GeologicBoundaryKind(struct soap*, const char*, enum resqml2__GeologicBoundaryKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__GeologicBoundaryKind(struct soap*, const char*, enum resqml2__GeologicBoundaryKind *);

inline enum resqml2__GeologicBoundaryKind * soap_new_resqml2__GeologicBoundaryKind(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__GeologicBoundaryKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__GeologicBoundaryKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__GeologicBoundaryKind(struct soap*, const enum resqml2__GeologicBoundaryKind *, const char*, const char*);

inline int soap_write_resqml2__GeologicBoundaryKind(struct soap *soap, enum resqml2__GeologicBoundaryKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__GeologicBoundaryKind(soap, p, "resqml2:GeologicBoundaryKind", "resqml2:GeologicBoundaryKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__GeologicBoundaryKind * SOAP_FMAC4 soap_get_resqml2__GeologicBoundaryKind(struct soap*, enum resqml2__GeologicBoundaryKind *, const char*, const char*);

inline int soap_read_resqml2__GeologicBoundaryKind(struct soap *soap, enum resqml2__GeologicBoundaryKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__GeologicBoundaryKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TectonicBoundaryKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TectonicBoundaryKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__TectonicBoundaryKind(struct soap*, enum resqml2__TectonicBoundaryKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TectonicBoundaryKind(struct soap*, const char*, int, const enum resqml2__TectonicBoundaryKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__TectonicBoundaryKind2s(struct soap*, enum resqml2__TectonicBoundaryKind);
SOAP_FMAC3 enum resqml2__TectonicBoundaryKind * SOAP_FMAC4 soap_in_resqml2__TectonicBoundaryKind(struct soap*, const char*, enum resqml2__TectonicBoundaryKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__TectonicBoundaryKind(struct soap*, const char*, enum resqml2__TectonicBoundaryKind *);

inline enum resqml2__TectonicBoundaryKind * soap_new_resqml2__TectonicBoundaryKind(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__TectonicBoundaryKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__TectonicBoundaryKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__TectonicBoundaryKind(struct soap*, const enum resqml2__TectonicBoundaryKind *, const char*, const char*);

inline int soap_write_resqml2__TectonicBoundaryKind(struct soap *soap, enum resqml2__TectonicBoundaryKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__TectonicBoundaryKind(soap, p, "resqml2:TectonicBoundaryKind", "resqml2:TectonicBoundaryKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__TectonicBoundaryKind * SOAP_FMAC4 soap_get_resqml2__TectonicBoundaryKind(struct soap*, enum resqml2__TectonicBoundaryKind *, const char*, const char*);

inline int soap_read_resqml2__TectonicBoundaryKind(struct soap *soap, enum resqml2__TectonicBoundaryKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__TectonicBoundaryKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__FluidContact_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__FluidContact_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__FluidContact(struct soap*, enum resqml2__FluidContact *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__FluidContact(struct soap*, const char*, int, const enum resqml2__FluidContact *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__FluidContact2s(struct soap*, enum resqml2__FluidContact);
SOAP_FMAC3 enum resqml2__FluidContact * SOAP_FMAC4 soap_in_resqml2__FluidContact(struct soap*, const char*, enum resqml2__FluidContact *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__FluidContact(struct soap*, const char*, enum resqml2__FluidContact *);

inline enum resqml2__FluidContact * soap_new_resqml2__FluidContact(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__FluidContact *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__FluidContact)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__FluidContact(struct soap*, const enum resqml2__FluidContact *, const char*, const char*);

inline int soap_write_resqml2__FluidContact(struct soap *soap, enum resqml2__FluidContact const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__FluidContact(soap, p, "resqml2:FluidContact", "resqml2:FluidContact") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__FluidContact * SOAP_FMAC4 soap_get_resqml2__FluidContact(struct soap*, enum resqml2__FluidContact *, const char*, const char*);

inline int soap_read_resqml2__FluidContact(struct soap *soap, enum resqml2__FluidContact *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__FluidContact(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeneticBoundaryKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeneticBoundaryKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__GeneticBoundaryKind(struct soap*, enum resqml2__GeneticBoundaryKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GeneticBoundaryKind(struct soap*, const char*, int, const enum resqml2__GeneticBoundaryKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__GeneticBoundaryKind2s(struct soap*, enum resqml2__GeneticBoundaryKind);
SOAP_FMAC3 enum resqml2__GeneticBoundaryKind * SOAP_FMAC4 soap_in_resqml2__GeneticBoundaryKind(struct soap*, const char*, enum resqml2__GeneticBoundaryKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__GeneticBoundaryKind(struct soap*, const char*, enum resqml2__GeneticBoundaryKind *);

inline enum resqml2__GeneticBoundaryKind * soap_new_resqml2__GeneticBoundaryKind(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__GeneticBoundaryKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__GeneticBoundaryKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__GeneticBoundaryKind(struct soap*, const enum resqml2__GeneticBoundaryKind *, const char*, const char*);

inline int soap_write_resqml2__GeneticBoundaryKind(struct soap *soap, enum resqml2__GeneticBoundaryKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__GeneticBoundaryKind(soap, p, "resqml2:GeneticBoundaryKind", "resqml2:GeneticBoundaryKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__GeneticBoundaryKind * SOAP_FMAC4 soap_get_resqml2__GeneticBoundaryKind(struct soap*, enum resqml2__GeneticBoundaryKind *, const char*, const char*);

inline int soap_read_resqml2__GeneticBoundaryKind(struct soap *soap, enum resqml2__GeneticBoundaryKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__GeneticBoundaryKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Phase_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Phase_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__Phase(struct soap*, enum resqml2__Phase *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Phase(struct soap*, const char*, int, const enum resqml2__Phase *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__Phase2s(struct soap*, enum resqml2__Phase);
SOAP_FMAC3 enum resqml2__Phase * SOAP_FMAC4 soap_in_resqml2__Phase(struct soap*, const char*, enum resqml2__Phase *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__Phase(struct soap*, const char*, enum resqml2__Phase *);

inline enum resqml2__Phase * soap_new_resqml2__Phase(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__Phase *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__Phase)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__Phase(struct soap*, const enum resqml2__Phase *, const char*, const char*);

inline int soap_write_resqml2__Phase(struct soap *soap, enum resqml2__Phase const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__Phase(soap, p, "resqml2:Phase", "resqml2:Phase") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__Phase * SOAP_FMAC4 soap_get_resqml2__Phase(struct soap*, enum resqml2__Phase *, const char*, const char*);

inline int soap_read_resqml2__Phase(struct soap *soap, enum resqml2__Phase *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__Phase(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeologicUnitMaterialImplacement_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeologicUnitMaterialImplacement_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__GeologicUnitMaterialImplacement(struct soap*, enum resqml2__GeologicUnitMaterialImplacement *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GeologicUnitMaterialImplacement(struct soap*, const char*, int, const enum resqml2__GeologicUnitMaterialImplacement *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__GeologicUnitMaterialImplacement2s(struct soap*, enum resqml2__GeologicUnitMaterialImplacement);
SOAP_FMAC3 enum resqml2__GeologicUnitMaterialImplacement * SOAP_FMAC4 soap_in_resqml2__GeologicUnitMaterialImplacement(struct soap*, const char*, enum resqml2__GeologicUnitMaterialImplacement *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__GeologicUnitMaterialImplacement(struct soap*, const char*, enum resqml2__GeologicUnitMaterialImplacement *);

inline enum resqml2__GeologicUnitMaterialImplacement * soap_new_resqml2__GeologicUnitMaterialImplacement(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__GeologicUnitMaterialImplacement *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__GeologicUnitMaterialImplacement)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__GeologicUnitMaterialImplacement(struct soap*, const enum resqml2__GeologicUnitMaterialImplacement *, const char*, const char*);

inline int soap_write_resqml2__GeologicUnitMaterialImplacement(struct soap *soap, enum resqml2__GeologicUnitMaterialImplacement const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__GeologicUnitMaterialImplacement(soap, p, "resqml2:GeologicUnitMaterialImplacement", "resqml2:GeologicUnitMaterialImplacement") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__GeologicUnitMaterialImplacement * SOAP_FMAC4 soap_get_resqml2__GeologicUnitMaterialImplacement(struct soap*, enum resqml2__GeologicUnitMaterialImplacement *, const char*, const char*);

inline int soap_read_resqml2__GeologicUnitMaterialImplacement(struct soap *soap, enum resqml2__GeologicUnitMaterialImplacement *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__GeologicUnitMaterialImplacement(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactSide_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactSide_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__ContactSide(struct soap*, enum resqml2__ContactSide *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ContactSide(struct soap*, const char*, int, const enum resqml2__ContactSide *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__ContactSide2s(struct soap*, enum resqml2__ContactSide);
SOAP_FMAC3 enum resqml2__ContactSide * SOAP_FMAC4 soap_in_resqml2__ContactSide(struct soap*, const char*, enum resqml2__ContactSide *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__ContactSide(struct soap*, const char*, enum resqml2__ContactSide *);

inline enum resqml2__ContactSide * soap_new_resqml2__ContactSide(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__ContactSide *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__ContactSide)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__ContactSide(struct soap*, const enum resqml2__ContactSide *, const char*, const char*);

inline int soap_write_resqml2__ContactSide(struct soap *soap, enum resqml2__ContactSide const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__ContactSide(soap, p, "resqml2:ContactSide", "resqml2:ContactSide") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__ContactSide * SOAP_FMAC4 soap_get_resqml2__ContactSide(struct soap*, enum resqml2__ContactSide *, const char*, const char*);

inline int soap_read_resqml2__ContactSide(struct soap *soap, enum resqml2__ContactSide *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__ContactSide(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactVerb_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactVerb_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__ContactVerb(struct soap*, enum resqml2__ContactVerb *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ContactVerb(struct soap*, const char*, int, const enum resqml2__ContactVerb *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__ContactVerb2s(struct soap*, enum resqml2__ContactVerb);
SOAP_FMAC3 enum resqml2__ContactVerb * SOAP_FMAC4 soap_in_resqml2__ContactVerb(struct soap*, const char*, enum resqml2__ContactVerb *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__ContactVerb(struct soap*, const char*, enum resqml2__ContactVerb *);

inline enum resqml2__ContactVerb * soap_new_resqml2__ContactVerb(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__ContactVerb *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__ContactVerb)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__ContactVerb(struct soap*, const enum resqml2__ContactVerb *, const char*, const char*);

inline int soap_write_resqml2__ContactVerb(struct soap *soap, enum resqml2__ContactVerb const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__ContactVerb(soap, p, "resqml2:ContactVerb", "resqml2:ContactVerb") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__ContactVerb * SOAP_FMAC4 soap_get_resqml2__ContactVerb(struct soap*, enum resqml2__ContactVerb *, const char*, const char*);

inline int soap_read_resqml2__ContactVerb(struct soap *soap, enum resqml2__ContactVerb *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__ContactVerb(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Geobody3dShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Geobody3dShape_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__Geobody3dShape(struct soap*, enum resqml2__Geobody3dShape *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Geobody3dShape(struct soap*, const char*, int, const enum resqml2__Geobody3dShape *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__Geobody3dShape2s(struct soap*, enum resqml2__Geobody3dShape);
SOAP_FMAC3 enum resqml2__Geobody3dShape * SOAP_FMAC4 soap_in_resqml2__Geobody3dShape(struct soap*, const char*, enum resqml2__Geobody3dShape *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__Geobody3dShape(struct soap*, const char*, enum resqml2__Geobody3dShape *);

inline enum resqml2__Geobody3dShape * soap_new_resqml2__Geobody3dShape(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__Geobody3dShape *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__Geobody3dShape)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__Geobody3dShape(struct soap*, const enum resqml2__Geobody3dShape *, const char*, const char*);

inline int soap_write_resqml2__Geobody3dShape(struct soap *soap, enum resqml2__Geobody3dShape const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__Geobody3dShape(soap, p, "resqml2:Geobody3dShape", "resqml2:Geobody3dShape") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__Geobody3dShape * SOAP_FMAC4 soap_get_resqml2__Geobody3dShape(struct soap*, enum resqml2__Geobody3dShape *, const char*, const char*);

inline int soap_read_resqml2__Geobody3dShape(struct soap *soap, enum resqml2__Geobody3dShape *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__Geobody3dShape(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__OrderingCriteria_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__OrderingCriteria_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__OrderingCriteria(struct soap*, enum resqml2__OrderingCriteria *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__OrderingCriteria(struct soap*, const char*, int, const enum resqml2__OrderingCriteria *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__OrderingCriteria2s(struct soap*, enum resqml2__OrderingCriteria);
SOAP_FMAC3 enum resqml2__OrderingCriteria * SOAP_FMAC4 soap_in_resqml2__OrderingCriteria(struct soap*, const char*, enum resqml2__OrderingCriteria *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__OrderingCriteria(struct soap*, const char*, enum resqml2__OrderingCriteria *);

inline enum resqml2__OrderingCriteria * soap_new_resqml2__OrderingCriteria(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__OrderingCriteria *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__OrderingCriteria)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__OrderingCriteria(struct soap*, const enum resqml2__OrderingCriteria *, const char*, const char*);

inline int soap_write_resqml2__OrderingCriteria(struct soap *soap, enum resqml2__OrderingCriteria const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__OrderingCriteria(soap, p, "resqml2:OrderingCriteria", "resqml2:OrderingCriteria") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__OrderingCriteria * SOAP_FMAC4 soap_get_resqml2__OrderingCriteria(struct soap*, enum resqml2__OrderingCriteria *, const char*, const char*);

inline int soap_read_resqml2__OrderingCriteria(struct soap *soap, enum resqml2__OrderingCriteria *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__OrderingCriteria(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactMode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactMode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__ContactMode(struct soap*, enum resqml2__ContactMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ContactMode(struct soap*, const char*, int, const enum resqml2__ContactMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__ContactMode2s(struct soap*, enum resqml2__ContactMode);
SOAP_FMAC3 enum resqml2__ContactMode * SOAP_FMAC4 soap_in_resqml2__ContactMode(struct soap*, const char*, enum resqml2__ContactMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__ContactMode(struct soap*, const char*, enum resqml2__ContactMode *);

inline enum resqml2__ContactMode * soap_new_resqml2__ContactMode(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__ContactMode *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__ContactMode)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__ContactMode(struct soap*, const enum resqml2__ContactMode *, const char*, const char*);

inline int soap_write_resqml2__ContactMode(struct soap *soap, enum resqml2__ContactMode const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__ContactMode(soap, p, "resqml2:ContactMode", "resqml2:ContactMode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__ContactMode * SOAP_FMAC4 soap_get_resqml2__ContactMode(struct soap*, enum resqml2__ContactMode *, const char*, const char*);

inline int soap_read_resqml2__ContactMode(struct soap *soap, enum resqml2__ContactMode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__ContactMode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BoundaryRelation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BoundaryRelation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__BoundaryRelation(struct soap*, enum resqml2__BoundaryRelation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__BoundaryRelation(struct soap*, const char*, int, const enum resqml2__BoundaryRelation *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__BoundaryRelation2s(struct soap*, enum resqml2__BoundaryRelation);
SOAP_FMAC3 enum resqml2__BoundaryRelation * SOAP_FMAC4 soap_in_resqml2__BoundaryRelation(struct soap*, const char*, enum resqml2__BoundaryRelation *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__BoundaryRelation(struct soap*, const char*, enum resqml2__BoundaryRelation *);

inline enum resqml2__BoundaryRelation * soap_new_resqml2__BoundaryRelation(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__BoundaryRelation *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__BoundaryRelation)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__BoundaryRelation(struct soap*, const enum resqml2__BoundaryRelation *, const char*, const char*);

inline int soap_write_resqml2__BoundaryRelation(struct soap *soap, enum resqml2__BoundaryRelation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__BoundaryRelation(soap, p, "resqml2:BoundaryRelation", "resqml2:BoundaryRelation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__BoundaryRelation * SOAP_FMAC4 soap_get_resqml2__BoundaryRelation(struct soap*, enum resqml2__BoundaryRelation *, const char*, const char*);

inline int soap_read_resqml2__BoundaryRelation(struct soap *soap, enum resqml2__BoundaryRelation *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__BoundaryRelation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Domain_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Domain_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__Domain(struct soap*, enum resqml2__Domain *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Domain(struct soap*, const char*, int, const enum resqml2__Domain *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__Domain2s(struct soap*, enum resqml2__Domain);
SOAP_FMAC3 enum resqml2__Domain * SOAP_FMAC4 soap_in_resqml2__Domain(struct soap*, const char*, enum resqml2__Domain *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__Domain(struct soap*, const char*, enum resqml2__Domain *);

inline enum resqml2__Domain * soap_new_resqml2__Domain(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__Domain *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__Domain)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__Domain(struct soap*, const enum resqml2__Domain *, const char*, const char*);

inline int soap_write_resqml2__Domain(struct soap *soap, enum resqml2__Domain const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__Domain(soap, p, "resqml2:Domain", "resqml2:Domain") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__Domain * SOAP_FMAC4 soap_get_resqml2__Domain(struct soap*, enum resqml2__Domain *, const char*, const char*);

inline int soap_read_resqml2__Domain(struct soap *soap, enum resqml2__Domain *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__Domain(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeologicUnitComposition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeologicUnitComposition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__GeologicUnitComposition(struct soap*, enum resqml2__GeologicUnitComposition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GeologicUnitComposition(struct soap*, const char*, int, const enum resqml2__GeologicUnitComposition *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__GeologicUnitComposition2s(struct soap*, enum resqml2__GeologicUnitComposition);
SOAP_FMAC3 enum resqml2__GeologicUnitComposition * SOAP_FMAC4 soap_in_resqml2__GeologicUnitComposition(struct soap*, const char*, enum resqml2__GeologicUnitComposition *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__GeologicUnitComposition(struct soap*, const char*, enum resqml2__GeologicUnitComposition *);

inline enum resqml2__GeologicUnitComposition * soap_new_resqml2__GeologicUnitComposition(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__GeologicUnitComposition *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__GeologicUnitComposition)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__GeologicUnitComposition(struct soap*, const enum resqml2__GeologicUnitComposition *, const char*, const char*);

inline int soap_write_resqml2__GeologicUnitComposition(struct soap *soap, enum resqml2__GeologicUnitComposition const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__GeologicUnitComposition(soap, p, "resqml2:GeologicUnitComposition", "resqml2:GeologicUnitComposition") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__GeologicUnitComposition * SOAP_FMAC4 soap_get_resqml2__GeologicUnitComposition(struct soap*, enum resqml2__GeologicUnitComposition *, const char*, const char*);

inline int soap_read_resqml2__GeologicUnitComposition(struct soap *soap, enum resqml2__GeologicUnitComposition *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__GeologicUnitComposition(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DepositionMode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DepositionMode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__DepositionMode(struct soap*, enum resqml2__DepositionMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__DepositionMode(struct soap*, const char*, int, const enum resqml2__DepositionMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__DepositionMode2s(struct soap*, enum resqml2__DepositionMode);
SOAP_FMAC3 enum resqml2__DepositionMode * SOAP_FMAC4 soap_in_resqml2__DepositionMode(struct soap*, const char*, enum resqml2__DepositionMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__DepositionMode(struct soap*, const char*, enum resqml2__DepositionMode *);

inline enum resqml2__DepositionMode * soap_new_resqml2__DepositionMode(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__DepositionMode *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__DepositionMode)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__DepositionMode(struct soap*, const enum resqml2__DepositionMode *, const char*, const char*);

inline int soap_write_resqml2__DepositionMode(struct soap *soap, enum resqml2__DepositionMode const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__DepositionMode(soap, p, "resqml2:DepositionMode", "resqml2:DepositionMode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__DepositionMode * SOAP_FMAC4 soap_get_resqml2__DepositionMode(struct soap*, enum resqml2__DepositionMode *, const char*, const char*);

inline int soap_read_resqml2__DepositionMode(struct soap *soap, enum resqml2__DepositionMode *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__DepositionMode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactRelationship_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactRelationship_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__ContactRelationship(struct soap*, enum resqml2__ContactRelationship *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ContactRelationship(struct soap*, const char*, int, const enum resqml2__ContactRelationship *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__ContactRelationship2s(struct soap*, enum resqml2__ContactRelationship);
SOAP_FMAC3 enum resqml2__ContactRelationship * SOAP_FMAC4 soap_in_resqml2__ContactRelationship(struct soap*, const char*, enum resqml2__ContactRelationship *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__ContactRelationship(struct soap*, const char*, enum resqml2__ContactRelationship *);

inline enum resqml2__ContactRelationship * soap_new_resqml2__ContactRelationship(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__ContactRelationship *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__ContactRelationship)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__ContactRelationship(struct soap*, const enum resqml2__ContactRelationship *, const char*, const char*);

inline int soap_write_resqml2__ContactRelationship(struct soap *soap, enum resqml2__ContactRelationship const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__ContactRelationship(soap, p, "resqml2:ContactRelationship", "resqml2:ContactRelationship") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__ContactRelationship * SOAP_FMAC4 soap_get_resqml2__ContactRelationship(struct soap*, enum resqml2__ContactRelationship *, const char*, const char*);

inline int soap_read_resqml2__ContactRelationship(struct soap *soap, enum resqml2__ContactRelationship *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__ContactRelationship(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SequenceStratigraphySurface_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SequenceStratigraphySurface_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__SequenceStratigraphySurface(struct soap*, enum resqml2__SequenceStratigraphySurface *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SequenceStratigraphySurface(struct soap*, const char*, int, const enum resqml2__SequenceStratigraphySurface *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__SequenceStratigraphySurface2s(struct soap*, enum resqml2__SequenceStratigraphySurface);
SOAP_FMAC3 enum resqml2__SequenceStratigraphySurface * SOAP_FMAC4 soap_in_resqml2__SequenceStratigraphySurface(struct soap*, const char*, enum resqml2__SequenceStratigraphySurface *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__SequenceStratigraphySurface(struct soap*, const char*, enum resqml2__SequenceStratigraphySurface *);

inline enum resqml2__SequenceStratigraphySurface * soap_new_resqml2__SequenceStratigraphySurface(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__SequenceStratigraphySurface *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__SequenceStratigraphySurface)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__SequenceStratigraphySurface(struct soap*, const enum resqml2__SequenceStratigraphySurface *, const char*, const char*);

inline int soap_write_resqml2__SequenceStratigraphySurface(struct soap *soap, enum resqml2__SequenceStratigraphySurface const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__SequenceStratigraphySurface(soap, p, "resqml2:SequenceStratigraphySurface", "resqml2:SequenceStratigraphySurface") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__SequenceStratigraphySurface * SOAP_FMAC4 soap_get_resqml2__SequenceStratigraphySurface(struct soap*, enum resqml2__SequenceStratigraphySurface *, const char*, const char*);

inline int soap_read_resqml2__SequenceStratigraphySurface(struct soap *soap, enum resqml2__SequenceStratigraphySurface *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__SequenceStratigraphySurface(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ThrowKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ThrowKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__ThrowKind(struct soap*, enum resqml2__ThrowKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ThrowKind(struct soap*, const char*, int, const enum resqml2__ThrowKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__ThrowKind2s(struct soap*, enum resqml2__ThrowKind);
SOAP_FMAC3 enum resqml2__ThrowKind * SOAP_FMAC4 soap_in_resqml2__ThrowKind(struct soap*, const char*, enum resqml2__ThrowKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__ThrowKind(struct soap*, const char*, enum resqml2__ThrowKind *);

inline enum resqml2__ThrowKind * soap_new_resqml2__ThrowKind(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__ThrowKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__ThrowKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__ThrowKind(struct soap*, const enum resqml2__ThrowKind *, const char*, const char*);

inline int soap_write_resqml2__ThrowKind(struct soap *soap, enum resqml2__ThrowKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__ThrowKind(soap, p, "resqml2:ThrowKind", "resqml2:ThrowKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__ThrowKind * SOAP_FMAC4 soap_get_resqml2__ThrowKind(struct soap*, enum resqml2__ThrowKind *, const char*, const char*);

inline int soap_read_resqml2__ThrowKind(struct soap *soap, enum resqml2__ThrowKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__ThrowKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PillarShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PillarShape_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__PillarShape(struct soap*, enum resqml2__PillarShape *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__PillarShape(struct soap*, const char*, int, const enum resqml2__PillarShape *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__PillarShape2s(struct soap*, enum resqml2__PillarShape);
SOAP_FMAC3 enum resqml2__PillarShape * SOAP_FMAC4 soap_in_resqml2__PillarShape(struct soap*, const char*, enum resqml2__PillarShape *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__PillarShape(struct soap*, const char*, enum resqml2__PillarShape *);

inline enum resqml2__PillarShape * soap_new_resqml2__PillarShape(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__PillarShape *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__PillarShape)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__PillarShape(struct soap*, const enum resqml2__PillarShape *, const char*, const char*);

inline int soap_write_resqml2__PillarShape(struct soap *soap, enum resqml2__PillarShape const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__PillarShape(soap, p, "resqml2:PillarShape", "resqml2:PillarShape") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__PillarShape * SOAP_FMAC4 soap_get_resqml2__PillarShape(struct soap*, enum resqml2__PillarShape *, const char*, const char*);

inline int soap_read_resqml2__PillarShape(struct soap *soap, enum resqml2__PillarShape *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__PillarShape(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredCellIndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredCellIndexableElements_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__UnstructuredCellIndexableElements(struct soap*, enum resqml2__UnstructuredCellIndexableElements *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__UnstructuredCellIndexableElements(struct soap*, const char*, int, const enum resqml2__UnstructuredCellIndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__UnstructuredCellIndexableElements2s(struct soap*, enum resqml2__UnstructuredCellIndexableElements);
SOAP_FMAC3 enum resqml2__UnstructuredCellIndexableElements * SOAP_FMAC4 soap_in_resqml2__UnstructuredCellIndexableElements(struct soap*, const char*, enum resqml2__UnstructuredCellIndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__UnstructuredCellIndexableElements(struct soap*, const char*, enum resqml2__UnstructuredCellIndexableElements *);

inline enum resqml2__UnstructuredCellIndexableElements * soap_new_resqml2__UnstructuredCellIndexableElements(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__UnstructuredCellIndexableElements *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__UnstructuredCellIndexableElements)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__UnstructuredCellIndexableElements(struct soap*, const enum resqml2__UnstructuredCellIndexableElements *, const char*, const char*);

inline int soap_write_resqml2__UnstructuredCellIndexableElements(struct soap *soap, enum resqml2__UnstructuredCellIndexableElements const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__UnstructuredCellIndexableElements(soap, p, "resqml2:UnstructuredCellIndexableElements", "resqml2:UnstructuredCellIndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__UnstructuredCellIndexableElements * SOAP_FMAC4 soap_get_resqml2__UnstructuredCellIndexableElements(struct soap*, enum resqml2__UnstructuredCellIndexableElements *, const char*, const char*);

inline int soap_read_resqml2__UnstructuredCellIndexableElements(struct soap *soap, enum resqml2__UnstructuredCellIndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__UnstructuredCellIndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellShape_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__CellShape(struct soap*, enum resqml2__CellShape *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__CellShape(struct soap*, const char*, int, const enum resqml2__CellShape *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__CellShape2s(struct soap*, enum resqml2__CellShape);
SOAP_FMAC3 enum resqml2__CellShape * SOAP_FMAC4 soap_in_resqml2__CellShape(struct soap*, const char*, enum resqml2__CellShape *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__CellShape(struct soap*, const char*, enum resqml2__CellShape *);

inline enum resqml2__CellShape * soap_new_resqml2__CellShape(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__CellShape *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__CellShape)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__CellShape(struct soap*, const enum resqml2__CellShape *, const char*, const char*);

inline int soap_write_resqml2__CellShape(struct soap *soap, enum resqml2__CellShape const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__CellShape(soap, p, "resqml2:CellShape", "resqml2:CellShape") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__CellShape * SOAP_FMAC4 soap_get_resqml2__CellShape(struct soap*, enum resqml2__CellShape *, const char*, const char*);

inline int soap_read_resqml2__CellShape(struct soap *soap, enum resqml2__CellShape *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__CellShape(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GridGeometryAttachment_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GridGeometryAttachment_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__GridGeometryAttachment(struct soap*, enum resqml2__GridGeometryAttachment *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GridGeometryAttachment(struct soap*, const char*, int, const enum resqml2__GridGeometryAttachment *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__GridGeometryAttachment2s(struct soap*, enum resqml2__GridGeometryAttachment);
SOAP_FMAC3 enum resqml2__GridGeometryAttachment * SOAP_FMAC4 soap_in_resqml2__GridGeometryAttachment(struct soap*, const char*, enum resqml2__GridGeometryAttachment *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__GridGeometryAttachment(struct soap*, const char*, enum resqml2__GridGeometryAttachment *);

inline enum resqml2__GridGeometryAttachment * soap_new_resqml2__GridGeometryAttachment(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__GridGeometryAttachment *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__GridGeometryAttachment)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__GridGeometryAttachment(struct soap*, const enum resqml2__GridGeometryAttachment *, const char*, const char*);

inline int soap_write_resqml2__GridGeometryAttachment(struct soap *soap, enum resqml2__GridGeometryAttachment const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__GridGeometryAttachment(soap, p, "resqml2:GridGeometryAttachment", "resqml2:GridGeometryAttachment") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__GridGeometryAttachment * SOAP_FMAC4 soap_get_resqml2__GridGeometryAttachment(struct soap*, enum resqml2__GridGeometryAttachment *, const char*, const char*);

inline int soap_read_resqml2__GridGeometryAttachment(struct soap *soap, enum resqml2__GridGeometryAttachment *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__GridGeometryAttachment(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjkIndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjkIndexableElements_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__IjkIndexableElements(struct soap*, enum resqml2__IjkIndexableElements *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IjkIndexableElements(struct soap*, const char*, int, const enum resqml2__IjkIndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__IjkIndexableElements2s(struct soap*, enum resqml2__IjkIndexableElements);
SOAP_FMAC3 enum resqml2__IjkIndexableElements * SOAP_FMAC4 soap_in_resqml2__IjkIndexableElements(struct soap*, const char*, enum resqml2__IjkIndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__IjkIndexableElements(struct soap*, const char*, enum resqml2__IjkIndexableElements *);

inline enum resqml2__IjkIndexableElements * soap_new_resqml2__IjkIndexableElements(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__IjkIndexableElements *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__IjkIndexableElements)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__IjkIndexableElements(struct soap*, const enum resqml2__IjkIndexableElements *, const char*, const char*);

inline int soap_write_resqml2__IjkIndexableElements(struct soap *soap, enum resqml2__IjkIndexableElements const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__IjkIndexableElements(soap, p, "resqml2:IjkIndexableElements", "resqml2:IjkIndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__IjkIndexableElements * SOAP_FMAC4 soap_get_resqml2__IjkIndexableElements(struct soap*, enum resqml2__IjkIndexableElements *, const char*, const char*);

inline int soap_read_resqml2__IjkIndexableElements(struct soap *soap, enum resqml2__IjkIndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__IjkIndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__KDirection_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__KDirection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__KDirection(struct soap*, enum resqml2__KDirection *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__KDirection(struct soap*, const char*, int, const enum resqml2__KDirection *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__KDirection2s(struct soap*, enum resqml2__KDirection);
SOAP_FMAC3 enum resqml2__KDirection * SOAP_FMAC4 soap_in_resqml2__KDirection(struct soap*, const char*, enum resqml2__KDirection *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__KDirection(struct soap*, const char*, enum resqml2__KDirection *);

inline enum resqml2__KDirection * soap_new_resqml2__KDirection(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__KDirection *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__KDirection)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__KDirection(struct soap*, const enum resqml2__KDirection *, const char*, const char*);

inline int soap_write_resqml2__KDirection(struct soap *soap, enum resqml2__KDirection const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__KDirection(soap, p, "resqml2:KDirection", "resqml2:KDirection") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__KDirection * SOAP_FMAC4 soap_get_resqml2__KDirection(struct soap*, enum resqml2__KDirection *, const char*, const char*);

inline int soap_read_resqml2__KDirection(struct soap *soap, enum resqml2__KDirection *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__KDirection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnShape_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__ColumnShape(struct soap*, enum resqml2__ColumnShape *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ColumnShape(struct soap*, const char*, int, const enum resqml2__ColumnShape *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__ColumnShape2s(struct soap*, enum resqml2__ColumnShape);
SOAP_FMAC3 enum resqml2__ColumnShape * SOAP_FMAC4 soap_in_resqml2__ColumnShape(struct soap*, const char*, enum resqml2__ColumnShape *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__ColumnShape(struct soap*, const char*, enum resqml2__ColumnShape *);

inline enum resqml2__ColumnShape * soap_new_resqml2__ColumnShape(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__ColumnShape *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__ColumnShape)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__ColumnShape(struct soap*, const enum resqml2__ColumnShape *, const char*, const char*);

inline int soap_write_resqml2__ColumnShape(struct soap *soap, enum resqml2__ColumnShape const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__ColumnShape(soap, p, "resqml2:ColumnShape", "resqml2:ColumnShape") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__ColumnShape * SOAP_FMAC4 soap_get_resqml2__ColumnShape(struct soap*, enum resqml2__ColumnShape *, const char*, const char*);

inline int soap_read_resqml2__ColumnShape(struct soap *soap, enum resqml2__ColumnShape *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__ColumnShape(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SubnodeNodeObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SubnodeNodeObject_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__SubnodeNodeObject(struct soap*, enum resqml2__SubnodeNodeObject *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SubnodeNodeObject(struct soap*, const char*, int, const enum resqml2__SubnodeNodeObject *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__SubnodeNodeObject2s(struct soap*, enum resqml2__SubnodeNodeObject);
SOAP_FMAC3 enum resqml2__SubnodeNodeObject * SOAP_FMAC4 soap_in_resqml2__SubnodeNodeObject(struct soap*, const char*, enum resqml2__SubnodeNodeObject *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__SubnodeNodeObject(struct soap*, const char*, enum resqml2__SubnodeNodeObject *);

inline enum resqml2__SubnodeNodeObject * soap_new_resqml2__SubnodeNodeObject(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__SubnodeNodeObject *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__SubnodeNodeObject)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__SubnodeNodeObject(struct soap*, const enum resqml2__SubnodeNodeObject *, const char*, const char*);

inline int soap_write_resqml2__SubnodeNodeObject(struct soap *soap, enum resqml2__SubnodeNodeObject const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__SubnodeNodeObject(soap, p, "resqml2:SubnodeNodeObject", "resqml2:SubnodeNodeObject") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__SubnodeNodeObject * SOAP_FMAC4 soap_get_resqml2__SubnodeNodeObject(struct soap*, enum resqml2__SubnodeNodeObject *, const char*, const char*);

inline int soap_read_resqml2__SubnodeNodeObject(struct soap *soap, enum resqml2__SubnodeNodeObject *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__SubnodeNodeObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredColumnLayerIndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredColumnLayerIndexableElements_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__UnstructuredColumnLayerIndexableElements(struct soap*, enum resqml2__UnstructuredColumnLayerIndexableElements *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__UnstructuredColumnLayerIndexableElements(struct soap*, const char*, int, const enum resqml2__UnstructuredColumnLayerIndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__UnstructuredColumnLayerIndexableElements2s(struct soap*, enum resqml2__UnstructuredColumnLayerIndexableElements);
SOAP_FMAC3 enum resqml2__UnstructuredColumnLayerIndexableElements * SOAP_FMAC4 soap_in_resqml2__UnstructuredColumnLayerIndexableElements(struct soap*, const char*, enum resqml2__UnstructuredColumnLayerIndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__UnstructuredColumnLayerIndexableElements(struct soap*, const char*, enum resqml2__UnstructuredColumnLayerIndexableElements *);

inline enum resqml2__UnstructuredColumnLayerIndexableElements * soap_new_resqml2__UnstructuredColumnLayerIndexableElements(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__UnstructuredColumnLayerIndexableElements *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__UnstructuredColumnLayerIndexableElements)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__UnstructuredColumnLayerIndexableElements(struct soap*, const enum resqml2__UnstructuredColumnLayerIndexableElements *, const char*, const char*);

inline int soap_write_resqml2__UnstructuredColumnLayerIndexableElements(struct soap *soap, enum resqml2__UnstructuredColumnLayerIndexableElements const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__UnstructuredColumnLayerIndexableElements(soap, p, "resqml2:UnstructuredColumnLayerIndexableElements", "resqml2:UnstructuredColumnLayerIndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__UnstructuredColumnLayerIndexableElements * SOAP_FMAC4 soap_get_resqml2__UnstructuredColumnLayerIndexableElements(struct soap*, enum resqml2__UnstructuredColumnLayerIndexableElements *, const char*, const char*);

inline int soap_read_resqml2__UnstructuredColumnLayerIndexableElements(struct soap *soap, enum resqml2__UnstructuredColumnLayerIndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__UnstructuredColumnLayerIndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IndexableElements_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IndexableElements_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__IndexableElements(struct soap*, enum resqml2__IndexableElements *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IndexableElements(struct soap*, const char*, int, const enum resqml2__IndexableElements *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__IndexableElements2s(struct soap*, enum resqml2__IndexableElements);
SOAP_FMAC3 enum resqml2__IndexableElements * SOAP_FMAC4 soap_in_resqml2__IndexableElements(struct soap*, const char*, enum resqml2__IndexableElements *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__IndexableElements(struct soap*, const char*, enum resqml2__IndexableElements *);

inline enum resqml2__IndexableElements * soap_new_resqml2__IndexableElements(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__IndexableElements *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__IndexableElements)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__IndexableElements(struct soap*, const enum resqml2__IndexableElements *, const char*, const char*);

inline int soap_write_resqml2__IndexableElements(struct soap *soap, enum resqml2__IndexableElements const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__IndexableElements(soap, p, "resqml2:IndexableElements", "resqml2:IndexableElements") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__IndexableElements * SOAP_FMAC4 soap_get_resqml2__IndexableElements(struct soap*, enum resqml2__IndexableElements *, const char*, const char*);

inline int soap_read_resqml2__IndexableElements(struct soap *soap, enum resqml2__IndexableElements *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__IndexableElements(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IdentityKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IdentityKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__IdentityKind(struct soap*, enum resqml2__IdentityKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IdentityKind(struct soap*, const char*, int, const enum resqml2__IdentityKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__IdentityKind2s(struct soap*, enum resqml2__IdentityKind);
SOAP_FMAC3 enum resqml2__IdentityKind * SOAP_FMAC4 soap_in_resqml2__IdentityKind(struct soap*, const char*, enum resqml2__IdentityKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__IdentityKind(struct soap*, const char*, enum resqml2__IdentityKind *);

inline enum resqml2__IdentityKind * soap_new_resqml2__IdentityKind(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__IdentityKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__IdentityKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__IdentityKind(struct soap*, const enum resqml2__IdentityKind *, const char*, const char*);

inline int soap_write_resqml2__IdentityKind(struct soap *soap, enum resqml2__IdentityKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__IdentityKind(soap, p, "resqml2:IdentityKind", "resqml2:IdentityKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__IdentityKind * SOAP_FMAC4 soap_get_resqml2__IdentityKind(struct soap*, enum resqml2__IdentityKind *, const char*, const char*);

inline int soap_read_resqml2__IdentityKind(struct soap *soap, enum resqml2__IdentityKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__IdentityKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ResqmlUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ResqmlUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__ResqmlUom(struct soap*, enum resqml2__ResqmlUom *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ResqmlUom(struct soap*, const char*, int, const enum resqml2__ResqmlUom *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__ResqmlUom2s(struct soap*, enum resqml2__ResqmlUom);
SOAP_FMAC3 enum resqml2__ResqmlUom * SOAP_FMAC4 soap_in_resqml2__ResqmlUom(struct soap*, const char*, enum resqml2__ResqmlUom *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__ResqmlUom(struct soap*, const char*, enum resqml2__ResqmlUom *);

inline enum resqml2__ResqmlUom * soap_new_resqml2__ResqmlUom(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__ResqmlUom *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__ResqmlUom)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__ResqmlUom(struct soap*, const enum resqml2__ResqmlUom *, const char*, const char*);

inline int soap_write_resqml2__ResqmlUom(struct soap *soap, enum resqml2__ResqmlUom const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__ResqmlUom(soap, p, "resqml2:ResqmlUom", "resqml2:ResqmlUom") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__ResqmlUom * SOAP_FMAC4 soap_get_resqml2__ResqmlUom(struct soap*, enum resqml2__ResqmlUom *, const char*, const char*);

inline int soap_read_resqml2__ResqmlUom(struct soap *soap, enum resqml2__ResqmlUom *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__ResqmlUom(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Facet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Facet_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__Facet(struct soap*, enum resqml2__Facet *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Facet(struct soap*, const char*, int, const enum resqml2__Facet *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__Facet2s(struct soap*, enum resqml2__Facet);
SOAP_FMAC3 enum resqml2__Facet * SOAP_FMAC4 soap_in_resqml2__Facet(struct soap*, const char*, enum resqml2__Facet *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__Facet(struct soap*, const char*, enum resqml2__Facet *);

inline enum resqml2__Facet * soap_new_resqml2__Facet(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__Facet *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__Facet)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__Facet(struct soap*, const enum resqml2__Facet *, const char*, const char*);

inline int soap_write_resqml2__Facet(struct soap *soap, enum resqml2__Facet const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__Facet(soap, p, "resqml2:Facet", "resqml2:Facet") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__Facet * SOAP_FMAC4 soap_get_resqml2__Facet(struct soap*, enum resqml2__Facet *, const char*, const char*);

inline int soap_read_resqml2__Facet(struct soap *soap, enum resqml2__Facet *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__Facet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeSetKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeSetKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_resqml2__TimeSetKind(struct soap*, enum resqml2__TimeSetKind *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TimeSetKind(struct soap*, const char*, int, const enum resqml2__TimeSetKind *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_resqml2__TimeSetKind2s(struct soap*, enum resqml2__TimeSetKind);
SOAP_FMAC3 enum resqml2__TimeSetKind * SOAP_FMAC4 soap_in_resqml2__TimeSetKind(struct soap*, const char*, enum resqml2__TimeSetKind *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2resqml2__TimeSetKind(struct soap*, const char*, enum resqml2__TimeSetKind *);

inline enum resqml2__TimeSetKind * soap_new_resqml2__TimeSetKind(struct soap *soap, int n = -1)
{
	return static_cast<enum resqml2__TimeSetKind *>(soap_malloc(soap, (n < 0 ? 1 : n) * sizeof(enum resqml2__TimeSetKind)));
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_resqml2__TimeSetKind(struct soap*, const enum resqml2__TimeSetKind *, const char*, const char*);

inline int soap_write_resqml2__TimeSetKind(struct soap *soap, enum resqml2__TimeSetKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_resqml2__TimeSetKind(soap, p, "resqml2:TimeSetKind", "resqml2:TimeSetKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 enum resqml2__TimeSetKind * SOAP_FMAC4 soap_get_resqml2__TimeSetKind(struct soap*, enum resqml2__TimeSetKind *, const char*, const char*);

inline int soap_read_resqml2__TimeSetKind(struct soap *soap, enum resqml2__TimeSetKind *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_resqml2__TimeSetKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* _ptm__standardEnergisticsPropertyTypeSet is a typedef synonym for ptm__standardEnergisticsPropertyTypeSet */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__ptm__standardEnergisticsPropertyTypeSet_DEFINED

#define soap_default__ptm__standardEnergisticsPropertyTypeSet(soap, a) (a)->ptm__standardEnergisticsPropertyTypeSet::soap_default(soap)


#define soap_serialize__ptm__standardEnergisticsPropertyTypeSet(soap, a) (a)->soap_serialize(soap)


#define soap__ptm__standardEnergisticsPropertyTypeSet2s soap_ptm__standardEnergisticsPropertyTypeSet2s


#define soap_out__ptm__standardEnergisticsPropertyTypeSet soap_out_ptm__standardEnergisticsPropertyTypeSet


#define soap_s2_ptm__standardEnergisticsPropertyTypeSet soap_s2ptm__standardEnergisticsPropertyTypeSet


#define soap_in__ptm__standardEnergisticsPropertyTypeSet soap_in_ptm__standardEnergisticsPropertyTypeSet


#define soap_instantiate__ptm__standardEnergisticsPropertyTypeSet soap_instantiate_ptm__standardEnergisticsPropertyTypeSet


#define soap_new__ptm__standardEnergisticsPropertyTypeSet soap_new_ptm__standardEnergisticsPropertyTypeSet


#define soap_new_req__ptm__standardEnergisticsPropertyTypeSet soap_new_req_ptm__standardEnergisticsPropertyTypeSet


#define soap_new_set__ptm__standardEnergisticsPropertyTypeSet soap_new_set_ptm__standardEnergisticsPropertyTypeSet


#define soap_put__ptm__standardEnergisticsPropertyTypeSet soap_put_ptm__standardEnergisticsPropertyTypeSet


#define soap_write__ptm__standardEnergisticsPropertyTypeSet soap_write_ptm__standardEnergisticsPropertyTypeSet


#define soap_get__ptm__standardEnergisticsPropertyTypeSet soap_get_ptm__standardEnergisticsPropertyTypeSet


#define soap_read__ptm__standardEnergisticsPropertyTypeSet soap_read_ptm__standardEnergisticsPropertyTypeSet

#endif
/* _gco__nilReason is a typedef synonym for gml__NilReasonType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__nilReason_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__nilReason_DEFINED

#define soap_default__gco__nilReason(soap, a) soap_default_gml__NilReasonType(soap, a)


#define soap_serialize__gco__nilReason soap_serialize_gml__NilReasonType


#define soap__gco__nilReason2s(soap, a) ((a).c_str())

#define soap_out__gco__nilReason soap_out_gml__NilReasonType


#define soap_s2_gco__nilReason(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gco__nilReason soap_in_gml__NilReasonType


#define soap_instantiate__gco__nilReason soap_instantiate_gml__NilReasonType


#define soap_new__gco__nilReason soap_new_gml__NilReasonType


#define soap_put__gco__nilReason soap_put_gml__NilReasonType


#define soap_write__gco__nilReason soap_write_gml__NilReasonType


#define soap_get__gco__nilReason soap_get_gml__NilReasonType


#define soap_read__gco__nilReason soap_read_gml__NilReasonType

#endif
/* _gco__Date is a typedef synonym for gco__Date_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__Date_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__Date_DEFINED

#define soap_default__gco__Date(soap, a) soap_default_gco__Date_USCOREType(soap, a)


#define soap_serialize__gco__Date soap_serialize_gco__Date_USCOREType


#define soap__gco__Date2s(soap, a) ((a).c_str())

#define soap_out__gco__Date soap_out_gco__Date_USCOREType


#define soap_s2_gco__Date(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gco__Date soap_in_gco__Date_USCOREType


#define soap_instantiate__gco__Date soap_instantiate_gco__Date_USCOREType


#define soap_new__gco__Date soap_new_gco__Date_USCOREType


#define soap_put__gco__Date soap_put_gco__Date_USCOREType


#define soap_write__gco__Date soap_write_gco__Date_USCOREType


#define soap_get__gco__Date soap_get_gco__Date_USCOREType


#define soap_read__gco__Date soap_read_gco__Date_USCOREType

#endif
/* _gco__CharacterString is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__CharacterString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__CharacterString_DEFINED

#define soap_default__gco__CharacterString(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__gco__CharacterString soap_serialize_std__string


#define soap__gco__CharacterString2s(soap, a) ((a).c_str())

#define soap_out__gco__CharacterString soap_out_std__string


#define soap_s2_gco__CharacterString(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gco__CharacterString soap_in_std__string


#define soap_instantiate__gco__CharacterString soap_instantiate_std__string


#define soap_new__gco__CharacterString soap_new_std__string


#define soap_put__gco__CharacterString soap_put_std__string


#define soap_write__gco__CharacterString soap_write_std__string


#define soap_get__gco__CharacterString soap_get_std__string


#define soap_read__gco__CharacterString soap_read_std__string

#endif
/* _gmd__DQ_USCOREEvaluationMethodTypeCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__DQ_USCOREEvaluationMethodTypeCode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__DQ_USCOREEvaluationMethodTypeCode_DEFINED

#define soap_default__gmd__DQ_USCOREEvaluationMethodTypeCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__DQ_USCOREEvaluationMethodTypeCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__DQ_USCOREEvaluationMethodTypeCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__DQ_USCOREEvaluationMethodTypeCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__DQ_USCOREEvaluationMethodTypeCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__DQ_USCOREEvaluationMethodTypeCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__DQ_USCOREEvaluationMethodTypeCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__DQ_USCOREEvaluationMethodTypeCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__DQ_USCOREEvaluationMethodTypeCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__DQ_USCOREEvaluationMethodTypeCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__DQ_USCOREEvaluationMethodTypeCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__DQ_USCOREEvaluationMethodTypeCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__DQ_USCOREEvaluationMethodTypeCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__DQ_USCOREEvaluationMethodTypeCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__CI_USCORESeries is a typedef synonym for gmd__CI_USCORESeries_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORESeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORESeries_DEFINED

#define soap_default__gmd__CI_USCORESeries(soap, a) (a)->gmd__CI_USCORESeries_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCORESeries(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCORESeries2s soap_gmd__CI_USCORESeries_USCOREType2s


#define soap_out__gmd__CI_USCORESeries soap_out_gmd__CI_USCORESeries_USCOREType


#define soap_s2_gmd__CI_USCORESeries soap_s2gmd__CI_USCORESeries_USCOREType


#define soap_in__gmd__CI_USCORESeries soap_in_gmd__CI_USCORESeries_USCOREType


#define soap_instantiate__gmd__CI_USCORESeries soap_instantiate_gmd__CI_USCORESeries_USCOREType


#define soap_new__gmd__CI_USCORESeries soap_new_gmd__CI_USCORESeries_USCOREType


#define soap_new_req__gmd__CI_USCORESeries soap_new_req_gmd__CI_USCORESeries_USCOREType


#define soap_new_set__gmd__CI_USCORESeries soap_new_set_gmd__CI_USCORESeries_USCOREType


#define soap_put__gmd__CI_USCORESeries soap_put_gmd__CI_USCORESeries_USCOREType


#define soap_write__gmd__CI_USCORESeries soap_write_gmd__CI_USCORESeries_USCOREType


#define soap_get__gmd__CI_USCORESeries soap_get_gmd__CI_USCORESeries_USCOREType


#define soap_read__gmd__CI_USCORESeries soap_read_gmd__CI_USCORESeries_USCOREType

#endif
/* _gmd__CI_USCOREPresentationFormCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREPresentationFormCode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREPresentationFormCode_DEFINED

#define soap_default__gmd__CI_USCOREPresentationFormCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREPresentationFormCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREPresentationFormCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__CI_USCOREPresentationFormCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__CI_USCOREPresentationFormCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__CI_USCOREPresentationFormCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__CI_USCOREPresentationFormCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__CI_USCOREPresentationFormCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__CI_USCOREPresentationFormCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__CI_USCOREPresentationFormCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__CI_USCOREPresentationFormCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__CI_USCOREPresentationFormCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__CI_USCOREPresentationFormCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__CI_USCOREPresentationFormCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__CI_USCORERoleCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORERoleCode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORERoleCode_DEFINED

#define soap_default__gmd__CI_USCORERoleCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCORERoleCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCORERoleCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__CI_USCORERoleCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__CI_USCORERoleCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__CI_USCORERoleCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__CI_USCORERoleCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__CI_USCORERoleCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__CI_USCORERoleCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__CI_USCORERoleCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__CI_USCORERoleCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__CI_USCORERoleCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__CI_USCORERoleCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__CI_USCORERoleCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__CI_USCOREOnLineFunctionCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnLineFunctionCode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnLineFunctionCode_DEFINED

#define soap_default__gmd__CI_USCOREOnLineFunctionCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREOnLineFunctionCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREOnLineFunctionCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__CI_USCOREOnLineFunctionCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__CI_USCOREOnLineFunctionCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__CI_USCOREOnLineFunctionCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__CI_USCOREOnLineFunctionCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__CI_USCOREOnLineFunctionCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__CI_USCOREOnLineFunctionCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__CI_USCOREOnLineFunctionCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__CI_USCOREOnLineFunctionCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__CI_USCOREOnLineFunctionCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__CI_USCOREOnLineFunctionCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__CI_USCOREOnLineFunctionCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__URL is a typedef synonym for xsd__anyURI */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__URL_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__URL_DEFINED

#define soap_default__gmd__URL(soap, a) soap_default_xsd__anyURI(soap, a)


#define soap_serialize__gmd__URL soap_serialize_xsd__anyURI


#define soap__gmd__URL2s(soap, a) ((a).c_str())

#define soap_out__gmd__URL soap_out_xsd__anyURI


#define soap_s2_gmd__URL(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gmd__URL soap_in_xsd__anyURI


#define soap_instantiate__gmd__URL soap_instantiate_xsd__anyURI


#define soap_new__gmd__URL soap_new_xsd__anyURI


#define soap_put__gmd__URL soap_put_xsd__anyURI


#define soap_write__gmd__URL soap_write_xsd__anyURI


#define soap_get__gmd__URL soap_get_xsd__anyURI


#define soap_read__gmd__URL soap_read_xsd__anyURI

#endif
/* _gmd__CI_USCOREOnlineResource is a typedef synonym for gmd__CI_USCOREOnlineResource_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnlineResource_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREOnlineResource_DEFINED

#define soap_default__gmd__CI_USCOREOnlineResource(soap, a) (a)->gmd__CI_USCOREOnlineResource_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREOnlineResource(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREOnlineResource2s soap_gmd__CI_USCOREOnlineResource_USCOREType2s


#define soap_out__gmd__CI_USCOREOnlineResource soap_out_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_s2_gmd__CI_USCOREOnlineResource soap_s2gmd__CI_USCOREOnlineResource_USCOREType


#define soap_in__gmd__CI_USCOREOnlineResource soap_in_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_instantiate__gmd__CI_USCOREOnlineResource soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_new__gmd__CI_USCOREOnlineResource soap_new_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_new_req__gmd__CI_USCOREOnlineResource soap_new_req_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_new_set__gmd__CI_USCOREOnlineResource soap_new_set_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_put__gmd__CI_USCOREOnlineResource soap_put_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_write__gmd__CI_USCOREOnlineResource soap_write_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_get__gmd__CI_USCOREOnlineResource soap_get_gmd__CI_USCOREOnlineResource_USCOREType


#define soap_read__gmd__CI_USCOREOnlineResource soap_read_gmd__CI_USCOREOnlineResource_USCOREType

#endif
/* _gmd__CI_USCOREAddress is a typedef synonym for gmd__CI_USCOREAddress_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREAddress_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREAddress_DEFINED

#define soap_default__gmd__CI_USCOREAddress(soap, a) (a)->gmd__CI_USCOREAddress_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREAddress(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREAddress2s soap_gmd__CI_USCOREAddress_USCOREType2s


#define soap_out__gmd__CI_USCOREAddress soap_out_gmd__CI_USCOREAddress_USCOREType


#define soap_s2_gmd__CI_USCOREAddress soap_s2gmd__CI_USCOREAddress_USCOREType


#define soap_in__gmd__CI_USCOREAddress soap_in_gmd__CI_USCOREAddress_USCOREType


#define soap_instantiate__gmd__CI_USCOREAddress soap_instantiate_gmd__CI_USCOREAddress_USCOREType


#define soap_new__gmd__CI_USCOREAddress soap_new_gmd__CI_USCOREAddress_USCOREType


#define soap_new_req__gmd__CI_USCOREAddress soap_new_req_gmd__CI_USCOREAddress_USCOREType


#define soap_new_set__gmd__CI_USCOREAddress soap_new_set_gmd__CI_USCOREAddress_USCOREType


#define soap_put__gmd__CI_USCOREAddress soap_put_gmd__CI_USCOREAddress_USCOREType


#define soap_write__gmd__CI_USCOREAddress soap_write_gmd__CI_USCOREAddress_USCOREType


#define soap_get__gmd__CI_USCOREAddress soap_get_gmd__CI_USCOREAddress_USCOREType


#define soap_read__gmd__CI_USCOREAddress soap_read_gmd__CI_USCOREAddress_USCOREType

#endif
/* _gmd__CI_USCORETelephone is a typedef synonym for gmd__CI_USCORETelephone_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORETelephone_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORETelephone_DEFINED

#define soap_default__gmd__CI_USCORETelephone(soap, a) (a)->gmd__CI_USCORETelephone_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCORETelephone(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCORETelephone2s soap_gmd__CI_USCORETelephone_USCOREType2s


#define soap_out__gmd__CI_USCORETelephone soap_out_gmd__CI_USCORETelephone_USCOREType


#define soap_s2_gmd__CI_USCORETelephone soap_s2gmd__CI_USCORETelephone_USCOREType


#define soap_in__gmd__CI_USCORETelephone soap_in_gmd__CI_USCORETelephone_USCOREType


#define soap_instantiate__gmd__CI_USCORETelephone soap_instantiate_gmd__CI_USCORETelephone_USCOREType


#define soap_new__gmd__CI_USCORETelephone soap_new_gmd__CI_USCORETelephone_USCOREType


#define soap_new_req__gmd__CI_USCORETelephone soap_new_req_gmd__CI_USCORETelephone_USCOREType


#define soap_new_set__gmd__CI_USCORETelephone soap_new_set_gmd__CI_USCORETelephone_USCOREType


#define soap_put__gmd__CI_USCORETelephone soap_put_gmd__CI_USCORETelephone_USCOREType


#define soap_write__gmd__CI_USCORETelephone soap_write_gmd__CI_USCORETelephone_USCOREType


#define soap_get__gmd__CI_USCORETelephone soap_get_gmd__CI_USCORETelephone_USCOREType


#define soap_read__gmd__CI_USCORETelephone soap_read_gmd__CI_USCORETelephone_USCOREType

#endif
/* _gmd__CI_USCOREContact is a typedef synonym for gmd__CI_USCOREContact_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREContact_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREContact_DEFINED

#define soap_default__gmd__CI_USCOREContact(soap, a) (a)->gmd__CI_USCOREContact_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREContact(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREContact2s soap_gmd__CI_USCOREContact_USCOREType2s


#define soap_out__gmd__CI_USCOREContact soap_out_gmd__CI_USCOREContact_USCOREType


#define soap_s2_gmd__CI_USCOREContact soap_s2gmd__CI_USCOREContact_USCOREType


#define soap_in__gmd__CI_USCOREContact soap_in_gmd__CI_USCOREContact_USCOREType


#define soap_instantiate__gmd__CI_USCOREContact soap_instantiate_gmd__CI_USCOREContact_USCOREType


#define soap_new__gmd__CI_USCOREContact soap_new_gmd__CI_USCOREContact_USCOREType


#define soap_new_req__gmd__CI_USCOREContact soap_new_req_gmd__CI_USCOREContact_USCOREType


#define soap_new_set__gmd__CI_USCOREContact soap_new_set_gmd__CI_USCOREContact_USCOREType


#define soap_put__gmd__CI_USCOREContact soap_put_gmd__CI_USCOREContact_USCOREType


#define soap_write__gmd__CI_USCOREContact soap_write_gmd__CI_USCOREContact_USCOREType


#define soap_get__gmd__CI_USCOREContact soap_get_gmd__CI_USCOREContact_USCOREType


#define soap_read__gmd__CI_USCOREContact soap_read_gmd__CI_USCOREContact_USCOREType

#endif
/* _gmd__CI_USCOREResponsibleParty is a typedef synonym for gmd__CI_USCOREResponsibleParty_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREResponsibleParty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREResponsibleParty_DEFINED

#define soap_default__gmd__CI_USCOREResponsibleParty(soap, a) (a)->gmd__CI_USCOREResponsibleParty_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREResponsibleParty(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREResponsibleParty2s soap_gmd__CI_USCOREResponsibleParty_USCOREType2s


#define soap_out__gmd__CI_USCOREResponsibleParty soap_out_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_s2_gmd__CI_USCOREResponsibleParty soap_s2gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_in__gmd__CI_USCOREResponsibleParty soap_in_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_instantiate__gmd__CI_USCOREResponsibleParty soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_new__gmd__CI_USCOREResponsibleParty soap_new_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_new_req__gmd__CI_USCOREResponsibleParty soap_new_req_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_new_set__gmd__CI_USCOREResponsibleParty soap_new_set_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_put__gmd__CI_USCOREResponsibleParty soap_put_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_write__gmd__CI_USCOREResponsibleParty soap_write_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_get__gmd__CI_USCOREResponsibleParty soap_get_gmd__CI_USCOREResponsibleParty_USCOREType


#define soap_read__gmd__CI_USCOREResponsibleParty soap_read_gmd__CI_USCOREResponsibleParty_USCOREType

#endif
/* _gmd__CI_USCOREDateTypeCode is a typedef synonym for gco__CodeListValue_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDateTypeCode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDateTypeCode_DEFINED

#define soap_default__gmd__CI_USCOREDateTypeCode(soap, a) (a)->gco__CodeListValue_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREDateTypeCode(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREDateTypeCode2s soap_gco__CodeListValue_USCOREType2s


#define soap_out__gmd__CI_USCOREDateTypeCode soap_out_gco__CodeListValue_USCOREType


#define soap_s2_gmd__CI_USCOREDateTypeCode soap_s2gco__CodeListValue_USCOREType


#define soap_in__gmd__CI_USCOREDateTypeCode soap_in_gco__CodeListValue_USCOREType


#define soap_instantiate__gmd__CI_USCOREDateTypeCode soap_instantiate_gco__CodeListValue_USCOREType


#define soap_new__gmd__CI_USCOREDateTypeCode soap_new_gco__CodeListValue_USCOREType


#define soap_new_req__gmd__CI_USCOREDateTypeCode soap_new_req_gco__CodeListValue_USCOREType


#define soap_new_set__gmd__CI_USCOREDateTypeCode soap_new_set_gco__CodeListValue_USCOREType


#define soap_put__gmd__CI_USCOREDateTypeCode soap_put_gco__CodeListValue_USCOREType


#define soap_write__gmd__CI_USCOREDateTypeCode soap_write_gco__CodeListValue_USCOREType


#define soap_get__gmd__CI_USCOREDateTypeCode soap_get_gco__CodeListValue_USCOREType


#define soap_read__gmd__CI_USCOREDateTypeCode soap_read_gco__CodeListValue_USCOREType

#endif
/* _gmd__CI_USCOREDate is a typedef synonym for gmd__CI_USCOREDate_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCOREDate_DEFINED

#define soap_default__gmd__CI_USCOREDate(soap, a) (a)->gmd__CI_USCOREDate_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCOREDate(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCOREDate2s soap_gmd__CI_USCOREDate_USCOREType2s


#define soap_out__gmd__CI_USCOREDate soap_out_gmd__CI_USCOREDate_USCOREType


#define soap_s2_gmd__CI_USCOREDate soap_s2gmd__CI_USCOREDate_USCOREType


#define soap_in__gmd__CI_USCOREDate soap_in_gmd__CI_USCOREDate_USCOREType


#define soap_instantiate__gmd__CI_USCOREDate soap_instantiate_gmd__CI_USCOREDate_USCOREType


#define soap_new__gmd__CI_USCOREDate soap_new_gmd__CI_USCOREDate_USCOREType


#define soap_new_req__gmd__CI_USCOREDate soap_new_req_gmd__CI_USCOREDate_USCOREType


#define soap_new_set__gmd__CI_USCOREDate soap_new_set_gmd__CI_USCOREDate_USCOREType


#define soap_put__gmd__CI_USCOREDate soap_put_gmd__CI_USCOREDate_USCOREType


#define soap_write__gmd__CI_USCOREDate soap_write_gmd__CI_USCOREDate_USCOREType


#define soap_get__gmd__CI_USCOREDate soap_get_gmd__CI_USCOREDate_USCOREType


#define soap_read__gmd__CI_USCOREDate soap_read_gmd__CI_USCOREDate_USCOREType

#endif
/* _gmd__CI_USCORECitation is a typedef synonym for gmd__CI_USCORECitation_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORECitation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__CI_USCORECitation_DEFINED

#define soap_default__gmd__CI_USCORECitation(soap, a) (a)->gmd__CI_USCORECitation_USCOREType::soap_default(soap)


#define soap_serialize__gmd__CI_USCORECitation(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__CI_USCORECitation2s soap_gmd__CI_USCORECitation_USCOREType2s


#define soap_out__gmd__CI_USCORECitation soap_out_gmd__CI_USCORECitation_USCOREType


#define soap_s2_gmd__CI_USCORECitation soap_s2gmd__CI_USCORECitation_USCOREType


#define soap_in__gmd__CI_USCORECitation soap_in_gmd__CI_USCORECitation_USCOREType


#define soap_instantiate__gmd__CI_USCORECitation soap_instantiate_gmd__CI_USCORECitation_USCOREType


#define soap_new__gmd__CI_USCORECitation soap_new_gmd__CI_USCORECitation_USCOREType


#define soap_new_req__gmd__CI_USCORECitation soap_new_req_gmd__CI_USCORECitation_USCOREType


#define soap_new_set__gmd__CI_USCORECitation soap_new_set_gmd__CI_USCORECitation_USCOREType


#define soap_put__gmd__CI_USCORECitation soap_put_gmd__CI_USCORECitation_USCOREType


#define soap_write__gmd__CI_USCORECitation soap_write_gmd__CI_USCORECitation_USCOREType


#define soap_get__gmd__CI_USCORECitation soap_get_gmd__CI_USCORECitation_USCOREType


#define soap_read__gmd__CI_USCORECitation soap_read_gmd__CI_USCORECitation_USCOREType

#endif
/* _gmd__MD_USCOREIdentifier is a typedef synonym for gmd__MD_USCOREIdentifier_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__MD_USCOREIdentifier_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__MD_USCOREIdentifier_DEFINED

#define soap_default__gmd__MD_USCOREIdentifier(soap, a) (a)->gmd__MD_USCOREIdentifier_USCOREType::soap_default(soap)


#define soap_serialize__gmd__MD_USCOREIdentifier(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__MD_USCOREIdentifier2s soap_gmd__MD_USCOREIdentifier_USCOREType2s


#define soap_out__gmd__MD_USCOREIdentifier soap_out_gmd__MD_USCOREIdentifier_USCOREType


#define soap_s2_gmd__MD_USCOREIdentifier soap_s2gmd__MD_USCOREIdentifier_USCOREType


#define soap_in__gmd__MD_USCOREIdentifier soap_in_gmd__MD_USCOREIdentifier_USCOREType


#define soap_instantiate__gmd__MD_USCOREIdentifier soap_instantiate_gmd__MD_USCOREIdentifier_USCOREType


#define soap_new__gmd__MD_USCOREIdentifier soap_new_gmd__MD_USCOREIdentifier_USCOREType


#define soap_new_req__gmd__MD_USCOREIdentifier soap_new_req_gmd__MD_USCOREIdentifier_USCOREType


#define soap_new_set__gmd__MD_USCOREIdentifier soap_new_set_gmd__MD_USCOREIdentifier_USCOREType


#define soap_put__gmd__MD_USCOREIdentifier soap_put_gmd__MD_USCOREIdentifier_USCOREType


#define soap_write__gmd__MD_USCOREIdentifier soap_write_gmd__MD_USCOREIdentifier_USCOREType


#define soap_get__gmd__MD_USCOREIdentifier soap_get_gmd__MD_USCOREIdentifier_USCOREType


#define soap_read__gmd__MD_USCOREIdentifier soap_read_gmd__MD_USCOREIdentifier_USCOREType

#endif
/* _gmd__EX_USCOREVerticalExtent is a typedef synonym for gmd__EX_USCOREVerticalExtent_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREVerticalExtent_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREVerticalExtent_DEFINED

#define soap_default__gmd__EX_USCOREVerticalExtent(soap, a) (a)->gmd__EX_USCOREVerticalExtent_USCOREType::soap_default(soap)


#define soap_serialize__gmd__EX_USCOREVerticalExtent(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__EX_USCOREVerticalExtent2s soap_gmd__EX_USCOREVerticalExtent_USCOREType2s


#define soap_out__gmd__EX_USCOREVerticalExtent soap_out_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_s2_gmd__EX_USCOREVerticalExtent soap_s2gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_in__gmd__EX_USCOREVerticalExtent soap_in_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_instantiate__gmd__EX_USCOREVerticalExtent soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_new__gmd__EX_USCOREVerticalExtent soap_new_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_new_req__gmd__EX_USCOREVerticalExtent soap_new_req_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_new_set__gmd__EX_USCOREVerticalExtent soap_new_set_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_put__gmd__EX_USCOREVerticalExtent soap_put_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_write__gmd__EX_USCOREVerticalExtent soap_write_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_get__gmd__EX_USCOREVerticalExtent soap_get_gmd__EX_USCOREVerticalExtent_USCOREType


#define soap_read__gmd__EX_USCOREVerticalExtent soap_read_gmd__EX_USCOREVerticalExtent_USCOREType

#endif
/* _gmd__EX_USCORETemporalExtent is a typedef synonym for gmd__EX_USCORETemporalExtent_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCORETemporalExtent_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCORETemporalExtent_DEFINED

#define soap_default__gmd__EX_USCORETemporalExtent(soap, a) (a)->gmd__EX_USCORETemporalExtent_USCOREType::soap_default(soap)


#define soap_serialize__gmd__EX_USCORETemporalExtent(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__EX_USCORETemporalExtent2s soap_gmd__EX_USCORETemporalExtent_USCOREType2s


#define soap_out__gmd__EX_USCORETemporalExtent soap_out_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_s2_gmd__EX_USCORETemporalExtent soap_s2gmd__EX_USCORETemporalExtent_USCOREType


#define soap_in__gmd__EX_USCORETemporalExtent soap_in_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_instantiate__gmd__EX_USCORETemporalExtent soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_new__gmd__EX_USCORETemporalExtent soap_new_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_new_req__gmd__EX_USCORETemporalExtent soap_new_req_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_new_set__gmd__EX_USCORETemporalExtent soap_new_set_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_put__gmd__EX_USCORETemporalExtent soap_put_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_write__gmd__EX_USCORETemporalExtent soap_write_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_get__gmd__EX_USCORETemporalExtent soap_get_gmd__EX_USCORETemporalExtent_USCOREType


#define soap_read__gmd__EX_USCORETemporalExtent soap_read_gmd__EX_USCORETemporalExtent_USCOREType

#endif
/* _gmd__EX_USCOREExtent is a typedef synonym for gmd__EX_USCOREExtent_USCOREType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREExtent_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__EX_USCOREExtent_DEFINED

#define soap_default__gmd__EX_USCOREExtent(soap, a) (a)->gmd__EX_USCOREExtent_USCOREType::soap_default(soap)


#define soap_serialize__gmd__EX_USCOREExtent(soap, a) (a)->soap_serialize(soap)


#define soap__gmd__EX_USCOREExtent2s soap_gmd__EX_USCOREExtent_USCOREType2s


#define soap_out__gmd__EX_USCOREExtent soap_out_gmd__EX_USCOREExtent_USCOREType


#define soap_s2_gmd__EX_USCOREExtent soap_s2gmd__EX_USCOREExtent_USCOREType


#define soap_in__gmd__EX_USCOREExtent soap_in_gmd__EX_USCOREExtent_USCOREType


#define soap_instantiate__gmd__EX_USCOREExtent soap_instantiate_gmd__EX_USCOREExtent_USCOREType


#define soap_new__gmd__EX_USCOREExtent soap_new_gmd__EX_USCOREExtent_USCOREType


#define soap_new_req__gmd__EX_USCOREExtent soap_new_req_gmd__EX_USCOREExtent_USCOREType


#define soap_new_set__gmd__EX_USCOREExtent soap_new_set_gmd__EX_USCOREExtent_USCOREType


#define soap_put__gmd__EX_USCOREExtent soap_put_gmd__EX_USCOREExtent_USCOREType


#define soap_write__gmd__EX_USCOREExtent soap_write_gmd__EX_USCOREExtent_USCOREType


#define soap_get__gmd__EX_USCOREExtent soap_get_gmd__EX_USCOREExtent_USCOREType


#define soap_read__gmd__EX_USCOREExtent soap_read_gmd__EX_USCOREExtent_USCOREType

#endif
/* _xlink__title is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__title_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__title_DEFINED

#define soap_default__xlink__title(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__xlink__title soap_serialize_std__string


#define soap__xlink__title2s(soap, a) ((a).c_str())

#define soap_out__xlink__title soap_out_std__string


#define soap_s2_xlink__title(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__xlink__title soap_in_std__string


#define soap_instantiate__xlink__title soap_instantiate_std__string


#define soap_new__xlink__title soap_new_std__string


#define soap_put__xlink__title soap_put_std__string


#define soap_write__xlink__title soap_write_std__string


#define soap_get__xlink__title soap_get_std__string


#define soap_read__xlink__title soap_read_std__string

#endif
/* _xlink__arcrole is a typedef synonym for xsd__anyURI */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__arcrole_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__arcrole_DEFINED

#define soap_default__xlink__arcrole(soap, a) soap_default_xsd__anyURI(soap, a)


#define soap_serialize__xlink__arcrole soap_serialize_xsd__anyURI


#define soap__xlink__arcrole2s(soap, a) ((a).c_str())

#define soap_out__xlink__arcrole soap_out_xsd__anyURI


#define soap_s2_xlink__arcrole(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__xlink__arcrole soap_in_xsd__anyURI


#define soap_instantiate__xlink__arcrole soap_instantiate_xsd__anyURI


#define soap_new__xlink__arcrole soap_new_xsd__anyURI


#define soap_put__xlink__arcrole soap_put_xsd__anyURI


#define soap_write__xlink__arcrole soap_write_xsd__anyURI


#define soap_get__xlink__arcrole soap_get_xsd__anyURI


#define soap_read__xlink__arcrole soap_read_xsd__anyURI

#endif
/* _xlink__role is a typedef synonym for xsd__anyURI */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__role_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__role_DEFINED

#define soap_default__xlink__role(soap, a) soap_default_xsd__anyURI(soap, a)


#define soap_serialize__xlink__role soap_serialize_xsd__anyURI


#define soap__xlink__role2s(soap, a) ((a).c_str())

#define soap_out__xlink__role soap_out_xsd__anyURI


#define soap_s2_xlink__role(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__xlink__role soap_in_xsd__anyURI


#define soap_instantiate__xlink__role soap_instantiate_xsd__anyURI


#define soap_new__xlink__role soap_new_xsd__anyURI


#define soap_put__xlink__role soap_put_xsd__anyURI


#define soap_write__xlink__role soap_write_xsd__anyURI


#define soap_get__xlink__role soap_get_xsd__anyURI


#define soap_read__xlink__role soap_read_xsd__anyURI

#endif
/* _xlink__href is a typedef synonym for xsd__anyURI */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__xlink__href_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__xlink__href_DEFINED

#define soap_default__xlink__href(soap, a) soap_default_xsd__anyURI(soap, a)


#define soap_serialize__xlink__href soap_serialize_xsd__anyURI


#define soap__xlink__href2s(soap, a) ((a).c_str())

#define soap_out__xlink__href soap_out_xsd__anyURI


#define soap_s2_xlink__href(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__xlink__href soap_in_xsd__anyURI


#define soap_instantiate__xlink__href soap_instantiate_xsd__anyURI


#define soap_new__xlink__href soap_new_xsd__anyURI


#define soap_put__xlink__href soap_put_xsd__anyURI


#define soap_write__xlink__href soap_write_xsd__anyURI


#define soap_get__xlink__href soap_get_xsd__anyURI


#define soap_read__xlink__href soap_read_xsd__anyURI

#endif
/* _gml__id is a typedef synonym for xsd__ID */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__id_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__id_DEFINED

#define soap_default__gml__id(soap, a) soap_default_xsd__ID(soap, a)


#define soap_serialize__gml__id soap_serialize_xsd__ID


#define soap__gml__id2s(soap, a) ((a).c_str())

#define soap_out__gml__id soap_out_xsd__ID


#define soap_s2_gml__id(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__id soap_in_xsd__ID


#define soap_instantiate__gml__id soap_instantiate_xsd__ID


#define soap_new__gml__id soap_new_xsd__ID


#define soap_put__gml__id soap_put_xsd__ID


#define soap_write__gml__id soap_write_xsd__ID


#define soap_get__gml__id soap_get_xsd__ID


#define soap_read__gml__id soap_read_xsd__ID

#endif
/* _gml__VerticalDatum is a typedef synonym for gml__VerticalDatumType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalDatum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalDatum_DEFINED

#define soap_default__gml__VerticalDatum(soap, a) (a)->gml__VerticalDatumType::soap_default(soap)


#define soap_serialize__gml__VerticalDatum(soap, a) (a)->soap_serialize(soap)


#define soap__gml__VerticalDatum2s soap_gml__VerticalDatumType2s


#define soap_out__gml__VerticalDatum soap_out_gml__VerticalDatumType


#define soap_s2_gml__VerticalDatum soap_s2gml__VerticalDatumType


#define soap_in__gml__VerticalDatum soap_in_gml__VerticalDatumType


#define soap_instantiate__gml__VerticalDatum soap_instantiate_gml__VerticalDatumType


#define soap_new__gml__VerticalDatum soap_new_gml__VerticalDatumType


#define soap_new_req__gml__VerticalDatum soap_new_req_gml__VerticalDatumType


#define soap_new_set__gml__VerticalDatum soap_new_set_gml__VerticalDatumType


#define soap_put__gml__VerticalDatum soap_put_gml__VerticalDatumType


#define soap_write__gml__VerticalDatum soap_write_gml__VerticalDatumType


#define soap_get__gml__VerticalDatum soap_get_gml__VerticalDatumType


#define soap_read__gml__VerticalDatum soap_read_gml__VerticalDatumType

#endif
/* _gml__verticalDatum is a typedef synonym for gml__VerticalDatumPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalDatum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalDatum_DEFINED

#define soap_default__gml__verticalDatum(soap, a) (a)->gml__VerticalDatumPropertyType::soap_default(soap)


#define soap_serialize__gml__verticalDatum(soap, a) (a)->soap_serialize(soap)


#define soap__gml__verticalDatum2s soap_gml__VerticalDatumPropertyType2s


#define soap_out__gml__verticalDatum soap_out_gml__VerticalDatumPropertyType


#define soap_s2_gml__verticalDatum soap_s2gml__VerticalDatumPropertyType


#define soap_in__gml__verticalDatum soap_in_gml__VerticalDatumPropertyType


#define soap_instantiate__gml__verticalDatum soap_instantiate_gml__VerticalDatumPropertyType


#define soap_new__gml__verticalDatum soap_new_gml__VerticalDatumPropertyType


#define soap_new_req__gml__verticalDatum soap_new_req_gml__VerticalDatumPropertyType


#define soap_new_set__gml__verticalDatum soap_new_set_gml__VerticalDatumPropertyType


#define soap_put__gml__verticalDatum soap_put_gml__VerticalDatumPropertyType


#define soap_write__gml__verticalDatum soap_write_gml__VerticalDatumPropertyType


#define soap_get__gml__verticalDatum soap_get_gml__VerticalDatumPropertyType


#define soap_read__gml__verticalDatum soap_read_gml__VerticalDatumPropertyType

#endif
/* _gml__VerticalCS is a typedef synonym for gml__VerticalCSType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCS_DEFINED

#define soap_default__gml__VerticalCS(soap, a) (a)->gml__VerticalCSType::soap_default(soap)


#define soap_serialize__gml__VerticalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__VerticalCS2s soap_gml__VerticalCSType2s


#define soap_out__gml__VerticalCS soap_out_gml__VerticalCSType


#define soap_s2_gml__VerticalCS soap_s2gml__VerticalCSType


#define soap_in__gml__VerticalCS soap_in_gml__VerticalCSType


#define soap_instantiate__gml__VerticalCS soap_instantiate_gml__VerticalCSType


#define soap_new__gml__VerticalCS soap_new_gml__VerticalCSType


#define soap_new_req__gml__VerticalCS soap_new_req_gml__VerticalCSType


#define soap_new_set__gml__VerticalCS soap_new_set_gml__VerticalCSType


#define soap_put__gml__VerticalCS soap_put_gml__VerticalCSType


#define soap_write__gml__VerticalCS soap_write_gml__VerticalCSType


#define soap_get__gml__VerticalCS soap_get_gml__VerticalCSType


#define soap_read__gml__VerticalCS soap_read_gml__VerticalCSType

#endif
/* _gml__verticalCS is a typedef synonym for gml__VerticalCSPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalCS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__verticalCS_DEFINED

#define soap_default__gml__verticalCS(soap, a) (a)->gml__VerticalCSPropertyType::soap_default(soap)


#define soap_serialize__gml__verticalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__verticalCS2s soap_gml__VerticalCSPropertyType2s


#define soap_out__gml__verticalCS soap_out_gml__VerticalCSPropertyType


#define soap_s2_gml__verticalCS soap_s2gml__VerticalCSPropertyType


#define soap_in__gml__verticalCS soap_in_gml__VerticalCSPropertyType


#define soap_instantiate__gml__verticalCS soap_instantiate_gml__VerticalCSPropertyType


#define soap_new__gml__verticalCS soap_new_gml__VerticalCSPropertyType


#define soap_new_req__gml__verticalCS soap_new_req_gml__VerticalCSPropertyType


#define soap_new_set__gml__verticalCS soap_new_set_gml__VerticalCSPropertyType


#define soap_put__gml__verticalCS soap_put_gml__VerticalCSPropertyType


#define soap_write__gml__verticalCS soap_write_gml__VerticalCSPropertyType


#define soap_get__gml__verticalCS soap_get_gml__VerticalCSPropertyType


#define soap_read__gml__verticalCS soap_read_gml__VerticalCSPropertyType

#endif
/* _gml__VerticalCRS is a typedef synonym for gml__VerticalCRSType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCRS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__VerticalCRS_DEFINED

#define soap_default__gml__VerticalCRS(soap, a) (a)->gml__VerticalCRSType::soap_default(soap)


#define soap_serialize__gml__VerticalCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__VerticalCRS2s soap_gml__VerticalCRSType2s


#define soap_out__gml__VerticalCRS soap_out_gml__VerticalCRSType


#define soap_s2_gml__VerticalCRS soap_s2gml__VerticalCRSType


#define soap_in__gml__VerticalCRS soap_in_gml__VerticalCRSType


#define soap_instantiate__gml__VerticalCRS soap_instantiate_gml__VerticalCRSType


#define soap_new__gml__VerticalCRS soap_new_gml__VerticalCRSType


#define soap_new_req__gml__VerticalCRS soap_new_req_gml__VerticalCRSType


#define soap_new_set__gml__VerticalCRS soap_new_set_gml__VerticalCRSType


#define soap_put__gml__VerticalCRS soap_put_gml__VerticalCRSType


#define soap_write__gml__VerticalCRS soap_write_gml__VerticalCRSType


#define soap_get__gml__VerticalCRS soap_get_gml__VerticalCRSType


#define soap_read__gml__VerticalCRS soap_read_gml__VerticalCRSType

#endif
/* _gml__baseGeodeticCRS is a typedef synonym for gml__GeodeticCRSPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__baseGeodeticCRS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__baseGeodeticCRS_DEFINED

#define soap_default__gml__baseGeodeticCRS(soap, a) (a)->gml__GeodeticCRSPropertyType::soap_default(soap)


#define soap_serialize__gml__baseGeodeticCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__baseGeodeticCRS2s soap_gml__GeodeticCRSPropertyType2s


#define soap_out__gml__baseGeodeticCRS soap_out_gml__GeodeticCRSPropertyType


#define soap_s2_gml__baseGeodeticCRS soap_s2gml__GeodeticCRSPropertyType


#define soap_in__gml__baseGeodeticCRS soap_in_gml__GeodeticCRSPropertyType


#define soap_instantiate__gml__baseGeodeticCRS soap_instantiate_gml__GeodeticCRSPropertyType


#define soap_new__gml__baseGeodeticCRS soap_new_gml__GeodeticCRSPropertyType


#define soap_new_req__gml__baseGeodeticCRS soap_new_req_gml__GeodeticCRSPropertyType


#define soap_new_set__gml__baseGeodeticCRS soap_new_set_gml__GeodeticCRSPropertyType


#define soap_put__gml__baseGeodeticCRS soap_put_gml__GeodeticCRSPropertyType


#define soap_write__gml__baseGeodeticCRS soap_write_gml__GeodeticCRSPropertyType


#define soap_get__gml__baseGeodeticCRS soap_get_gml__GeodeticCRSPropertyType


#define soap_read__gml__baseGeodeticCRS soap_read_gml__GeodeticCRSPropertyType

#endif
/* _gml__targetCRS is a typedef synonym for gml__CRSPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__targetCRS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__targetCRS_DEFINED

#define soap_default__gml__targetCRS(soap, a) (a)->gml__CRSPropertyType::soap_default(soap)


#define soap_serialize__gml__targetCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__targetCRS2s soap_gml__CRSPropertyType2s


#define soap_out__gml__targetCRS soap_out_gml__CRSPropertyType


#define soap_s2_gml__targetCRS soap_s2gml__CRSPropertyType


#define soap_in__gml__targetCRS soap_in_gml__CRSPropertyType


#define soap_instantiate__gml__targetCRS soap_instantiate_gml__CRSPropertyType


#define soap_new__gml__targetCRS soap_new_gml__CRSPropertyType


#define soap_new_req__gml__targetCRS soap_new_req_gml__CRSPropertyType


#define soap_new_set__gml__targetCRS soap_new_set_gml__CRSPropertyType


#define soap_put__gml__targetCRS soap_put_gml__CRSPropertyType


#define soap_write__gml__targetCRS soap_write_gml__CRSPropertyType


#define soap_get__gml__targetCRS soap_get_gml__CRSPropertyType


#define soap_read__gml__targetCRS soap_read_gml__CRSPropertyType

#endif
/* _gml__sourceCRS is a typedef synonym for gml__CRSPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__sourceCRS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__sourceCRS_DEFINED

#define soap_default__gml__sourceCRS(soap, a) (a)->gml__CRSPropertyType::soap_default(soap)


#define soap_serialize__gml__sourceCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__sourceCRS2s soap_gml__CRSPropertyType2s


#define soap_out__gml__sourceCRS soap_out_gml__CRSPropertyType


#define soap_s2_gml__sourceCRS soap_s2gml__CRSPropertyType


#define soap_in__gml__sourceCRS soap_in_gml__CRSPropertyType


#define soap_instantiate__gml__sourceCRS soap_instantiate_gml__CRSPropertyType


#define soap_new__gml__sourceCRS soap_new_gml__CRSPropertyType


#define soap_new_req__gml__sourceCRS soap_new_req_gml__CRSPropertyType


#define soap_new_set__gml__sourceCRS soap_new_set_gml__CRSPropertyType


#define soap_put__gml__sourceCRS soap_put_gml__CRSPropertyType


#define soap_write__gml__sourceCRS soap_write_gml__CRSPropertyType


#define soap_get__gml__sourceCRS soap_get_gml__CRSPropertyType


#define soap_read__gml__sourceCRS soap_read_gml__CRSPropertyType

#endif
/* _gml__operationVersion is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__operationVersion_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__operationVersion_DEFINED

#define soap_default__gml__operationVersion(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__gml__operationVersion soap_serialize_std__string


#define soap__gml__operationVersion2s(soap, a) ((a).c_str())

#define soap_out__gml__operationVersion soap_out_std__string


#define soap_s2_gml__operationVersion(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__operationVersion soap_in_std__string


#define soap_instantiate__gml__operationVersion soap_instantiate_std__string


#define soap_new__gml__operationVersion soap_new_std__string


#define soap_put__gml__operationVersion soap_put_std__string


#define soap_write__gml__operationVersion soap_write_std__string


#define soap_get__gml__operationVersion soap_get_std__string


#define soap_read__gml__operationVersion soap_read_std__string

#endif
/* _gml__conversion is a typedef synonym for gml__GeneralConversionPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__conversion_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__conversion_DEFINED

#define soap_default__gml__conversion(soap, a) (a)->gml__GeneralConversionPropertyType::soap_default(soap)


#define soap_serialize__gml__conversion(soap, a) (a)->soap_serialize(soap)


#define soap__gml__conversion2s soap_gml__GeneralConversionPropertyType2s


#define soap_out__gml__conversion soap_out_gml__GeneralConversionPropertyType


#define soap_s2_gml__conversion soap_s2gml__GeneralConversionPropertyType


#define soap_in__gml__conversion soap_in_gml__GeneralConversionPropertyType


#define soap_instantiate__gml__conversion soap_instantiate_gml__GeneralConversionPropertyType


#define soap_new__gml__conversion soap_new_gml__GeneralConversionPropertyType


#define soap_new_req__gml__conversion soap_new_req_gml__GeneralConversionPropertyType


#define soap_new_set__gml__conversion soap_new_set_gml__GeneralConversionPropertyType


#define soap_put__gml__conversion soap_put_gml__GeneralConversionPropertyType


#define soap_write__gml__conversion soap_write_gml__GeneralConversionPropertyType


#define soap_get__gml__conversion soap_get_gml__GeneralConversionPropertyType


#define soap_read__gml__conversion soap_read_gml__GeneralConversionPropertyType

#endif
/* _gml__ProjectedCRS is a typedef synonym for gml__ProjectedCRSType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__ProjectedCRS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__ProjectedCRS_DEFINED

#define soap_default__gml__ProjectedCRS(soap, a) (a)->gml__ProjectedCRSType::soap_default(soap)


#define soap_serialize__gml__ProjectedCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__ProjectedCRS2s soap_gml__ProjectedCRSType2s


#define soap_out__gml__ProjectedCRS soap_out_gml__ProjectedCRSType


#define soap_s2_gml__ProjectedCRS soap_s2gml__ProjectedCRSType


#define soap_in__gml__ProjectedCRS soap_in_gml__ProjectedCRSType


#define soap_instantiate__gml__ProjectedCRS soap_instantiate_gml__ProjectedCRSType


#define soap_new__gml__ProjectedCRS soap_new_gml__ProjectedCRSType


#define soap_new_req__gml__ProjectedCRS soap_new_req_gml__ProjectedCRSType


#define soap_new_set__gml__ProjectedCRS soap_new_set_gml__ProjectedCRSType


#define soap_put__gml__ProjectedCRS soap_put_gml__ProjectedCRSType


#define soap_write__gml__ProjectedCRS soap_write_gml__ProjectedCRSType


#define soap_get__gml__ProjectedCRS soap_get_gml__ProjectedCRSType


#define soap_read__gml__ProjectedCRS soap_read_gml__ProjectedCRSType

#endif
/* _gml__semiMajorAxis is a typedef synonym for gml__MeasureType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__semiMajorAxis_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__semiMajorAxis_DEFINED

#define soap_default__gml__semiMajorAxis(soap, a) (a)->gml__MeasureType::soap_default(soap)


#define soap_serialize__gml__semiMajorAxis(soap, a) (a)->soap_serialize(soap)


#define soap__gml__semiMajorAxis2s soap_gml__MeasureType2s


#define soap_out__gml__semiMajorAxis soap_out_gml__MeasureType


#define soap_s2_gml__semiMajorAxis soap_s2gml__MeasureType


#define soap_in__gml__semiMajorAxis soap_in_gml__MeasureType


#define soap_instantiate__gml__semiMajorAxis soap_instantiate_gml__MeasureType


#define soap_new__gml__semiMajorAxis soap_new_gml__MeasureType


#define soap_new_req__gml__semiMajorAxis soap_new_req_gml__MeasureType


#define soap_new_set__gml__semiMajorAxis soap_new_set_gml__MeasureType


#define soap_put__gml__semiMajorAxis soap_put_gml__MeasureType


#define soap_write__gml__semiMajorAxis soap_write_gml__MeasureType


#define soap_get__gml__semiMajorAxis soap_get_gml__MeasureType


#define soap_read__gml__semiMajorAxis soap_read_gml__MeasureType

#endif
/* _gml__Ellipsoid is a typedef synonym for gml__EllipsoidType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__Ellipsoid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__Ellipsoid_DEFINED

#define soap_default__gml__Ellipsoid(soap, a) (a)->gml__EllipsoidType::soap_default(soap)


#define soap_serialize__gml__Ellipsoid(soap, a) (a)->soap_serialize(soap)


#define soap__gml__Ellipsoid2s soap_gml__EllipsoidType2s


#define soap_out__gml__Ellipsoid soap_out_gml__EllipsoidType


#define soap_s2_gml__Ellipsoid soap_s2gml__EllipsoidType


#define soap_in__gml__Ellipsoid soap_in_gml__EllipsoidType


#define soap_instantiate__gml__Ellipsoid soap_instantiate_gml__EllipsoidType


#define soap_new__gml__Ellipsoid soap_new_gml__EllipsoidType


#define soap_new_req__gml__Ellipsoid soap_new_req_gml__EllipsoidType


#define soap_new_set__gml__Ellipsoid soap_new_set_gml__EllipsoidType


#define soap_put__gml__Ellipsoid soap_put_gml__EllipsoidType


#define soap_write__gml__Ellipsoid soap_write_gml__EllipsoidType


#define soap_get__gml__Ellipsoid soap_get_gml__EllipsoidType


#define soap_read__gml__Ellipsoid soap_read_gml__EllipsoidType

#endif
/* _gml__ellipsoid is a typedef synonym for gml__EllipsoidPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoid_DEFINED

#define soap_default__gml__ellipsoid(soap, a) (a)->gml__EllipsoidPropertyType::soap_default(soap)


#define soap_serialize__gml__ellipsoid(soap, a) (a)->soap_serialize(soap)


#define soap__gml__ellipsoid2s soap_gml__EllipsoidPropertyType2s


#define soap_out__gml__ellipsoid soap_out_gml__EllipsoidPropertyType


#define soap_s2_gml__ellipsoid soap_s2gml__EllipsoidPropertyType


#define soap_in__gml__ellipsoid soap_in_gml__EllipsoidPropertyType


#define soap_instantiate__gml__ellipsoid soap_instantiate_gml__EllipsoidPropertyType


#define soap_new__gml__ellipsoid soap_new_gml__EllipsoidPropertyType


#define soap_new_req__gml__ellipsoid soap_new_req_gml__EllipsoidPropertyType


#define soap_new_set__gml__ellipsoid soap_new_set_gml__EllipsoidPropertyType


#define soap_put__gml__ellipsoid soap_put_gml__EllipsoidPropertyType


#define soap_write__gml__ellipsoid soap_write_gml__EllipsoidPropertyType


#define soap_get__gml__ellipsoid soap_get_gml__EllipsoidPropertyType


#define soap_read__gml__ellipsoid soap_read_gml__EllipsoidPropertyType

#endif
/* _gml__greenwichLongitude is a typedef synonym for gml__AngleType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__greenwichLongitude_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__greenwichLongitude_DEFINED

#define soap_default__gml__greenwichLongitude(soap, a) (a)->gml__AngleType::soap_default(soap)


#define soap_serialize__gml__greenwichLongitude(soap, a) (a)->soap_serialize(soap)


#define soap__gml__greenwichLongitude2s soap_gml__AngleType2s


#define soap_out__gml__greenwichLongitude soap_out_gml__AngleType


#define soap_s2_gml__greenwichLongitude soap_s2gml__AngleType


#define soap_in__gml__greenwichLongitude soap_in_gml__AngleType


#define soap_instantiate__gml__greenwichLongitude soap_instantiate_gml__AngleType


#define soap_new__gml__greenwichLongitude soap_new_gml__AngleType


#define soap_new_req__gml__greenwichLongitude soap_new_req_gml__AngleType


#define soap_new_set__gml__greenwichLongitude soap_new_set_gml__AngleType


#define soap_put__gml__greenwichLongitude soap_put_gml__AngleType


#define soap_write__gml__greenwichLongitude soap_write_gml__AngleType


#define soap_get__gml__greenwichLongitude soap_get_gml__AngleType


#define soap_read__gml__greenwichLongitude soap_read_gml__AngleType

#endif
/* _gml__PrimeMeridian is a typedef synonym for gml__PrimeMeridianType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__PrimeMeridian_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__PrimeMeridian_DEFINED

#define soap_default__gml__PrimeMeridian(soap, a) (a)->gml__PrimeMeridianType::soap_default(soap)


#define soap_serialize__gml__PrimeMeridian(soap, a) (a)->soap_serialize(soap)


#define soap__gml__PrimeMeridian2s soap_gml__PrimeMeridianType2s


#define soap_out__gml__PrimeMeridian soap_out_gml__PrimeMeridianType


#define soap_s2_gml__PrimeMeridian soap_s2gml__PrimeMeridianType


#define soap_in__gml__PrimeMeridian soap_in_gml__PrimeMeridianType


#define soap_instantiate__gml__PrimeMeridian soap_instantiate_gml__PrimeMeridianType


#define soap_new__gml__PrimeMeridian soap_new_gml__PrimeMeridianType


#define soap_new_req__gml__PrimeMeridian soap_new_req_gml__PrimeMeridianType


#define soap_new_set__gml__PrimeMeridian soap_new_set_gml__PrimeMeridianType


#define soap_put__gml__PrimeMeridian soap_put_gml__PrimeMeridianType


#define soap_write__gml__PrimeMeridian soap_write_gml__PrimeMeridianType


#define soap_get__gml__PrimeMeridian soap_get_gml__PrimeMeridianType


#define soap_read__gml__PrimeMeridian soap_read_gml__PrimeMeridianType

#endif
/* _gml__primeMeridian is a typedef synonym for gml__PrimeMeridianPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__primeMeridian_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__primeMeridian_DEFINED

#define soap_default__gml__primeMeridian(soap, a) (a)->gml__PrimeMeridianPropertyType::soap_default(soap)


#define soap_serialize__gml__primeMeridian(soap, a) (a)->soap_serialize(soap)


#define soap__gml__primeMeridian2s soap_gml__PrimeMeridianPropertyType2s


#define soap_out__gml__primeMeridian soap_out_gml__PrimeMeridianPropertyType


#define soap_s2_gml__primeMeridian soap_s2gml__PrimeMeridianPropertyType


#define soap_in__gml__primeMeridian soap_in_gml__PrimeMeridianPropertyType


#define soap_instantiate__gml__primeMeridian soap_instantiate_gml__PrimeMeridianPropertyType


#define soap_new__gml__primeMeridian soap_new_gml__PrimeMeridianPropertyType


#define soap_new_req__gml__primeMeridian soap_new_req_gml__PrimeMeridianPropertyType


#define soap_new_set__gml__primeMeridian soap_new_set_gml__PrimeMeridianPropertyType


#define soap_put__gml__primeMeridian soap_put_gml__PrimeMeridianPropertyType


#define soap_write__gml__primeMeridian soap_write_gml__PrimeMeridianPropertyType


#define soap_get__gml__primeMeridian soap_get_gml__PrimeMeridianPropertyType


#define soap_read__gml__primeMeridian soap_read_gml__PrimeMeridianPropertyType

#endif
/* _gml__realizationEpoch is a typedef synonym for xsd__date */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__realizationEpoch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__realizationEpoch_DEFINED

#define soap_default__gml__realizationEpoch(soap, a) soap_default_xsd__date(soap, a)


#define soap_serialize__gml__realizationEpoch soap_serialize_xsd__date


#define soap__gml__realizationEpoch2s(soap, a) ((a).c_str())

#define soap_out__gml__realizationEpoch soap_out_xsd__date


#define soap_s2_gml__realizationEpoch(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__realizationEpoch soap_in_xsd__date


#define soap_instantiate__gml__realizationEpoch soap_instantiate_xsd__date


#define soap_new__gml__realizationEpoch soap_new_xsd__date


#define soap_put__gml__realizationEpoch soap_put_xsd__date


#define soap_write__gml__realizationEpoch soap_write_xsd__date


#define soap_get__gml__realizationEpoch soap_get_xsd__date


#define soap_read__gml__realizationEpoch soap_read_xsd__date

#endif
/* _gml__anchorDefinition is a typedef synonym for gml__CodeType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__anchorDefinition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__anchorDefinition_DEFINED

#define soap_default__gml__anchorDefinition(soap, a) (a)->gml__CodeType::soap_default(soap)


#define soap_serialize__gml__anchorDefinition(soap, a) (a)->soap_serialize(soap)


#define soap__gml__anchorDefinition2s soap_gml__CodeType2s


#define soap_out__gml__anchorDefinition soap_out_gml__CodeType


#define soap_s2_gml__anchorDefinition soap_s2gml__CodeType


#define soap_in__gml__anchorDefinition soap_in_gml__CodeType


#define soap_instantiate__gml__anchorDefinition soap_instantiate_gml__CodeType


#define soap_new__gml__anchorDefinition soap_new_gml__CodeType


#define soap_new_req__gml__anchorDefinition soap_new_req_gml__CodeType


#define soap_new_set__gml__anchorDefinition soap_new_set_gml__CodeType


#define soap_put__gml__anchorDefinition soap_put_gml__CodeType


#define soap_write__gml__anchorDefinition soap_write_gml__CodeType


#define soap_get__gml__anchorDefinition soap_get_gml__CodeType


#define soap_read__gml__anchorDefinition soap_read_gml__CodeType

#endif
/* _gml__GeodeticDatum is a typedef synonym for gml__GeodeticDatumType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticDatum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticDatum_DEFINED

#define soap_default__gml__GeodeticDatum(soap, a) (a)->gml__GeodeticDatumType::soap_default(soap)


#define soap_serialize__gml__GeodeticDatum(soap, a) (a)->soap_serialize(soap)


#define soap__gml__GeodeticDatum2s soap_gml__GeodeticDatumType2s


#define soap_out__gml__GeodeticDatum soap_out_gml__GeodeticDatumType


#define soap_s2_gml__GeodeticDatum soap_s2gml__GeodeticDatumType


#define soap_in__gml__GeodeticDatum soap_in_gml__GeodeticDatumType


#define soap_instantiate__gml__GeodeticDatum soap_instantiate_gml__GeodeticDatumType


#define soap_new__gml__GeodeticDatum soap_new_gml__GeodeticDatumType


#define soap_new_req__gml__GeodeticDatum soap_new_req_gml__GeodeticDatumType


#define soap_new_set__gml__GeodeticDatum soap_new_set_gml__GeodeticDatumType


#define soap_put__gml__GeodeticDatum soap_put_gml__GeodeticDatumType


#define soap_write__gml__GeodeticDatum soap_write_gml__GeodeticDatumType


#define soap_get__gml__GeodeticDatum soap_get_gml__GeodeticDatumType


#define soap_read__gml__GeodeticDatum soap_read_gml__GeodeticDatumType

#endif
/* _gml__geodeticDatum is a typedef synonym for gml__GeodeticDatumPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__geodeticDatum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__geodeticDatum_DEFINED

#define soap_default__gml__geodeticDatum(soap, a) (a)->gml__GeodeticDatumPropertyType::soap_default(soap)


#define soap_serialize__gml__geodeticDatum(soap, a) (a)->soap_serialize(soap)


#define soap__gml__geodeticDatum2s soap_gml__GeodeticDatumPropertyType2s


#define soap_out__gml__geodeticDatum soap_out_gml__GeodeticDatumPropertyType


#define soap_s2_gml__geodeticDatum soap_s2gml__GeodeticDatumPropertyType


#define soap_in__gml__geodeticDatum soap_in_gml__GeodeticDatumPropertyType


#define soap_instantiate__gml__geodeticDatum soap_instantiate_gml__GeodeticDatumPropertyType


#define soap_new__gml__geodeticDatum soap_new_gml__GeodeticDatumPropertyType


#define soap_new_req__gml__geodeticDatum soap_new_req_gml__GeodeticDatumPropertyType


#define soap_new_set__gml__geodeticDatum soap_new_set_gml__GeodeticDatumPropertyType


#define soap_put__gml__geodeticDatum soap_put_gml__GeodeticDatumPropertyType


#define soap_write__gml__geodeticDatum soap_write_gml__GeodeticDatumPropertyType


#define soap_get__gml__geodeticDatum soap_get_gml__GeodeticDatumPropertyType


#define soap_read__gml__geodeticDatum soap_read_gml__GeodeticDatumPropertyType

#endif
/* _gml__SphericalCS is a typedef synonym for gml__SphericalCSType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__SphericalCS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__SphericalCS_DEFINED

#define soap_default__gml__SphericalCS(soap, a) (a)->gml__SphericalCSType::soap_default(soap)


#define soap_serialize__gml__SphericalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__SphericalCS2s soap_gml__SphericalCSType2s


#define soap_out__gml__SphericalCS soap_out_gml__SphericalCSType


#define soap_s2_gml__SphericalCS soap_s2gml__SphericalCSType


#define soap_in__gml__SphericalCS soap_in_gml__SphericalCSType


#define soap_instantiate__gml__SphericalCS soap_instantiate_gml__SphericalCSType


#define soap_new__gml__SphericalCS soap_new_gml__SphericalCSType


#define soap_new_req__gml__SphericalCS soap_new_req_gml__SphericalCSType


#define soap_new_set__gml__SphericalCS soap_new_set_gml__SphericalCSType


#define soap_put__gml__SphericalCS soap_put_gml__SphericalCSType


#define soap_write__gml__SphericalCS soap_write_gml__SphericalCSType


#define soap_get__gml__SphericalCS soap_get_gml__SphericalCSType


#define soap_read__gml__SphericalCS soap_read_gml__SphericalCSType

#endif
/* _gml__sphericalCS is a typedef synonym for gml__SphericalCSPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__sphericalCS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__sphericalCS_DEFINED

#define soap_default__gml__sphericalCS(soap, a) (a)->gml__SphericalCSPropertyType::soap_default(soap)


#define soap_serialize__gml__sphericalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__sphericalCS2s soap_gml__SphericalCSPropertyType2s


#define soap_out__gml__sphericalCS soap_out_gml__SphericalCSPropertyType


#define soap_s2_gml__sphericalCS soap_s2gml__SphericalCSPropertyType


#define soap_in__gml__sphericalCS soap_in_gml__SphericalCSPropertyType


#define soap_instantiate__gml__sphericalCS soap_instantiate_gml__SphericalCSPropertyType


#define soap_new__gml__sphericalCS soap_new_gml__SphericalCSPropertyType


#define soap_new_req__gml__sphericalCS soap_new_req_gml__SphericalCSPropertyType


#define soap_new_set__gml__sphericalCS soap_new_set_gml__SphericalCSPropertyType


#define soap_put__gml__sphericalCS soap_put_gml__SphericalCSPropertyType


#define soap_write__gml__sphericalCS soap_write_gml__SphericalCSPropertyType


#define soap_get__gml__sphericalCS soap_get_gml__SphericalCSPropertyType


#define soap_read__gml__sphericalCS soap_read_gml__SphericalCSPropertyType

#endif
/* _gml__CartesianCS is a typedef synonym for gml__CartesianCSType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__CartesianCS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__CartesianCS_DEFINED

#define soap_default__gml__CartesianCS(soap, a) (a)->gml__CartesianCSType::soap_default(soap)


#define soap_serialize__gml__CartesianCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__CartesianCS2s soap_gml__CartesianCSType2s


#define soap_out__gml__CartesianCS soap_out_gml__CartesianCSType


#define soap_s2_gml__CartesianCS soap_s2gml__CartesianCSType


#define soap_in__gml__CartesianCS soap_in_gml__CartesianCSType


#define soap_instantiate__gml__CartesianCS soap_instantiate_gml__CartesianCSType


#define soap_new__gml__CartesianCS soap_new_gml__CartesianCSType


#define soap_new_req__gml__CartesianCS soap_new_req_gml__CartesianCSType


#define soap_new_set__gml__CartesianCS soap_new_set_gml__CartesianCSType


#define soap_put__gml__CartesianCS soap_put_gml__CartesianCSType


#define soap_write__gml__CartesianCS soap_write_gml__CartesianCSType


#define soap_get__gml__CartesianCS soap_get_gml__CartesianCSType


#define soap_read__gml__CartesianCS soap_read_gml__CartesianCSType

#endif
/* _gml__cartesianCS is a typedef synonym for gml__CartesianCSPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__cartesianCS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__cartesianCS_DEFINED

#define soap_default__gml__cartesianCS(soap, a) (a)->gml__CartesianCSPropertyType::soap_default(soap)


#define soap_serialize__gml__cartesianCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__cartesianCS2s soap_gml__CartesianCSPropertyType2s


#define soap_out__gml__cartesianCS soap_out_gml__CartesianCSPropertyType


#define soap_s2_gml__cartesianCS soap_s2gml__CartesianCSPropertyType


#define soap_in__gml__cartesianCS soap_in_gml__CartesianCSPropertyType


#define soap_instantiate__gml__cartesianCS soap_instantiate_gml__CartesianCSPropertyType


#define soap_new__gml__cartesianCS soap_new_gml__CartesianCSPropertyType


#define soap_new_req__gml__cartesianCS soap_new_req_gml__CartesianCSPropertyType


#define soap_new_set__gml__cartesianCS soap_new_set_gml__CartesianCSPropertyType


#define soap_put__gml__cartesianCS soap_put_gml__CartesianCSPropertyType


#define soap_write__gml__cartesianCS soap_write_gml__CartesianCSPropertyType


#define soap_get__gml__cartesianCS soap_get_gml__CartesianCSPropertyType


#define soap_read__gml__cartesianCS soap_read_gml__CartesianCSPropertyType

#endif
/* _gml__rangeMeaning is a typedef synonym for gml__CodeWithAuthorityType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__rangeMeaning_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__rangeMeaning_DEFINED

#define soap_default__gml__rangeMeaning(soap, a) (a)->gml__CodeWithAuthorityType::soap_default(soap)


#define soap_serialize__gml__rangeMeaning(soap, a) (a)->soap_serialize(soap)


#define soap__gml__rangeMeaning2s soap_gml__CodeWithAuthorityType2s


#define soap_out__gml__rangeMeaning soap_out_gml__CodeWithAuthorityType


#define soap_s2_gml__rangeMeaning soap_s2gml__CodeWithAuthorityType


#define soap_in__gml__rangeMeaning soap_in_gml__CodeWithAuthorityType


#define soap_instantiate__gml__rangeMeaning soap_instantiate_gml__CodeWithAuthorityType


#define soap_new__gml__rangeMeaning soap_new_gml__CodeWithAuthorityType


#define soap_new_req__gml__rangeMeaning soap_new_req_gml__CodeWithAuthorityType


#define soap_new_set__gml__rangeMeaning soap_new_set_gml__CodeWithAuthorityType


#define soap_put__gml__rangeMeaning soap_put_gml__CodeWithAuthorityType


#define soap_write__gml__rangeMeaning soap_write_gml__CodeWithAuthorityType


#define soap_get__gml__rangeMeaning soap_get_gml__CodeWithAuthorityType


#define soap_read__gml__rangeMeaning soap_read_gml__CodeWithAuthorityType

#endif
/* _gml__axisDirection is a typedef synonym for gml__CodeWithAuthorityType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__axisDirection_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__axisDirection_DEFINED

#define soap_default__gml__axisDirection(soap, a) (a)->gml__CodeWithAuthorityType::soap_default(soap)


#define soap_serialize__gml__axisDirection(soap, a) (a)->soap_serialize(soap)


#define soap__gml__axisDirection2s soap_gml__CodeWithAuthorityType2s


#define soap_out__gml__axisDirection soap_out_gml__CodeWithAuthorityType


#define soap_s2_gml__axisDirection soap_s2gml__CodeWithAuthorityType


#define soap_in__gml__axisDirection soap_in_gml__CodeWithAuthorityType


#define soap_instantiate__gml__axisDirection soap_instantiate_gml__CodeWithAuthorityType


#define soap_new__gml__axisDirection soap_new_gml__CodeWithAuthorityType


#define soap_new_req__gml__axisDirection soap_new_req_gml__CodeWithAuthorityType


#define soap_new_set__gml__axisDirection soap_new_set_gml__CodeWithAuthorityType


#define soap_put__gml__axisDirection soap_put_gml__CodeWithAuthorityType


#define soap_write__gml__axisDirection soap_write_gml__CodeWithAuthorityType


#define soap_get__gml__axisDirection soap_get_gml__CodeWithAuthorityType


#define soap_read__gml__axisDirection soap_read_gml__CodeWithAuthorityType

#endif
/* _gml__axisAbbrev is a typedef synonym for gml__CodeType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__axisAbbrev_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__axisAbbrev_DEFINED

#define soap_default__gml__axisAbbrev(soap, a) (a)->gml__CodeType::soap_default(soap)


#define soap_serialize__gml__axisAbbrev(soap, a) (a)->soap_serialize(soap)


#define soap__gml__axisAbbrev2s soap_gml__CodeType2s


#define soap_out__gml__axisAbbrev soap_out_gml__CodeType


#define soap_s2_gml__axisAbbrev soap_s2gml__CodeType


#define soap_in__gml__axisAbbrev soap_in_gml__CodeType


#define soap_instantiate__gml__axisAbbrev soap_instantiate_gml__CodeType


#define soap_new__gml__axisAbbrev soap_new_gml__CodeType


#define soap_new_req__gml__axisAbbrev soap_new_req_gml__CodeType


#define soap_new_set__gml__axisAbbrev soap_new_set_gml__CodeType


#define soap_put__gml__axisAbbrev soap_put_gml__CodeType


#define soap_write__gml__axisAbbrev soap_write_gml__CodeType


#define soap_get__gml__axisAbbrev soap_get_gml__CodeType


#define soap_read__gml__axisAbbrev soap_read_gml__CodeType

#endif
/* _gml__CoordinateSystemAxis is a typedef synonym for gml__CoordinateSystemAxisType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__CoordinateSystemAxis_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__CoordinateSystemAxis_DEFINED

#define soap_default__gml__CoordinateSystemAxis(soap, a) (a)->gml__CoordinateSystemAxisType::soap_default(soap)


#define soap_serialize__gml__CoordinateSystemAxis(soap, a) (a)->soap_serialize(soap)


#define soap__gml__CoordinateSystemAxis2s soap_gml__CoordinateSystemAxisType2s


#define soap_out__gml__CoordinateSystemAxis soap_out_gml__CoordinateSystemAxisType


#define soap_s2_gml__CoordinateSystemAxis soap_s2gml__CoordinateSystemAxisType


#define soap_in__gml__CoordinateSystemAxis soap_in_gml__CoordinateSystemAxisType


#define soap_instantiate__gml__CoordinateSystemAxis soap_instantiate_gml__CoordinateSystemAxisType


#define soap_new__gml__CoordinateSystemAxis soap_new_gml__CoordinateSystemAxisType


#define soap_new_req__gml__CoordinateSystemAxis soap_new_req_gml__CoordinateSystemAxisType


#define soap_new_set__gml__CoordinateSystemAxis soap_new_set_gml__CoordinateSystemAxisType


#define soap_put__gml__CoordinateSystemAxis soap_put_gml__CoordinateSystemAxisType


#define soap_write__gml__CoordinateSystemAxis soap_write_gml__CoordinateSystemAxisType


#define soap_get__gml__CoordinateSystemAxis soap_get_gml__CoordinateSystemAxisType


#define soap_read__gml__CoordinateSystemAxis soap_read_gml__CoordinateSystemAxisType

#endif
/* _gml__axis is a typedef synonym for gml__CoordinateSystemAxisPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__axis_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__axis_DEFINED

#define soap_default__gml__axis(soap, a) (a)->gml__CoordinateSystemAxisPropertyType::soap_default(soap)


#define soap_serialize__gml__axis(soap, a) (a)->soap_serialize(soap)


#define soap__gml__axis2s soap_gml__CoordinateSystemAxisPropertyType2s


#define soap_out__gml__axis soap_out_gml__CoordinateSystemAxisPropertyType


#define soap_s2_gml__axis soap_s2gml__CoordinateSystemAxisPropertyType


#define soap_in__gml__axis soap_in_gml__CoordinateSystemAxisPropertyType


#define soap_instantiate__gml__axis soap_instantiate_gml__CoordinateSystemAxisPropertyType


#define soap_new__gml__axis soap_new_gml__CoordinateSystemAxisPropertyType


#define soap_new_req__gml__axis soap_new_req_gml__CoordinateSystemAxisPropertyType


#define soap_new_set__gml__axis soap_new_set_gml__CoordinateSystemAxisPropertyType


#define soap_put__gml__axis soap_put_gml__CoordinateSystemAxisPropertyType


#define soap_write__gml__axis soap_write_gml__CoordinateSystemAxisPropertyType


#define soap_get__gml__axis soap_get_gml__CoordinateSystemAxisPropertyType


#define soap_read__gml__axis soap_read_gml__CoordinateSystemAxisPropertyType

#endif
/* _gml__EllipsoidalCS is a typedef synonym for gml__EllipsoidalCSType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__EllipsoidalCS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__EllipsoidalCS_DEFINED

#define soap_default__gml__EllipsoidalCS(soap, a) (a)->gml__EllipsoidalCSType::soap_default(soap)


#define soap_serialize__gml__EllipsoidalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__EllipsoidalCS2s soap_gml__EllipsoidalCSType2s


#define soap_out__gml__EllipsoidalCS soap_out_gml__EllipsoidalCSType


#define soap_s2_gml__EllipsoidalCS soap_s2gml__EllipsoidalCSType


#define soap_in__gml__EllipsoidalCS soap_in_gml__EllipsoidalCSType


#define soap_instantiate__gml__EllipsoidalCS soap_instantiate_gml__EllipsoidalCSType


#define soap_new__gml__EllipsoidalCS soap_new_gml__EllipsoidalCSType


#define soap_new_req__gml__EllipsoidalCS soap_new_req_gml__EllipsoidalCSType


#define soap_new_set__gml__EllipsoidalCS soap_new_set_gml__EllipsoidalCSType


#define soap_put__gml__EllipsoidalCS soap_put_gml__EllipsoidalCSType


#define soap_write__gml__EllipsoidalCS soap_write_gml__EllipsoidalCSType


#define soap_get__gml__EllipsoidalCS soap_get_gml__EllipsoidalCSType


#define soap_read__gml__EllipsoidalCS soap_read_gml__EllipsoidalCSType

#endif
/* _gml__ellipsoidalCS is a typedef synonym for gml__EllipsoidalCSPropertyType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoidalCS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__ellipsoidalCS_DEFINED

#define soap_default__gml__ellipsoidalCS(soap, a) (a)->gml__EllipsoidalCSPropertyType::soap_default(soap)


#define soap_serialize__gml__ellipsoidalCS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__ellipsoidalCS2s soap_gml__EllipsoidalCSPropertyType2s


#define soap_out__gml__ellipsoidalCS soap_out_gml__EllipsoidalCSPropertyType


#define soap_s2_gml__ellipsoidalCS soap_s2gml__EllipsoidalCSPropertyType


#define soap_in__gml__ellipsoidalCS soap_in_gml__EllipsoidalCSPropertyType


#define soap_instantiate__gml__ellipsoidalCS soap_instantiate_gml__EllipsoidalCSPropertyType


#define soap_new__gml__ellipsoidalCS soap_new_gml__EllipsoidalCSPropertyType


#define soap_new_req__gml__ellipsoidalCS soap_new_req_gml__EllipsoidalCSPropertyType


#define soap_new_set__gml__ellipsoidalCS soap_new_set_gml__EllipsoidalCSPropertyType


#define soap_put__gml__ellipsoidalCS soap_put_gml__EllipsoidalCSPropertyType


#define soap_write__gml__ellipsoidalCS soap_write_gml__EllipsoidalCSPropertyType


#define soap_get__gml__ellipsoidalCS soap_get_gml__EllipsoidalCSPropertyType


#define soap_read__gml__ellipsoidalCS soap_read_gml__EllipsoidalCSPropertyType

#endif
/* _gml__scope is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__scope_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__scope_DEFINED

#define soap_default__gml__scope(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__gml__scope soap_serialize_std__string


#define soap__gml__scope2s(soap, a) ((a).c_str())

#define soap_out__gml__scope soap_out_std__string


#define soap_s2_gml__scope(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__scope soap_in_std__string


#define soap_instantiate__gml__scope soap_instantiate_std__string


#define soap_new__gml__scope soap_new_std__string


#define soap_put__gml__scope soap_put_std__string


#define soap_write__gml__scope soap_write_std__string


#define soap_get__gml__scope soap_get_std__string


#define soap_read__gml__scope soap_read_std__string

#endif
/* _gml__Definition is a typedef synonym for gml__DefinitionType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__Definition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__Definition_DEFINED

#define soap_default__gml__Definition(soap, a) (a)->gml__DefinitionType::soap_default(soap)


#define soap_serialize__gml__Definition(soap, a) (a)->soap_serialize(soap)


#define soap__gml__Definition2s soap_gml__DefinitionType2s


#define soap_out__gml__Definition soap_out_gml__DefinitionType


#define soap_s2_gml__Definition soap_s2gml__DefinitionType


#define soap_in__gml__Definition soap_in_gml__DefinitionType


#define soap_instantiate__gml__Definition soap_instantiate_gml__DefinitionType


#define soap_new__gml__Definition soap_new_gml__DefinitionType


#define soap_new_req__gml__Definition soap_new_req_gml__DefinitionType


#define soap_new_set__gml__Definition soap_new_set_gml__DefinitionType


#define soap_put__gml__Definition soap_put_gml__DefinitionType


#define soap_write__gml__Definition soap_write_gml__DefinitionType


#define soap_get__gml__Definition soap_get_gml__DefinitionType


#define soap_read__gml__Definition soap_read_gml__DefinitionType

#endif
/* _gml__remarks is a typedef synonym for std__string */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__remarks_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__remarks_DEFINED

#define soap_default__gml__remarks(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__gml__remarks soap_serialize_std__string


#define soap__gml__remarks2s(soap, a) ((a).c_str())

#define soap_out__gml__remarks soap_out_std__string


#define soap_s2_gml__remarks(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)

#define soap_in__gml__remarks soap_in_std__string


#define soap_instantiate__gml__remarks soap_instantiate_std__string


#define soap_new__gml__remarks soap_new_std__string


#define soap_put__gml__remarks soap_put_std__string


#define soap_write__gml__remarks soap_write_std__string


#define soap_get__gml__remarks soap_get_std__string


#define soap_read__gml__remarks soap_read_std__string

#endif
/* _gml__name is a typedef synonym for gml__CodeType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__name_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__name_DEFINED

#define soap_default__gml__name(soap, a) (a)->gml__CodeType::soap_default(soap)


#define soap_serialize__gml__name(soap, a) (a)->soap_serialize(soap)


#define soap__gml__name2s soap_gml__CodeType2s


#define soap_out__gml__name soap_out_gml__CodeType


#define soap_s2_gml__name soap_s2gml__CodeType


#define soap_in__gml__name soap_in_gml__CodeType


#define soap_instantiate__gml__name soap_instantiate_gml__CodeType


#define soap_new__gml__name soap_new_gml__CodeType


#define soap_new_req__gml__name soap_new_req_gml__CodeType


#define soap_new_set__gml__name soap_new_set_gml__CodeType


#define soap_put__gml__name soap_put_gml__CodeType


#define soap_write__gml__name soap_write_gml__CodeType


#define soap_get__gml__name soap_get_gml__CodeType


#define soap_read__gml__name soap_read_gml__CodeType

#endif
/* _gml__identifier is a typedef synonym for gml__CodeWithAuthorityType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__identifier_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__identifier_DEFINED

#define soap_default__gml__identifier(soap, a) (a)->gml__CodeWithAuthorityType::soap_default(soap)


#define soap_serialize__gml__identifier(soap, a) (a)->soap_serialize(soap)


#define soap__gml__identifier2s soap_gml__CodeWithAuthorityType2s


#define soap_out__gml__identifier soap_out_gml__CodeWithAuthorityType


#define soap_s2_gml__identifier soap_s2gml__CodeWithAuthorityType


#define soap_in__gml__identifier soap_in_gml__CodeWithAuthorityType


#define soap_instantiate__gml__identifier soap_instantiate_gml__CodeWithAuthorityType


#define soap_new__gml__identifier soap_new_gml__CodeWithAuthorityType


#define soap_new_req__gml__identifier soap_new_req_gml__CodeWithAuthorityType


#define soap_new_set__gml__identifier soap_new_set_gml__CodeWithAuthorityType


#define soap_put__gml__identifier soap_put_gml__CodeWithAuthorityType


#define soap_write__gml__identifier soap_write_gml__CodeWithAuthorityType


#define soap_get__gml__identifier soap_get_gml__CodeWithAuthorityType


#define soap_read__gml__identifier soap_read_gml__CodeWithAuthorityType

#endif
/* _gml__descriptionReference is a typedef synonym for gml__ReferenceType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__descriptionReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__descriptionReference_DEFINED

#define soap_default__gml__descriptionReference(soap, a) (a)->gml__ReferenceType::soap_default(soap)


#define soap_serialize__gml__descriptionReference(soap, a) (a)->soap_serialize(soap)


#define soap__gml__descriptionReference2s soap_gml__ReferenceType2s


#define soap_out__gml__descriptionReference soap_out_gml__ReferenceType


#define soap_s2_gml__descriptionReference soap_s2gml__ReferenceType


#define soap_in__gml__descriptionReference soap_in_gml__ReferenceType


#define soap_instantiate__gml__descriptionReference soap_instantiate_gml__ReferenceType


#define soap_new__gml__descriptionReference soap_new_gml__ReferenceType


#define soap_new_req__gml__descriptionReference soap_new_req_gml__ReferenceType


#define soap_new_set__gml__descriptionReference soap_new_set_gml__ReferenceType


#define soap_put__gml__descriptionReference soap_put_gml__ReferenceType


#define soap_write__gml__descriptionReference soap_write_gml__ReferenceType


#define soap_get__gml__descriptionReference soap_get_gml__ReferenceType


#define soap_read__gml__descriptionReference soap_read_gml__ReferenceType

#endif
/* _gml__description is a typedef synonym for gml__StringOrRefType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__description_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__description_DEFINED

#define soap_default__gml__description(soap, a) (a)->gml__StringOrRefType::soap_default(soap)


#define soap_serialize__gml__description(soap, a) (a)->soap_serialize(soap)


#define soap__gml__description2s soap_gml__StringOrRefType2s


#define soap_out__gml__description soap_out_gml__StringOrRefType


#define soap_s2_gml__description soap_s2gml__StringOrRefType


#define soap_in__gml__description soap_in_gml__StringOrRefType


#define soap_instantiate__gml__description soap_instantiate_gml__StringOrRefType


#define soap_new__gml__description soap_new_gml__StringOrRefType


#define soap_new_req__gml__description soap_new_req_gml__StringOrRefType


#define soap_new_set__gml__description soap_new_set_gml__StringOrRefType


#define soap_put__gml__description soap_put_gml__StringOrRefType


#define soap_write__gml__description soap_write_gml__StringOrRefType


#define soap_get__gml__description soap_get_gml__StringOrRefType


#define soap_read__gml__description soap_read_gml__StringOrRefType

#endif
/* _gml__GeodeticCRS is a typedef synonym for gml__GeodeticCRSType */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticCRS_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__GeodeticCRS_DEFINED

#define soap_default__gml__GeodeticCRS(soap, a) (a)->gml__GeodeticCRSType::soap_default(soap)


#define soap_serialize__gml__GeodeticCRS(soap, a) (a)->soap_serialize(soap)


#define soap__gml__GeodeticCRS2s soap_gml__GeodeticCRSType2s


#define soap_out__gml__GeodeticCRS soap_out_gml__GeodeticCRSType


#define soap_s2_gml__GeodeticCRS soap_s2gml__GeodeticCRSType


#define soap_in__gml__GeodeticCRS soap_in_gml__GeodeticCRSType


#define soap_instantiate__gml__GeodeticCRS soap_instantiate_gml__GeodeticCRSType


#define soap_new__gml__GeodeticCRS soap_new_gml__GeodeticCRSType


#define soap_new_req__gml__GeodeticCRS soap_new_req_gml__GeodeticCRSType


#define soap_new_set__gml__GeodeticCRS soap_new_set_gml__GeodeticCRSType


#define soap_put__gml__GeodeticCRS soap_put_gml__GeodeticCRSType


#define soap_write__gml__GeodeticCRS soap_write_gml__GeodeticCRSType


#define soap_get__gml__GeodeticCRS soap_get_gml__GeodeticCRSType


#define soap_read__gml__GeodeticCRS soap_read_gml__GeodeticCRSType

#endif
/* _eml__AbstractContextualObject is a typedef synonym for eml__AbstractObject */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml__AbstractContextualObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__eml__AbstractContextualObject_DEFINED

#define soap_default__eml__AbstractContextualObject(soap, a) (a)->eml__AbstractObject::soap_default(soap)


#define soap_serialize__eml__AbstractContextualObject(soap, a) (a)->soap_serialize(soap)


#define soap__eml__AbstractContextualObject2s soap_eml__AbstractObject2s


#define soap_out__eml__AbstractContextualObject soap_out_eml__AbstractObject


#define soap_s2_eml__AbstractContextualObject soap_s2eml__AbstractObject


#define soap_in__eml__AbstractContextualObject soap_in_eml__AbstractObject


#define soap_instantiate__eml__AbstractContextualObject soap_instantiate_eml__AbstractObject


#define soap_new__eml__AbstractContextualObject soap_new_eml__AbstractObject


#define soap_new_req__eml__AbstractContextualObject soap_new_req_eml__AbstractObject


#define soap_new_set__eml__AbstractContextualObject soap_new_set_eml__AbstractObject


#define soap_put__eml__AbstractContextualObject soap_put_eml__AbstractObject


#define soap_write__eml__AbstractContextualObject soap_write_eml__AbstractObject


#define soap_get__eml__AbstractContextualObject soap_get_eml__AbstractObject


#define soap_read__eml__AbstractContextualObject soap_read_eml__AbstractObject

#endif
/* _eml__AbstractDataObject is a typedef synonym for eml__AbstractObject */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml__AbstractDataObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__eml__AbstractDataObject_DEFINED

#define soap_default__eml__AbstractDataObject(soap, a) (a)->eml__AbstractObject::soap_default(soap)


#define soap_serialize__eml__AbstractDataObject(soap, a) (a)->soap_serialize(soap)


#define soap__eml__AbstractDataObject2s soap_eml__AbstractObject2s


#define soap_out__eml__AbstractDataObject soap_out_eml__AbstractObject


#define soap_s2_eml__AbstractDataObject soap_s2eml__AbstractObject


#define soap_in__eml__AbstractDataObject soap_in_eml__AbstractObject


#define soap_instantiate__eml__AbstractDataObject soap_instantiate_eml__AbstractObject


#define soap_new__eml__AbstractDataObject soap_new_eml__AbstractObject


#define soap_new_req__eml__AbstractDataObject soap_new_req_eml__AbstractObject


#define soap_new_set__eml__AbstractDataObject soap_new_set_eml__AbstractObject


#define soap_put__eml__AbstractDataObject soap_put_eml__AbstractObject


#define soap_write__eml__AbstractDataObject soap_write_eml__AbstractObject


#define soap_get__eml__AbstractDataObject soap_get_eml__AbstractObject


#define soap_read__eml__AbstractDataObject soap_read_eml__AbstractObject

#endif
/* _eml__EpcExternalPartReference is a typedef synonym for eml__obj_USCOREEpcExternalPartReference */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__eml__EpcExternalPartReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__eml__EpcExternalPartReference_DEFINED

#define soap_default__eml__EpcExternalPartReference(soap, a) (a)->eml__obj_USCOREEpcExternalPartReference::soap_default(soap)


#define soap_serialize__eml__EpcExternalPartReference(soap, a) (a)->soap_serialize(soap)


#define soap__eml__EpcExternalPartReference2s soap_eml__obj_USCOREEpcExternalPartReference2s


#define soap_out__eml__EpcExternalPartReference soap_out_eml__obj_USCOREEpcExternalPartReference


#define soap_s2_eml__EpcExternalPartReference soap_s2eml__obj_USCOREEpcExternalPartReference


#define soap_in__eml__EpcExternalPartReference soap_in_eml__obj_USCOREEpcExternalPartReference


#define soap_instantiate__eml__EpcExternalPartReference soap_instantiate_eml__obj_USCOREEpcExternalPartReference


#define soap_new__eml__EpcExternalPartReference soap_new_eml__obj_USCOREEpcExternalPartReference


#define soap_new_req__eml__EpcExternalPartReference soap_new_req_eml__obj_USCOREEpcExternalPartReference


#define soap_new_set__eml__EpcExternalPartReference soap_new_set_eml__obj_USCOREEpcExternalPartReference


#define soap_put__eml__EpcExternalPartReference soap_put_eml__obj_USCOREEpcExternalPartReference


#define soap_write__eml__EpcExternalPartReference soap_write_eml__obj_USCOREEpcExternalPartReference


#define soap_get__eml__EpcExternalPartReference soap_get_eml__obj_USCOREEpcExternalPartReference


#define soap_read__eml__EpcExternalPartReference soap_read_eml__obj_USCOREEpcExternalPartReference

#endif
/* _resqml2__StringTableLookup is a typedef synonym for resqml2__obj_USCOREStringTableLookup */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StringTableLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StringTableLookup_DEFINED

#define soap_default__resqml2__StringTableLookup(soap, a) (a)->resqml2__obj_USCOREStringTableLookup::soap_default(soap)


#define soap_serialize__resqml2__StringTableLookup(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__StringTableLookup2s soap_resqml2__obj_USCOREStringTableLookup2s


#define soap_out__resqml2__StringTableLookup soap_out_resqml2__obj_USCOREStringTableLookup


#define soap_s2_resqml2__StringTableLookup soap_s2resqml2__obj_USCOREStringTableLookup


#define soap_in__resqml2__StringTableLookup soap_in_resqml2__obj_USCOREStringTableLookup


#define soap_instantiate__resqml2__StringTableLookup soap_instantiate_resqml2__obj_USCOREStringTableLookup


#define soap_new__resqml2__StringTableLookup soap_new_resqml2__obj_USCOREStringTableLookup


#define soap_new_req__resqml2__StringTableLookup soap_new_req_resqml2__obj_USCOREStringTableLookup


#define soap_new_set__resqml2__StringTableLookup soap_new_set_resqml2__obj_USCOREStringTableLookup


#define soap_put__resqml2__StringTableLookup soap_put_resqml2__obj_USCOREStringTableLookup


#define soap_write__resqml2__StringTableLookup soap_write_resqml2__obj_USCOREStringTableLookup


#define soap_get__resqml2__StringTableLookup soap_get_resqml2__obj_USCOREStringTableLookup


#define soap_read__resqml2__StringTableLookup soap_read_resqml2__obj_USCOREStringTableLookup

#endif
/* _resqml2__PropertySet is a typedef synonym for resqml2__obj_USCOREPropertySet */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PropertySet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PropertySet_DEFINED

#define soap_default__resqml2__PropertySet(soap, a) (a)->resqml2__obj_USCOREPropertySet::soap_default(soap)


#define soap_serialize__resqml2__PropertySet(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__PropertySet2s soap_resqml2__obj_USCOREPropertySet2s


#define soap_out__resqml2__PropertySet soap_out_resqml2__obj_USCOREPropertySet


#define soap_s2_resqml2__PropertySet soap_s2resqml2__obj_USCOREPropertySet


#define soap_in__resqml2__PropertySet soap_in_resqml2__obj_USCOREPropertySet


#define soap_instantiate__resqml2__PropertySet soap_instantiate_resqml2__obj_USCOREPropertySet


#define soap_new__resqml2__PropertySet soap_new_resqml2__obj_USCOREPropertySet


#define soap_new_req__resqml2__PropertySet soap_new_req_resqml2__obj_USCOREPropertySet


#define soap_new_set__resqml2__PropertySet soap_new_set_resqml2__obj_USCOREPropertySet


#define soap_put__resqml2__PropertySet soap_put_resqml2__obj_USCOREPropertySet


#define soap_write__resqml2__PropertySet soap_write_resqml2__obj_USCOREPropertySet


#define soap_get__resqml2__PropertySet soap_get_resqml2__obj_USCOREPropertySet


#define soap_read__resqml2__PropertySet soap_read_resqml2__obj_USCOREPropertySet

#endif
/* _resqml2__PropertyKind is a typedef synonym for resqml2__obj_USCOREPropertyKind */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PropertyKind_DEFINED

#define soap_default__resqml2__PropertyKind(soap, a) (a)->resqml2__obj_USCOREPropertyKind::soap_default(soap)


#define soap_serialize__resqml2__PropertyKind(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__PropertyKind2s soap_resqml2__obj_USCOREPropertyKind2s


#define soap_out__resqml2__PropertyKind soap_out_resqml2__obj_USCOREPropertyKind


#define soap_s2_resqml2__PropertyKind soap_s2resqml2__obj_USCOREPropertyKind


#define soap_in__resqml2__PropertyKind soap_in_resqml2__obj_USCOREPropertyKind


#define soap_instantiate__resqml2__PropertyKind soap_instantiate_resqml2__obj_USCOREPropertyKind


#define soap_new__resqml2__PropertyKind soap_new_resqml2__obj_USCOREPropertyKind


#define soap_new_req__resqml2__PropertyKind soap_new_req_resqml2__obj_USCOREPropertyKind


#define soap_new_set__resqml2__PropertyKind soap_new_set_resqml2__obj_USCOREPropertyKind


#define soap_put__resqml2__PropertyKind soap_put_resqml2__obj_USCOREPropertyKind


#define soap_write__resqml2__PropertyKind soap_write_resqml2__obj_USCOREPropertyKind


#define soap_get__resqml2__PropertyKind soap_get_resqml2__obj_USCOREPropertyKind


#define soap_read__resqml2__PropertyKind soap_read_resqml2__obj_USCOREPropertyKind

#endif
/* _resqml2__PointsProperty is a typedef synonym for resqml2__obj_USCOREPointsProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PointsProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PointsProperty_DEFINED

#define soap_default__resqml2__PointsProperty(soap, a) (a)->resqml2__obj_USCOREPointsProperty::soap_default(soap)


#define soap_serialize__resqml2__PointsProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__PointsProperty2s soap_resqml2__obj_USCOREPointsProperty2s


#define soap_out__resqml2__PointsProperty soap_out_resqml2__obj_USCOREPointsProperty


#define soap_s2_resqml2__PointsProperty soap_s2resqml2__obj_USCOREPointsProperty


#define soap_in__resqml2__PointsProperty soap_in_resqml2__obj_USCOREPointsProperty


#define soap_instantiate__resqml2__PointsProperty soap_instantiate_resqml2__obj_USCOREPointsProperty


#define soap_new__resqml2__PointsProperty soap_new_resqml2__obj_USCOREPointsProperty


#define soap_new_req__resqml2__PointsProperty soap_new_req_resqml2__obj_USCOREPointsProperty


#define soap_new_set__resqml2__PointsProperty soap_new_set_resqml2__obj_USCOREPointsProperty


#define soap_put__resqml2__PointsProperty soap_put_resqml2__obj_USCOREPointsProperty


#define soap_write__resqml2__PointsProperty soap_write_resqml2__obj_USCOREPointsProperty


#define soap_get__resqml2__PointsProperty soap_get_resqml2__obj_USCOREPointsProperty


#define soap_read__resqml2__PointsProperty soap_read_resqml2__obj_USCOREPointsProperty

#endif
/* _resqml2__DoubleTableLookup is a typedef synonym for resqml2__obj_USCOREDoubleTableLookup */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__DoubleTableLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__DoubleTableLookup_DEFINED

#define soap_default__resqml2__DoubleTableLookup(soap, a) (a)->resqml2__obj_USCOREDoubleTableLookup::soap_default(soap)


#define soap_serialize__resqml2__DoubleTableLookup(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__DoubleTableLookup2s soap_resqml2__obj_USCOREDoubleTableLookup2s


#define soap_out__resqml2__DoubleTableLookup soap_out_resqml2__obj_USCOREDoubleTableLookup


#define soap_s2_resqml2__DoubleTableLookup soap_s2resqml2__obj_USCOREDoubleTableLookup


#define soap_in__resqml2__DoubleTableLookup soap_in_resqml2__obj_USCOREDoubleTableLookup


#define soap_instantiate__resqml2__DoubleTableLookup soap_instantiate_resqml2__obj_USCOREDoubleTableLookup


#define soap_new__resqml2__DoubleTableLookup soap_new_resqml2__obj_USCOREDoubleTableLookup


#define soap_new_req__resqml2__DoubleTableLookup soap_new_req_resqml2__obj_USCOREDoubleTableLookup


#define soap_new_set__resqml2__DoubleTableLookup soap_new_set_resqml2__obj_USCOREDoubleTableLookup


#define soap_put__resqml2__DoubleTableLookup soap_put_resqml2__obj_USCOREDoubleTableLookup


#define soap_write__resqml2__DoubleTableLookup soap_write_resqml2__obj_USCOREDoubleTableLookup


#define soap_get__resqml2__DoubleTableLookup soap_get_resqml2__obj_USCOREDoubleTableLookup


#define soap_read__resqml2__DoubleTableLookup soap_read_resqml2__obj_USCOREDoubleTableLookup

#endif
/* _resqml2__DiscreteProperty is a typedef synonym for resqml2__obj_USCOREDiscreteProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__DiscreteProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__DiscreteProperty_DEFINED

#define soap_default__resqml2__DiscreteProperty(soap, a) (a)->resqml2__obj_USCOREDiscreteProperty::soap_default(soap)


#define soap_serialize__resqml2__DiscreteProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__DiscreteProperty2s soap_resqml2__obj_USCOREDiscreteProperty2s


#define soap_out__resqml2__DiscreteProperty soap_out_resqml2__obj_USCOREDiscreteProperty


#define soap_s2_resqml2__DiscreteProperty soap_s2resqml2__obj_USCOREDiscreteProperty


#define soap_in__resqml2__DiscreteProperty soap_in_resqml2__obj_USCOREDiscreteProperty


#define soap_instantiate__resqml2__DiscreteProperty soap_instantiate_resqml2__obj_USCOREDiscreteProperty


#define soap_new__resqml2__DiscreteProperty soap_new_resqml2__obj_USCOREDiscreteProperty


#define soap_new_req__resqml2__DiscreteProperty soap_new_req_resqml2__obj_USCOREDiscreteProperty


#define soap_new_set__resqml2__DiscreteProperty soap_new_set_resqml2__obj_USCOREDiscreteProperty


#define soap_put__resqml2__DiscreteProperty soap_put_resqml2__obj_USCOREDiscreteProperty


#define soap_write__resqml2__DiscreteProperty soap_write_resqml2__obj_USCOREDiscreteProperty


#define soap_get__resqml2__DiscreteProperty soap_get_resqml2__obj_USCOREDiscreteProperty


#define soap_read__resqml2__DiscreteProperty soap_read_resqml2__obj_USCOREDiscreteProperty

#endif
/* _resqml2__ContinuousProperty is a typedef synonym for resqml2__obj_USCOREContinuousProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__ContinuousProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__ContinuousProperty_DEFINED

#define soap_default__resqml2__ContinuousProperty(soap, a) (a)->resqml2__obj_USCOREContinuousProperty::soap_default(soap)


#define soap_serialize__resqml2__ContinuousProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__ContinuousProperty2s soap_resqml2__obj_USCOREContinuousProperty2s


#define soap_out__resqml2__ContinuousProperty soap_out_resqml2__obj_USCOREContinuousProperty


#define soap_s2_resqml2__ContinuousProperty soap_s2resqml2__obj_USCOREContinuousProperty


#define soap_in__resqml2__ContinuousProperty soap_in_resqml2__obj_USCOREContinuousProperty


#define soap_instantiate__resqml2__ContinuousProperty soap_instantiate_resqml2__obj_USCOREContinuousProperty


#define soap_new__resqml2__ContinuousProperty soap_new_resqml2__obj_USCOREContinuousProperty


#define soap_new_req__resqml2__ContinuousProperty soap_new_req_resqml2__obj_USCOREContinuousProperty


#define soap_new_set__resqml2__ContinuousProperty soap_new_set_resqml2__obj_USCOREContinuousProperty


#define soap_put__resqml2__ContinuousProperty soap_put_resqml2__obj_USCOREContinuousProperty


#define soap_write__resqml2__ContinuousProperty soap_write_resqml2__obj_USCOREContinuousProperty


#define soap_get__resqml2__ContinuousProperty soap_get_resqml2__obj_USCOREContinuousProperty


#define soap_read__resqml2__ContinuousProperty soap_read_resqml2__obj_USCOREContinuousProperty

#endif
/* _resqml2__CommentProperty is a typedef synonym for resqml2__obj_USCORECommentProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__CommentProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__CommentProperty_DEFINED

#define soap_default__resqml2__CommentProperty(soap, a) (a)->resqml2__obj_USCORECommentProperty::soap_default(soap)


#define soap_serialize__resqml2__CommentProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__CommentProperty2s soap_resqml2__obj_USCORECommentProperty2s


#define soap_out__resqml2__CommentProperty soap_out_resqml2__obj_USCORECommentProperty


#define soap_s2_resqml2__CommentProperty soap_s2resqml2__obj_USCORECommentProperty


#define soap_in__resqml2__CommentProperty soap_in_resqml2__obj_USCORECommentProperty


#define soap_instantiate__resqml2__CommentProperty soap_instantiate_resqml2__obj_USCORECommentProperty


#define soap_new__resqml2__CommentProperty soap_new_resqml2__obj_USCORECommentProperty


#define soap_new_req__resqml2__CommentProperty soap_new_req_resqml2__obj_USCORECommentProperty


#define soap_new_set__resqml2__CommentProperty soap_new_set_resqml2__obj_USCORECommentProperty


#define soap_put__resqml2__CommentProperty soap_put_resqml2__obj_USCORECommentProperty


#define soap_write__resqml2__CommentProperty soap_write_resqml2__obj_USCORECommentProperty


#define soap_get__resqml2__CommentProperty soap_get_resqml2__obj_USCORECommentProperty


#define soap_read__resqml2__CommentProperty soap_read_resqml2__obj_USCORECommentProperty

#endif
/* _resqml2__CategoricalProperty is a typedef synonym for resqml2__obj_USCORECategoricalProperty */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__CategoricalProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__CategoricalProperty_DEFINED

#define soap_default__resqml2__CategoricalProperty(soap, a) (a)->resqml2__obj_USCORECategoricalProperty::soap_default(soap)


#define soap_serialize__resqml2__CategoricalProperty(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__CategoricalProperty2s soap_resqml2__obj_USCORECategoricalProperty2s


#define soap_out__resqml2__CategoricalProperty soap_out_resqml2__obj_USCORECategoricalProperty


#define soap_s2_resqml2__CategoricalProperty soap_s2resqml2__obj_USCORECategoricalProperty


#define soap_in__resqml2__CategoricalProperty soap_in_resqml2__obj_USCORECategoricalProperty


#define soap_instantiate__resqml2__CategoricalProperty soap_instantiate_resqml2__obj_USCORECategoricalProperty


#define soap_new__resqml2__CategoricalProperty soap_new_resqml2__obj_USCORECategoricalProperty


#define soap_new_req__resqml2__CategoricalProperty soap_new_req_resqml2__obj_USCORECategoricalProperty


#define soap_new_set__resqml2__CategoricalProperty soap_new_set_resqml2__obj_USCORECategoricalProperty


#define soap_put__resqml2__CategoricalProperty soap_put_resqml2__obj_USCORECategoricalProperty


#define soap_write__resqml2__CategoricalProperty soap_write_resqml2__obj_USCORECategoricalProperty


#define soap_get__resqml2__CategoricalProperty soap_get_resqml2__obj_USCORECategoricalProperty


#define soap_read__resqml2__CategoricalProperty soap_read_resqml2__obj_USCORECategoricalProperty

#endif
/* _resqml2__WellboreTrajectoryRepresentation is a typedef synonym for resqml2__obj_USCOREWellboreTrajectoryRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreTrajectoryRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreTrajectoryRepresentation_DEFINED

#define soap_default__resqml2__WellboreTrajectoryRepresentation(soap, a) (a)->resqml2__obj_USCOREWellboreTrajectoryRepresentation::soap_default(soap)


#define soap_serialize__resqml2__WellboreTrajectoryRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__WellboreTrajectoryRepresentation2s soap_resqml2__obj_USCOREWellboreTrajectoryRepresentation2s


#define soap_out__resqml2__WellboreTrajectoryRepresentation soap_out_resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_s2_resqml2__WellboreTrajectoryRepresentation soap_s2resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_in__resqml2__WellboreTrajectoryRepresentation soap_in_resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_instantiate__resqml2__WellboreTrajectoryRepresentation soap_instantiate_resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_new__resqml2__WellboreTrajectoryRepresentation soap_new_resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_new_req__resqml2__WellboreTrajectoryRepresentation soap_new_req_resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_new_set__resqml2__WellboreTrajectoryRepresentation soap_new_set_resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_put__resqml2__WellboreTrajectoryRepresentation soap_put_resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_write__resqml2__WellboreTrajectoryRepresentation soap_write_resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_get__resqml2__WellboreTrajectoryRepresentation soap_get_resqml2__obj_USCOREWellboreTrajectoryRepresentation


#define soap_read__resqml2__WellboreTrajectoryRepresentation soap_read_resqml2__obj_USCOREWellboreTrajectoryRepresentation

#endif
/* _resqml2__WellboreMarkerFrameRepresentation is a typedef synonym for resqml2__obj_USCOREWellboreMarkerFrameRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreMarkerFrameRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreMarkerFrameRepresentation_DEFINED

#define soap_default__resqml2__WellboreMarkerFrameRepresentation(soap, a) (a)->resqml2__obj_USCOREWellboreMarkerFrameRepresentation::soap_default(soap)


#define soap_serialize__resqml2__WellboreMarkerFrameRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__WellboreMarkerFrameRepresentation2s soap_resqml2__obj_USCOREWellboreMarkerFrameRepresentation2s


#define soap_out__resqml2__WellboreMarkerFrameRepresentation soap_out_resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_s2_resqml2__WellboreMarkerFrameRepresentation soap_s2resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_in__resqml2__WellboreMarkerFrameRepresentation soap_in_resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_instantiate__resqml2__WellboreMarkerFrameRepresentation soap_instantiate_resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_new__resqml2__WellboreMarkerFrameRepresentation soap_new_resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_new_req__resqml2__WellboreMarkerFrameRepresentation soap_new_req_resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_new_set__resqml2__WellboreMarkerFrameRepresentation soap_new_set_resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_put__resqml2__WellboreMarkerFrameRepresentation soap_put_resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_write__resqml2__WellboreMarkerFrameRepresentation soap_write_resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_get__resqml2__WellboreMarkerFrameRepresentation soap_get_resqml2__obj_USCOREWellboreMarkerFrameRepresentation


#define soap_read__resqml2__WellboreMarkerFrameRepresentation soap_read_resqml2__obj_USCOREWellboreMarkerFrameRepresentation

#endif
/* _resqml2__WellboreFrameRepresentation is a typedef synonym for resqml2__obj_USCOREWellboreFrameRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreFrameRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreFrameRepresentation_DEFINED

#define soap_default__resqml2__WellboreFrameRepresentation(soap, a) (a)->resqml2__obj_USCOREWellboreFrameRepresentation::soap_default(soap)


#define soap_serialize__resqml2__WellboreFrameRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__WellboreFrameRepresentation2s soap_resqml2__obj_USCOREWellboreFrameRepresentation2s


#define soap_out__resqml2__WellboreFrameRepresentation soap_out_resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_s2_resqml2__WellboreFrameRepresentation soap_s2resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_in__resqml2__WellboreFrameRepresentation soap_in_resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_instantiate__resqml2__WellboreFrameRepresentation soap_instantiate_resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_new__resqml2__WellboreFrameRepresentation soap_new_resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_new_req__resqml2__WellboreFrameRepresentation soap_new_req_resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_new_set__resqml2__WellboreFrameRepresentation soap_new_set_resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_put__resqml2__WellboreFrameRepresentation soap_put_resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_write__resqml2__WellboreFrameRepresentation soap_write_resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_get__resqml2__WellboreFrameRepresentation soap_get_resqml2__obj_USCOREWellboreFrameRepresentation


#define soap_read__resqml2__WellboreFrameRepresentation soap_read_resqml2__obj_USCOREWellboreFrameRepresentation

#endif
/* _resqml2__MdDatum is a typedef synonym for resqml2__obj_USCOREMdDatum */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__MdDatum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__MdDatum_DEFINED

#define soap_default__resqml2__MdDatum(soap, a) (a)->resqml2__obj_USCOREMdDatum::soap_default(soap)


#define soap_serialize__resqml2__MdDatum(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__MdDatum2s soap_resqml2__obj_USCOREMdDatum2s


#define soap_out__resqml2__MdDatum soap_out_resqml2__obj_USCOREMdDatum


#define soap_s2_resqml2__MdDatum soap_s2resqml2__obj_USCOREMdDatum


#define soap_in__resqml2__MdDatum soap_in_resqml2__obj_USCOREMdDatum


#define soap_instantiate__resqml2__MdDatum soap_instantiate_resqml2__obj_USCOREMdDatum


#define soap_new__resqml2__MdDatum soap_new_resqml2__obj_USCOREMdDatum


#define soap_new_req__resqml2__MdDatum soap_new_req_resqml2__obj_USCOREMdDatum


#define soap_new_set__resqml2__MdDatum soap_new_set_resqml2__obj_USCOREMdDatum


#define soap_put__resqml2__MdDatum soap_put_resqml2__obj_USCOREMdDatum


#define soap_write__resqml2__MdDatum soap_write_resqml2__obj_USCOREMdDatum


#define soap_get__resqml2__MdDatum soap_get_resqml2__obj_USCOREMdDatum


#define soap_read__resqml2__MdDatum soap_read_resqml2__obj_USCOREMdDatum

#endif
/* _resqml2__DeviationSurveyRepresentation is a typedef synonym for resqml2__obj_USCOREDeviationSurveyRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__DeviationSurveyRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__DeviationSurveyRepresentation_DEFINED

#define soap_default__resqml2__DeviationSurveyRepresentation(soap, a) (a)->resqml2__obj_USCOREDeviationSurveyRepresentation::soap_default(soap)


#define soap_serialize__resqml2__DeviationSurveyRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__DeviationSurveyRepresentation2s soap_resqml2__obj_USCOREDeviationSurveyRepresentation2s


#define soap_out__resqml2__DeviationSurveyRepresentation soap_out_resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_s2_resqml2__DeviationSurveyRepresentation soap_s2resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_in__resqml2__DeviationSurveyRepresentation soap_in_resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_instantiate__resqml2__DeviationSurveyRepresentation soap_instantiate_resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_new__resqml2__DeviationSurveyRepresentation soap_new_resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_new_req__resqml2__DeviationSurveyRepresentation soap_new_req_resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_new_set__resqml2__DeviationSurveyRepresentation soap_new_set_resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_put__resqml2__DeviationSurveyRepresentation soap_put_resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_write__resqml2__DeviationSurveyRepresentation soap_write_resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_get__resqml2__DeviationSurveyRepresentation soap_get_resqml2__obj_USCOREDeviationSurveyRepresentation


#define soap_read__resqml2__DeviationSurveyRepresentation soap_read_resqml2__obj_USCOREDeviationSurveyRepresentation

#endif
/* _resqml2__BlockedWellboreRepresentation is a typedef synonym for resqml2__obj_USCOREBlockedWellboreRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__BlockedWellboreRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__BlockedWellboreRepresentation_DEFINED

#define soap_default__resqml2__BlockedWellboreRepresentation(soap, a) (a)->resqml2__obj_USCOREBlockedWellboreRepresentation::soap_default(soap)


#define soap_serialize__resqml2__BlockedWellboreRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__BlockedWellboreRepresentation2s soap_resqml2__obj_USCOREBlockedWellboreRepresentation2s


#define soap_out__resqml2__BlockedWellboreRepresentation soap_out_resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_s2_resqml2__BlockedWellboreRepresentation soap_s2resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_in__resqml2__BlockedWellboreRepresentation soap_in_resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_instantiate__resqml2__BlockedWellboreRepresentation soap_instantiate_resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_new__resqml2__BlockedWellboreRepresentation soap_new_resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_new_req__resqml2__BlockedWellboreRepresentation soap_new_req_resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_new_set__resqml2__BlockedWellboreRepresentation soap_new_set_resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_put__resqml2__BlockedWellboreRepresentation soap_put_resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_write__resqml2__BlockedWellboreRepresentation soap_write_resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_get__resqml2__BlockedWellboreRepresentation soap_get_resqml2__obj_USCOREBlockedWellboreRepresentation


#define soap_read__resqml2__BlockedWellboreRepresentation soap_read_resqml2__obj_USCOREBlockedWellboreRepresentation

#endif
/* _resqml2__TriangulatedSetRepresentation is a typedef synonym for resqml2__obj_USCORETriangulatedSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TriangulatedSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TriangulatedSetRepresentation_DEFINED

#define soap_default__resqml2__TriangulatedSetRepresentation(soap, a) (a)->resqml2__obj_USCORETriangulatedSetRepresentation::soap_default(soap)


#define soap_serialize__resqml2__TriangulatedSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__TriangulatedSetRepresentation2s soap_resqml2__obj_USCORETriangulatedSetRepresentation2s


#define soap_out__resqml2__TriangulatedSetRepresentation soap_out_resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_s2_resqml2__TriangulatedSetRepresentation soap_s2resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_in__resqml2__TriangulatedSetRepresentation soap_in_resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_instantiate__resqml2__TriangulatedSetRepresentation soap_instantiate_resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_new__resqml2__TriangulatedSetRepresentation soap_new_resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_new_req__resqml2__TriangulatedSetRepresentation soap_new_req_resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_new_set__resqml2__TriangulatedSetRepresentation soap_new_set_resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_put__resqml2__TriangulatedSetRepresentation soap_put_resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_write__resqml2__TriangulatedSetRepresentation soap_write_resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_get__resqml2__TriangulatedSetRepresentation soap_get_resqml2__obj_USCORETriangulatedSetRepresentation


#define soap_read__resqml2__TriangulatedSetRepresentation soap_read_resqml2__obj_USCORETriangulatedSetRepresentation

#endif
/* _resqml2__SealedVolumeFrameworkRepresentation is a typedef synonym for resqml2__obj_USCORESealedVolumeFrameworkRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SealedVolumeFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SealedVolumeFrameworkRepresentation_DEFINED

#define soap_default__resqml2__SealedVolumeFrameworkRepresentation(soap, a) (a)->resqml2__obj_USCORESealedVolumeFrameworkRepresentation::soap_default(soap)


#define soap_serialize__resqml2__SealedVolumeFrameworkRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__SealedVolumeFrameworkRepresentation2s soap_resqml2__obj_USCORESealedVolumeFrameworkRepresentation2s


#define soap_out__resqml2__SealedVolumeFrameworkRepresentation soap_out_resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_s2_resqml2__SealedVolumeFrameworkRepresentation soap_s2resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_in__resqml2__SealedVolumeFrameworkRepresentation soap_in_resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_instantiate__resqml2__SealedVolumeFrameworkRepresentation soap_instantiate_resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_new__resqml2__SealedVolumeFrameworkRepresentation soap_new_resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_new_req__resqml2__SealedVolumeFrameworkRepresentation soap_new_req_resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_new_set__resqml2__SealedVolumeFrameworkRepresentation soap_new_set_resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_put__resqml2__SealedVolumeFrameworkRepresentation soap_put_resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_write__resqml2__SealedVolumeFrameworkRepresentation soap_write_resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_get__resqml2__SealedVolumeFrameworkRepresentation soap_get_resqml2__obj_USCORESealedVolumeFrameworkRepresentation


#define soap_read__resqml2__SealedVolumeFrameworkRepresentation soap_read_resqml2__obj_USCORESealedVolumeFrameworkRepresentation

#endif
/* _resqml2__SealedSurfaceFrameworkRepresentation is a typedef synonym for resqml2__obj_USCORESealedSurfaceFrameworkRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SealedSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SealedSurfaceFrameworkRepresentation_DEFINED

#define soap_default__resqml2__SealedSurfaceFrameworkRepresentation(soap, a) (a)->resqml2__obj_USCORESealedSurfaceFrameworkRepresentation::soap_default(soap)


#define soap_serialize__resqml2__SealedSurfaceFrameworkRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__SealedSurfaceFrameworkRepresentation2s soap_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation2s


#define soap_out__resqml2__SealedSurfaceFrameworkRepresentation soap_out_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_s2_resqml2__SealedSurfaceFrameworkRepresentation soap_s2resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_in__resqml2__SealedSurfaceFrameworkRepresentation soap_in_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_instantiate__resqml2__SealedSurfaceFrameworkRepresentation soap_instantiate_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_new__resqml2__SealedSurfaceFrameworkRepresentation soap_new_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_new_req__resqml2__SealedSurfaceFrameworkRepresentation soap_new_req_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_new_set__resqml2__SealedSurfaceFrameworkRepresentation soap_new_set_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_put__resqml2__SealedSurfaceFrameworkRepresentation soap_put_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_write__resqml2__SealedSurfaceFrameworkRepresentation soap_write_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_get__resqml2__SealedSurfaceFrameworkRepresentation soap_get_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation


#define soap_read__resqml2__SealedSurfaceFrameworkRepresentation soap_read_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation

#endif
/* _resqml2__PolylineSetRepresentation is a typedef synonym for resqml2__obj_USCOREPolylineSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PolylineSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PolylineSetRepresentation_DEFINED

#define soap_default__resqml2__PolylineSetRepresentation(soap, a) (a)->resqml2__obj_USCOREPolylineSetRepresentation::soap_default(soap)


#define soap_serialize__resqml2__PolylineSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__PolylineSetRepresentation2s soap_resqml2__obj_USCOREPolylineSetRepresentation2s


#define soap_out__resqml2__PolylineSetRepresentation soap_out_resqml2__obj_USCOREPolylineSetRepresentation


#define soap_s2_resqml2__PolylineSetRepresentation soap_s2resqml2__obj_USCOREPolylineSetRepresentation


#define soap_in__resqml2__PolylineSetRepresentation soap_in_resqml2__obj_USCOREPolylineSetRepresentation


#define soap_instantiate__resqml2__PolylineSetRepresentation soap_instantiate_resqml2__obj_USCOREPolylineSetRepresentation


#define soap_new__resqml2__PolylineSetRepresentation soap_new_resqml2__obj_USCOREPolylineSetRepresentation


#define soap_new_req__resqml2__PolylineSetRepresentation soap_new_req_resqml2__obj_USCOREPolylineSetRepresentation


#define soap_new_set__resqml2__PolylineSetRepresentation soap_new_set_resqml2__obj_USCOREPolylineSetRepresentation


#define soap_put__resqml2__PolylineSetRepresentation soap_put_resqml2__obj_USCOREPolylineSetRepresentation


#define soap_write__resqml2__PolylineSetRepresentation soap_write_resqml2__obj_USCOREPolylineSetRepresentation


#define soap_get__resqml2__PolylineSetRepresentation soap_get_resqml2__obj_USCOREPolylineSetRepresentation


#define soap_read__resqml2__PolylineSetRepresentation soap_read_resqml2__obj_USCOREPolylineSetRepresentation

#endif
/* _resqml2__PolylineRepresentation is a typedef synonym for resqml2__obj_USCOREPolylineRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PolylineRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PolylineRepresentation_DEFINED

#define soap_default__resqml2__PolylineRepresentation(soap, a) (a)->resqml2__obj_USCOREPolylineRepresentation::soap_default(soap)


#define soap_serialize__resqml2__PolylineRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__PolylineRepresentation2s soap_resqml2__obj_USCOREPolylineRepresentation2s


#define soap_out__resqml2__PolylineRepresentation soap_out_resqml2__obj_USCOREPolylineRepresentation


#define soap_s2_resqml2__PolylineRepresentation soap_s2resqml2__obj_USCOREPolylineRepresentation


#define soap_in__resqml2__PolylineRepresentation soap_in_resqml2__obj_USCOREPolylineRepresentation


#define soap_instantiate__resqml2__PolylineRepresentation soap_instantiate_resqml2__obj_USCOREPolylineRepresentation


#define soap_new__resqml2__PolylineRepresentation soap_new_resqml2__obj_USCOREPolylineRepresentation


#define soap_new_req__resqml2__PolylineRepresentation soap_new_req_resqml2__obj_USCOREPolylineRepresentation


#define soap_new_set__resqml2__PolylineRepresentation soap_new_set_resqml2__obj_USCOREPolylineRepresentation


#define soap_put__resqml2__PolylineRepresentation soap_put_resqml2__obj_USCOREPolylineRepresentation


#define soap_write__resqml2__PolylineRepresentation soap_write_resqml2__obj_USCOREPolylineRepresentation


#define soap_get__resqml2__PolylineRepresentation soap_get_resqml2__obj_USCOREPolylineRepresentation


#define soap_read__resqml2__PolylineRepresentation soap_read_resqml2__obj_USCOREPolylineRepresentation

#endif
/* _resqml2__PointSetRepresentation is a typedef synonym for resqml2__obj_USCOREPointSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PointSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PointSetRepresentation_DEFINED

#define soap_default__resqml2__PointSetRepresentation(soap, a) (a)->resqml2__obj_USCOREPointSetRepresentation::soap_default(soap)


#define soap_serialize__resqml2__PointSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__PointSetRepresentation2s soap_resqml2__obj_USCOREPointSetRepresentation2s


#define soap_out__resqml2__PointSetRepresentation soap_out_resqml2__obj_USCOREPointSetRepresentation


#define soap_s2_resqml2__PointSetRepresentation soap_s2resqml2__obj_USCOREPointSetRepresentation


#define soap_in__resqml2__PointSetRepresentation soap_in_resqml2__obj_USCOREPointSetRepresentation


#define soap_instantiate__resqml2__PointSetRepresentation soap_instantiate_resqml2__obj_USCOREPointSetRepresentation


#define soap_new__resqml2__PointSetRepresentation soap_new_resqml2__obj_USCOREPointSetRepresentation


#define soap_new_req__resqml2__PointSetRepresentation soap_new_req_resqml2__obj_USCOREPointSetRepresentation


#define soap_new_set__resqml2__PointSetRepresentation soap_new_set_resqml2__obj_USCOREPointSetRepresentation


#define soap_put__resqml2__PointSetRepresentation soap_put_resqml2__obj_USCOREPointSetRepresentation


#define soap_write__resqml2__PointSetRepresentation soap_write_resqml2__obj_USCOREPointSetRepresentation


#define soap_get__resqml2__PointSetRepresentation soap_get_resqml2__obj_USCOREPointSetRepresentation


#define soap_read__resqml2__PointSetRepresentation soap_read_resqml2__obj_USCOREPointSetRepresentation

#endif
/* _resqml2__PlaneSetRepresentation is a typedef synonym for resqml2__obj_USCOREPlaneSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PlaneSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__PlaneSetRepresentation_DEFINED

#define soap_default__resqml2__PlaneSetRepresentation(soap, a) (a)->resqml2__obj_USCOREPlaneSetRepresentation::soap_default(soap)


#define soap_serialize__resqml2__PlaneSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__PlaneSetRepresentation2s soap_resqml2__obj_USCOREPlaneSetRepresentation2s


#define soap_out__resqml2__PlaneSetRepresentation soap_out_resqml2__obj_USCOREPlaneSetRepresentation


#define soap_s2_resqml2__PlaneSetRepresentation soap_s2resqml2__obj_USCOREPlaneSetRepresentation


#define soap_in__resqml2__PlaneSetRepresentation soap_in_resqml2__obj_USCOREPlaneSetRepresentation


#define soap_instantiate__resqml2__PlaneSetRepresentation soap_instantiate_resqml2__obj_USCOREPlaneSetRepresentation


#define soap_new__resqml2__PlaneSetRepresentation soap_new_resqml2__obj_USCOREPlaneSetRepresentation


#define soap_new_req__resqml2__PlaneSetRepresentation soap_new_req_resqml2__obj_USCOREPlaneSetRepresentation


#define soap_new_set__resqml2__PlaneSetRepresentation soap_new_set_resqml2__obj_USCOREPlaneSetRepresentation


#define soap_put__resqml2__PlaneSetRepresentation soap_put_resqml2__obj_USCOREPlaneSetRepresentation


#define soap_write__resqml2__PlaneSetRepresentation soap_write_resqml2__obj_USCOREPlaneSetRepresentation


#define soap_get__resqml2__PlaneSetRepresentation soap_get_resqml2__obj_USCOREPlaneSetRepresentation


#define soap_read__resqml2__PlaneSetRepresentation soap_read_resqml2__obj_USCOREPlaneSetRepresentation

#endif
/* _resqml2__NonSealedSurfaceFrameworkRepresentation is a typedef synonym for resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__NonSealedSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__NonSealedSurfaceFrameworkRepresentation_DEFINED

#define soap_default__resqml2__NonSealedSurfaceFrameworkRepresentation(soap, a) (a)->resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation::soap_default(soap)


#define soap_serialize__resqml2__NonSealedSurfaceFrameworkRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__NonSealedSurfaceFrameworkRepresentation2s soap_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation2s


#define soap_out__resqml2__NonSealedSurfaceFrameworkRepresentation soap_out_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_s2_resqml2__NonSealedSurfaceFrameworkRepresentation soap_s2resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_in__resqml2__NonSealedSurfaceFrameworkRepresentation soap_in_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_instantiate__resqml2__NonSealedSurfaceFrameworkRepresentation soap_instantiate_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_new__resqml2__NonSealedSurfaceFrameworkRepresentation soap_new_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_new_req__resqml2__NonSealedSurfaceFrameworkRepresentation soap_new_req_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_new_set__resqml2__NonSealedSurfaceFrameworkRepresentation soap_new_set_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_put__resqml2__NonSealedSurfaceFrameworkRepresentation soap_put_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_write__resqml2__NonSealedSurfaceFrameworkRepresentation soap_write_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_get__resqml2__NonSealedSurfaceFrameworkRepresentation soap_get_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation


#define soap_read__resqml2__NonSealedSurfaceFrameworkRepresentation soap_read_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation

#endif
/* _resqml2__Grid2dSetRepresentation is a typedef synonym for resqml2__obj_USCOREGrid2dSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__Grid2dSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__Grid2dSetRepresentation_DEFINED

#define soap_default__resqml2__Grid2dSetRepresentation(soap, a) (a)->resqml2__obj_USCOREGrid2dSetRepresentation::soap_default(soap)


#define soap_serialize__resqml2__Grid2dSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__Grid2dSetRepresentation2s soap_resqml2__obj_USCOREGrid2dSetRepresentation2s


#define soap_out__resqml2__Grid2dSetRepresentation soap_out_resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_s2_resqml2__Grid2dSetRepresentation soap_s2resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_in__resqml2__Grid2dSetRepresentation soap_in_resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_instantiate__resqml2__Grid2dSetRepresentation soap_instantiate_resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_new__resqml2__Grid2dSetRepresentation soap_new_resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_new_req__resqml2__Grid2dSetRepresentation soap_new_req_resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_new_set__resqml2__Grid2dSetRepresentation soap_new_set_resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_put__resqml2__Grid2dSetRepresentation soap_put_resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_write__resqml2__Grid2dSetRepresentation soap_write_resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_get__resqml2__Grid2dSetRepresentation soap_get_resqml2__obj_USCOREGrid2dSetRepresentation


#define soap_read__resqml2__Grid2dSetRepresentation soap_read_resqml2__obj_USCOREGrid2dSetRepresentation

#endif
/* _resqml2__Grid2dRepresentation is a typedef synonym for resqml2__obj_USCOREGrid2dRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__Grid2dRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__Grid2dRepresentation_DEFINED

#define soap_default__resqml2__Grid2dRepresentation(soap, a) (a)->resqml2__obj_USCOREGrid2dRepresentation::soap_default(soap)


#define soap_serialize__resqml2__Grid2dRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__Grid2dRepresentation2s soap_resqml2__obj_USCOREGrid2dRepresentation2s


#define soap_out__resqml2__Grid2dRepresentation soap_out_resqml2__obj_USCOREGrid2dRepresentation


#define soap_s2_resqml2__Grid2dRepresentation soap_s2resqml2__obj_USCOREGrid2dRepresentation


#define soap_in__resqml2__Grid2dRepresentation soap_in_resqml2__obj_USCOREGrid2dRepresentation


#define soap_instantiate__resqml2__Grid2dRepresentation soap_instantiate_resqml2__obj_USCOREGrid2dRepresentation


#define soap_new__resqml2__Grid2dRepresentation soap_new_resqml2__obj_USCOREGrid2dRepresentation


#define soap_new_req__resqml2__Grid2dRepresentation soap_new_req_resqml2__obj_USCOREGrid2dRepresentation


#define soap_new_set__resqml2__Grid2dRepresentation soap_new_set_resqml2__obj_USCOREGrid2dRepresentation


#define soap_put__resqml2__Grid2dRepresentation soap_put_resqml2__obj_USCOREGrid2dRepresentation


#define soap_write__resqml2__Grid2dRepresentation soap_write_resqml2__obj_USCOREGrid2dRepresentation


#define soap_get__resqml2__Grid2dRepresentation soap_get_resqml2__obj_USCOREGrid2dRepresentation


#define soap_read__resqml2__Grid2dRepresentation soap_read_resqml2__obj_USCOREGrid2dRepresentation

#endif
/* _resqml2__UnstructuredGridRepresentation is a typedef synonym for resqml2__obj_USCOREUnstructuredGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__UnstructuredGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__UnstructuredGridRepresentation_DEFINED

#define soap_default__resqml2__UnstructuredGridRepresentation(soap, a) (a)->resqml2__obj_USCOREUnstructuredGridRepresentation::soap_default(soap)


#define soap_serialize__resqml2__UnstructuredGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__UnstructuredGridRepresentation2s soap_resqml2__obj_USCOREUnstructuredGridRepresentation2s


#define soap_out__resqml2__UnstructuredGridRepresentation soap_out_resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_s2_resqml2__UnstructuredGridRepresentation soap_s2resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_in__resqml2__UnstructuredGridRepresentation soap_in_resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_instantiate__resqml2__UnstructuredGridRepresentation soap_instantiate_resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_new__resqml2__UnstructuredGridRepresentation soap_new_resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_new_req__resqml2__UnstructuredGridRepresentation soap_new_req_resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_new_set__resqml2__UnstructuredGridRepresentation soap_new_set_resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_put__resqml2__UnstructuredGridRepresentation soap_put_resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_write__resqml2__UnstructuredGridRepresentation soap_write_resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_get__resqml2__UnstructuredGridRepresentation soap_get_resqml2__obj_USCOREUnstructuredGridRepresentation


#define soap_read__resqml2__UnstructuredGridRepresentation soap_read_resqml2__obj_USCOREUnstructuredGridRepresentation

#endif
/* _resqml2__UnstructuredColumnLayerGridRepresentation is a typedef synonym for resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__UnstructuredColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__UnstructuredColumnLayerGridRepresentation_DEFINED

#define soap_default__resqml2__UnstructuredColumnLayerGridRepresentation(soap, a) (a)->resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation::soap_default(soap)


#define soap_serialize__resqml2__UnstructuredColumnLayerGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__UnstructuredColumnLayerGridRepresentation2s soap_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation2s


#define soap_out__resqml2__UnstructuredColumnLayerGridRepresentation soap_out_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_s2_resqml2__UnstructuredColumnLayerGridRepresentation soap_s2resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_in__resqml2__UnstructuredColumnLayerGridRepresentation soap_in_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_instantiate__resqml2__UnstructuredColumnLayerGridRepresentation soap_instantiate_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_new__resqml2__UnstructuredColumnLayerGridRepresentation soap_new_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_new_req__resqml2__UnstructuredColumnLayerGridRepresentation soap_new_req_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_new_set__resqml2__UnstructuredColumnLayerGridRepresentation soap_new_set_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_put__resqml2__UnstructuredColumnLayerGridRepresentation soap_put_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_write__resqml2__UnstructuredColumnLayerGridRepresentation soap_write_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_get__resqml2__UnstructuredColumnLayerGridRepresentation soap_get_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation


#define soap_read__resqml2__UnstructuredColumnLayerGridRepresentation soap_read_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation

#endif
/* _resqml2__TruncatedUnstructuredColumnLayerGridRepresentation is a typedef synonym for resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation_DEFINED

#define soap_default__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation(soap, a) (a)->resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::soap_default(soap)


#define soap_serialize__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation2s soap_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation2s


#define soap_out__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_out_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_s2_resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_s2resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_in__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_in_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_instantiate__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_instantiate_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_new__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_new_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_new_req__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_new_req_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_new_set__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_new_set_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_put__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_put_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_write__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_write_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_get__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_get_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation


#define soap_read__resqml2__TruncatedUnstructuredColumnLayerGridRepresentation soap_read_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation

#endif
/* _resqml2__TruncatedIjkGridRepresentation is a typedef synonym for resqml2__obj_USCORETruncatedIjkGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TruncatedIjkGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TruncatedIjkGridRepresentation_DEFINED

#define soap_default__resqml2__TruncatedIjkGridRepresentation(soap, a) (a)->resqml2__obj_USCORETruncatedIjkGridRepresentation::soap_default(soap)


#define soap_serialize__resqml2__TruncatedIjkGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__TruncatedIjkGridRepresentation2s soap_resqml2__obj_USCORETruncatedIjkGridRepresentation2s


#define soap_out__resqml2__TruncatedIjkGridRepresentation soap_out_resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_s2_resqml2__TruncatedIjkGridRepresentation soap_s2resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_in__resqml2__TruncatedIjkGridRepresentation soap_in_resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_instantiate__resqml2__TruncatedIjkGridRepresentation soap_instantiate_resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_new__resqml2__TruncatedIjkGridRepresentation soap_new_resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_new_req__resqml2__TruncatedIjkGridRepresentation soap_new_req_resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_new_set__resqml2__TruncatedIjkGridRepresentation soap_new_set_resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_put__resqml2__TruncatedIjkGridRepresentation soap_put_resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_write__resqml2__TruncatedIjkGridRepresentation soap_write_resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_get__resqml2__TruncatedIjkGridRepresentation soap_get_resqml2__obj_USCORETruncatedIjkGridRepresentation


#define soap_read__resqml2__TruncatedIjkGridRepresentation soap_read_resqml2__obj_USCORETruncatedIjkGridRepresentation

#endif
/* _resqml2__LocalGridSet is a typedef synonym for resqml2__obj_USCORELocalGridSet */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__LocalGridSet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__LocalGridSet_DEFINED

#define soap_default__resqml2__LocalGridSet(soap, a) (a)->resqml2__obj_USCORELocalGridSet::soap_default(soap)


#define soap_serialize__resqml2__LocalGridSet(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__LocalGridSet2s soap_resqml2__obj_USCORELocalGridSet2s


#define soap_out__resqml2__LocalGridSet soap_out_resqml2__obj_USCORELocalGridSet


#define soap_s2_resqml2__LocalGridSet soap_s2resqml2__obj_USCORELocalGridSet


#define soap_in__resqml2__LocalGridSet soap_in_resqml2__obj_USCORELocalGridSet


#define soap_instantiate__resqml2__LocalGridSet soap_instantiate_resqml2__obj_USCORELocalGridSet


#define soap_new__resqml2__LocalGridSet soap_new_resqml2__obj_USCORELocalGridSet


#define soap_new_req__resqml2__LocalGridSet soap_new_req_resqml2__obj_USCORELocalGridSet


#define soap_new_set__resqml2__LocalGridSet soap_new_set_resqml2__obj_USCORELocalGridSet


#define soap_put__resqml2__LocalGridSet soap_put_resqml2__obj_USCORELocalGridSet


#define soap_write__resqml2__LocalGridSet soap_write_resqml2__obj_USCORELocalGridSet


#define soap_get__resqml2__LocalGridSet soap_get_resqml2__obj_USCORELocalGridSet


#define soap_read__resqml2__LocalGridSet soap_read_resqml2__obj_USCORELocalGridSet

#endif
/* _resqml2__IjkGridRepresentation is a typedef synonym for resqml2__obj_USCOREIjkGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__IjkGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__IjkGridRepresentation_DEFINED

#define soap_default__resqml2__IjkGridRepresentation(soap, a) (a)->resqml2__obj_USCOREIjkGridRepresentation::soap_default(soap)


#define soap_serialize__resqml2__IjkGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__IjkGridRepresentation2s soap_resqml2__obj_USCOREIjkGridRepresentation2s


#define soap_out__resqml2__IjkGridRepresentation soap_out_resqml2__obj_USCOREIjkGridRepresentation


#define soap_s2_resqml2__IjkGridRepresentation soap_s2resqml2__obj_USCOREIjkGridRepresentation


#define soap_in__resqml2__IjkGridRepresentation soap_in_resqml2__obj_USCOREIjkGridRepresentation


#define soap_instantiate__resqml2__IjkGridRepresentation soap_instantiate_resqml2__obj_USCOREIjkGridRepresentation


#define soap_new__resqml2__IjkGridRepresentation soap_new_resqml2__obj_USCOREIjkGridRepresentation


#define soap_new_req__resqml2__IjkGridRepresentation soap_new_req_resqml2__obj_USCOREIjkGridRepresentation


#define soap_new_set__resqml2__IjkGridRepresentation soap_new_set_resqml2__obj_USCOREIjkGridRepresentation


#define soap_put__resqml2__IjkGridRepresentation soap_put_resqml2__obj_USCOREIjkGridRepresentation


#define soap_write__resqml2__IjkGridRepresentation soap_write_resqml2__obj_USCOREIjkGridRepresentation


#define soap_get__resqml2__IjkGridRepresentation soap_get_resqml2__obj_USCOREIjkGridRepresentation


#define soap_read__resqml2__IjkGridRepresentation soap_read_resqml2__obj_USCOREIjkGridRepresentation

#endif
/* _resqml2__GridConnectionSetRepresentation is a typedef synonym for resqml2__obj_USCOREGridConnectionSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GridConnectionSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GridConnectionSetRepresentation_DEFINED

#define soap_default__resqml2__GridConnectionSetRepresentation(soap, a) (a)->resqml2__obj_USCOREGridConnectionSetRepresentation::soap_default(soap)


#define soap_serialize__resqml2__GridConnectionSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GridConnectionSetRepresentation2s soap_resqml2__obj_USCOREGridConnectionSetRepresentation2s


#define soap_out__resqml2__GridConnectionSetRepresentation soap_out_resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_s2_resqml2__GridConnectionSetRepresentation soap_s2resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_in__resqml2__GridConnectionSetRepresentation soap_in_resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_instantiate__resqml2__GridConnectionSetRepresentation soap_instantiate_resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_new__resqml2__GridConnectionSetRepresentation soap_new_resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_new_req__resqml2__GridConnectionSetRepresentation soap_new_req_resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_new_set__resqml2__GridConnectionSetRepresentation soap_new_set_resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_put__resqml2__GridConnectionSetRepresentation soap_put_resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_write__resqml2__GridConnectionSetRepresentation soap_write_resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_get__resqml2__GridConnectionSetRepresentation soap_get_resqml2__obj_USCOREGridConnectionSetRepresentation


#define soap_read__resqml2__GridConnectionSetRepresentation soap_read_resqml2__obj_USCOREGridConnectionSetRepresentation

#endif
/* _resqml2__GpGridRepresentation is a typedef synonym for resqml2__obj_USCOREGpGridRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GpGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GpGridRepresentation_DEFINED

#define soap_default__resqml2__GpGridRepresentation(soap, a) (a)->resqml2__obj_USCOREGpGridRepresentation::soap_default(soap)


#define soap_serialize__resqml2__GpGridRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GpGridRepresentation2s soap_resqml2__obj_USCOREGpGridRepresentation2s


#define soap_out__resqml2__GpGridRepresentation soap_out_resqml2__obj_USCOREGpGridRepresentation


#define soap_s2_resqml2__GpGridRepresentation soap_s2resqml2__obj_USCOREGpGridRepresentation


#define soap_in__resqml2__GpGridRepresentation soap_in_resqml2__obj_USCOREGpGridRepresentation


#define soap_instantiate__resqml2__GpGridRepresentation soap_instantiate_resqml2__obj_USCOREGpGridRepresentation


#define soap_new__resqml2__GpGridRepresentation soap_new_resqml2__obj_USCOREGpGridRepresentation


#define soap_new_req__resqml2__GpGridRepresentation soap_new_req_resqml2__obj_USCOREGpGridRepresentation


#define soap_new_set__resqml2__GpGridRepresentation soap_new_set_resqml2__obj_USCOREGpGridRepresentation


#define soap_put__resqml2__GpGridRepresentation soap_put_resqml2__obj_USCOREGpGridRepresentation


#define soap_write__resqml2__GpGridRepresentation soap_write_resqml2__obj_USCOREGpGridRepresentation


#define soap_get__resqml2__GpGridRepresentation soap_get_resqml2__obj_USCOREGpGridRepresentation


#define soap_read__resqml2__GpGridRepresentation soap_read_resqml2__obj_USCOREGpGridRepresentation

#endif
/* _resqml2__SubRepresentation is a typedef synonym for resqml2__obj_USCORESubRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SubRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SubRepresentation_DEFINED

#define soap_default__resqml2__SubRepresentation(soap, a) (a)->resqml2__obj_USCORESubRepresentation::soap_default(soap)


#define soap_serialize__resqml2__SubRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__SubRepresentation2s soap_resqml2__obj_USCORESubRepresentation2s


#define soap_out__resqml2__SubRepresentation soap_out_resqml2__obj_USCORESubRepresentation


#define soap_s2_resqml2__SubRepresentation soap_s2resqml2__obj_USCORESubRepresentation


#define soap_in__resqml2__SubRepresentation soap_in_resqml2__obj_USCORESubRepresentation


#define soap_instantiate__resqml2__SubRepresentation soap_instantiate_resqml2__obj_USCORESubRepresentation


#define soap_new__resqml2__SubRepresentation soap_new_resqml2__obj_USCORESubRepresentation


#define soap_new_req__resqml2__SubRepresentation soap_new_req_resqml2__obj_USCORESubRepresentation


#define soap_new_set__resqml2__SubRepresentation soap_new_set_resqml2__obj_USCORESubRepresentation


#define soap_put__resqml2__SubRepresentation soap_put_resqml2__obj_USCORESubRepresentation


#define soap_write__resqml2__SubRepresentation soap_write_resqml2__obj_USCORESubRepresentation


#define soap_get__resqml2__SubRepresentation soap_get_resqml2__obj_USCORESubRepresentation


#define soap_read__resqml2__SubRepresentation soap_read_resqml2__obj_USCORESubRepresentation

#endif
/* _resqml2__RepresentationSetRepresentation is a typedef synonym for resqml2__obj_USCORERepresentationSetRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RepresentationSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RepresentationSetRepresentation_DEFINED

#define soap_default__resqml2__RepresentationSetRepresentation(soap, a) (a)->resqml2__obj_USCORERepresentationSetRepresentation::soap_default(soap)


#define soap_serialize__resqml2__RepresentationSetRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__RepresentationSetRepresentation2s soap_resqml2__obj_USCORERepresentationSetRepresentation2s


#define soap_out__resqml2__RepresentationSetRepresentation soap_out_resqml2__obj_USCORERepresentationSetRepresentation


#define soap_s2_resqml2__RepresentationSetRepresentation soap_s2resqml2__obj_USCORERepresentationSetRepresentation


#define soap_in__resqml2__RepresentationSetRepresentation soap_in_resqml2__obj_USCORERepresentationSetRepresentation


#define soap_instantiate__resqml2__RepresentationSetRepresentation soap_instantiate_resqml2__obj_USCORERepresentationSetRepresentation


#define soap_new__resqml2__RepresentationSetRepresentation soap_new_resqml2__obj_USCORERepresentationSetRepresentation


#define soap_new_req__resqml2__RepresentationSetRepresentation soap_new_req_resqml2__obj_USCORERepresentationSetRepresentation


#define soap_new_set__resqml2__RepresentationSetRepresentation soap_new_set_resqml2__obj_USCORERepresentationSetRepresentation


#define soap_put__resqml2__RepresentationSetRepresentation soap_put_resqml2__obj_USCORERepresentationSetRepresentation


#define soap_write__resqml2__RepresentationSetRepresentation soap_write_resqml2__obj_USCORERepresentationSetRepresentation


#define soap_get__resqml2__RepresentationSetRepresentation soap_get_resqml2__obj_USCORERepresentationSetRepresentation


#define soap_read__resqml2__RepresentationSetRepresentation soap_read_resqml2__obj_USCORERepresentationSetRepresentation

#endif
/* _resqml2__RepresentationIdentitySet is a typedef synonym for resqml2__obj_USCORERepresentationIdentitySet */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RepresentationIdentitySet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RepresentationIdentitySet_DEFINED

#define soap_default__resqml2__RepresentationIdentitySet(soap, a) (a)->resqml2__obj_USCORERepresentationIdentitySet::soap_default(soap)


#define soap_serialize__resqml2__RepresentationIdentitySet(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__RepresentationIdentitySet2s soap_resqml2__obj_USCORERepresentationIdentitySet2s


#define soap_out__resqml2__RepresentationIdentitySet soap_out_resqml2__obj_USCORERepresentationIdentitySet


#define soap_s2_resqml2__RepresentationIdentitySet soap_s2resqml2__obj_USCORERepresentationIdentitySet


#define soap_in__resqml2__RepresentationIdentitySet soap_in_resqml2__obj_USCORERepresentationIdentitySet


#define soap_instantiate__resqml2__RepresentationIdentitySet soap_instantiate_resqml2__obj_USCORERepresentationIdentitySet


#define soap_new__resqml2__RepresentationIdentitySet soap_new_resqml2__obj_USCORERepresentationIdentitySet


#define soap_new_req__resqml2__RepresentationIdentitySet soap_new_req_resqml2__obj_USCORERepresentationIdentitySet


#define soap_new_set__resqml2__RepresentationIdentitySet soap_new_set_resqml2__obj_USCORERepresentationIdentitySet


#define soap_put__resqml2__RepresentationIdentitySet soap_put_resqml2__obj_USCORERepresentationIdentitySet


#define soap_write__resqml2__RepresentationIdentitySet soap_write_resqml2__obj_USCORERepresentationIdentitySet


#define soap_get__resqml2__RepresentationIdentitySet soap_get_resqml2__obj_USCORERepresentationIdentitySet


#define soap_read__resqml2__RepresentationIdentitySet soap_read_resqml2__obj_USCORERepresentationIdentitySet

#endif
/* _resqml2__RedefinedGeometryRepresentation is a typedef synonym for resqml2__obj_USCORERedefinedGeometryRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RedefinedGeometryRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RedefinedGeometryRepresentation_DEFINED

#define soap_default__resqml2__RedefinedGeometryRepresentation(soap, a) (a)->resqml2__obj_USCORERedefinedGeometryRepresentation::soap_default(soap)


#define soap_serialize__resqml2__RedefinedGeometryRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__RedefinedGeometryRepresentation2s soap_resqml2__obj_USCORERedefinedGeometryRepresentation2s


#define soap_out__resqml2__RedefinedGeometryRepresentation soap_out_resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_s2_resqml2__RedefinedGeometryRepresentation soap_s2resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_in__resqml2__RedefinedGeometryRepresentation soap_in_resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_instantiate__resqml2__RedefinedGeometryRepresentation soap_instantiate_resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_new__resqml2__RedefinedGeometryRepresentation soap_new_resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_new_req__resqml2__RedefinedGeometryRepresentation soap_new_req_resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_new_set__resqml2__RedefinedGeometryRepresentation soap_new_set_resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_put__resqml2__RedefinedGeometryRepresentation soap_put_resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_write__resqml2__RedefinedGeometryRepresentation soap_write_resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_get__resqml2__RedefinedGeometryRepresentation soap_get_resqml2__obj_USCORERedefinedGeometryRepresentation


#define soap_read__resqml2__RedefinedGeometryRepresentation soap_read_resqml2__obj_USCORERedefinedGeometryRepresentation

#endif
/* _resqml2__StratigraphicUnitInterpretation is a typedef synonym for resqml2__obj_USCOREStratigraphicUnitInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicUnitInterpretation_DEFINED

#define soap_default__resqml2__StratigraphicUnitInterpretation(soap, a) (a)->resqml2__obj_USCOREStratigraphicUnitInterpretation::soap_default(soap)


#define soap_serialize__resqml2__StratigraphicUnitInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__StratigraphicUnitInterpretation2s soap_resqml2__obj_USCOREStratigraphicUnitInterpretation2s


#define soap_out__resqml2__StratigraphicUnitInterpretation soap_out_resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_s2_resqml2__StratigraphicUnitInterpretation soap_s2resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_in__resqml2__StratigraphicUnitInterpretation soap_in_resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_instantiate__resqml2__StratigraphicUnitInterpretation soap_instantiate_resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_new__resqml2__StratigraphicUnitInterpretation soap_new_resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_new_req__resqml2__StratigraphicUnitInterpretation soap_new_req_resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_new_set__resqml2__StratigraphicUnitInterpretation soap_new_set_resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_put__resqml2__StratigraphicUnitInterpretation soap_put_resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_write__resqml2__StratigraphicUnitInterpretation soap_write_resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_get__resqml2__StratigraphicUnitInterpretation soap_get_resqml2__obj_USCOREStratigraphicUnitInterpretation


#define soap_read__resqml2__StratigraphicUnitInterpretation soap_read_resqml2__obj_USCOREStratigraphicUnitInterpretation

#endif
/* _resqml2__RockFluidOrganizationInterpretation is a typedef synonym for resqml2__obj_USCORERockFluidOrganizationInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RockFluidOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RockFluidOrganizationInterpretation_DEFINED

#define soap_default__resqml2__RockFluidOrganizationInterpretation(soap, a) (a)->resqml2__obj_USCORERockFluidOrganizationInterpretation::soap_default(soap)


#define soap_serialize__resqml2__RockFluidOrganizationInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__RockFluidOrganizationInterpretation2s soap_resqml2__obj_USCORERockFluidOrganizationInterpretation2s


#define soap_out__resqml2__RockFluidOrganizationInterpretation soap_out_resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_s2_resqml2__RockFluidOrganizationInterpretation soap_s2resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_in__resqml2__RockFluidOrganizationInterpretation soap_in_resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_instantiate__resqml2__RockFluidOrganizationInterpretation soap_instantiate_resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_new__resqml2__RockFluidOrganizationInterpretation soap_new_resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_new_req__resqml2__RockFluidOrganizationInterpretation soap_new_req_resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_new_set__resqml2__RockFluidOrganizationInterpretation soap_new_set_resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_put__resqml2__RockFluidOrganizationInterpretation soap_put_resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_write__resqml2__RockFluidOrganizationInterpretation soap_write_resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_get__resqml2__RockFluidOrganizationInterpretation soap_get_resqml2__obj_USCORERockFluidOrganizationInterpretation


#define soap_read__resqml2__RockFluidOrganizationInterpretation soap_read_resqml2__obj_USCORERockFluidOrganizationInterpretation

#endif
/* _resqml2__HorizonInterpretation is a typedef synonym for resqml2__obj_USCOREHorizonInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__HorizonInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__HorizonInterpretation_DEFINED

#define soap_default__resqml2__HorizonInterpretation(soap, a) (a)->resqml2__obj_USCOREHorizonInterpretation::soap_default(soap)


#define soap_serialize__resqml2__HorizonInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__HorizonInterpretation2s soap_resqml2__obj_USCOREHorizonInterpretation2s


#define soap_out__resqml2__HorizonInterpretation soap_out_resqml2__obj_USCOREHorizonInterpretation


#define soap_s2_resqml2__HorizonInterpretation soap_s2resqml2__obj_USCOREHorizonInterpretation


#define soap_in__resqml2__HorizonInterpretation soap_in_resqml2__obj_USCOREHorizonInterpretation


#define soap_instantiate__resqml2__HorizonInterpretation soap_instantiate_resqml2__obj_USCOREHorizonInterpretation


#define soap_new__resqml2__HorizonInterpretation soap_new_resqml2__obj_USCOREHorizonInterpretation


#define soap_new_req__resqml2__HorizonInterpretation soap_new_req_resqml2__obj_USCOREHorizonInterpretation


#define soap_new_set__resqml2__HorizonInterpretation soap_new_set_resqml2__obj_USCOREHorizonInterpretation


#define soap_put__resqml2__HorizonInterpretation soap_put_resqml2__obj_USCOREHorizonInterpretation


#define soap_write__resqml2__HorizonInterpretation soap_write_resqml2__obj_USCOREHorizonInterpretation


#define soap_get__resqml2__HorizonInterpretation soap_get_resqml2__obj_USCOREHorizonInterpretation


#define soap_read__resqml2__HorizonInterpretation soap_read_resqml2__obj_USCOREHorizonInterpretation

#endif
/* _resqml2__RockFluidUnitInterpretation is a typedef synonym for resqml2__obj_USCORERockFluidUnitInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RockFluidUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RockFluidUnitInterpretation_DEFINED

#define soap_default__resqml2__RockFluidUnitInterpretation(soap, a) (a)->resqml2__obj_USCORERockFluidUnitInterpretation::soap_default(soap)


#define soap_serialize__resqml2__RockFluidUnitInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__RockFluidUnitInterpretation2s soap_resqml2__obj_USCORERockFluidUnitInterpretation2s


#define soap_out__resqml2__RockFluidUnitInterpretation soap_out_resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_s2_resqml2__RockFluidUnitInterpretation soap_s2resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_in__resqml2__RockFluidUnitInterpretation soap_in_resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_instantiate__resqml2__RockFluidUnitInterpretation soap_instantiate_resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_new__resqml2__RockFluidUnitInterpretation soap_new_resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_new_req__resqml2__RockFluidUnitInterpretation soap_new_req_resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_new_set__resqml2__RockFluidUnitInterpretation soap_new_set_resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_put__resqml2__RockFluidUnitInterpretation soap_put_resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_write__resqml2__RockFluidUnitInterpretation soap_write_resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_get__resqml2__RockFluidUnitInterpretation soap_get_resqml2__obj_USCORERockFluidUnitInterpretation


#define soap_read__resqml2__RockFluidUnitInterpretation soap_read_resqml2__obj_USCORERockFluidUnitInterpretation

#endif
/* _resqml2__GeobodyInterpretation is a typedef synonym for resqml2__obj_USCOREGeobodyInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeobodyInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeobodyInterpretation_DEFINED

#define soap_default__resqml2__GeobodyInterpretation(soap, a) (a)->resqml2__obj_USCOREGeobodyInterpretation::soap_default(soap)


#define soap_serialize__resqml2__GeobodyInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GeobodyInterpretation2s soap_resqml2__obj_USCOREGeobodyInterpretation2s


#define soap_out__resqml2__GeobodyInterpretation soap_out_resqml2__obj_USCOREGeobodyInterpretation


#define soap_s2_resqml2__GeobodyInterpretation soap_s2resqml2__obj_USCOREGeobodyInterpretation


#define soap_in__resqml2__GeobodyInterpretation soap_in_resqml2__obj_USCOREGeobodyInterpretation


#define soap_instantiate__resqml2__GeobodyInterpretation soap_instantiate_resqml2__obj_USCOREGeobodyInterpretation


#define soap_new__resqml2__GeobodyInterpretation soap_new_resqml2__obj_USCOREGeobodyInterpretation


#define soap_new_req__resqml2__GeobodyInterpretation soap_new_req_resqml2__obj_USCOREGeobodyInterpretation


#define soap_new_set__resqml2__GeobodyInterpretation soap_new_set_resqml2__obj_USCOREGeobodyInterpretation


#define soap_put__resqml2__GeobodyInterpretation soap_put_resqml2__obj_USCOREGeobodyInterpretation


#define soap_write__resqml2__GeobodyInterpretation soap_write_resqml2__obj_USCOREGeobodyInterpretation


#define soap_get__resqml2__GeobodyInterpretation soap_get_resqml2__obj_USCOREGeobodyInterpretation


#define soap_read__resqml2__GeobodyInterpretation soap_read_resqml2__obj_USCOREGeobodyInterpretation

#endif
/* _resqml2__GeobodyBoundaryInterpretation is a typedef synonym for resqml2__obj_USCOREGeobodyBoundaryInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeobodyBoundaryInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeobodyBoundaryInterpretation_DEFINED

#define soap_default__resqml2__GeobodyBoundaryInterpretation(soap, a) (a)->resqml2__obj_USCOREGeobodyBoundaryInterpretation::soap_default(soap)


#define soap_serialize__resqml2__GeobodyBoundaryInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GeobodyBoundaryInterpretation2s soap_resqml2__obj_USCOREGeobodyBoundaryInterpretation2s


#define soap_out__resqml2__GeobodyBoundaryInterpretation soap_out_resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_s2_resqml2__GeobodyBoundaryInterpretation soap_s2resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_in__resqml2__GeobodyBoundaryInterpretation soap_in_resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_instantiate__resqml2__GeobodyBoundaryInterpretation soap_instantiate_resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_new__resqml2__GeobodyBoundaryInterpretation soap_new_resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_new_req__resqml2__GeobodyBoundaryInterpretation soap_new_req_resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_new_set__resqml2__GeobodyBoundaryInterpretation soap_new_set_resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_put__resqml2__GeobodyBoundaryInterpretation soap_put_resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_write__resqml2__GeobodyBoundaryInterpretation soap_write_resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_get__resqml2__GeobodyBoundaryInterpretation soap_get_resqml2__obj_USCOREGeobodyBoundaryInterpretation


#define soap_read__resqml2__GeobodyBoundaryInterpretation soap_read_resqml2__obj_USCOREGeobodyBoundaryInterpretation

#endif
/* _resqml2__FaultInterpretation is a typedef synonym for resqml2__obj_USCOREFaultInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__FaultInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__FaultInterpretation_DEFINED

#define soap_default__resqml2__FaultInterpretation(soap, a) (a)->resqml2__obj_USCOREFaultInterpretation::soap_default(soap)


#define soap_serialize__resqml2__FaultInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__FaultInterpretation2s soap_resqml2__obj_USCOREFaultInterpretation2s


#define soap_out__resqml2__FaultInterpretation soap_out_resqml2__obj_USCOREFaultInterpretation


#define soap_s2_resqml2__FaultInterpretation soap_s2resqml2__obj_USCOREFaultInterpretation


#define soap_in__resqml2__FaultInterpretation soap_in_resqml2__obj_USCOREFaultInterpretation


#define soap_instantiate__resqml2__FaultInterpretation soap_instantiate_resqml2__obj_USCOREFaultInterpretation


#define soap_new__resqml2__FaultInterpretation soap_new_resqml2__obj_USCOREFaultInterpretation


#define soap_new_req__resqml2__FaultInterpretation soap_new_req_resqml2__obj_USCOREFaultInterpretation


#define soap_new_set__resqml2__FaultInterpretation soap_new_set_resqml2__obj_USCOREFaultInterpretation


#define soap_put__resqml2__FaultInterpretation soap_put_resqml2__obj_USCOREFaultInterpretation


#define soap_write__resqml2__FaultInterpretation soap_write_resqml2__obj_USCOREFaultInterpretation


#define soap_get__resqml2__FaultInterpretation soap_get_resqml2__obj_USCOREFaultInterpretation


#define soap_read__resqml2__FaultInterpretation soap_read_resqml2__obj_USCOREFaultInterpretation

#endif
/* _resqml2__EarthModelInterpretation is a typedef synonym for resqml2__obj_USCOREEarthModelInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__EarthModelInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__EarthModelInterpretation_DEFINED

#define soap_default__resqml2__EarthModelInterpretation(soap, a) (a)->resqml2__obj_USCOREEarthModelInterpretation::soap_default(soap)


#define soap_serialize__resqml2__EarthModelInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__EarthModelInterpretation2s soap_resqml2__obj_USCOREEarthModelInterpretation2s


#define soap_out__resqml2__EarthModelInterpretation soap_out_resqml2__obj_USCOREEarthModelInterpretation


#define soap_s2_resqml2__EarthModelInterpretation soap_s2resqml2__obj_USCOREEarthModelInterpretation


#define soap_in__resqml2__EarthModelInterpretation soap_in_resqml2__obj_USCOREEarthModelInterpretation


#define soap_instantiate__resqml2__EarthModelInterpretation soap_instantiate_resqml2__obj_USCOREEarthModelInterpretation


#define soap_new__resqml2__EarthModelInterpretation soap_new_resqml2__obj_USCOREEarthModelInterpretation


#define soap_new_req__resqml2__EarthModelInterpretation soap_new_req_resqml2__obj_USCOREEarthModelInterpretation


#define soap_new_set__resqml2__EarthModelInterpretation soap_new_set_resqml2__obj_USCOREEarthModelInterpretation


#define soap_put__resqml2__EarthModelInterpretation soap_put_resqml2__obj_USCOREEarthModelInterpretation


#define soap_write__resqml2__EarthModelInterpretation soap_write_resqml2__obj_USCOREEarthModelInterpretation


#define soap_get__resqml2__EarthModelInterpretation soap_get_resqml2__obj_USCOREEarthModelInterpretation


#define soap_read__resqml2__EarthModelInterpretation soap_read_resqml2__obj_USCOREEarthModelInterpretation

#endif
/* _resqml2__WellboreInterpretation is a typedef synonym for resqml2__obj_USCOREWellboreInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreInterpretation_DEFINED

#define soap_default__resqml2__WellboreInterpretation(soap, a) (a)->resqml2__obj_USCOREWellboreInterpretation::soap_default(soap)


#define soap_serialize__resqml2__WellboreInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__WellboreInterpretation2s soap_resqml2__obj_USCOREWellboreInterpretation2s


#define soap_out__resqml2__WellboreInterpretation soap_out_resqml2__obj_USCOREWellboreInterpretation


#define soap_s2_resqml2__WellboreInterpretation soap_s2resqml2__obj_USCOREWellboreInterpretation


#define soap_in__resqml2__WellboreInterpretation soap_in_resqml2__obj_USCOREWellboreInterpretation


#define soap_instantiate__resqml2__WellboreInterpretation soap_instantiate_resqml2__obj_USCOREWellboreInterpretation


#define soap_new__resqml2__WellboreInterpretation soap_new_resqml2__obj_USCOREWellboreInterpretation


#define soap_new_req__resqml2__WellboreInterpretation soap_new_req_resqml2__obj_USCOREWellboreInterpretation


#define soap_new_set__resqml2__WellboreInterpretation soap_new_set_resqml2__obj_USCOREWellboreInterpretation


#define soap_put__resqml2__WellboreInterpretation soap_put_resqml2__obj_USCOREWellboreInterpretation


#define soap_write__resqml2__WellboreInterpretation soap_write_resqml2__obj_USCOREWellboreInterpretation


#define soap_get__resqml2__WellboreInterpretation soap_get_resqml2__obj_USCOREWellboreInterpretation


#define soap_read__resqml2__WellboreInterpretation soap_read_resqml2__obj_USCOREWellboreInterpretation

#endif
/* _resqml2__StructuralOrganizationInterpretation is a typedef synonym for resqml2__obj_USCOREStructuralOrganizationInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StructuralOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StructuralOrganizationInterpretation_DEFINED

#define soap_default__resqml2__StructuralOrganizationInterpretation(soap, a) (a)->resqml2__obj_USCOREStructuralOrganizationInterpretation::soap_default(soap)


#define soap_serialize__resqml2__StructuralOrganizationInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__StructuralOrganizationInterpretation2s soap_resqml2__obj_USCOREStructuralOrganizationInterpretation2s


#define soap_out__resqml2__StructuralOrganizationInterpretation soap_out_resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_s2_resqml2__StructuralOrganizationInterpretation soap_s2resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_in__resqml2__StructuralOrganizationInterpretation soap_in_resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_instantiate__resqml2__StructuralOrganizationInterpretation soap_instantiate_resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_new__resqml2__StructuralOrganizationInterpretation soap_new_resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_new_req__resqml2__StructuralOrganizationInterpretation soap_new_req_resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_new_set__resqml2__StructuralOrganizationInterpretation soap_new_set_resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_put__resqml2__StructuralOrganizationInterpretation soap_put_resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_write__resqml2__StructuralOrganizationInterpretation soap_write_resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_get__resqml2__StructuralOrganizationInterpretation soap_get_resqml2__obj_USCOREStructuralOrganizationInterpretation


#define soap_read__resqml2__StructuralOrganizationInterpretation soap_read_resqml2__obj_USCOREStructuralOrganizationInterpretation

#endif
/* _resqml2__StratigraphicOccurrenceInterpretation is a typedef synonym for resqml2__obj_USCOREStratigraphicOccurrenceInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicOccurrenceInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicOccurrenceInterpretation_DEFINED

#define soap_default__resqml2__StratigraphicOccurrenceInterpretation(soap, a) (a)->resqml2__obj_USCOREStratigraphicOccurrenceInterpretation::soap_default(soap)


#define soap_serialize__resqml2__StratigraphicOccurrenceInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__StratigraphicOccurrenceInterpretation2s soap_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation2s


#define soap_out__resqml2__StratigraphicOccurrenceInterpretation soap_out_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_s2_resqml2__StratigraphicOccurrenceInterpretation soap_s2resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_in__resqml2__StratigraphicOccurrenceInterpretation soap_in_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_instantiate__resqml2__StratigraphicOccurrenceInterpretation soap_instantiate_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_new__resqml2__StratigraphicOccurrenceInterpretation soap_new_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_new_req__resqml2__StratigraphicOccurrenceInterpretation soap_new_req_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_new_set__resqml2__StratigraphicOccurrenceInterpretation soap_new_set_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_put__resqml2__StratigraphicOccurrenceInterpretation soap_put_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_write__resqml2__StratigraphicOccurrenceInterpretation soap_write_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_get__resqml2__StratigraphicOccurrenceInterpretation soap_get_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation


#define soap_read__resqml2__StratigraphicOccurrenceInterpretation soap_read_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation

#endif
/* _resqml2__StratigraphicColumnRankInterpretation is a typedef synonym for resqml2__obj_USCOREStratigraphicColumnRankInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicColumnRankInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicColumnRankInterpretation_DEFINED

#define soap_default__resqml2__StratigraphicColumnRankInterpretation(soap, a) (a)->resqml2__obj_USCOREStratigraphicColumnRankInterpretation::soap_default(soap)


#define soap_serialize__resqml2__StratigraphicColumnRankInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__StratigraphicColumnRankInterpretation2s soap_resqml2__obj_USCOREStratigraphicColumnRankInterpretation2s


#define soap_out__resqml2__StratigraphicColumnRankInterpretation soap_out_resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_s2_resqml2__StratigraphicColumnRankInterpretation soap_s2resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_in__resqml2__StratigraphicColumnRankInterpretation soap_in_resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_instantiate__resqml2__StratigraphicColumnRankInterpretation soap_instantiate_resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_new__resqml2__StratigraphicColumnRankInterpretation soap_new_resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_new_req__resqml2__StratigraphicColumnRankInterpretation soap_new_req_resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_new_set__resqml2__StratigraphicColumnRankInterpretation soap_new_set_resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_put__resqml2__StratigraphicColumnRankInterpretation soap_put_resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_write__resqml2__StratigraphicColumnRankInterpretation soap_write_resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_get__resqml2__StratigraphicColumnRankInterpretation soap_get_resqml2__obj_USCOREStratigraphicColumnRankInterpretation


#define soap_read__resqml2__StratigraphicColumnRankInterpretation soap_read_resqml2__obj_USCOREStratigraphicColumnRankInterpretation

#endif
/* _resqml2__StratigraphicColumn is a typedef synonym for resqml2__obj_USCOREStratigraphicColumn */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicColumn_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicColumn_DEFINED

#define soap_default__resqml2__StratigraphicColumn(soap, a) (a)->resqml2__obj_USCOREStratigraphicColumn::soap_default(soap)


#define soap_serialize__resqml2__StratigraphicColumn(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__StratigraphicColumn2s soap_resqml2__obj_USCOREStratigraphicColumn2s


#define soap_out__resqml2__StratigraphicColumn soap_out_resqml2__obj_USCOREStratigraphicColumn


#define soap_s2_resqml2__StratigraphicColumn soap_s2resqml2__obj_USCOREStratigraphicColumn


#define soap_in__resqml2__StratigraphicColumn soap_in_resqml2__obj_USCOREStratigraphicColumn


#define soap_instantiate__resqml2__StratigraphicColumn soap_instantiate_resqml2__obj_USCOREStratigraphicColumn


#define soap_new__resqml2__StratigraphicColumn soap_new_resqml2__obj_USCOREStratigraphicColumn


#define soap_new_req__resqml2__StratigraphicColumn soap_new_req_resqml2__obj_USCOREStratigraphicColumn


#define soap_new_set__resqml2__StratigraphicColumn soap_new_set_resqml2__obj_USCOREStratigraphicColumn


#define soap_put__resqml2__StratigraphicColumn soap_put_resqml2__obj_USCOREStratigraphicColumn


#define soap_write__resqml2__StratigraphicColumn soap_write_resqml2__obj_USCOREStratigraphicColumn


#define soap_get__resqml2__StratigraphicColumn soap_get_resqml2__obj_USCOREStratigraphicColumn


#define soap_read__resqml2__StratigraphicColumn soap_read_resqml2__obj_USCOREStratigraphicColumn

#endif
/* _resqml2__GeologicUnitInterpretation is a typedef synonym for resqml2__obj_USCOREGeologicUnitInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeologicUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeologicUnitInterpretation_DEFINED

#define soap_default__resqml2__GeologicUnitInterpretation(soap, a) (a)->resqml2__obj_USCOREGeologicUnitInterpretation::soap_default(soap)


#define soap_serialize__resqml2__GeologicUnitInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GeologicUnitInterpretation2s soap_resqml2__obj_USCOREGeologicUnitInterpretation2s


#define soap_out__resqml2__GeologicUnitInterpretation soap_out_resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_s2_resqml2__GeologicUnitInterpretation soap_s2resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_in__resqml2__GeologicUnitInterpretation soap_in_resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_instantiate__resqml2__GeologicUnitInterpretation soap_instantiate_resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_new__resqml2__GeologicUnitInterpretation soap_new_resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_new_req__resqml2__GeologicUnitInterpretation soap_new_req_resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_new_set__resqml2__GeologicUnitInterpretation soap_new_set_resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_put__resqml2__GeologicUnitInterpretation soap_put_resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_write__resqml2__GeologicUnitInterpretation soap_write_resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_get__resqml2__GeologicUnitInterpretation soap_get_resqml2__obj_USCOREGeologicUnitInterpretation


#define soap_read__resqml2__GeologicUnitInterpretation soap_read_resqml2__obj_USCOREGeologicUnitInterpretation

#endif
/* _resqml2__GenericFeatureInterpretation is a typedef synonym for resqml2__obj_USCOREGenericFeatureInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GenericFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GenericFeatureInterpretation_DEFINED

#define soap_default__resqml2__GenericFeatureInterpretation(soap, a) (a)->resqml2__obj_USCOREGenericFeatureInterpretation::soap_default(soap)


#define soap_serialize__resqml2__GenericFeatureInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GenericFeatureInterpretation2s soap_resqml2__obj_USCOREGenericFeatureInterpretation2s


#define soap_out__resqml2__GenericFeatureInterpretation soap_out_resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_s2_resqml2__GenericFeatureInterpretation soap_s2resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_in__resqml2__GenericFeatureInterpretation soap_in_resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_instantiate__resqml2__GenericFeatureInterpretation soap_instantiate_resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_new__resqml2__GenericFeatureInterpretation soap_new_resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_new_req__resqml2__GenericFeatureInterpretation soap_new_req_resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_new_set__resqml2__GenericFeatureInterpretation soap_new_set_resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_put__resqml2__GenericFeatureInterpretation soap_put_resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_write__resqml2__GenericFeatureInterpretation soap_write_resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_get__resqml2__GenericFeatureInterpretation soap_get_resqml2__obj_USCOREGenericFeatureInterpretation


#define soap_read__resqml2__GenericFeatureInterpretation soap_read_resqml2__obj_USCOREGenericFeatureInterpretation

#endif
/* _resqml2__BoundaryFeatureInterpretation is a typedef synonym for resqml2__obj_USCOREBoundaryFeatureInterpretation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__BoundaryFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__BoundaryFeatureInterpretation_DEFINED

#define soap_default__resqml2__BoundaryFeatureInterpretation(soap, a) (a)->resqml2__obj_USCOREBoundaryFeatureInterpretation::soap_default(soap)


#define soap_serialize__resqml2__BoundaryFeatureInterpretation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__BoundaryFeatureInterpretation2s soap_resqml2__obj_USCOREBoundaryFeatureInterpretation2s


#define soap_out__resqml2__BoundaryFeatureInterpretation soap_out_resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_s2_resqml2__BoundaryFeatureInterpretation soap_s2resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_in__resqml2__BoundaryFeatureInterpretation soap_in_resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_instantiate__resqml2__BoundaryFeatureInterpretation soap_instantiate_resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_new__resqml2__BoundaryFeatureInterpretation soap_new_resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_new_req__resqml2__BoundaryFeatureInterpretation soap_new_req_resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_new_set__resqml2__BoundaryFeatureInterpretation soap_new_set_resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_put__resqml2__BoundaryFeatureInterpretation soap_put_resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_write__resqml2__BoundaryFeatureInterpretation soap_write_resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_get__resqml2__BoundaryFeatureInterpretation soap_get_resqml2__obj_USCOREBoundaryFeatureInterpretation


#define soap_read__resqml2__BoundaryFeatureInterpretation soap_read_resqml2__obj_USCOREBoundaryFeatureInterpretation

#endif
/* _resqml2__WellboreFeature is a typedef synonym for resqml2__obj_USCOREWellboreFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__WellboreFeature_DEFINED

#define soap_default__resqml2__WellboreFeature(soap, a) (a)->resqml2__obj_USCOREWellboreFeature::soap_default(soap)


#define soap_serialize__resqml2__WellboreFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__WellboreFeature2s soap_resqml2__obj_USCOREWellboreFeature2s


#define soap_out__resqml2__WellboreFeature soap_out_resqml2__obj_USCOREWellboreFeature


#define soap_s2_resqml2__WellboreFeature soap_s2resqml2__obj_USCOREWellboreFeature


#define soap_in__resqml2__WellboreFeature soap_in_resqml2__obj_USCOREWellboreFeature


#define soap_instantiate__resqml2__WellboreFeature soap_instantiate_resqml2__obj_USCOREWellboreFeature


#define soap_new__resqml2__WellboreFeature soap_new_resqml2__obj_USCOREWellboreFeature


#define soap_new_req__resqml2__WellboreFeature soap_new_req_resqml2__obj_USCOREWellboreFeature


#define soap_new_set__resqml2__WellboreFeature soap_new_set_resqml2__obj_USCOREWellboreFeature


#define soap_put__resqml2__WellboreFeature soap_put_resqml2__obj_USCOREWellboreFeature


#define soap_write__resqml2__WellboreFeature soap_write_resqml2__obj_USCOREWellboreFeature


#define soap_get__resqml2__WellboreFeature soap_get_resqml2__obj_USCOREWellboreFeature


#define soap_read__resqml2__WellboreFeature soap_read_resqml2__obj_USCOREWellboreFeature

#endif
/* _resqml2__SeismicLineSetFeature is a typedef synonym for resqml2__obj_USCORESeismicLineSetFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SeismicLineSetFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SeismicLineSetFeature_DEFINED

#define soap_default__resqml2__SeismicLineSetFeature(soap, a) (a)->resqml2__obj_USCORESeismicLineSetFeature::soap_default(soap)


#define soap_serialize__resqml2__SeismicLineSetFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__SeismicLineSetFeature2s soap_resqml2__obj_USCORESeismicLineSetFeature2s


#define soap_out__resqml2__SeismicLineSetFeature soap_out_resqml2__obj_USCORESeismicLineSetFeature


#define soap_s2_resqml2__SeismicLineSetFeature soap_s2resqml2__obj_USCORESeismicLineSetFeature


#define soap_in__resqml2__SeismicLineSetFeature soap_in_resqml2__obj_USCORESeismicLineSetFeature


#define soap_instantiate__resqml2__SeismicLineSetFeature soap_instantiate_resqml2__obj_USCORESeismicLineSetFeature


#define soap_new__resqml2__SeismicLineSetFeature soap_new_resqml2__obj_USCORESeismicLineSetFeature


#define soap_new_req__resqml2__SeismicLineSetFeature soap_new_req_resqml2__obj_USCORESeismicLineSetFeature


#define soap_new_set__resqml2__SeismicLineSetFeature soap_new_set_resqml2__obj_USCORESeismicLineSetFeature


#define soap_put__resqml2__SeismicLineSetFeature soap_put_resqml2__obj_USCORESeismicLineSetFeature


#define soap_write__resqml2__SeismicLineSetFeature soap_write_resqml2__obj_USCORESeismicLineSetFeature


#define soap_get__resqml2__SeismicLineSetFeature soap_get_resqml2__obj_USCORESeismicLineSetFeature


#define soap_read__resqml2__SeismicLineSetFeature soap_read_resqml2__obj_USCORESeismicLineSetFeature

#endif
/* _resqml2__SeismicLineFeature is a typedef synonym for resqml2__obj_USCORESeismicLineFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SeismicLineFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SeismicLineFeature_DEFINED

#define soap_default__resqml2__SeismicLineFeature(soap, a) (a)->resqml2__obj_USCORESeismicLineFeature::soap_default(soap)


#define soap_serialize__resqml2__SeismicLineFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__SeismicLineFeature2s soap_resqml2__obj_USCORESeismicLineFeature2s


#define soap_out__resqml2__SeismicLineFeature soap_out_resqml2__obj_USCORESeismicLineFeature


#define soap_s2_resqml2__SeismicLineFeature soap_s2resqml2__obj_USCORESeismicLineFeature


#define soap_in__resqml2__SeismicLineFeature soap_in_resqml2__obj_USCORESeismicLineFeature


#define soap_instantiate__resqml2__SeismicLineFeature soap_instantiate_resqml2__obj_USCORESeismicLineFeature


#define soap_new__resqml2__SeismicLineFeature soap_new_resqml2__obj_USCORESeismicLineFeature


#define soap_new_req__resqml2__SeismicLineFeature soap_new_req_resqml2__obj_USCORESeismicLineFeature


#define soap_new_set__resqml2__SeismicLineFeature soap_new_set_resqml2__obj_USCORESeismicLineFeature


#define soap_put__resqml2__SeismicLineFeature soap_put_resqml2__obj_USCORESeismicLineFeature


#define soap_write__resqml2__SeismicLineFeature soap_write_resqml2__obj_USCORESeismicLineFeature


#define soap_get__resqml2__SeismicLineFeature soap_get_resqml2__obj_USCORESeismicLineFeature


#define soap_read__resqml2__SeismicLineFeature soap_read_resqml2__obj_USCORESeismicLineFeature

#endif
/* _resqml2__SeismicLatticeFeature is a typedef synonym for resqml2__obj_USCORESeismicLatticeFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SeismicLatticeFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__SeismicLatticeFeature_DEFINED

#define soap_default__resqml2__SeismicLatticeFeature(soap, a) (a)->resqml2__obj_USCORESeismicLatticeFeature::soap_default(soap)


#define soap_serialize__resqml2__SeismicLatticeFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__SeismicLatticeFeature2s soap_resqml2__obj_USCORESeismicLatticeFeature2s


#define soap_out__resqml2__SeismicLatticeFeature soap_out_resqml2__obj_USCORESeismicLatticeFeature


#define soap_s2_resqml2__SeismicLatticeFeature soap_s2resqml2__obj_USCORESeismicLatticeFeature


#define soap_in__resqml2__SeismicLatticeFeature soap_in_resqml2__obj_USCORESeismicLatticeFeature


#define soap_instantiate__resqml2__SeismicLatticeFeature soap_instantiate_resqml2__obj_USCORESeismicLatticeFeature


#define soap_new__resqml2__SeismicLatticeFeature soap_new_resqml2__obj_USCORESeismicLatticeFeature


#define soap_new_req__resqml2__SeismicLatticeFeature soap_new_req_resqml2__obj_USCORESeismicLatticeFeature


#define soap_new_set__resqml2__SeismicLatticeFeature soap_new_set_resqml2__obj_USCORESeismicLatticeFeature


#define soap_put__resqml2__SeismicLatticeFeature soap_put_resqml2__obj_USCORESeismicLatticeFeature


#define soap_write__resqml2__SeismicLatticeFeature soap_write_resqml2__obj_USCORESeismicLatticeFeature


#define soap_get__resqml2__SeismicLatticeFeature soap_get_resqml2__obj_USCORESeismicLatticeFeature


#define soap_read__resqml2__SeismicLatticeFeature soap_read_resqml2__obj_USCORESeismicLatticeFeature

#endif
/* _resqml2__FrontierFeature is a typedef synonym for resqml2__obj_USCOREFrontierFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__FrontierFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__FrontierFeature_DEFINED

#define soap_default__resqml2__FrontierFeature(soap, a) (a)->resqml2__obj_USCOREFrontierFeature::soap_default(soap)


#define soap_serialize__resqml2__FrontierFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__FrontierFeature2s soap_resqml2__obj_USCOREFrontierFeature2s


#define soap_out__resqml2__FrontierFeature soap_out_resqml2__obj_USCOREFrontierFeature


#define soap_s2_resqml2__FrontierFeature soap_s2resqml2__obj_USCOREFrontierFeature


#define soap_in__resqml2__FrontierFeature soap_in_resqml2__obj_USCOREFrontierFeature


#define soap_instantiate__resqml2__FrontierFeature soap_instantiate_resqml2__obj_USCOREFrontierFeature


#define soap_new__resqml2__FrontierFeature soap_new_resqml2__obj_USCOREFrontierFeature


#define soap_new_req__resqml2__FrontierFeature soap_new_req_resqml2__obj_USCOREFrontierFeature


#define soap_new_set__resqml2__FrontierFeature soap_new_set_resqml2__obj_USCOREFrontierFeature


#define soap_put__resqml2__FrontierFeature soap_put_resqml2__obj_USCOREFrontierFeature


#define soap_write__resqml2__FrontierFeature soap_write_resqml2__obj_USCOREFrontierFeature


#define soap_get__resqml2__FrontierFeature soap_get_resqml2__obj_USCOREFrontierFeature


#define soap_read__resqml2__FrontierFeature soap_read_resqml2__obj_USCOREFrontierFeature

#endif
/* _resqml2__OrganizationFeature is a typedef synonym for resqml2__obj_USCOREOrganizationFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__OrganizationFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__OrganizationFeature_DEFINED

#define soap_default__resqml2__OrganizationFeature(soap, a) (a)->resqml2__obj_USCOREOrganizationFeature::soap_default(soap)


#define soap_serialize__resqml2__OrganizationFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__OrganizationFeature2s soap_resqml2__obj_USCOREOrganizationFeature2s


#define soap_out__resqml2__OrganizationFeature soap_out_resqml2__obj_USCOREOrganizationFeature


#define soap_s2_resqml2__OrganizationFeature soap_s2resqml2__obj_USCOREOrganizationFeature


#define soap_in__resqml2__OrganizationFeature soap_in_resqml2__obj_USCOREOrganizationFeature


#define soap_instantiate__resqml2__OrganizationFeature soap_instantiate_resqml2__obj_USCOREOrganizationFeature


#define soap_new__resqml2__OrganizationFeature soap_new_resqml2__obj_USCOREOrganizationFeature


#define soap_new_req__resqml2__OrganizationFeature soap_new_req_resqml2__obj_USCOREOrganizationFeature


#define soap_new_set__resqml2__OrganizationFeature soap_new_set_resqml2__obj_USCOREOrganizationFeature


#define soap_put__resqml2__OrganizationFeature soap_put_resqml2__obj_USCOREOrganizationFeature


#define soap_write__resqml2__OrganizationFeature soap_write_resqml2__obj_USCOREOrganizationFeature


#define soap_get__resqml2__OrganizationFeature soap_get_resqml2__obj_USCOREOrganizationFeature


#define soap_read__resqml2__OrganizationFeature soap_read_resqml2__obj_USCOREOrganizationFeature

#endif
/* _resqml2__GeologicUnitFeature is a typedef synonym for resqml2__obj_USCOREGeologicUnitFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeologicUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeologicUnitFeature_DEFINED

#define soap_default__resqml2__GeologicUnitFeature(soap, a) (a)->resqml2__obj_USCOREGeologicUnitFeature::soap_default(soap)


#define soap_serialize__resqml2__GeologicUnitFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GeologicUnitFeature2s soap_resqml2__obj_USCOREGeologicUnitFeature2s


#define soap_out__resqml2__GeologicUnitFeature soap_out_resqml2__obj_USCOREGeologicUnitFeature


#define soap_s2_resqml2__GeologicUnitFeature soap_s2resqml2__obj_USCOREGeologicUnitFeature


#define soap_in__resqml2__GeologicUnitFeature soap_in_resqml2__obj_USCOREGeologicUnitFeature


#define soap_instantiate__resqml2__GeologicUnitFeature soap_instantiate_resqml2__obj_USCOREGeologicUnitFeature


#define soap_new__resqml2__GeologicUnitFeature soap_new_resqml2__obj_USCOREGeologicUnitFeature


#define soap_new_req__resqml2__GeologicUnitFeature soap_new_req_resqml2__obj_USCOREGeologicUnitFeature


#define soap_new_set__resqml2__GeologicUnitFeature soap_new_set_resqml2__obj_USCOREGeologicUnitFeature


#define soap_put__resqml2__GeologicUnitFeature soap_put_resqml2__obj_USCOREGeologicUnitFeature


#define soap_write__resqml2__GeologicUnitFeature soap_write_resqml2__obj_USCOREGeologicUnitFeature


#define soap_get__resqml2__GeologicUnitFeature soap_get_resqml2__obj_USCOREGeologicUnitFeature


#define soap_read__resqml2__GeologicUnitFeature soap_read_resqml2__obj_USCOREGeologicUnitFeature

#endif
/* _resqml2__BoundaryFeature is a typedef synonym for resqml2__obj_USCOREBoundaryFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__BoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__BoundaryFeature_DEFINED

#define soap_default__resqml2__BoundaryFeature(soap, a) (a)->resqml2__obj_USCOREBoundaryFeature::soap_default(soap)


#define soap_serialize__resqml2__BoundaryFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__BoundaryFeature2s soap_resqml2__obj_USCOREBoundaryFeature2s


#define soap_out__resqml2__BoundaryFeature soap_out_resqml2__obj_USCOREBoundaryFeature


#define soap_s2_resqml2__BoundaryFeature soap_s2resqml2__obj_USCOREBoundaryFeature


#define soap_in__resqml2__BoundaryFeature soap_in_resqml2__obj_USCOREBoundaryFeature


#define soap_instantiate__resqml2__BoundaryFeature soap_instantiate_resqml2__obj_USCOREBoundaryFeature


#define soap_new__resqml2__BoundaryFeature soap_new_resqml2__obj_USCOREBoundaryFeature


#define soap_new_req__resqml2__BoundaryFeature soap_new_req_resqml2__obj_USCOREBoundaryFeature


#define soap_new_set__resqml2__BoundaryFeature soap_new_set_resqml2__obj_USCOREBoundaryFeature


#define soap_put__resqml2__BoundaryFeature soap_put_resqml2__obj_USCOREBoundaryFeature


#define soap_write__resqml2__BoundaryFeature soap_write_resqml2__obj_USCOREBoundaryFeature


#define soap_get__resqml2__BoundaryFeature soap_get_resqml2__obj_USCOREBoundaryFeature


#define soap_read__resqml2__BoundaryFeature soap_read_resqml2__obj_USCOREBoundaryFeature

#endif
/* _resqml2__TectonicBoundaryFeature is a typedef synonym for resqml2__obj_USCORETectonicBoundaryFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TectonicBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TectonicBoundaryFeature_DEFINED

#define soap_default__resqml2__TectonicBoundaryFeature(soap, a) (a)->resqml2__obj_USCORETectonicBoundaryFeature::soap_default(soap)


#define soap_serialize__resqml2__TectonicBoundaryFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__TectonicBoundaryFeature2s soap_resqml2__obj_USCORETectonicBoundaryFeature2s


#define soap_out__resqml2__TectonicBoundaryFeature soap_out_resqml2__obj_USCORETectonicBoundaryFeature


#define soap_s2_resqml2__TectonicBoundaryFeature soap_s2resqml2__obj_USCORETectonicBoundaryFeature


#define soap_in__resqml2__TectonicBoundaryFeature soap_in_resqml2__obj_USCORETectonicBoundaryFeature


#define soap_instantiate__resqml2__TectonicBoundaryFeature soap_instantiate_resqml2__obj_USCORETectonicBoundaryFeature


#define soap_new__resqml2__TectonicBoundaryFeature soap_new_resqml2__obj_USCORETectonicBoundaryFeature


#define soap_new_req__resqml2__TectonicBoundaryFeature soap_new_req_resqml2__obj_USCORETectonicBoundaryFeature


#define soap_new_set__resqml2__TectonicBoundaryFeature soap_new_set_resqml2__obj_USCORETectonicBoundaryFeature


#define soap_put__resqml2__TectonicBoundaryFeature soap_put_resqml2__obj_USCORETectonicBoundaryFeature


#define soap_write__resqml2__TectonicBoundaryFeature soap_write_resqml2__obj_USCORETectonicBoundaryFeature


#define soap_get__resqml2__TectonicBoundaryFeature soap_get_resqml2__obj_USCORETectonicBoundaryFeature


#define soap_read__resqml2__TectonicBoundaryFeature soap_read_resqml2__obj_USCORETectonicBoundaryFeature

#endif
/* _resqml2__StratigraphicUnitFeature is a typedef synonym for resqml2__obj_USCOREStratigraphicUnitFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StratigraphicUnitFeature_DEFINED

#define soap_default__resqml2__StratigraphicUnitFeature(soap, a) (a)->resqml2__obj_USCOREStratigraphicUnitFeature::soap_default(soap)


#define soap_serialize__resqml2__StratigraphicUnitFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__StratigraphicUnitFeature2s soap_resqml2__obj_USCOREStratigraphicUnitFeature2s


#define soap_out__resqml2__StratigraphicUnitFeature soap_out_resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_s2_resqml2__StratigraphicUnitFeature soap_s2resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_in__resqml2__StratigraphicUnitFeature soap_in_resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_instantiate__resqml2__StratigraphicUnitFeature soap_instantiate_resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_new__resqml2__StratigraphicUnitFeature soap_new_resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_new_req__resqml2__StratigraphicUnitFeature soap_new_req_resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_new_set__resqml2__StratigraphicUnitFeature soap_new_set_resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_put__resqml2__StratigraphicUnitFeature soap_put_resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_write__resqml2__StratigraphicUnitFeature soap_write_resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_get__resqml2__StratigraphicUnitFeature soap_get_resqml2__obj_USCOREStratigraphicUnitFeature


#define soap_read__resqml2__StratigraphicUnitFeature soap_read_resqml2__obj_USCOREStratigraphicUnitFeature

#endif
/* _resqml2__RockFluidUnitFeature is a typedef synonym for resqml2__obj_USCORERockFluidUnitFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RockFluidUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__RockFluidUnitFeature_DEFINED

#define soap_default__resqml2__RockFluidUnitFeature(soap, a) (a)->resqml2__obj_USCORERockFluidUnitFeature::soap_default(soap)


#define soap_serialize__resqml2__RockFluidUnitFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__RockFluidUnitFeature2s soap_resqml2__obj_USCORERockFluidUnitFeature2s


#define soap_out__resqml2__RockFluidUnitFeature soap_out_resqml2__obj_USCORERockFluidUnitFeature


#define soap_s2_resqml2__RockFluidUnitFeature soap_s2resqml2__obj_USCORERockFluidUnitFeature


#define soap_in__resqml2__RockFluidUnitFeature soap_in_resqml2__obj_USCORERockFluidUnitFeature


#define soap_instantiate__resqml2__RockFluidUnitFeature soap_instantiate_resqml2__obj_USCORERockFluidUnitFeature


#define soap_new__resqml2__RockFluidUnitFeature soap_new_resqml2__obj_USCORERockFluidUnitFeature


#define soap_new_req__resqml2__RockFluidUnitFeature soap_new_req_resqml2__obj_USCORERockFluidUnitFeature


#define soap_new_set__resqml2__RockFluidUnitFeature soap_new_set_resqml2__obj_USCORERockFluidUnitFeature


#define soap_put__resqml2__RockFluidUnitFeature soap_put_resqml2__obj_USCORERockFluidUnitFeature


#define soap_write__resqml2__RockFluidUnitFeature soap_write_resqml2__obj_USCORERockFluidUnitFeature


#define soap_get__resqml2__RockFluidUnitFeature soap_get_resqml2__obj_USCORERockFluidUnitFeature


#define soap_read__resqml2__RockFluidUnitFeature soap_read_resqml2__obj_USCORERockFluidUnitFeature

#endif
/* _resqml2__GlobalChronostratigraphicColumn is a typedef synonym for resqml2__obj_USCOREGlobalChronostratigraphicColumn */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GlobalChronostratigraphicColumn_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GlobalChronostratigraphicColumn_DEFINED

#define soap_default__resqml2__GlobalChronostratigraphicColumn(soap, a) (a)->resqml2__obj_USCOREGlobalChronostratigraphicColumn::soap_default(soap)


#define soap_serialize__resqml2__GlobalChronostratigraphicColumn(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GlobalChronostratigraphicColumn2s soap_resqml2__obj_USCOREGlobalChronostratigraphicColumn2s


#define soap_out__resqml2__GlobalChronostratigraphicColumn soap_out_resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_s2_resqml2__GlobalChronostratigraphicColumn soap_s2resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_in__resqml2__GlobalChronostratigraphicColumn soap_in_resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_instantiate__resqml2__GlobalChronostratigraphicColumn soap_instantiate_resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_new__resqml2__GlobalChronostratigraphicColumn soap_new_resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_new_req__resqml2__GlobalChronostratigraphicColumn soap_new_req_resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_new_set__resqml2__GlobalChronostratigraphicColumn soap_new_set_resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_put__resqml2__GlobalChronostratigraphicColumn soap_put_resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_write__resqml2__GlobalChronostratigraphicColumn soap_write_resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_get__resqml2__GlobalChronostratigraphicColumn soap_get_resqml2__obj_USCOREGlobalChronostratigraphicColumn


#define soap_read__resqml2__GlobalChronostratigraphicColumn soap_read_resqml2__obj_USCOREGlobalChronostratigraphicColumn

#endif
/* _resqml2__GeobodyFeature is a typedef synonym for resqml2__obj_USCOREGeobodyFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeobodyFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeobodyFeature_DEFINED

#define soap_default__resqml2__GeobodyFeature(soap, a) (a)->resqml2__obj_USCOREGeobodyFeature::soap_default(soap)


#define soap_serialize__resqml2__GeobodyFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GeobodyFeature2s soap_resqml2__obj_USCOREGeobodyFeature2s


#define soap_out__resqml2__GeobodyFeature soap_out_resqml2__obj_USCOREGeobodyFeature


#define soap_s2_resqml2__GeobodyFeature soap_s2resqml2__obj_USCOREGeobodyFeature


#define soap_in__resqml2__GeobodyFeature soap_in_resqml2__obj_USCOREGeobodyFeature


#define soap_instantiate__resqml2__GeobodyFeature soap_instantiate_resqml2__obj_USCOREGeobodyFeature


#define soap_new__resqml2__GeobodyFeature soap_new_resqml2__obj_USCOREGeobodyFeature


#define soap_new_req__resqml2__GeobodyFeature soap_new_req_resqml2__obj_USCOREGeobodyFeature


#define soap_new_set__resqml2__GeobodyFeature soap_new_set_resqml2__obj_USCOREGeobodyFeature


#define soap_put__resqml2__GeobodyFeature soap_put_resqml2__obj_USCOREGeobodyFeature


#define soap_write__resqml2__GeobodyFeature soap_write_resqml2__obj_USCOREGeobodyFeature


#define soap_get__resqml2__GeobodyFeature soap_get_resqml2__obj_USCOREGeobodyFeature


#define soap_read__resqml2__GeobodyFeature soap_read_resqml2__obj_USCOREGeobodyFeature

#endif
/* _resqml2__GeneticBoundaryFeature is a typedef synonym for resqml2__obj_USCOREGeneticBoundaryFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeneticBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__GeneticBoundaryFeature_DEFINED

#define soap_default__resqml2__GeneticBoundaryFeature(soap, a) (a)->resqml2__obj_USCOREGeneticBoundaryFeature::soap_default(soap)


#define soap_serialize__resqml2__GeneticBoundaryFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__GeneticBoundaryFeature2s soap_resqml2__obj_USCOREGeneticBoundaryFeature2s


#define soap_out__resqml2__GeneticBoundaryFeature soap_out_resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_s2_resqml2__GeneticBoundaryFeature soap_s2resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_in__resqml2__GeneticBoundaryFeature soap_in_resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_instantiate__resqml2__GeneticBoundaryFeature soap_instantiate_resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_new__resqml2__GeneticBoundaryFeature soap_new_resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_new_req__resqml2__GeneticBoundaryFeature soap_new_req_resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_new_set__resqml2__GeneticBoundaryFeature soap_new_set_resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_put__resqml2__GeneticBoundaryFeature soap_put_resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_write__resqml2__GeneticBoundaryFeature soap_write_resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_get__resqml2__GeneticBoundaryFeature soap_get_resqml2__obj_USCOREGeneticBoundaryFeature


#define soap_read__resqml2__GeneticBoundaryFeature soap_read_resqml2__obj_USCOREGeneticBoundaryFeature

#endif
/* _resqml2__FluidBoundaryFeature is a typedef synonym for resqml2__obj_USCOREFluidBoundaryFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__FluidBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__FluidBoundaryFeature_DEFINED

#define soap_default__resqml2__FluidBoundaryFeature(soap, a) (a)->resqml2__obj_USCOREFluidBoundaryFeature::soap_default(soap)


#define soap_serialize__resqml2__FluidBoundaryFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__FluidBoundaryFeature2s soap_resqml2__obj_USCOREFluidBoundaryFeature2s


#define soap_out__resqml2__FluidBoundaryFeature soap_out_resqml2__obj_USCOREFluidBoundaryFeature


#define soap_s2_resqml2__FluidBoundaryFeature soap_s2resqml2__obj_USCOREFluidBoundaryFeature


#define soap_in__resqml2__FluidBoundaryFeature soap_in_resqml2__obj_USCOREFluidBoundaryFeature


#define soap_instantiate__resqml2__FluidBoundaryFeature soap_instantiate_resqml2__obj_USCOREFluidBoundaryFeature


#define soap_new__resqml2__FluidBoundaryFeature soap_new_resqml2__obj_USCOREFluidBoundaryFeature


#define soap_new_req__resqml2__FluidBoundaryFeature soap_new_req_resqml2__obj_USCOREFluidBoundaryFeature


#define soap_new_set__resqml2__FluidBoundaryFeature soap_new_set_resqml2__obj_USCOREFluidBoundaryFeature


#define soap_put__resqml2__FluidBoundaryFeature soap_put_resqml2__obj_USCOREFluidBoundaryFeature


#define soap_write__resqml2__FluidBoundaryFeature soap_write_resqml2__obj_USCOREFluidBoundaryFeature


#define soap_get__resqml2__FluidBoundaryFeature soap_get_resqml2__obj_USCOREFluidBoundaryFeature


#define soap_read__resqml2__FluidBoundaryFeature soap_read_resqml2__obj_USCOREFluidBoundaryFeature

#endif
/* _resqml2__TimeSeries is a typedef synonym for resqml2__obj_USCORETimeSeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TimeSeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__TimeSeries_DEFINED

#define soap_default__resqml2__TimeSeries(soap, a) (a)->resqml2__obj_USCORETimeSeries::soap_default(soap)


#define soap_serialize__resqml2__TimeSeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__TimeSeries2s soap_resqml2__obj_USCORETimeSeries2s


#define soap_out__resqml2__TimeSeries soap_out_resqml2__obj_USCORETimeSeries


#define soap_s2_resqml2__TimeSeries soap_s2resqml2__obj_USCORETimeSeries


#define soap_in__resqml2__TimeSeries soap_in_resqml2__obj_USCORETimeSeries


#define soap_instantiate__resqml2__TimeSeries soap_instantiate_resqml2__obj_USCORETimeSeries


#define soap_new__resqml2__TimeSeries soap_new_resqml2__obj_USCORETimeSeries


#define soap_new_req__resqml2__TimeSeries soap_new_req_resqml2__obj_USCORETimeSeries


#define soap_new_set__resqml2__TimeSeries soap_new_set_resqml2__obj_USCORETimeSeries


#define soap_put__resqml2__TimeSeries soap_put_resqml2__obj_USCORETimeSeries


#define soap_write__resqml2__TimeSeries soap_write_resqml2__obj_USCORETimeSeries


#define soap_get__resqml2__TimeSeries soap_get_resqml2__obj_USCORETimeSeries


#define soap_read__resqml2__TimeSeries soap_read_resqml2__obj_USCORETimeSeries

#endif
/* _resqml2__LocalTime3dCrs is a typedef synonym for resqml2__obj_USCORELocalTime3dCrs */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__LocalTime3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__LocalTime3dCrs_DEFINED

#define soap_default__resqml2__LocalTime3dCrs(soap, a) (a)->resqml2__obj_USCORELocalTime3dCrs::soap_default(soap)


#define soap_serialize__resqml2__LocalTime3dCrs(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__LocalTime3dCrs2s soap_resqml2__obj_USCORELocalTime3dCrs2s


#define soap_out__resqml2__LocalTime3dCrs soap_out_resqml2__obj_USCORELocalTime3dCrs


#define soap_s2_resqml2__LocalTime3dCrs soap_s2resqml2__obj_USCORELocalTime3dCrs


#define soap_in__resqml2__LocalTime3dCrs soap_in_resqml2__obj_USCORELocalTime3dCrs


#define soap_instantiate__resqml2__LocalTime3dCrs soap_instantiate_resqml2__obj_USCORELocalTime3dCrs


#define soap_new__resqml2__LocalTime3dCrs soap_new_resqml2__obj_USCORELocalTime3dCrs


#define soap_new_req__resqml2__LocalTime3dCrs soap_new_req_resqml2__obj_USCORELocalTime3dCrs


#define soap_new_set__resqml2__LocalTime3dCrs soap_new_set_resqml2__obj_USCORELocalTime3dCrs


#define soap_put__resqml2__LocalTime3dCrs soap_put_resqml2__obj_USCORELocalTime3dCrs


#define soap_write__resqml2__LocalTime3dCrs soap_write_resqml2__obj_USCORELocalTime3dCrs


#define soap_get__resqml2__LocalTime3dCrs soap_get_resqml2__obj_USCORELocalTime3dCrs


#define soap_read__resqml2__LocalTime3dCrs soap_read_resqml2__obj_USCORELocalTime3dCrs

#endif
/* _resqml2__LocalDepth3dCrs is a typedef synonym for resqml2__obj_USCORELocalDepth3dCrs */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__LocalDepth3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__LocalDepth3dCrs_DEFINED

#define soap_default__resqml2__LocalDepth3dCrs(soap, a) (a)->resqml2__obj_USCORELocalDepth3dCrs::soap_default(soap)


#define soap_serialize__resqml2__LocalDepth3dCrs(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__LocalDepth3dCrs2s soap_resqml2__obj_USCORELocalDepth3dCrs2s


#define soap_out__resqml2__LocalDepth3dCrs soap_out_resqml2__obj_USCORELocalDepth3dCrs


#define soap_s2_resqml2__LocalDepth3dCrs soap_s2resqml2__obj_USCORELocalDepth3dCrs


#define soap_in__resqml2__LocalDepth3dCrs soap_in_resqml2__obj_USCORELocalDepth3dCrs


#define soap_instantiate__resqml2__LocalDepth3dCrs soap_instantiate_resqml2__obj_USCORELocalDepth3dCrs


#define soap_new__resqml2__LocalDepth3dCrs soap_new_resqml2__obj_USCORELocalDepth3dCrs


#define soap_new_req__resqml2__LocalDepth3dCrs soap_new_req_resqml2__obj_USCORELocalDepth3dCrs


#define soap_new_set__resqml2__LocalDepth3dCrs soap_new_set_resqml2__obj_USCORELocalDepth3dCrs


#define soap_put__resqml2__LocalDepth3dCrs soap_put_resqml2__obj_USCORELocalDepth3dCrs


#define soap_write__resqml2__LocalDepth3dCrs soap_write_resqml2__obj_USCORELocalDepth3dCrs


#define soap_get__resqml2__LocalDepth3dCrs soap_get_resqml2__obj_USCORELocalDepth3dCrs


#define soap_read__resqml2__LocalDepth3dCrs soap_read_resqml2__obj_USCORELocalDepth3dCrs

#endif
/* _resqml2__StreamlinesRepresentation is a typedef synonym for resqml2__obj_USCOREStreamlinesRepresentation */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StreamlinesRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StreamlinesRepresentation_DEFINED

#define soap_default__resqml2__StreamlinesRepresentation(soap, a) (a)->resqml2__obj_USCOREStreamlinesRepresentation::soap_default(soap)


#define soap_serialize__resqml2__StreamlinesRepresentation(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__StreamlinesRepresentation2s soap_resqml2__obj_USCOREStreamlinesRepresentation2s


#define soap_out__resqml2__StreamlinesRepresentation soap_out_resqml2__obj_USCOREStreamlinesRepresentation


#define soap_s2_resqml2__StreamlinesRepresentation soap_s2resqml2__obj_USCOREStreamlinesRepresentation


#define soap_in__resqml2__StreamlinesRepresentation soap_in_resqml2__obj_USCOREStreamlinesRepresentation


#define soap_instantiate__resqml2__StreamlinesRepresentation soap_instantiate_resqml2__obj_USCOREStreamlinesRepresentation


#define soap_new__resqml2__StreamlinesRepresentation soap_new_resqml2__obj_USCOREStreamlinesRepresentation


#define soap_new_req__resqml2__StreamlinesRepresentation soap_new_req_resqml2__obj_USCOREStreamlinesRepresentation


#define soap_new_set__resqml2__StreamlinesRepresentation soap_new_set_resqml2__obj_USCOREStreamlinesRepresentation


#define soap_put__resqml2__StreamlinesRepresentation soap_put_resqml2__obj_USCOREStreamlinesRepresentation


#define soap_write__resqml2__StreamlinesRepresentation soap_write_resqml2__obj_USCOREStreamlinesRepresentation


#define soap_get__resqml2__StreamlinesRepresentation soap_get_resqml2__obj_USCOREStreamlinesRepresentation


#define soap_read__resqml2__StreamlinesRepresentation soap_read_resqml2__obj_USCOREStreamlinesRepresentation

#endif
/* _resqml2__StreamlinesFeature is a typedef synonym for resqml2__obj_USCOREStreamlinesFeature */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StreamlinesFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__StreamlinesFeature_DEFINED

#define soap_default__resqml2__StreamlinesFeature(soap, a) (a)->resqml2__obj_USCOREStreamlinesFeature::soap_default(soap)


#define soap_serialize__resqml2__StreamlinesFeature(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__StreamlinesFeature2s soap_resqml2__obj_USCOREStreamlinesFeature2s


#define soap_out__resqml2__StreamlinesFeature soap_out_resqml2__obj_USCOREStreamlinesFeature


#define soap_s2_resqml2__StreamlinesFeature soap_s2resqml2__obj_USCOREStreamlinesFeature


#define soap_in__resqml2__StreamlinesFeature soap_in_resqml2__obj_USCOREStreamlinesFeature


#define soap_instantiate__resqml2__StreamlinesFeature soap_instantiate_resqml2__obj_USCOREStreamlinesFeature


#define soap_new__resqml2__StreamlinesFeature soap_new_resqml2__obj_USCOREStreamlinesFeature


#define soap_new_req__resqml2__StreamlinesFeature soap_new_req_resqml2__obj_USCOREStreamlinesFeature


#define soap_new_set__resqml2__StreamlinesFeature soap_new_set_resqml2__obj_USCOREStreamlinesFeature


#define soap_put__resqml2__StreamlinesFeature soap_put_resqml2__obj_USCOREStreamlinesFeature


#define soap_write__resqml2__StreamlinesFeature soap_write_resqml2__obj_USCOREStreamlinesFeature


#define soap_get__resqml2__StreamlinesFeature soap_get_resqml2__obj_USCOREStreamlinesFeature


#define soap_read__resqml2__StreamlinesFeature soap_read_resqml2__obj_USCOREStreamlinesFeature

#endif
/* _resqml2__DiscretePropertySeries is a typedef synonym for resqml2__obj_USCOREDiscretePropertySeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__DiscretePropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__DiscretePropertySeries_DEFINED

#define soap_default__resqml2__DiscretePropertySeries(soap, a) (a)->resqml2__obj_USCOREDiscretePropertySeries::soap_default(soap)


#define soap_serialize__resqml2__DiscretePropertySeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__DiscretePropertySeries2s soap_resqml2__obj_USCOREDiscretePropertySeries2s


#define soap_out__resqml2__DiscretePropertySeries soap_out_resqml2__obj_USCOREDiscretePropertySeries


#define soap_s2_resqml2__DiscretePropertySeries soap_s2resqml2__obj_USCOREDiscretePropertySeries


#define soap_in__resqml2__DiscretePropertySeries soap_in_resqml2__obj_USCOREDiscretePropertySeries


#define soap_instantiate__resqml2__DiscretePropertySeries soap_instantiate_resqml2__obj_USCOREDiscretePropertySeries


#define soap_new__resqml2__DiscretePropertySeries soap_new_resqml2__obj_USCOREDiscretePropertySeries


#define soap_new_req__resqml2__DiscretePropertySeries soap_new_req_resqml2__obj_USCOREDiscretePropertySeries


#define soap_new_set__resqml2__DiscretePropertySeries soap_new_set_resqml2__obj_USCOREDiscretePropertySeries


#define soap_put__resqml2__DiscretePropertySeries soap_put_resqml2__obj_USCOREDiscretePropertySeries


#define soap_write__resqml2__DiscretePropertySeries soap_write_resqml2__obj_USCOREDiscretePropertySeries


#define soap_get__resqml2__DiscretePropertySeries soap_get_resqml2__obj_USCOREDiscretePropertySeries


#define soap_read__resqml2__DiscretePropertySeries soap_read_resqml2__obj_USCOREDiscretePropertySeries

#endif
/* _resqml2__ContinuousPropertySeries is a typedef synonym for resqml2__obj_USCOREContinuousPropertySeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__ContinuousPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__ContinuousPropertySeries_DEFINED

#define soap_default__resqml2__ContinuousPropertySeries(soap, a) (a)->resqml2__obj_USCOREContinuousPropertySeries::soap_default(soap)


#define soap_serialize__resqml2__ContinuousPropertySeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__ContinuousPropertySeries2s soap_resqml2__obj_USCOREContinuousPropertySeries2s


#define soap_out__resqml2__ContinuousPropertySeries soap_out_resqml2__obj_USCOREContinuousPropertySeries


#define soap_s2_resqml2__ContinuousPropertySeries soap_s2resqml2__obj_USCOREContinuousPropertySeries


#define soap_in__resqml2__ContinuousPropertySeries soap_in_resqml2__obj_USCOREContinuousPropertySeries


#define soap_instantiate__resqml2__ContinuousPropertySeries soap_instantiate_resqml2__obj_USCOREContinuousPropertySeries


#define soap_new__resqml2__ContinuousPropertySeries soap_new_resqml2__obj_USCOREContinuousPropertySeries


#define soap_new_req__resqml2__ContinuousPropertySeries soap_new_req_resqml2__obj_USCOREContinuousPropertySeries


#define soap_new_set__resqml2__ContinuousPropertySeries soap_new_set_resqml2__obj_USCOREContinuousPropertySeries


#define soap_put__resqml2__ContinuousPropertySeries soap_put_resqml2__obj_USCOREContinuousPropertySeries


#define soap_write__resqml2__ContinuousPropertySeries soap_write_resqml2__obj_USCOREContinuousPropertySeries


#define soap_get__resqml2__ContinuousPropertySeries soap_get_resqml2__obj_USCOREContinuousPropertySeries


#define soap_read__resqml2__ContinuousPropertySeries soap_read_resqml2__obj_USCOREContinuousPropertySeries

#endif
/* _resqml2__CommentPropertySeries is a typedef synonym for resqml2__obj_USCORECommentPropertySeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__CommentPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__CommentPropertySeries_DEFINED

#define soap_default__resqml2__CommentPropertySeries(soap, a) (a)->resqml2__obj_USCORECommentPropertySeries::soap_default(soap)


#define soap_serialize__resqml2__CommentPropertySeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__CommentPropertySeries2s soap_resqml2__obj_USCORECommentPropertySeries2s


#define soap_out__resqml2__CommentPropertySeries soap_out_resqml2__obj_USCORECommentPropertySeries


#define soap_s2_resqml2__CommentPropertySeries soap_s2resqml2__obj_USCORECommentPropertySeries


#define soap_in__resqml2__CommentPropertySeries soap_in_resqml2__obj_USCORECommentPropertySeries


#define soap_instantiate__resqml2__CommentPropertySeries soap_instantiate_resqml2__obj_USCORECommentPropertySeries


#define soap_new__resqml2__CommentPropertySeries soap_new_resqml2__obj_USCORECommentPropertySeries


#define soap_new_req__resqml2__CommentPropertySeries soap_new_req_resqml2__obj_USCORECommentPropertySeries


#define soap_new_set__resqml2__CommentPropertySeries soap_new_set_resqml2__obj_USCORECommentPropertySeries


#define soap_put__resqml2__CommentPropertySeries soap_put_resqml2__obj_USCORECommentPropertySeries


#define soap_write__resqml2__CommentPropertySeries soap_write_resqml2__obj_USCORECommentPropertySeries


#define soap_get__resqml2__CommentPropertySeries soap_get_resqml2__obj_USCORECommentPropertySeries


#define soap_read__resqml2__CommentPropertySeries soap_read_resqml2__obj_USCORECommentPropertySeries

#endif
/* _resqml2__CategoricalPropertySeries is a typedef synonym for resqml2__obj_USCORECategoricalPropertySeries */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__CategoricalPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__CategoricalPropertySeries_DEFINED

#define soap_default__resqml2__CategoricalPropertySeries(soap, a) (a)->resqml2__obj_USCORECategoricalPropertySeries::soap_default(soap)


#define soap_serialize__resqml2__CategoricalPropertySeries(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__CategoricalPropertySeries2s soap_resqml2__obj_USCORECategoricalPropertySeries2s


#define soap_out__resqml2__CategoricalPropertySeries soap_out_resqml2__obj_USCORECategoricalPropertySeries


#define soap_s2_resqml2__CategoricalPropertySeries soap_s2resqml2__obj_USCORECategoricalPropertySeries


#define soap_in__resqml2__CategoricalPropertySeries soap_in_resqml2__obj_USCORECategoricalPropertySeries


#define soap_instantiate__resqml2__CategoricalPropertySeries soap_instantiate_resqml2__obj_USCORECategoricalPropertySeries


#define soap_new__resqml2__CategoricalPropertySeries soap_new_resqml2__obj_USCORECategoricalPropertySeries


#define soap_new_req__resqml2__CategoricalPropertySeries soap_new_req_resqml2__obj_USCORECategoricalPropertySeries


#define soap_new_set__resqml2__CategoricalPropertySeries soap_new_set_resqml2__obj_USCORECategoricalPropertySeries


#define soap_put__resqml2__CategoricalPropertySeries soap_put_resqml2__obj_USCORECategoricalPropertySeries


#define soap_write__resqml2__CategoricalPropertySeries soap_write_resqml2__obj_USCORECategoricalPropertySeries


#define soap_get__resqml2__CategoricalPropertySeries soap_get_resqml2__obj_USCORECategoricalPropertySeries


#define soap_read__resqml2__CategoricalPropertySeries soap_read_resqml2__obj_USCORECategoricalPropertySeries

#endif
/* _resqml2__ActivityTemplate is a typedef synonym for resqml2__obj_USCOREActivityTemplate */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__ActivityTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__ActivityTemplate_DEFINED

#define soap_default__resqml2__ActivityTemplate(soap, a) (a)->resqml2__obj_USCOREActivityTemplate::soap_default(soap)


#define soap_serialize__resqml2__ActivityTemplate(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__ActivityTemplate2s soap_resqml2__obj_USCOREActivityTemplate2s


#define soap_out__resqml2__ActivityTemplate soap_out_resqml2__obj_USCOREActivityTemplate


#define soap_s2_resqml2__ActivityTemplate soap_s2resqml2__obj_USCOREActivityTemplate


#define soap_in__resqml2__ActivityTemplate soap_in_resqml2__obj_USCOREActivityTemplate


#define soap_instantiate__resqml2__ActivityTemplate soap_instantiate_resqml2__obj_USCOREActivityTemplate


#define soap_new__resqml2__ActivityTemplate soap_new_resqml2__obj_USCOREActivityTemplate


#define soap_new_req__resqml2__ActivityTemplate soap_new_req_resqml2__obj_USCOREActivityTemplate


#define soap_new_set__resqml2__ActivityTemplate soap_new_set_resqml2__obj_USCOREActivityTemplate


#define soap_put__resqml2__ActivityTemplate soap_put_resqml2__obj_USCOREActivityTemplate


#define soap_write__resqml2__ActivityTemplate soap_write_resqml2__obj_USCOREActivityTemplate


#define soap_get__resqml2__ActivityTemplate soap_get_resqml2__obj_USCOREActivityTemplate


#define soap_read__resqml2__ActivityTemplate soap_read_resqml2__obj_USCOREActivityTemplate

#endif
/* _resqml2__Activity is a typedef synonym for resqml2__obj_USCOREActivity */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__resqml2__Activity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__resqml2__Activity_DEFINED

#define soap_default__resqml2__Activity(soap, a) (a)->resqml2__obj_USCOREActivity::soap_default(soap)


#define soap_serialize__resqml2__Activity(soap, a) (a)->soap_serialize(soap)


#define soap__resqml2__Activity2s soap_resqml2__obj_USCOREActivity2s


#define soap_out__resqml2__Activity soap_out_resqml2__obj_USCOREActivity


#define soap_s2_resqml2__Activity soap_s2resqml2__obj_USCOREActivity


#define soap_in__resqml2__Activity soap_in_resqml2__obj_USCOREActivity


#define soap_instantiate__resqml2__Activity soap_instantiate_resqml2__obj_USCOREActivity


#define soap_new__resqml2__Activity soap_new_resqml2__obj_USCOREActivity


#define soap_new_req__resqml2__Activity soap_new_req_resqml2__obj_USCOREActivity


#define soap_new_set__resqml2__Activity soap_new_set_resqml2__obj_USCOREActivity


#define soap_put__resqml2__Activity soap_put_resqml2__obj_USCOREActivity


#define soap_write__resqml2__Activity soap_write_resqml2__obj_USCOREActivity


#define soap_get__resqml2__Activity soap_get_resqml2__obj_USCOREActivity


#define soap_read__resqml2__Activity soap_read_resqml2__obj_USCOREActivity

#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gsr__SC_USCORECRS_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gsr__SC_USCORECRS_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gsr__SC_USCORECRS_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, const char*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gsr__SC_USCORECRS_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gsr__SC_USCORECRS_USCOREPropertyType_sequence * soap_new___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gsr__SC_USCORECRS_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gsr__SC_USCORECRS_USCOREPropertyType_sequence * soap_new_req___gsr__SC_USCORECRS_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractCRS,
	const union _gsr__union_SC_USCORECRS_USCOREPropertyType& union_SC_USCORECRS_USCOREPropertyType)
{
	__gsr__SC_USCORECRS_USCOREPropertyType_sequence *_p = soap_new___gsr__SC_USCORECRS_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gsr__SC_USCORECRS_USCOREPropertyType_sequence::__unionAbstractCRS = __unionAbstractCRS;
		_p->__gsr__SC_USCORECRS_USCOREPropertyType_sequence::union_SC_USCORECRS_USCOREPropertyType = union_SC_USCORECRS_USCOREPropertyType;
	}
	return _p;
}

inline __gsr__SC_USCORECRS_USCOREPropertyType_sequence * soap_new_set___gsr__SC_USCORECRS_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractCRS,
	const union _gsr__union_SC_USCORECRS_USCOREPropertyType& union_SC_USCORECRS_USCOREPropertyType)
{
	__gsr__SC_USCORECRS_USCOREPropertyType_sequence *_p = soap_new___gsr__SC_USCORECRS_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gsr__SC_USCORECRS_USCOREPropertyType_sequence::__unionAbstractCRS = __unionAbstractCRS;
		_p->__gsr__SC_USCORECRS_USCOREPropertyType_sequence::union_SC_USCORECRS_USCOREPropertyType = union_SC_USCORECRS_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap *soap, __gsr__SC_USCORECRS_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gsr:SC_CRS_PropertyType-sequence", "-gsr:SC_CRS_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gsr__SC_USCORECRS_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap *soap, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gsr__SC_USCORECRS_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gco__DateTime_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gco__DateTime_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gco__DateTime_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gco__DateTime_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gco__DateTime_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gco__DateTime_USCOREPropertyType_sequence(struct soap*, const char*, __gco__DateTime_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gco__DateTime_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__DateTime_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gco__DateTime_USCOREPropertyType_sequence * soap_new___gco__DateTime_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gco__DateTime_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gco__DateTime_USCOREPropertyType_sequence * soap_new_req___gco__DateTime_USCOREPropertyType_sequence(
	struct soap *soap,
	time_t DateTime)
{
	__gco__DateTime_USCOREPropertyType_sequence *_p = soap_new___gco__DateTime_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__DateTime_USCOREPropertyType_sequence::DateTime = DateTime;
	}
	return _p;
}

inline __gco__DateTime_USCOREPropertyType_sequence * soap_new_set___gco__DateTime_USCOREPropertyType_sequence(
	struct soap *soap,
	time_t DateTime)
{
	__gco__DateTime_USCOREPropertyType_sequence *_p = soap_new___gco__DateTime_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__DateTime_USCOREPropertyType_sequence::DateTime = DateTime;
	}
	return _p;
}

inline int soap_write___gco__DateTime_USCOREPropertyType_sequence(struct soap *soap, __gco__DateTime_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gco:DateTime_PropertyType-sequence", "-gco:DateTime_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gco__DateTime_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gco__DateTime_USCOREPropertyType_sequence(struct soap*, __gco__DateTime_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gco__DateTime_USCOREPropertyType_sequence(struct soap *soap, __gco__DateTime_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gco__DateTime_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gco__Real_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gco__Real_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gco__Real_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gco__Real_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gco__Real_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gco__Real_USCOREPropertyType_sequence(struct soap*, const char*, __gco__Real_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gco__Real_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__Real_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gco__Real_USCOREPropertyType_sequence * soap_new___gco__Real_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gco__Real_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gco__Real_USCOREPropertyType_sequence * soap_new_req___gco__Real_USCOREPropertyType_sequence(
	struct soap *soap,
	double Real)
{
	__gco__Real_USCOREPropertyType_sequence *_p = soap_new___gco__Real_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__Real_USCOREPropertyType_sequence::Real = Real;
	}
	return _p;
}

inline __gco__Real_USCOREPropertyType_sequence * soap_new_set___gco__Real_USCOREPropertyType_sequence(
	struct soap *soap,
	double Real)
{
	__gco__Real_USCOREPropertyType_sequence *_p = soap_new___gco__Real_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__Real_USCOREPropertyType_sequence::Real = Real;
	}
	return _p;
}

inline int soap_write___gco__Real_USCOREPropertyType_sequence(struct soap *soap, __gco__Real_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gco:Real_PropertyType-sequence", "-gco:Real_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gco__Real_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gco__Real_USCOREPropertyType_sequence(struct soap*, __gco__Real_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gco__Real_USCOREPropertyType_sequence(struct soap *soap, __gco__Real_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gco__Real_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gco__Boolean_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gco__Boolean_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gco__Boolean_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gco__Boolean_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gco__Boolean_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gco__Boolean_USCOREPropertyType_sequence(struct soap*, const char*, __gco__Boolean_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gco__Boolean_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__Boolean_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gco__Boolean_USCOREPropertyType_sequence * soap_new___gco__Boolean_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gco__Boolean_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gco__Boolean_USCOREPropertyType_sequence * soap_new_req___gco__Boolean_USCOREPropertyType_sequence(
	struct soap *soap,
	bool Boolean)
{
	__gco__Boolean_USCOREPropertyType_sequence *_p = soap_new___gco__Boolean_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__Boolean_USCOREPropertyType_sequence::Boolean = Boolean;
	}
	return _p;
}

inline __gco__Boolean_USCOREPropertyType_sequence * soap_new_set___gco__Boolean_USCOREPropertyType_sequence(
	struct soap *soap,
	bool Boolean)
{
	__gco__Boolean_USCOREPropertyType_sequence *_p = soap_new___gco__Boolean_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__Boolean_USCOREPropertyType_sequence::Boolean = Boolean;
	}
	return _p;
}

inline int soap_write___gco__Boolean_USCOREPropertyType_sequence(struct soap *soap, __gco__Boolean_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gco:Boolean_PropertyType-sequence", "-gco:Boolean_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gco__Boolean_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gco__Boolean_USCOREPropertyType_sequence(struct soap*, __gco__Boolean_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gco__Boolean_USCOREPropertyType_sequence(struct soap *soap, __gco__Boolean_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gco__Boolean_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gco__CharacterString_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gco__CharacterString_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gco__CharacterString_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gco__CharacterString_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, const char*, __gco__CharacterString_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gco__CharacterString_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gco__CharacterString_USCOREPropertyType_sequence * soap_new___gco__CharacterString_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gco__CharacterString_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gco__CharacterString_USCOREPropertyType_sequence * soap_new_req___gco__CharacterString_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionCharacterString,
	const union _gco__union_CharacterString_USCOREPropertyType& union_CharacterString_USCOREPropertyType)
{
	__gco__CharacterString_USCOREPropertyType_sequence *_p = soap_new___gco__CharacterString_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__CharacterString_USCOREPropertyType_sequence::__unionCharacterString = __unionCharacterString;
		_p->__gco__CharacterString_USCOREPropertyType_sequence::union_CharacterString_USCOREPropertyType = union_CharacterString_USCOREPropertyType;
	}
	return _p;
}

inline __gco__CharacterString_USCOREPropertyType_sequence * soap_new_set___gco__CharacterString_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionCharacterString,
	const union _gco__union_CharacterString_USCOREPropertyType& union_CharacterString_USCOREPropertyType)
{
	__gco__CharacterString_USCOREPropertyType_sequence *_p = soap_new___gco__CharacterString_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gco__CharacterString_USCOREPropertyType_sequence::__unionCharacterString = __unionCharacterString;
		_p->__gco__CharacterString_USCOREPropertyType_sequence::union_CharacterString_USCOREPropertyType = union_CharacterString_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gco__CharacterString_USCOREPropertyType_sequence(struct soap *soap, __gco__CharacterString_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gco:CharacterString_PropertyType-sequence", "-gco:CharacterString_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gco__CharacterString_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gco__CharacterString_USCOREPropertyType_sequence(struct soap*, __gco__CharacterString_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gco__CharacterString_USCOREPropertyType_sequence(struct soap *soap, __gco__CharacterString_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gco__CharacterString_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, const char*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * soap_new___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * soap_new_req___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractTimePrimitive,
	const union _gts__union_TM_USCOREPrimitive_USCOREPropertyType& union_TM_USCOREPrimitive_USCOREPropertyType)
{
	__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *_p = soap_new___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence::__unionAbstractTimePrimitive = __unionAbstractTimePrimitive;
		_p->__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence::union_TM_USCOREPrimitive_USCOREPropertyType = union_TM_USCOREPrimitive_USCOREPropertyType;
	}
	return _p;
}

inline __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * soap_new_set___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractTimePrimitive,
	const union _gts__union_TM_USCOREPrimitive_USCOREPropertyType& union_TM_USCOREPrimitive_USCOREPropertyType)
{
	__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *_p = soap_new___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence::__unionAbstractTimePrimitive = __unionAbstractTimePrimitive;
		_p->__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence::union_TM_USCOREPrimitive_USCOREPropertyType = union_TM_USCOREPrimitive_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap *soap, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gts:TM_Primitive_PropertyType-sequence", "-gts:TM_Primitive_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap *soap, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREResult_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * soap_new___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * soap_new_req___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractDQ_USCOREResult,
	const union _gmd__union_DQ_USCOREResult_USCOREPropertyType& union_DQ_USCOREResult_USCOREPropertyType)
{
	__gmd__DQ_USCOREResult_USCOREPropertyType_sequence *_p = soap_new___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__DQ_USCOREResult_USCOREPropertyType_sequence::__unionAbstractDQ_USCOREResult = __unionAbstractDQ_USCOREResult;
		_p->__gmd__DQ_USCOREResult_USCOREPropertyType_sequence::union_DQ_USCOREResult_USCOREPropertyType = union_DQ_USCOREResult_USCOREPropertyType;
	}
	return _p;
}

inline __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * soap_new_set___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractDQ_USCOREResult,
	const union _gmd__union_DQ_USCOREResult_USCOREPropertyType& union_DQ_USCOREResult_USCOREPropertyType)
{
	__gmd__DQ_USCOREResult_USCOREPropertyType_sequence *_p = soap_new___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__DQ_USCOREResult_USCOREPropertyType_sequence::__unionAbstractDQ_USCOREResult = __unionAbstractDQ_USCOREResult;
		_p->__gmd__DQ_USCOREResult_USCOREPropertyType_sequence::union_DQ_USCOREResult_USCOREPropertyType = union_DQ_USCOREResult_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap *soap, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:DQ_Result_PropertyType-sequence", "-gmd:DQ_Result_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap *soap, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__DQ_USCOREResult_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * soap_new___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * soap_new_req___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *DQ_USCOREEvaluationMethodTypeCode)
{
	__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *_p = soap_new___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence::DQ_USCOREEvaluationMethodTypeCode = DQ_USCOREEvaluationMethodTypeCode;
	}
	return _p;
}

inline __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * soap_new_set___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *DQ_USCOREEvaluationMethodTypeCode)
{
	__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *_p = soap_new___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence::DQ_USCOREEvaluationMethodTypeCode = DQ_USCOREEvaluationMethodTypeCode;
	}
	return _p;
}

inline int soap_write___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:DQ_EvaluationMethodTypeCode_PropertyType-sequence", "-gmd:DQ_EvaluationMethodTypeCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORESeries_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCORESeries_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCORESeries_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCORESeries_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCORESeries_USCOREPropertyType_sequence * soap_new___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCORESeries_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCORESeries_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCORESeries_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORESeries_USCOREType *CI_USCORESeries)
{
	__gmd__CI_USCORESeries_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORESeries_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORESeries_USCOREPropertyType_sequence::CI_USCORESeries = CI_USCORESeries;
	}
	return _p;
}

inline __gmd__CI_USCORESeries_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCORESeries_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORESeries_USCOREType *CI_USCORESeries)
{
	__gmd__CI_USCORESeries_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORESeries_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORESeries_USCOREPropertyType_sequence::CI_USCORESeries = CI_USCORESeries;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORESeries_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Series_PropertyType-sequence", "-gmd:CI_Series_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCORESeries_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCORESeries_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREPresentationFormCode)
{
	__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence::CI_USCOREPresentationFormCode = CI_USCOREPresentationFormCode;
	}
	return _p;
}

inline __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREPresentationFormCode)
{
	__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence::CI_USCOREPresentationFormCode = CI_USCOREPresentationFormCode;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_PresentationFormCode_PropertyType-sequence", "-gmd:CI_PresentationFormCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * soap_new___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCORERoleCode)
{
	__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence::CI_USCORERoleCode = CI_USCORERoleCode;
	}
	return _p;
}

inline __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCORERoleCode)
{
	__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence::CI_USCORERoleCode = CI_USCORERoleCode;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_RoleCode_PropertyType-sequence", "-gmd:CI_RoleCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREOnLineFunctionCode)
{
	__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence::CI_USCOREOnLineFunctionCode = CI_USCOREOnLineFunctionCode;
	}
	return _p;
}

inline __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREOnLineFunctionCode)
{
	__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence::CI_USCOREOnLineFunctionCode = CI_USCOREOnLineFunctionCode;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_OnLineFunctionCode_PropertyType-sequence", "-gmd:CI_OnLineFunctionCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__URL_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__URL_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__URL_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__URL_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__URL_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__URL_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__URL_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__URL_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__URL_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__URL_USCOREPropertyType_sequence * soap_new___gmd__URL_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__URL_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__URL_USCOREPropertyType_sequence * soap_new_req___gmd__URL_USCOREPropertyType_sequence(
	struct soap *soap,
	const std::string& URL)
{
	__gmd__URL_USCOREPropertyType_sequence *_p = soap_new___gmd__URL_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__URL_USCOREPropertyType_sequence::URL = URL;
	}
	return _p;
}

inline __gmd__URL_USCOREPropertyType_sequence * soap_new_set___gmd__URL_USCOREPropertyType_sequence(
	struct soap *soap,
	const std::string& URL)
{
	__gmd__URL_USCOREPropertyType_sequence *_p = soap_new___gmd__URL_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__URL_USCOREPropertyType_sequence::URL = URL;
	}
	return _p;
}

inline int soap_write___gmd__URL_USCOREPropertyType_sequence(struct soap *soap, __gmd__URL_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:URL_PropertyType-sequence", "-gmd:URL_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__URL_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__URL_USCOREPropertyType_sequence(struct soap*, __gmd__URL_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__URL_USCOREPropertyType_sequence(struct soap *soap, __gmd__URL_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__URL_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREOnlineResource_USCOREType *CI_USCOREOnlineResource)
{
	__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence::CI_USCOREOnlineResource = CI_USCOREOnlineResource;
	}
	return _p;
}

inline __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREOnlineResource_USCOREType *CI_USCOREOnlineResource)
{
	__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence::CI_USCOREOnlineResource = CI_USCOREOnlineResource;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_OnlineResource_PropertyType-sequence", "-gmd:CI_OnlineResource_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREAddress_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREAddress_USCOREType *CI_USCOREAddress)
{
	__gmd__CI_USCOREAddress_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREAddress_USCOREPropertyType_sequence::CI_USCOREAddress = CI_USCOREAddress;
	}
	return _p;
}

inline __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREAddress_USCOREType *CI_USCOREAddress)
{
	__gmd__CI_USCOREAddress_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREAddress_USCOREPropertyType_sequence::CI_USCOREAddress = CI_USCOREAddress;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Address_PropertyType-sequence", "-gmd:CI_Address_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREAddress_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORETelephone_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * soap_new___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORETelephone_USCOREType *CI_USCORETelephone)
{
	__gmd__CI_USCORETelephone_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORETelephone_USCOREPropertyType_sequence::CI_USCORETelephone = CI_USCORETelephone;
	}
	return _p;
}

inline __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORETelephone_USCOREType *CI_USCORETelephone)
{
	__gmd__CI_USCORETelephone_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORETelephone_USCOREPropertyType_sequence::CI_USCORETelephone = CI_USCORETelephone;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Telephone_PropertyType-sequence", "-gmd:CI_Telephone_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCORETelephone_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREContact_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREContact_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREContact_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREContact_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREContact_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREContact_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREContact_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREContact_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREContact_USCOREType *CI_USCOREContact)
{
	__gmd__CI_USCOREContact_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREContact_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREContact_USCOREPropertyType_sequence::CI_USCOREContact = CI_USCOREContact;
	}
	return _p;
}

inline __gmd__CI_USCOREContact_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREContact_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREContact_USCOREType *CI_USCOREContact)
{
	__gmd__CI_USCOREContact_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREContact_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREContact_USCOREPropertyType_sequence::CI_USCOREContact = CI_USCOREContact;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREContact_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Contact_PropertyType-sequence", "-gmd:CI_Contact_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREContact_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREContact_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREResponsibleParty_USCOREType *CI_USCOREResponsibleParty)
{
	__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence::CI_USCOREResponsibleParty = CI_USCOREResponsibleParty;
	}
	return _p;
}

inline __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREResponsibleParty_USCOREType *CI_USCOREResponsibleParty)
{
	__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence::CI_USCOREResponsibleParty = CI_USCOREResponsibleParty;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_ResponsibleParty_PropertyType-sequence", "-gmd:CI_ResponsibleParty_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREDateTypeCode)
{
	__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence::CI_USCOREDateTypeCode = CI_USCOREDateTypeCode;
	}
	return _p;
}

inline __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(
	struct soap *soap,
	gco__CodeListValue_USCOREType *CI_USCOREDateTypeCode)
{
	__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence::CI_USCOREDateTypeCode = CI_USCOREDateTypeCode;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_DateTypeCode_PropertyType-sequence", "-gmd:CI_DateTypeCode_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCOREDate_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCOREDate_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCOREDate_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCOREDate_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCOREDate_USCOREPropertyType_sequence * soap_new___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCOREDate_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCOREDate_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCOREDate_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREDate_USCOREType *CI_USCOREDate)
{
	__gmd__CI_USCOREDate_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREDate_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREDate_USCOREPropertyType_sequence::CI_USCOREDate = CI_USCOREDate;
	}
	return _p;
}

inline __gmd__CI_USCOREDate_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCOREDate_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCOREDate_USCOREType *CI_USCOREDate)
{
	__gmd__CI_USCOREDate_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCOREDate_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCOREDate_USCOREPropertyType_sequence::CI_USCOREDate = CI_USCOREDate;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREDate_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Date_PropertyType-sequence", "-gmd:CI_Date_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCOREDate_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCOREDate_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__CI_USCORECitation_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__CI_USCORECitation_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__CI_USCORECitation_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__CI_USCORECitation_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__CI_USCORECitation_USCOREPropertyType_sequence * soap_new___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__CI_USCORECitation_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__CI_USCORECitation_USCOREPropertyType_sequence * soap_new_req___gmd__CI_USCORECitation_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORECitation_USCOREType *CI_USCORECitation)
{
	__gmd__CI_USCORECitation_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORECitation_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORECitation_USCOREPropertyType_sequence::CI_USCORECitation = CI_USCORECitation;
	}
	return _p;
}

inline __gmd__CI_USCORECitation_USCOREPropertyType_sequence * soap_new_set___gmd__CI_USCORECitation_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__CI_USCORECitation_USCOREType *CI_USCORECitation)
{
	__gmd__CI_USCORECitation_USCOREPropertyType_sequence *_p = soap_new___gmd__CI_USCORECitation_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__CI_USCORECitation_USCOREPropertyType_sequence::CI_USCORECitation = CI_USCORECitation;
	}
	return _p;
}

inline int soap_write___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORECitation_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:CI_Citation_PropertyType-sequence", "-gmd:CI_Citation_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__CI_USCORECitation_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap *soap, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__CI_USCORECitation_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * soap_new___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * soap_new_req___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__MD_USCOREIdentifier_USCOREType *MD_USCOREIdentifier)
{
	__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *_p = soap_new___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence::MD_USCOREIdentifier = MD_USCOREIdentifier;
	}
	return _p;
}

inline __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * soap_new_set___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__MD_USCOREIdentifier_USCOREType *MD_USCOREIdentifier)
{
	__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *_p = soap_new___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence::MD_USCOREIdentifier = MD_USCOREIdentifier;
	}
	return _p;
}

inline int soap_write___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap *soap, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:MD_Identifier_PropertyType-sequence", "-gmd:MD_Identifier_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap *soap, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * soap_new___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * soap_new_req___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__EX_USCOREVerticalExtent_USCOREType *EX_USCOREVerticalExtent)
{
	__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence::EX_USCOREVerticalExtent = EX_USCOREVerticalExtent;
	}
	return _p;
}

inline __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * soap_new_set___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__EX_USCOREVerticalExtent_USCOREType *EX_USCOREVerticalExtent)
{
	__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence::EX_USCOREVerticalExtent = EX_USCOREVerticalExtent;
	}
	return _p;
}

inline int soap_write___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:EX_VerticalExtent_PropertyType-sequence", "-gmd:EX_VerticalExtent_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * soap_new___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * soap_new_req___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__EX_USCORETemporalExtent_USCOREType *EX_USCORETemporalExtent)
{
	__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence::EX_USCORETemporalExtent = EX_USCORETemporalExtent;
	}
	return _p;
}

inline __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * soap_new_set___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	gmd__EX_USCORETemporalExtent_USCOREType *EX_USCORETemporalExtent)
{
	__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence::EX_USCORETemporalExtent = EX_USCORETemporalExtent;
	}
	return _p;
}

inline int soap_write___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:EX_TemporalExtent_PropertyType-sequence", "-gmd:EX_TemporalExtent_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, const char*, int, const __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC3 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_in___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *, const char*);
SOAP_FMAC1 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * soap_new___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * soap_new_req___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractEX_USCOREGeographicExtent,
	const union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType& union_EX_USCOREGeographicExtent_USCOREPropertyType)
{
	__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence::__unionAbstractEX_USCOREGeographicExtent = __unionAbstractEX_USCOREGeographicExtent;
		_p->__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence::union_EX_USCOREGeographicExtent_USCOREPropertyType = union_EX_USCOREGeographicExtent_USCOREPropertyType;
	}
	return _p;
}

inline __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * soap_new_set___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractEX_USCOREGeographicExtent,
	const union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType& union_EX_USCOREGeographicExtent_USCOREPropertyType)
{
	__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *_p = soap_new___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence::__unionAbstractEX_USCOREGeographicExtent = __unionAbstractEX_USCOREGeographicExtent;
		_p->__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence::union_EX_USCOREGeographicExtent_USCOREPropertyType = union_EX_USCOREGeographicExtent_USCOREPropertyType;
	}
	return _p;
}

inline int soap_write___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gmd:EX_GeographicExtent_PropertyType-sequence", "-gmd:EX_GeographicExtent_PropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence * SOAP_FMAC4 soap_get___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *, const char*, const char*);

inline int soap_read___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap *soap, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__coordinateOperationAccuracy_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__coordinateOperationAccuracy_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__coordinateOperationAccuracy_sequence(struct soap*, const char*, int, const __gml__coordinateOperationAccuracy_sequence *, const char*);
SOAP_FMAC3 __gml__coordinateOperationAccuracy_sequence * SOAP_FMAC4 soap_in___gml__coordinateOperationAccuracy_sequence(struct soap*, const char*, __gml__coordinateOperationAccuracy_sequence *, const char*);
SOAP_FMAC1 __gml__coordinateOperationAccuracy_sequence * SOAP_FMAC2 soap_instantiate___gml__coordinateOperationAccuracy_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__coordinateOperationAccuracy_sequence * soap_new___gml__coordinateOperationAccuracy_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__coordinateOperationAccuracy_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__coordinateOperationAccuracy_sequence * soap_new_req___gml__coordinateOperationAccuracy_sequence(
	struct soap *soap,
	int __unionAbstractDQ_USCOREPositionalAccuracy,
	const union _gml__union_coordinateOperationAccuracy& union_coordinateOperationAccuracy)
{
	__gml__coordinateOperationAccuracy_sequence *_p = soap_new___gml__coordinateOperationAccuracy_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__coordinateOperationAccuracy_sequence::__unionAbstractDQ_USCOREPositionalAccuracy = __unionAbstractDQ_USCOREPositionalAccuracy;
		_p->__gml__coordinateOperationAccuracy_sequence::union_coordinateOperationAccuracy = union_coordinateOperationAccuracy;
	}
	return _p;
}

inline __gml__coordinateOperationAccuracy_sequence * soap_new_set___gml__coordinateOperationAccuracy_sequence(
	struct soap *soap,
	int __unionAbstractDQ_USCOREPositionalAccuracy,
	const union _gml__union_coordinateOperationAccuracy& union_coordinateOperationAccuracy)
{
	__gml__coordinateOperationAccuracy_sequence *_p = soap_new___gml__coordinateOperationAccuracy_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__coordinateOperationAccuracy_sequence::__unionAbstractDQ_USCOREPositionalAccuracy = __unionAbstractDQ_USCOREPositionalAccuracy;
		_p->__gml__coordinateOperationAccuracy_sequence::union_coordinateOperationAccuracy = union_coordinateOperationAccuracy;
	}
	return _p;
}

inline int soap_write___gml__coordinateOperationAccuracy_sequence(struct soap *soap, __gml__coordinateOperationAccuracy_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:coordinateOperationAccuracy-sequence", "-gml:coordinateOperationAccuracy-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__coordinateOperationAccuracy_sequence * SOAP_FMAC4 soap_get___gml__coordinateOperationAccuracy_sequence(struct soap*, __gml__coordinateOperationAccuracy_sequence *, const char*, const char*);

inline int soap_read___gml__coordinateOperationAccuracy_sequence(struct soap *soap, __gml__coordinateOperationAccuracy_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__coordinateOperationAccuracy_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__domainOfValidity_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__domainOfValidity_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__domainOfValidity_sequence(struct soap*, const char*, int, const __gml__domainOfValidity_sequence *, const char*);
SOAP_FMAC3 __gml__domainOfValidity_sequence * SOAP_FMAC4 soap_in___gml__domainOfValidity_sequence(struct soap*, const char*, __gml__domainOfValidity_sequence *, const char*);
SOAP_FMAC1 __gml__domainOfValidity_sequence * SOAP_FMAC2 soap_instantiate___gml__domainOfValidity_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__domainOfValidity_sequence * soap_new___gml__domainOfValidity_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__domainOfValidity_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__domainOfValidity_sequence * soap_new_req___gml__domainOfValidity_sequence(
	struct soap *soap,
	gmd__EX_USCOREExtent_USCOREType *gmd__EX_USCOREExtent)
{
	__gml__domainOfValidity_sequence *_p = soap_new___gml__domainOfValidity_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__domainOfValidity_sequence::gmd__EX_USCOREExtent = gmd__EX_USCOREExtent;
	}
	return _p;
}

inline __gml__domainOfValidity_sequence * soap_new_set___gml__domainOfValidity_sequence(
	struct soap *soap,
	gmd__EX_USCOREExtent_USCOREType *gmd__EX_USCOREExtent)
{
	__gml__domainOfValidity_sequence *_p = soap_new___gml__domainOfValidity_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__domainOfValidity_sequence::gmd__EX_USCOREExtent = gmd__EX_USCOREExtent;
	}
	return _p;
}

inline int soap_write___gml__domainOfValidity_sequence(struct soap *soap, __gml__domainOfValidity_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:domainOfValidity-sequence", "-gml:domainOfValidity-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__domainOfValidity_sequence * SOAP_FMAC4 soap_get___gml__domainOfValidity_sequence(struct soap*, __gml__domainOfValidity_sequence *, const char*, const char*);

inline int soap_read___gml__domainOfValidity_sequence(struct soap *soap, __gml__domainOfValidity_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__domainOfValidity_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalDatumPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalDatumPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__VerticalDatumPropertyType_sequence(struct soap*, const char*, int, const __gml__VerticalDatumPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__VerticalDatumPropertyType_sequence * SOAP_FMAC4 soap_in___gml__VerticalDatumPropertyType_sequence(struct soap*, const char*, __gml__VerticalDatumPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__VerticalDatumPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__VerticalDatumPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__VerticalDatumPropertyType_sequence * soap_new___gml__VerticalDatumPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__VerticalDatumPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__VerticalDatumPropertyType_sequence * soap_new_req___gml__VerticalDatumPropertyType_sequence(
	struct soap *soap,
	gml__VerticalDatumType *VerticalDatum)
{
	__gml__VerticalDatumPropertyType_sequence *_p = soap_new___gml__VerticalDatumPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__VerticalDatumPropertyType_sequence::VerticalDatum = VerticalDatum;
	}
	return _p;
}

inline __gml__VerticalDatumPropertyType_sequence * soap_new_set___gml__VerticalDatumPropertyType_sequence(
	struct soap *soap,
	gml__VerticalDatumType *VerticalDatum)
{
	__gml__VerticalDatumPropertyType_sequence *_p = soap_new___gml__VerticalDatumPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__VerticalDatumPropertyType_sequence::VerticalDatum = VerticalDatum;
	}
	return _p;
}

inline int soap_write___gml__VerticalDatumPropertyType_sequence(struct soap *soap, __gml__VerticalDatumPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:VerticalDatumPropertyType-sequence", "-gml:VerticalDatumPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__VerticalDatumPropertyType_sequence * SOAP_FMAC4 soap_get___gml__VerticalDatumPropertyType_sequence(struct soap*, __gml__VerticalDatumPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__VerticalDatumPropertyType_sequence(struct soap *soap, __gml__VerticalDatumPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__VerticalDatumPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__VerticalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__VerticalCSPropertyType_sequence(struct soap*, const char*, int, const __gml__VerticalCSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__VerticalCSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__VerticalCSPropertyType_sequence(struct soap*, const char*, __gml__VerticalCSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__VerticalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__VerticalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__VerticalCSPropertyType_sequence * soap_new___gml__VerticalCSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__VerticalCSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__VerticalCSPropertyType_sequence * soap_new_req___gml__VerticalCSPropertyType_sequence(
	struct soap *soap,
	gml__VerticalCSType *VerticalCS)
{
	__gml__VerticalCSPropertyType_sequence *_p = soap_new___gml__VerticalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__VerticalCSPropertyType_sequence::VerticalCS = VerticalCS;
	}
	return _p;
}

inline __gml__VerticalCSPropertyType_sequence * soap_new_set___gml__VerticalCSPropertyType_sequence(
	struct soap *soap,
	gml__VerticalCSType *VerticalCS)
{
	__gml__VerticalCSPropertyType_sequence *_p = soap_new___gml__VerticalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__VerticalCSPropertyType_sequence::VerticalCS = VerticalCS;
	}
	return _p;
}

inline int soap_write___gml__VerticalCSPropertyType_sequence(struct soap *soap, __gml__VerticalCSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:VerticalCSPropertyType-sequence", "-gml:VerticalCSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__VerticalCSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__VerticalCSPropertyType_sequence(struct soap*, __gml__VerticalCSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__VerticalCSPropertyType_sequence(struct soap *soap, __gml__VerticalCSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__VerticalCSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticCRSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticCRSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__GeodeticCRSPropertyType_sequence(struct soap*, const char*, int, const __gml__GeodeticCRSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__GeodeticCRSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__GeodeticCRSPropertyType_sequence(struct soap*, const char*, __gml__GeodeticCRSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__GeodeticCRSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeodeticCRSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__GeodeticCRSPropertyType_sequence * soap_new___gml__GeodeticCRSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__GeodeticCRSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__GeodeticCRSPropertyType_sequence * soap_new_req___gml__GeodeticCRSPropertyType_sequence(
	struct soap *soap,
	gml__GeodeticCRSType *GeodeticCRS)
{
	__gml__GeodeticCRSPropertyType_sequence *_p = soap_new___gml__GeodeticCRSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeodeticCRSPropertyType_sequence::GeodeticCRS = GeodeticCRS;
	}
	return _p;
}

inline __gml__GeodeticCRSPropertyType_sequence * soap_new_set___gml__GeodeticCRSPropertyType_sequence(
	struct soap *soap,
	gml__GeodeticCRSType *GeodeticCRS)
{
	__gml__GeodeticCRSPropertyType_sequence *_p = soap_new___gml__GeodeticCRSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeodeticCRSPropertyType_sequence::GeodeticCRS = GeodeticCRS;
	}
	return _p;
}

inline int soap_write___gml__GeodeticCRSPropertyType_sequence(struct soap *soap, __gml__GeodeticCRSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:GeodeticCRSPropertyType-sequence", "-gml:GeodeticCRSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__GeodeticCRSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__GeodeticCRSPropertyType_sequence(struct soap*, __gml__GeodeticCRSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__GeodeticCRSPropertyType_sequence(struct soap *soap, __gml__GeodeticCRSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__GeodeticCRSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__CRSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__CRSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__CRSPropertyType_sequence(struct soap*, const char*, int, const __gml__CRSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__CRSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__CRSPropertyType_sequence(struct soap*, const char*, __gml__CRSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__CRSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CRSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__CRSPropertyType_sequence * soap_new___gml__CRSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__CRSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__CRSPropertyType_sequence * soap_new_req___gml__CRSPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractCRS,
	const union _gml__union_CRSPropertyType& union_CRSPropertyType)
{
	__gml__CRSPropertyType_sequence *_p = soap_new___gml__CRSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CRSPropertyType_sequence::__unionAbstractCRS = __unionAbstractCRS;
		_p->__gml__CRSPropertyType_sequence::union_CRSPropertyType = union_CRSPropertyType;
	}
	return _p;
}

inline __gml__CRSPropertyType_sequence * soap_new_set___gml__CRSPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractCRS,
	const union _gml__union_CRSPropertyType& union_CRSPropertyType)
{
	__gml__CRSPropertyType_sequence *_p = soap_new___gml__CRSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CRSPropertyType_sequence::__unionAbstractCRS = __unionAbstractCRS;
		_p->__gml__CRSPropertyType_sequence::union_CRSPropertyType = union_CRSPropertyType;
	}
	return _p;
}

inline int soap_write___gml__CRSPropertyType_sequence(struct soap *soap, __gml__CRSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:CRSPropertyType-sequence", "-gml:CRSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__CRSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__CRSPropertyType_sequence(struct soap*, __gml__CRSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__CRSPropertyType_sequence(struct soap *soap, __gml__CRSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__CRSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__GeneralConversionPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__GeneralConversionPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__GeneralConversionPropertyType_sequence(struct soap*, const char*, int, const __gml__GeneralConversionPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__GeneralConversionPropertyType_sequence * SOAP_FMAC4 soap_in___gml__GeneralConversionPropertyType_sequence(struct soap*, const char*, __gml__GeneralConversionPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__GeneralConversionPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeneralConversionPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__GeneralConversionPropertyType_sequence * soap_new___gml__GeneralConversionPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__GeneralConversionPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__GeneralConversionPropertyType_sequence * soap_new_req___gml__GeneralConversionPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractGeneralConversion,
	const union _gml__union_GeneralConversionPropertyType& union_GeneralConversionPropertyType)
{
	__gml__GeneralConversionPropertyType_sequence *_p = soap_new___gml__GeneralConversionPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeneralConversionPropertyType_sequence::__unionAbstractGeneralConversion = __unionAbstractGeneralConversion;
		_p->__gml__GeneralConversionPropertyType_sequence::union_GeneralConversionPropertyType = union_GeneralConversionPropertyType;
	}
	return _p;
}

inline __gml__GeneralConversionPropertyType_sequence * soap_new_set___gml__GeneralConversionPropertyType_sequence(
	struct soap *soap,
	int __unionAbstractGeneralConversion,
	const union _gml__union_GeneralConversionPropertyType& union_GeneralConversionPropertyType)
{
	__gml__GeneralConversionPropertyType_sequence *_p = soap_new___gml__GeneralConversionPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeneralConversionPropertyType_sequence::__unionAbstractGeneralConversion = __unionAbstractGeneralConversion;
		_p->__gml__GeneralConversionPropertyType_sequence::union_GeneralConversionPropertyType = union_GeneralConversionPropertyType;
	}
	return _p;
}

inline int soap_write___gml__GeneralConversionPropertyType_sequence(struct soap *soap, __gml__GeneralConversionPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:GeneralConversionPropertyType-sequence", "-gml:GeneralConversionPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__GeneralConversionPropertyType_sequence * SOAP_FMAC4 soap_get___gml__GeneralConversionPropertyType_sequence(struct soap*, __gml__GeneralConversionPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__GeneralConversionPropertyType_sequence(struct soap *soap, __gml__GeneralConversionPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__GeneralConversionPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__EllipsoidPropertyType_sequence(struct soap*, const char*, int, const __gml__EllipsoidPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__EllipsoidPropertyType_sequence * SOAP_FMAC4 soap_in___gml__EllipsoidPropertyType_sequence(struct soap*, const char*, __gml__EllipsoidPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__EllipsoidPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__EllipsoidPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__EllipsoidPropertyType_sequence * soap_new___gml__EllipsoidPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__EllipsoidPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__EllipsoidPropertyType_sequence * soap_new_req___gml__EllipsoidPropertyType_sequence(
	struct soap *soap,
	gml__EllipsoidType *Ellipsoid)
{
	__gml__EllipsoidPropertyType_sequence *_p = soap_new___gml__EllipsoidPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__EllipsoidPropertyType_sequence::Ellipsoid = Ellipsoid;
	}
	return _p;
}

inline __gml__EllipsoidPropertyType_sequence * soap_new_set___gml__EllipsoidPropertyType_sequence(
	struct soap *soap,
	gml__EllipsoidType *Ellipsoid)
{
	__gml__EllipsoidPropertyType_sequence *_p = soap_new___gml__EllipsoidPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__EllipsoidPropertyType_sequence::Ellipsoid = Ellipsoid;
	}
	return _p;
}

inline int soap_write___gml__EllipsoidPropertyType_sequence(struct soap *soap, __gml__EllipsoidPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:EllipsoidPropertyType-sequence", "-gml:EllipsoidPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__EllipsoidPropertyType_sequence * SOAP_FMAC4 soap_get___gml__EllipsoidPropertyType_sequence(struct soap*, __gml__EllipsoidPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__EllipsoidPropertyType_sequence(struct soap *soap, __gml__EllipsoidPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__EllipsoidPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__PrimeMeridianPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__PrimeMeridianPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__PrimeMeridianPropertyType_sequence(struct soap*, const char*, int, const __gml__PrimeMeridianPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__PrimeMeridianPropertyType_sequence * SOAP_FMAC4 soap_in___gml__PrimeMeridianPropertyType_sequence(struct soap*, const char*, __gml__PrimeMeridianPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__PrimeMeridianPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__PrimeMeridianPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__PrimeMeridianPropertyType_sequence * soap_new___gml__PrimeMeridianPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__PrimeMeridianPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__PrimeMeridianPropertyType_sequence * soap_new_req___gml__PrimeMeridianPropertyType_sequence(
	struct soap *soap,
	gml__PrimeMeridianType *PrimeMeridian)
{
	__gml__PrimeMeridianPropertyType_sequence *_p = soap_new___gml__PrimeMeridianPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__PrimeMeridianPropertyType_sequence::PrimeMeridian = PrimeMeridian;
	}
	return _p;
}

inline __gml__PrimeMeridianPropertyType_sequence * soap_new_set___gml__PrimeMeridianPropertyType_sequence(
	struct soap *soap,
	gml__PrimeMeridianType *PrimeMeridian)
{
	__gml__PrimeMeridianPropertyType_sequence *_p = soap_new___gml__PrimeMeridianPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__PrimeMeridianPropertyType_sequence::PrimeMeridian = PrimeMeridian;
	}
	return _p;
}

inline int soap_write___gml__PrimeMeridianPropertyType_sequence(struct soap *soap, __gml__PrimeMeridianPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:PrimeMeridianPropertyType-sequence", "-gml:PrimeMeridianPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__PrimeMeridianPropertyType_sequence * SOAP_FMAC4 soap_get___gml__PrimeMeridianPropertyType_sequence(struct soap*, __gml__PrimeMeridianPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__PrimeMeridianPropertyType_sequence(struct soap *soap, __gml__PrimeMeridianPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__PrimeMeridianPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticDatumPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__GeodeticDatumPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__GeodeticDatumPropertyType_sequence(struct soap*, const char*, int, const __gml__GeodeticDatumPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__GeodeticDatumPropertyType_sequence * SOAP_FMAC4 soap_in___gml__GeodeticDatumPropertyType_sequence(struct soap*, const char*, __gml__GeodeticDatumPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__GeodeticDatumPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__GeodeticDatumPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__GeodeticDatumPropertyType_sequence * soap_new___gml__GeodeticDatumPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__GeodeticDatumPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__GeodeticDatumPropertyType_sequence * soap_new_req___gml__GeodeticDatumPropertyType_sequence(
	struct soap *soap,
	gml__GeodeticDatumType *GeodeticDatum)
{
	__gml__GeodeticDatumPropertyType_sequence *_p = soap_new___gml__GeodeticDatumPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeodeticDatumPropertyType_sequence::GeodeticDatum = GeodeticDatum;
	}
	return _p;
}

inline __gml__GeodeticDatumPropertyType_sequence * soap_new_set___gml__GeodeticDatumPropertyType_sequence(
	struct soap *soap,
	gml__GeodeticDatumType *GeodeticDatum)
{
	__gml__GeodeticDatumPropertyType_sequence *_p = soap_new___gml__GeodeticDatumPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__GeodeticDatumPropertyType_sequence::GeodeticDatum = GeodeticDatum;
	}
	return _p;
}

inline int soap_write___gml__GeodeticDatumPropertyType_sequence(struct soap *soap, __gml__GeodeticDatumPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:GeodeticDatumPropertyType-sequence", "-gml:GeodeticDatumPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__GeodeticDatumPropertyType_sequence * SOAP_FMAC4 soap_get___gml__GeodeticDatumPropertyType_sequence(struct soap*, __gml__GeodeticDatumPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__GeodeticDatumPropertyType_sequence(struct soap *soap, __gml__GeodeticDatumPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__GeodeticDatumPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__SphericalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__SphericalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__SphericalCSPropertyType_sequence(struct soap*, const char*, int, const __gml__SphericalCSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__SphericalCSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__SphericalCSPropertyType_sequence(struct soap*, const char*, __gml__SphericalCSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__SphericalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__SphericalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__SphericalCSPropertyType_sequence * soap_new___gml__SphericalCSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__SphericalCSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__SphericalCSPropertyType_sequence * soap_new_req___gml__SphericalCSPropertyType_sequence(
	struct soap *soap,
	gml__SphericalCSType *SphericalCS)
{
	__gml__SphericalCSPropertyType_sequence *_p = soap_new___gml__SphericalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__SphericalCSPropertyType_sequence::SphericalCS = SphericalCS;
	}
	return _p;
}

inline __gml__SphericalCSPropertyType_sequence * soap_new_set___gml__SphericalCSPropertyType_sequence(
	struct soap *soap,
	gml__SphericalCSType *SphericalCS)
{
	__gml__SphericalCSPropertyType_sequence *_p = soap_new___gml__SphericalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__SphericalCSPropertyType_sequence::SphericalCS = SphericalCS;
	}
	return _p;
}

inline int soap_write___gml__SphericalCSPropertyType_sequence(struct soap *soap, __gml__SphericalCSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:SphericalCSPropertyType-sequence", "-gml:SphericalCSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__SphericalCSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__SphericalCSPropertyType_sequence(struct soap*, __gml__SphericalCSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__SphericalCSPropertyType_sequence(struct soap *soap, __gml__SphericalCSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__SphericalCSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__CartesianCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__CartesianCSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__CartesianCSPropertyType_sequence(struct soap*, const char*, int, const __gml__CartesianCSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__CartesianCSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__CartesianCSPropertyType_sequence(struct soap*, const char*, __gml__CartesianCSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__CartesianCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CartesianCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__CartesianCSPropertyType_sequence * soap_new___gml__CartesianCSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__CartesianCSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__CartesianCSPropertyType_sequence * soap_new_req___gml__CartesianCSPropertyType_sequence(
	struct soap *soap,
	gml__CartesianCSType *CartesianCS)
{
	__gml__CartesianCSPropertyType_sequence *_p = soap_new___gml__CartesianCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CartesianCSPropertyType_sequence::CartesianCS = CartesianCS;
	}
	return _p;
}

inline __gml__CartesianCSPropertyType_sequence * soap_new_set___gml__CartesianCSPropertyType_sequence(
	struct soap *soap,
	gml__CartesianCSType *CartesianCS)
{
	__gml__CartesianCSPropertyType_sequence *_p = soap_new___gml__CartesianCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CartesianCSPropertyType_sequence::CartesianCS = CartesianCS;
	}
	return _p;
}

inline int soap_write___gml__CartesianCSPropertyType_sequence(struct soap *soap, __gml__CartesianCSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:CartesianCSPropertyType-sequence", "-gml:CartesianCSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__CartesianCSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__CartesianCSPropertyType_sequence(struct soap*, __gml__CartesianCSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__CartesianCSPropertyType_sequence(struct soap *soap, __gml__CartesianCSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__CartesianCSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__CoordinateSystemAxisPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__CoordinateSystemAxisPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, const char*, int, const __gml__CoordinateSystemAxisPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__CoordinateSystemAxisPropertyType_sequence * SOAP_FMAC4 soap_in___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, const char*, __gml__CoordinateSystemAxisPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__CoordinateSystemAxisPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__CoordinateSystemAxisPropertyType_sequence * soap_new___gml__CoordinateSystemAxisPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__CoordinateSystemAxisPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__CoordinateSystemAxisPropertyType_sequence * soap_new_req___gml__CoordinateSystemAxisPropertyType_sequence(
	struct soap *soap,
	gml__CoordinateSystemAxisType *CoordinateSystemAxis)
{
	__gml__CoordinateSystemAxisPropertyType_sequence *_p = soap_new___gml__CoordinateSystemAxisPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CoordinateSystemAxisPropertyType_sequence::CoordinateSystemAxis = CoordinateSystemAxis;
	}
	return _p;
}

inline __gml__CoordinateSystemAxisPropertyType_sequence * soap_new_set___gml__CoordinateSystemAxisPropertyType_sequence(
	struct soap *soap,
	gml__CoordinateSystemAxisType *CoordinateSystemAxis)
{
	__gml__CoordinateSystemAxisPropertyType_sequence *_p = soap_new___gml__CoordinateSystemAxisPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__CoordinateSystemAxisPropertyType_sequence::CoordinateSystemAxis = CoordinateSystemAxis;
	}
	return _p;
}

inline int soap_write___gml__CoordinateSystemAxisPropertyType_sequence(struct soap *soap, __gml__CoordinateSystemAxisPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:CoordinateSystemAxisPropertyType-sequence", "-gml:CoordinateSystemAxisPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__CoordinateSystemAxisPropertyType_sequence * SOAP_FMAC4 soap_get___gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, __gml__CoordinateSystemAxisPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__CoordinateSystemAxisPropertyType_sequence(struct soap *soap, __gml__CoordinateSystemAxisPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__CoordinateSystemAxisPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__EllipsoidalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__EllipsoidalCSPropertyType_sequence(struct soap*, const char*, int, const __gml__EllipsoidalCSPropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__EllipsoidalCSPropertyType_sequence * SOAP_FMAC4 soap_in___gml__EllipsoidalCSPropertyType_sequence(struct soap*, const char*, __gml__EllipsoidalCSPropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__EllipsoidalCSPropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__EllipsoidalCSPropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__EllipsoidalCSPropertyType_sequence * soap_new___gml__EllipsoidalCSPropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__EllipsoidalCSPropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__EllipsoidalCSPropertyType_sequence * soap_new_req___gml__EllipsoidalCSPropertyType_sequence(
	struct soap *soap,
	gml__EllipsoidalCSType *EllipsoidalCS)
{
	__gml__EllipsoidalCSPropertyType_sequence *_p = soap_new___gml__EllipsoidalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__EllipsoidalCSPropertyType_sequence::EllipsoidalCS = EllipsoidalCS;
	}
	return _p;
}

inline __gml__EllipsoidalCSPropertyType_sequence * soap_new_set___gml__EllipsoidalCSPropertyType_sequence(
	struct soap *soap,
	gml__EllipsoidalCSType *EllipsoidalCS)
{
	__gml__EllipsoidalCSPropertyType_sequence *_p = soap_new___gml__EllipsoidalCSPropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__EllipsoidalCSPropertyType_sequence::EllipsoidalCS = EllipsoidalCS;
	}
	return _p;
}

inline int soap_write___gml__EllipsoidalCSPropertyType_sequence(struct soap *soap, __gml__EllipsoidalCSPropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:EllipsoidalCSPropertyType-sequence", "-gml:EllipsoidalCSPropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__EllipsoidalCSPropertyType_sequence * SOAP_FMAC4 soap_get___gml__EllipsoidalCSPropertyType_sequence(struct soap*, __gml__EllipsoidalCSPropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__EllipsoidalCSPropertyType_sequence(struct soap *soap, __gml__EllipsoidalCSPropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__EllipsoidalCSPropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___gml__TimePrimitivePropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___gml__TimePrimitivePropertyType_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___gml__TimePrimitivePropertyType_sequence(struct soap*, const char*, int, const __gml__TimePrimitivePropertyType_sequence *, const char*);
SOAP_FMAC3 __gml__TimePrimitivePropertyType_sequence * SOAP_FMAC4 soap_in___gml__TimePrimitivePropertyType_sequence(struct soap*, const char*, __gml__TimePrimitivePropertyType_sequence *, const char*);
SOAP_FMAC1 __gml__TimePrimitivePropertyType_sequence * SOAP_FMAC2 soap_instantiate___gml__TimePrimitivePropertyType_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __gml__TimePrimitivePropertyType_sequence * soap_new___gml__TimePrimitivePropertyType_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___gml__TimePrimitivePropertyType_sequence(soap, n, NULL, NULL, NULL);
}

inline __gml__TimePrimitivePropertyType_sequence * soap_new_req___gml__TimePrimitivePropertyType_sequence(
	struct soap *soap,
	int __unionAbstractTimePrimitive,
	const union _gml__union_TimePrimitivePropertyType& union_TimePrimitivePropertyType)
{
	__gml__TimePrimitivePropertyType_sequence *_p = soap_new___gml__TimePrimitivePropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__TimePrimitivePropertyType_sequence::__unionAbstractTimePrimitive = __unionAbstractTimePrimitive;
		_p->__gml__TimePrimitivePropertyType_sequence::union_TimePrimitivePropertyType = union_TimePrimitivePropertyType;
	}
	return _p;
}

inline __gml__TimePrimitivePropertyType_sequence * soap_new_set___gml__TimePrimitivePropertyType_sequence(
	struct soap *soap,
	int __unionAbstractTimePrimitive,
	const union _gml__union_TimePrimitivePropertyType& union_TimePrimitivePropertyType)
{
	__gml__TimePrimitivePropertyType_sequence *_p = soap_new___gml__TimePrimitivePropertyType_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__gml__TimePrimitivePropertyType_sequence::__unionAbstractTimePrimitive = __unionAbstractTimePrimitive;
		_p->__gml__TimePrimitivePropertyType_sequence::union_TimePrimitivePropertyType = union_TimePrimitivePropertyType;
	}
	return _p;
}

inline int soap_write___gml__TimePrimitivePropertyType_sequence(struct soap *soap, __gml__TimePrimitivePropertyType_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-gml:TimePrimitivePropertyType-sequence", "-gml:TimePrimitivePropertyType-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __gml__TimePrimitivePropertyType_sequence * SOAP_FMAC4 soap_get___gml__TimePrimitivePropertyType_sequence(struct soap*, __gml__TimePrimitivePropertyType_sequence *, const char*, const char*);

inline int soap_read___gml__TimePrimitivePropertyType_sequence(struct soap *soap, __gml__TimePrimitivePropertyType_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___gml__TimePrimitivePropertyType_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml2__OverlapVolume_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml2__OverlapVolume_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___resqml2__OverlapVolume_sequence(struct soap*, const char*, int, const __resqml2__OverlapVolume_sequence *, const char*);
SOAP_FMAC3 __resqml2__OverlapVolume_sequence * SOAP_FMAC4 soap_in___resqml2__OverlapVolume_sequence(struct soap*, const char*, __resqml2__OverlapVolume_sequence *, const char*);
SOAP_FMAC1 __resqml2__OverlapVolume_sequence * SOAP_FMAC2 soap_instantiate___resqml2__OverlapVolume_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __resqml2__OverlapVolume_sequence * soap_new___resqml2__OverlapVolume_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___resqml2__OverlapVolume_sequence(soap, n, NULL, NULL, NULL);
}

inline __resqml2__OverlapVolume_sequence * soap_new_req___resqml2__OverlapVolume_sequence(
	struct soap *soap,
	enum eml__VolumeUom VolumeUom,
	resqml2__AbstractDoubleArray *OverlapVolumes)
{
	__resqml2__OverlapVolume_sequence *_p = soap_new___resqml2__OverlapVolume_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__resqml2__OverlapVolume_sequence::VolumeUom = VolumeUom;
		_p->__resqml2__OverlapVolume_sequence::OverlapVolumes = OverlapVolumes;
	}
	return _p;
}

inline __resqml2__OverlapVolume_sequence * soap_new_set___resqml2__OverlapVolume_sequence(
	struct soap *soap,
	enum eml__VolumeUom VolumeUom,
	resqml2__AbstractDoubleArray *OverlapVolumes)
{
	__resqml2__OverlapVolume_sequence *_p = soap_new___resqml2__OverlapVolume_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__resqml2__OverlapVolume_sequence::VolumeUom = VolumeUom;
		_p->__resqml2__OverlapVolume_sequence::OverlapVolumes = OverlapVolumes;
	}
	return _p;
}

inline int soap_write___resqml2__OverlapVolume_sequence(struct soap *soap, __resqml2__OverlapVolume_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-resqml2:OverlapVolume-sequence", "-resqml2:OverlapVolume-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __resqml2__OverlapVolume_sequence * SOAP_FMAC4 soap_get___resqml2__OverlapVolume_sequence(struct soap*, __resqml2__OverlapVolume_sequence *, const char*, const char*);

inline int soap_read___resqml2__OverlapVolume_sequence(struct soap *soap, __resqml2__OverlapVolume_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___resqml2__OverlapVolume_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml2__CellOverlap_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml2__CellOverlap_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___resqml2__CellOverlap_sequence(struct soap*, const char*, int, const __resqml2__CellOverlap_sequence *, const char*);
SOAP_FMAC3 __resqml2__CellOverlap_sequence * SOAP_FMAC4 soap_in___resqml2__CellOverlap_sequence(struct soap*, const char*, __resqml2__CellOverlap_sequence *, const char*);
SOAP_FMAC1 __resqml2__CellOverlap_sequence * SOAP_FMAC2 soap_instantiate___resqml2__CellOverlap_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __resqml2__CellOverlap_sequence * soap_new___resqml2__CellOverlap_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___resqml2__CellOverlap_sequence(soap, n, NULL, NULL, NULL);
}

inline __resqml2__CellOverlap_sequence * soap_new_req___resqml2__CellOverlap_sequence(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentChildCellPairs)
{
	__resqml2__CellOverlap_sequence *_p = soap_new___resqml2__CellOverlap_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__resqml2__CellOverlap_sequence::Count = Count;
		_p->__resqml2__CellOverlap_sequence::ParentChildCellPairs = ParentChildCellPairs;
	}
	return _p;
}

inline __resqml2__CellOverlap_sequence * soap_new_set___resqml2__CellOverlap_sequence(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentChildCellPairs,
	resqml2__OverlapVolume *OverlapVolume)
{
	__resqml2__CellOverlap_sequence *_p = soap_new___resqml2__CellOverlap_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__resqml2__CellOverlap_sequence::Count = Count;
		_p->__resqml2__CellOverlap_sequence::ParentChildCellPairs = ParentChildCellPairs;
		_p->__resqml2__CellOverlap_sequence::OverlapVolume = OverlapVolume;
	}
	return _p;
}

inline int soap_write___resqml2__CellOverlap_sequence(struct soap *soap, __resqml2__CellOverlap_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-resqml2:CellOverlap-sequence", "-resqml2:CellOverlap-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __resqml2__CellOverlap_sequence * SOAP_FMAC4 soap_get___resqml2__CellOverlap_sequence(struct soap*, __resqml2__CellOverlap_sequence *, const char*, const char*);

inline int soap_read___resqml2__CellOverlap_sequence(struct soap *soap, __resqml2__CellOverlap_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___resqml2__CellOverlap_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml2__KGaps_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml2__KGaps_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___resqml2__KGaps_sequence(struct soap*, const char*, int, const __resqml2__KGaps_sequence *, const char*);
SOAP_FMAC3 __resqml2__KGaps_sequence * SOAP_FMAC4 soap_in___resqml2__KGaps_sequence(struct soap*, const char*, __resqml2__KGaps_sequence *, const char*);
SOAP_FMAC1 __resqml2__KGaps_sequence * SOAP_FMAC2 soap_instantiate___resqml2__KGaps_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __resqml2__KGaps_sequence * soap_new___resqml2__KGaps_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___resqml2__KGaps_sequence(soap, n, NULL, NULL, NULL);
}

inline __resqml2__KGaps_sequence * soap_new_req___resqml2__KGaps_sequence(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractBooleanArray *GapAfterLayer)
{
	__resqml2__KGaps_sequence *_p = soap_new___resqml2__KGaps_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__resqml2__KGaps_sequence::Count = Count;
		_p->__resqml2__KGaps_sequence::GapAfterLayer = GapAfterLayer;
	}
	return _p;
}

inline __resqml2__KGaps_sequence * soap_new_set___resqml2__KGaps_sequence(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractBooleanArray *GapAfterLayer)
{
	__resqml2__KGaps_sequence *_p = soap_new___resqml2__KGaps_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__resqml2__KGaps_sequence::Count = Count;
		_p->__resqml2__KGaps_sequence::GapAfterLayer = GapAfterLayer;
	}
	return _p;
}

inline int soap_write___resqml2__KGaps_sequence(struct soap *soap, __resqml2__KGaps_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-resqml2:KGaps-sequence", "-resqml2:KGaps-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __resqml2__KGaps_sequence * SOAP_FMAC4 soap_get___resqml2__KGaps_sequence(struct soap*, __resqml2__KGaps_sequence *, const char*, const char*);

inline int soap_read___resqml2__KGaps_sequence(struct soap *soap, __resqml2__KGaps_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___resqml2__KGaps_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1___resqml2__IjGaps_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1___resqml2__IjGaps_sequence_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out___resqml2__IjGaps_sequence(struct soap*, const char*, int, const __resqml2__IjGaps_sequence *, const char*);
SOAP_FMAC3 __resqml2__IjGaps_sequence * SOAP_FMAC4 soap_in___resqml2__IjGaps_sequence(struct soap*, const char*, __resqml2__IjGaps_sequence *, const char*);
SOAP_FMAC1 __resqml2__IjGaps_sequence * SOAP_FMAC2 soap_instantiate___resqml2__IjGaps_sequence(struct soap*, int, const char*, const char*, size_t*);

inline __resqml2__IjGaps_sequence * soap_new___resqml2__IjGaps_sequence(struct soap *soap, int n = -1)
{
	return soap_instantiate___resqml2__IjGaps_sequence(soap, n, NULL, NULL, NULL);
}

inline __resqml2__IjGaps_sequence * soap_new_req___resqml2__IjGaps_sequence(
	struct soap *soap,
	ULONG64 SplitPillarCount,
	resqml2__AbstractIntegerArray *ParentPillarIndices,
	resqml2__ResqmlJaggedArray *ColumnsPerSplitPillar)
{
	__resqml2__IjGaps_sequence *_p = soap_new___resqml2__IjGaps_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__resqml2__IjGaps_sequence::SplitPillarCount = SplitPillarCount;
		_p->__resqml2__IjGaps_sequence::ParentPillarIndices = ParentPillarIndices;
		_p->__resqml2__IjGaps_sequence::ColumnsPerSplitPillar = ColumnsPerSplitPillar;
	}
	return _p;
}

inline __resqml2__IjGaps_sequence * soap_new_set___resqml2__IjGaps_sequence(
	struct soap *soap,
	ULONG64 SplitPillarCount,
	resqml2__AbstractIntegerArray *ParentPillarIndices,
	resqml2__ResqmlJaggedArray *ColumnsPerSplitPillar,
	resqml2__IjSplitColumnEdges *IjSplitColumnEdges)
{
	__resqml2__IjGaps_sequence *_p = soap_new___resqml2__IjGaps_sequence(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->__resqml2__IjGaps_sequence::SplitPillarCount = SplitPillarCount;
		_p->__resqml2__IjGaps_sequence::ParentPillarIndices = ParentPillarIndices;
		_p->__resqml2__IjGaps_sequence::ColumnsPerSplitPillar = ColumnsPerSplitPillar;
		_p->__resqml2__IjGaps_sequence::IjSplitColumnEdges = IjSplitColumnEdges;
	}
	return _p;
}

inline int soap_write___resqml2__IjGaps_sequence(struct soap *soap, __resqml2__IjGaps_sequence const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "-resqml2:IjGaps-sequence", "-resqml2:IjGaps-sequence") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 __resqml2__IjGaps_sequence * SOAP_FMAC4 soap_get___resqml2__IjGaps_sequence(struct soap*, __resqml2__IjGaps_sequence *, const char*, const char*);

inline int soap_read___resqml2__IjGaps_sequence(struct soap *soap, __resqml2__IjGaps_sequence *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get___resqml2__IjGaps_sequence(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif
/* eml__CommentString is a typedef synonym for eml__MaximumLengthString */

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__CommentString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__CommentString_DEFINED

#define soap_default_eml__CommentString(soap, a) soap_default_eml__MaximumLengthString(soap, a)


#define soap_serialize_eml__CommentString soap_serialize_eml__MaximumLengthString


#define soap_eml__CommentString2s(soap, a) ((a).c_str())

#define soap_out_eml__CommentString soap_out_eml__MaximumLengthString


#define soap_s2eml__CommentString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 4000, NULL)

#define soap_in_eml__CommentString soap_in_eml__MaximumLengthString


#define soap_instantiate_eml__CommentString soap_instantiate_eml__MaximumLengthString


#define soap_new_eml__CommentString soap_new_eml__MaximumLengthString


#define soap_put_eml__CommentString soap_put_eml__MaximumLengthString


#define soap_write_eml__CommentString soap_write_eml__MaximumLengthString


#define soap_get_eml__CommentString soap_get_eml__MaximumLengthString


#define soap_read_eml__CommentString soap_read_eml__MaximumLengthString

#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__UomEnum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__UomEnum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__UomEnum(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml__UomEnum(struct soap*, const std::string *);

#define soap_eml__UomEnum2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__UomEnum(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml__UomEnum(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 32, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml__UomEnum(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml__UomEnum soap_instantiate_std__string


#define soap_new_eml__UomEnum soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__UomEnum(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml__UomEnum(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__UomEnum(soap, p, "eml:UomEnum", "eml:UomEnum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml__UomEnum(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml__UomEnum(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__UomEnum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MaximumLengthString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MaximumLengthString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__MaximumLengthString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml__MaximumLengthString(struct soap*, const std::string *);

#define soap_eml__MaximumLengthString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MaximumLengthString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml__MaximumLengthString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 4000, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml__MaximumLengthString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml__MaximumLengthString soap_instantiate_std__string


#define soap_new_eml__MaximumLengthString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__MaximumLengthString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml__MaximumLengthString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__MaximumLengthString(soap, p, "eml:MaximumLengthString", "eml:MaximumLengthString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml__MaximumLengthString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml__MaximumLengthString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__MaximumLengthString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__UidString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__UidString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__UidString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml__UidString(struct soap*, const std::string *);

#define soap_eml__UidString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__UidString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml__UidString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, "[^ ]*")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml__UidString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml__UidString soap_instantiate_std__string


#define soap_new_eml__UidString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__UidString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml__UidString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__UidString(soap, p, "eml:UidString", "eml:UidString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml__UidString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml__UidString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__UidString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__NameString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__NameString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__NameString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml__NameString(struct soap*, const std::string *);

#define soap_eml__NameString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__NameString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml__NameString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 64, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml__NameString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml__NameString soap_instantiate_std__string


#define soap_new_eml__NameString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__NameString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml__NameString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__NameString(soap, p, "eml:NameString", "eml:NameString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml__NameString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml__NameString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__NameString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TypeEnum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TypeEnum_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__TypeEnum(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml__TypeEnum(struct soap*, const std::string *);

#define soap_eml__TypeEnum2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TypeEnum(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml__TypeEnum(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 40, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml__TypeEnum(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml__TypeEnum soap_instantiate_std__string


#define soap_new_eml__TypeEnum soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__TypeEnum(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml__TypeEnum(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__TypeEnum(soap, p, "eml:TypeEnum", "eml:TypeEnum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml__TypeEnum(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml__TypeEnum(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__TypeEnum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DescriptionString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DescriptionString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__DescriptionString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml__DescriptionString(struct soap*, const std::string *);

#define soap_eml__DescriptionString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DescriptionString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml__DescriptionString(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, 256, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml__DescriptionString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml__DescriptionString soap_instantiate_std__string


#define soap_new_eml__DescriptionString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__DescriptionString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml__DescriptionString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__DescriptionString(soap, p, "eml:DescriptionString", "eml:DescriptionString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml__DescriptionString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml__DescriptionString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__DescriptionString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__UomURI_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__UomURI_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__UomURI(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__UomURI(struct soap*, const std::string *);

#define soap_gml__UomURI2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__UomURI(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__UomURI(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, "([a-zA-Z][a-zA-Z0-9\\-\\+\\.]*:|\\.\\./|\\./|#).*")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__UomURI(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__UomURI soap_instantiate_std__string


#define soap_new_gml__UomURI soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__UomURI(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__UomURI(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__UomURI(soap, p, "gml:UomURI", "gml:UomURI") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__UomURI(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__UomURI(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__UomURI(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__UomSymbol_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__UomSymbol_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__UomSymbol(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__UomSymbol(struct soap*, const std::string *);

#define soap_gml__UomSymbol2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__UomSymbol(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__UomSymbol(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, "[^: \\n\\r\\t]+")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__UomSymbol(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__UomSymbol soap_instantiate_std__string


#define soap_new_gml__UomSymbol soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__UomSymbol(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__UomSymbol(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__UomSymbol(soap, p, "gml:UomSymbol", "gml:UomSymbol") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__UomSymbol(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__UomSymbol(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__UomSymbol(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__String_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__String_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__String(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml__String(struct soap*, const std::string *);

#define soap_eml__String2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__String(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml__String(soap, s, a) soap_s2stdchar((soap), (s), (a), 1, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml__String(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml__String soap_instantiate_std__string


#define soap_new_eml__String soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__String(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml__String(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__String(soap, p, "eml:String", "eml:String") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml__String(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml__String(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__String(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__UuidString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__UuidString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_eml__UuidString(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_eml__UuidString(struct soap*, const std::string *);

#define soap_eml__UuidString2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__UuidString(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2eml__UuidString(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}")
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_eml__UuidString(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_eml__UuidString soap_instantiate_std__string


#define soap_new_eml__UuidString soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_eml__UuidString(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_eml__UuidString(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_eml__UuidString(soap, p, "eml:UuidString", "eml:UuidString") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_eml__UuidString(struct soap*, std::string *, const char*, const char*);

inline int soap_read_eml__UuidString(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_eml__UuidString(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gco__Date_USCOREType(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gco__Date_USCOREType(struct soap*, const std::string *);

#define soap_gco__Date_USCOREType2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__Date_USCOREType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gco__Date_USCOREType(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gco__Date_USCOREType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gco__Date_USCOREType soap_instantiate_std__string


#define soap_new_gco__Date_USCOREType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gco__Date_USCOREType(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gco__Date_USCOREType(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gco__Date_USCOREType(soap, p, "gco:Date_Type", "gco:Date_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gco__Date_USCOREType(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gco__Date_USCOREType(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gco__Date_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__UomIdentifier_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__UomIdentifier_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__UomIdentifier(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__UomIdentifier(struct soap*, const std::string *);

#define soap_gml__UomIdentifier2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__UomIdentifier(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__UomIdentifier(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__UomIdentifier(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__UomIdentifier soap_instantiate_std__string


#define soap_new_gml__UomIdentifier soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__UomIdentifier(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__UomIdentifier(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__UomIdentifier(soap, p, "gml:UomIdentifier", "gml:UomIdentifier") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__UomIdentifier(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__UomIdentifier(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__UomIdentifier(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonEnumeration_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonEnumeration_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__NilReasonEnumeration(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__NilReasonEnumeration(struct soap*, const std::string *);

#define soap_gml__NilReasonEnumeration2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__NilReasonEnumeration(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__NilReasonEnumeration(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__NilReasonEnumeration(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__NilReasonEnumeration soap_instantiate_std__string


#define soap_new_gml__NilReasonEnumeration soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__NilReasonEnumeration(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__NilReasonEnumeration(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__NilReasonEnumeration(soap, p, "gml:NilReasonEnumeration", "gml:NilReasonEnumeration") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__NilReasonEnumeration(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__NilReasonEnumeration(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__NilReasonEnumeration(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__NilReasonType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_gml__NilReasonType(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_gml__NilReasonType(struct soap*, const std::string *);

#define soap_gml__NilReasonType2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__NilReasonType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2gml__NilReasonType(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_gml__NilReasonType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_gml__NilReasonType soap_instantiate_std__string


#define soap_new_gml__NilReasonType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_gml__NilReasonType(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_gml__NilReasonType(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_gml__NilReasonType(soap, p, "gml:NilReasonType", "gml:NilReasonType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_gml__NilReasonType(struct soap*, std::string *, const char*, const char*);

inline int soap_read_gml__NilReasonType(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_gml__NilReasonType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__equivalentPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ptm__equivalentPropertyType(struct soap*, const char*, int, const ptm__equivalentPropertyType *, const char*);
SOAP_FMAC3 ptm__equivalentPropertyType * SOAP_FMAC4 soap_in_ptm__equivalentPropertyType(struct soap*, const char*, ptm__equivalentPropertyType *, const char*);
SOAP_FMAC1 ptm__equivalentPropertyType * SOAP_FMAC2 soap_instantiate_ptm__equivalentPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline ptm__equivalentPropertyType * soap_new_ptm__equivalentPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_ptm__equivalentPropertyType(soap, n, NULL, NULL, NULL);
}

inline ptm__equivalentPropertyType * soap_new_req_ptm__equivalentPropertyType(
	struct soap *soap,
	const std::string& name,
	const std::string& namingSystem)
{
	ptm__equivalentPropertyType *_p = soap_new_ptm__equivalentPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__equivalentPropertyType::name = name;
		_p->ptm__equivalentPropertyType::namingSystem = namingSystem;
	}
	return _p;
}

inline ptm__equivalentPropertyType * soap_new_set_ptm__equivalentPropertyType(
	struct soap *soap,
	const std::string& name,
	const std::string& namingSystem)
{
	ptm__equivalentPropertyType *_p = soap_new_ptm__equivalentPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__equivalentPropertyType::name = name;
		_p->ptm__equivalentPropertyType::namingSystem = namingSystem;
	}
	return _p;
}

inline int soap_write_ptm__equivalentPropertyType(struct soap *soap, ptm__equivalentPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:equivalentPropertyType", "ptm:equivalentPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ptm__equivalentPropertyType * SOAP_FMAC4 soap_get_ptm__equivalentPropertyType(struct soap*, ptm__equivalentPropertyType *, const char*, const char*);

inline int soap_read_ptm__equivalentPropertyType(struct soap *soap, ptm__equivalentPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_ptm__equivalentPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ptm__standardEnergisticsPropertyType(struct soap*, const char*, int, const ptm__standardEnergisticsPropertyType *, const char*);
SOAP_FMAC3 ptm__standardEnergisticsPropertyType * SOAP_FMAC4 soap_in_ptm__standardEnergisticsPropertyType(struct soap*, const char*, ptm__standardEnergisticsPropertyType *, const char*);
SOAP_FMAC1 ptm__standardEnergisticsPropertyType * SOAP_FMAC2 soap_instantiate_ptm__standardEnergisticsPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline ptm__standardEnergisticsPropertyType * soap_new_ptm__standardEnergisticsPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_ptm__standardEnergisticsPropertyType(soap, n, NULL, NULL, NULL);
}

inline ptm__standardEnergisticsPropertyType * soap_new_req_ptm__standardEnergisticsPropertyType(
	struct soap *soap,
	enum resqml2__ResqmlPropertyKind name)
{
	ptm__standardEnergisticsPropertyType *_p = soap_new_ptm__standardEnergisticsPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__standardEnergisticsPropertyType::name = name;
	}
	return _p;
}

inline ptm__standardEnergisticsPropertyType * soap_new_set_ptm__standardEnergisticsPropertyType(
	struct soap *soap,
	enum resqml2__ResqmlPropertyKind name,
	std::string *description,
	std::string *version,
	std::string *deprecated,
	std::string *replacedBy,
	bool *isAbstract,
	std::string *parentKind,
	const std::vector<ptm__equivalentPropertyType *> & equivalentPropertyType)
{
	ptm__standardEnergisticsPropertyType *_p = soap_new_ptm__standardEnergisticsPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__standardEnergisticsPropertyType::name = name;
		_p->ptm__standardEnergisticsPropertyType::description = description;
		_p->ptm__standardEnergisticsPropertyType::version = version;
		_p->ptm__standardEnergisticsPropertyType::deprecated = deprecated;
		_p->ptm__standardEnergisticsPropertyType::replacedBy = replacedBy;
		_p->ptm__standardEnergisticsPropertyType::isAbstract = isAbstract;
		_p->ptm__standardEnergisticsPropertyType::parentKind = parentKind;
		_p->ptm__standardEnergisticsPropertyType::equivalentPropertyType = equivalentPropertyType;
	}
	return _p;
}

inline int soap_write_ptm__standardEnergisticsPropertyType(struct soap *soap, ptm__standardEnergisticsPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyType", "ptm:standardEnergisticsPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ptm__standardEnergisticsPropertyType * SOAP_FMAC4 soap_get_ptm__standardEnergisticsPropertyType(struct soap*, ptm__standardEnergisticsPropertyType *, const char*, const char*);

inline int soap_read_ptm__standardEnergisticsPropertyType(struct soap *soap, ptm__standardEnergisticsPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_ptm__standardEnergisticsPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_ptm__standardEnergisticsPropertyTypeSet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ptm__standardEnergisticsPropertyTypeSet(struct soap*, const char*, int, const ptm__standardEnergisticsPropertyTypeSet *, const char*);
SOAP_FMAC3 ptm__standardEnergisticsPropertyTypeSet * SOAP_FMAC4 soap_in_ptm__standardEnergisticsPropertyTypeSet(struct soap*, const char*, ptm__standardEnergisticsPropertyTypeSet *, const char*);
SOAP_FMAC1 ptm__standardEnergisticsPropertyTypeSet * SOAP_FMAC2 soap_instantiate_ptm__standardEnergisticsPropertyTypeSet(struct soap*, int, const char*, const char*, size_t*);

inline ptm__standardEnergisticsPropertyTypeSet * soap_new_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, int n = -1)
{
	return soap_instantiate_ptm__standardEnergisticsPropertyTypeSet(soap, n, NULL, NULL, NULL);
}

inline ptm__standardEnergisticsPropertyTypeSet * soap_new_req_ptm__standardEnergisticsPropertyTypeSet(
	struct soap *soap,
	const std::vector<ptm__standardEnergisticsPropertyType *> & standardEnergisticsPropertyType)
{
	ptm__standardEnergisticsPropertyTypeSet *_p = soap_new_ptm__standardEnergisticsPropertyTypeSet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__standardEnergisticsPropertyTypeSet::standardEnergisticsPropertyType = standardEnergisticsPropertyType;
	}
	return _p;
}

inline ptm__standardEnergisticsPropertyTypeSet * soap_new_set_ptm__standardEnergisticsPropertyTypeSet(
	struct soap *soap,
	const std::vector<ptm__standardEnergisticsPropertyType *> & standardEnergisticsPropertyType)
{
	ptm__standardEnergisticsPropertyTypeSet *_p = soap_new_ptm__standardEnergisticsPropertyTypeSet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->ptm__standardEnergisticsPropertyTypeSet::standardEnergisticsPropertyType = standardEnergisticsPropertyType;
	}
	return _p;
}

inline int soap_write_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, ptm__standardEnergisticsPropertyTypeSet const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "ptm:standardEnergisticsPropertyTypeSet", "ptm:standardEnergisticsPropertyTypeSet") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 ptm__standardEnergisticsPropertyTypeSet * SOAP_FMAC4 soap_get_ptm__standardEnergisticsPropertyTypeSet(struct soap*, ptm__standardEnergisticsPropertyTypeSet *, const char*, const char*);

inline int soap_read_ptm__standardEnergisticsPropertyTypeSet(struct soap *soap, ptm__standardEnergisticsPropertyTypeSet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_ptm__standardEnergisticsPropertyTypeSet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gsr__SC_USCORECRS_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gsr__SC_USCORECRS_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, const char*, int, const gsr__SC_USCORECRS_USCOREPropertyType *, const char*);
SOAP_FMAC3 gsr__SC_USCORECRS_USCOREPropertyType * SOAP_FMAC4 soap_in_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, const char*, gsr__SC_USCORECRS_USCOREPropertyType *, const char*);
SOAP_FMAC1 gsr__SC_USCORECRS_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gsr__SC_USCORECRS_USCOREPropertyType * soap_new_gsr__SC_USCORECRS_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gsr__SC_USCORECRS_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gsr__SC_USCORECRS_USCOREPropertyType * soap_new_req_gsr__SC_USCORECRS_USCOREPropertyType(
	struct soap *soap)
{
	gsr__SC_USCORECRS_USCOREPropertyType *_p = soap_new_gsr__SC_USCORECRS_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gsr__SC_USCORECRS_USCOREPropertyType * soap_new_set_gsr__SC_USCORECRS_USCOREPropertyType(
	struct soap *soap,
	__gsr__SC_USCORECRS_USCOREPropertyType_sequence *__SC_USCORECRS_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gsr__SC_USCORECRS_USCOREPropertyType *_p = soap_new_gsr__SC_USCORECRS_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gsr__SC_USCORECRS_USCOREPropertyType::__SC_USCORECRS_USCOREPropertyType_sequence = __SC_USCORECRS_USCOREPropertyType_sequence;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::uuidref = uuidref;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__type = xlink__type;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__href = xlink__href;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__role = xlink__role;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__title = xlink__title;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__show = xlink__show;
		_p->gsr__SC_USCORECRS_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gsr__SC_USCORECRS_USCOREPropertyType(struct soap *soap, gsr__SC_USCORECRS_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gsr:SC_CRS_PropertyType", "gsr:SC_CRS_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gsr__SC_USCORECRS_USCOREPropertyType * SOAP_FMAC4 soap_get_gsr__SC_USCORECRS_USCOREPropertyType(struct soap*, gsr__SC_USCORECRS_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gsr__SC_USCORECRS_USCOREPropertyType(struct soap *soap, gsr__SC_USCORECRS_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gsr__SC_USCORECRS_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__DateTime_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__DateTime_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__DateTime_USCOREPropertyType(struct soap*, const char*, int, const gco__DateTime_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__DateTime_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__DateTime_USCOREPropertyType(struct soap*, const char*, gco__DateTime_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__DateTime_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__DateTime_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__DateTime_USCOREPropertyType * soap_new_gco__DateTime_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__DateTime_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__DateTime_USCOREPropertyType * soap_new_req_gco__DateTime_USCOREPropertyType(
	struct soap *soap)
{
	gco__DateTime_USCOREPropertyType *_p = soap_new_gco__DateTime_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__DateTime_USCOREPropertyType * soap_new_set_gco__DateTime_USCOREPropertyType(
	struct soap *soap,
	__gco__DateTime_USCOREPropertyType_sequence *__DateTime_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gco__DateTime_USCOREPropertyType *_p = soap_new_gco__DateTime_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__DateTime_USCOREPropertyType::__DateTime_USCOREPropertyType_sequence = __DateTime_USCOREPropertyType_sequence;
		_p->gco__DateTime_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__DateTime_USCOREPropertyType(struct soap *soap, gco__DateTime_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:DateTime_PropertyType", "gco:DateTime_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__DateTime_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__DateTime_USCOREPropertyType(struct soap*, gco__DateTime_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__DateTime_USCOREPropertyType(struct soap *soap, gco__DateTime_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__DateTime_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__CodeListValue_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__CodeListValue_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__CodeListValue_USCOREType(struct soap*, const char*, int, const gco__CodeListValue_USCOREType *, const char*);
SOAP_FMAC3 gco__CodeListValue_USCOREType * SOAP_FMAC4 soap_in_gco__CodeListValue_USCOREType(struct soap*, const char*, gco__CodeListValue_USCOREType *, const char*);
SOAP_FMAC1 gco__CodeListValue_USCOREType * SOAP_FMAC2 soap_instantiate_gco__CodeListValue_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gco__CodeListValue_USCOREType * soap_new_gco__CodeListValue_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__CodeListValue_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gco__CodeListValue_USCOREType * soap_new_req_gco__CodeListValue_USCOREType(
	struct soap *soap,
	const std::string& __item,
	const std::string& codeList,
	const std::string& codeListValue)
{
	gco__CodeListValue_USCOREType *_p = soap_new_gco__CodeListValue_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__CodeListValue_USCOREType::__item = __item;
		_p->gco__CodeListValue_USCOREType::codeList = codeList;
		_p->gco__CodeListValue_USCOREType::codeListValue = codeListValue;
	}
	return _p;
}

inline gco__CodeListValue_USCOREType * soap_new_set_gco__CodeListValue_USCOREType(
	struct soap *soap,
	const std::string& __item,
	const std::string& codeList,
	const std::string& codeListValue,
	std::string *codeSpace)
{
	gco__CodeListValue_USCOREType *_p = soap_new_gco__CodeListValue_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__CodeListValue_USCOREType::__item = __item;
		_p->gco__CodeListValue_USCOREType::codeList = codeList;
		_p->gco__CodeListValue_USCOREType::codeListValue = codeListValue;
		_p->gco__CodeListValue_USCOREType::codeSpace = codeSpace;
	}
	return _p;
}

inline int soap_write_gco__CodeListValue_USCOREType(struct soap *soap, gco__CodeListValue_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:CodeListValue_Type", "gco:CodeListValue_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__CodeListValue_USCOREType * SOAP_FMAC4 soap_get_gco__CodeListValue_USCOREType(struct soap*, gco__CodeListValue_USCOREType *, const char*, const char*);

inline int soap_read_gco__CodeListValue_USCOREType(struct soap *soap, gco__CodeListValue_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__CodeListValue_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Date_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__Date_USCOREPropertyType(struct soap*, const char*, int, const gco__Date_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__Date_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__Date_USCOREPropertyType(struct soap*, const char*, gco__Date_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__Date_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Date_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__Date_USCOREPropertyType * soap_new_gco__Date_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__Date_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__Date_USCOREPropertyType * soap_new_req_gco__Date_USCOREPropertyType(
	struct soap *soap,
	const union _gco__union_Date_USCOREPropertyType& union_Date_USCOREPropertyType)
{
	gco__Date_USCOREPropertyType *_p = soap_new_gco__Date_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__Date_USCOREPropertyType::union_Date_USCOREPropertyType = union_Date_USCOREPropertyType;
	}
	return _p;
}

inline gco__Date_USCOREPropertyType * soap_new_set_gco__Date_USCOREPropertyType(
	struct soap *soap,
	int __union_Date_USCOREPropertyType,
	const union _gco__union_Date_USCOREPropertyType& union_Date_USCOREPropertyType,
	std::string *gco__nilReason)
{
	gco__Date_USCOREPropertyType *_p = soap_new_gco__Date_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__Date_USCOREPropertyType::__union_Date_USCOREPropertyType = __union_Date_USCOREPropertyType;
		_p->gco__Date_USCOREPropertyType::union_Date_USCOREPropertyType = union_Date_USCOREPropertyType;
		_p->gco__Date_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__Date_USCOREPropertyType(struct soap *soap, gco__Date_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:Date_PropertyType", "gco:Date_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__Date_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__Date_USCOREPropertyType(struct soap*, gco__Date_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__Date_USCOREPropertyType(struct soap *soap, gco__Date_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__Date_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Real_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Real_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__Real_USCOREPropertyType(struct soap*, const char*, int, const gco__Real_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__Real_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__Real_USCOREPropertyType(struct soap*, const char*, gco__Real_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__Real_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Real_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__Real_USCOREPropertyType * soap_new_gco__Real_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__Real_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__Real_USCOREPropertyType * soap_new_req_gco__Real_USCOREPropertyType(
	struct soap *soap)
{
	gco__Real_USCOREPropertyType *_p = soap_new_gco__Real_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__Real_USCOREPropertyType * soap_new_set_gco__Real_USCOREPropertyType(
	struct soap *soap,
	__gco__Real_USCOREPropertyType_sequence *__Real_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gco__Real_USCOREPropertyType *_p = soap_new_gco__Real_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__Real_USCOREPropertyType::__Real_USCOREPropertyType_sequence = __Real_USCOREPropertyType_sequence;
		_p->gco__Real_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__Real_USCOREPropertyType(struct soap *soap, gco__Real_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:Real_PropertyType", "gco:Real_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__Real_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__Real_USCOREPropertyType(struct soap*, gco__Real_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__Real_USCOREPropertyType(struct soap *soap, gco__Real_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__Real_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__Boolean_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__Boolean_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__Boolean_USCOREPropertyType(struct soap*, const char*, int, const gco__Boolean_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__Boolean_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__Boolean_USCOREPropertyType(struct soap*, const char*, gco__Boolean_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__Boolean_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__Boolean_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__Boolean_USCOREPropertyType * soap_new_gco__Boolean_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__Boolean_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__Boolean_USCOREPropertyType * soap_new_req_gco__Boolean_USCOREPropertyType(
	struct soap *soap)
{
	gco__Boolean_USCOREPropertyType *_p = soap_new_gco__Boolean_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__Boolean_USCOREPropertyType * soap_new_set_gco__Boolean_USCOREPropertyType(
	struct soap *soap,
	__gco__Boolean_USCOREPropertyType_sequence *__Boolean_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gco__Boolean_USCOREPropertyType *_p = soap_new_gco__Boolean_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__Boolean_USCOREPropertyType::__Boolean_USCOREPropertyType_sequence = __Boolean_USCOREPropertyType_sequence;
		_p->gco__Boolean_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__Boolean_USCOREPropertyType(struct soap *soap, gco__Boolean_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:Boolean_PropertyType", "gco:Boolean_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__Boolean_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__Boolean_USCOREPropertyType(struct soap*, gco__Boolean_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__Boolean_USCOREPropertyType(struct soap *soap, gco__Boolean_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__Boolean_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__CharacterString_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__CharacterString_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__CharacterString_USCOREPropertyType(struct soap*, const char*, int, const gco__CharacterString_USCOREPropertyType *, const char*);
SOAP_FMAC3 gco__CharacterString_USCOREPropertyType * SOAP_FMAC4 soap_in_gco__CharacterString_USCOREPropertyType(struct soap*, const char*, gco__CharacterString_USCOREPropertyType *, const char*);
SOAP_FMAC1 gco__CharacterString_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gco__CharacterString_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gco__CharacterString_USCOREPropertyType * soap_new_gco__CharacterString_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__CharacterString_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gco__CharacterString_USCOREPropertyType * soap_new_req_gco__CharacterString_USCOREPropertyType(
	struct soap *soap)
{
	gco__CharacterString_USCOREPropertyType *_p = soap_new_gco__CharacterString_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__CharacterString_USCOREPropertyType * soap_new_set_gco__CharacterString_USCOREPropertyType(
	struct soap *soap,
	__gco__CharacterString_USCOREPropertyType_sequence *__CharacterString_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gco__CharacterString_USCOREPropertyType *_p = soap_new_gco__CharacterString_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__CharacterString_USCOREPropertyType::__CharacterString_USCOREPropertyType_sequence = __CharacterString_USCOREPropertyType_sequence;
		_p->gco__CharacterString_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gco__CharacterString_USCOREPropertyType(struct soap *soap, gco__CharacterString_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:CharacterString_PropertyType", "gco:CharacterString_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__CharacterString_USCOREPropertyType * SOAP_FMAC4 soap_get_gco__CharacterString_USCOREPropertyType(struct soap*, gco__CharacterString_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gco__CharacterString_USCOREPropertyType(struct soap *soap, gco__CharacterString_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__CharacterString_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gco__AbstractObject_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gco__AbstractObject_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gco__AbstractObject_USCOREType(struct soap*, const char*, int, const gco__AbstractObject_USCOREType *, const char*);
SOAP_FMAC3 gco__AbstractObject_USCOREType * SOAP_FMAC4 soap_in_gco__AbstractObject_USCOREType(struct soap*, const char*, gco__AbstractObject_USCOREType *, const char*);
SOAP_FMAC1 gco__AbstractObject_USCOREType * SOAP_FMAC2 soap_instantiate_gco__AbstractObject_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gco__AbstractObject_USCOREType * soap_new_gco__AbstractObject_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gco__AbstractObject_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gco__AbstractObject_USCOREType * soap_new_req_gco__AbstractObject_USCOREType(
	struct soap *soap)
{
	gco__AbstractObject_USCOREType *_p = soap_new_gco__AbstractObject_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gco__AbstractObject_USCOREType * soap_new_set_gco__AbstractObject_USCOREType(
	struct soap *soap,
	std::string *id,
	std::string *uuid)
{
	gco__AbstractObject_USCOREType *_p = soap_new_gco__AbstractObject_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__AbstractObject_USCOREType::id = id;
		_p->gco__AbstractObject_USCOREType::uuid = uuid;
	}
	return _p;
}

inline int soap_write_gco__AbstractObject_USCOREType(struct soap *soap, gco__AbstractObject_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gco:AbstractObject_Type", "gco:AbstractObject_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gco__AbstractObject_USCOREType * SOAP_FMAC4 soap_get_gco__AbstractObject_USCOREType(struct soap*, gco__AbstractObject_USCOREType *, const char*, const char*);

inline int soap_read_gco__AbstractObject_USCOREType(struct soap *soap, gco__AbstractObject_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gco__AbstractObject_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gts__TM_USCOREPrimitive_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gts__TM_USCOREPrimitive_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, const char*, int, const gts__TM_USCOREPrimitive_USCOREPropertyType *, const char*);
SOAP_FMAC3 gts__TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC4 soap_in_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, const char*, gts__TM_USCOREPrimitive_USCOREPropertyType *, const char*);
SOAP_FMAC1 gts__TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gts__TM_USCOREPrimitive_USCOREPropertyType * soap_new_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gts__TM_USCOREPrimitive_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gts__TM_USCOREPrimitive_USCOREPropertyType * soap_new_req_gts__TM_USCOREPrimitive_USCOREPropertyType(
	struct soap *soap)
{
	gts__TM_USCOREPrimitive_USCOREPropertyType *_p = soap_new_gts__TM_USCOREPrimitive_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gts__TM_USCOREPrimitive_USCOREPropertyType * soap_new_set_gts__TM_USCOREPrimitive_USCOREPropertyType(
	struct soap *soap,
	__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *__TM_USCOREPrimitive_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gts__TM_USCOREPrimitive_USCOREPropertyType *_p = soap_new_gts__TM_USCOREPrimitive_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::__TM_USCOREPrimitive_USCOREPropertyType_sequence = __TM_USCOREPrimitive_USCOREPropertyType_sequence;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::uuidref = uuidref;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__type = xlink__type;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__href = xlink__href;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__role = xlink__role;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__title = xlink__title;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__show = xlink__show;
		_p->gts__TM_USCOREPrimitive_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap *soap, gts__TM_USCOREPrimitive_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gts:TM_Primitive_PropertyType", "gts:TM_Primitive_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gts__TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC4 soap_get_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, gts__TM_USCOREPrimitive_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gts__TM_USCOREPrimitive_USCOREPropertyType(struct soap *soap, gts__TM_USCOREPrimitive_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gts__TM_USCOREPrimitive_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREResult_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREResult_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, const char*, int, const gmd__AbstractDQ_USCOREResult_USCOREType *, const char*);
SOAP_FMAC3 gmd__AbstractDQ_USCOREResult_USCOREType * SOAP_FMAC4 soap_in_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, const char*, gmd__AbstractDQ_USCOREResult_USCOREType *, const char*);
SOAP_FMAC1 gmd__AbstractDQ_USCOREResult_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__AbstractDQ_USCOREResult_USCOREType * soap_new_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__AbstractDQ_USCOREResult_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__AbstractDQ_USCOREResult_USCOREType * soap_new_req_gmd__AbstractDQ_USCOREResult_USCOREType(
	struct soap *soap)
{
	gmd__AbstractDQ_USCOREResult_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREResult_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__AbstractDQ_USCOREResult_USCOREType * soap_new_set_gmd__AbstractDQ_USCOREResult_USCOREType(
	struct soap *soap,
	std::string *id1,
	std::string *uuid1)
{
	gmd__AbstractDQ_USCOREResult_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREResult_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREResult_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:AbstractDQ_Result_Type", "gmd:AbstractDQ_Result_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__AbstractDQ_USCOREResult_USCOREType * SOAP_FMAC4 soap_get_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap*, gmd__AbstractDQ_USCOREResult_USCOREType *, const char*, const char*);

inline int soap_read_gmd__AbstractDQ_USCOREResult_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREResult_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__AbstractDQ_USCOREResult_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, int, const gmd__DQ_USCOREResult_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, gmd__DQ_USCOREResult_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__DQ_USCOREResult_USCOREPropertyType * soap_new_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__DQ_USCOREResult_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__DQ_USCOREResult_USCOREPropertyType * soap_new_req_gmd__DQ_USCOREResult_USCOREPropertyType(
	struct soap *soap)
{
	gmd__DQ_USCOREResult_USCOREPropertyType *_p = soap_new_gmd__DQ_USCOREResult_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__DQ_USCOREResult_USCOREPropertyType * soap_new_set_gmd__DQ_USCOREResult_USCOREPropertyType(
	struct soap *soap,
	__gmd__DQ_USCOREResult_USCOREPropertyType_sequence *__DQ_USCOREResult_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__DQ_USCOREResult_USCOREPropertyType *_p = soap_new_gmd__DQ_USCOREResult_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::__DQ_USCOREResult_USCOREPropertyType_sequence = __DQ_USCOREResult_USCOREPropertyType_sequence;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__DQ_USCOREResult_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap *soap, gmd__DQ_USCOREResult_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:DQ_Result_PropertyType", "gmd:DQ_Result_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, gmd__DQ_USCOREResult_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__DQ_USCOREResult_USCOREPropertyType(struct soap *soap, gmd__DQ_USCOREResult_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__DQ_USCOREResult_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, const char*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * soap_new_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * soap_new_req_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *_p = soap_new_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * soap_new_set_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *_p = soap_new_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType::__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence = __DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence;
		_p->gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap *soap, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:DQ_EvaluationMethodTypeCode_PropertyType", "gmd:DQ_EvaluationMethodTypeCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap *soap, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORESeries_USCOREType(struct soap*, const char*, int, const gmd__CI_USCORESeries_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCORESeries_USCOREType(struct soap*, const char*, gmd__CI_USCORESeries_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCORESeries_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORESeries_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORESeries_USCOREType * soap_new_gmd__CI_USCORESeries_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORESeries_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORESeries_USCOREType * soap_new_req_gmd__CI_USCORESeries_USCOREType(
	struct soap *soap)
{
	gmd__CI_USCORESeries_USCOREType *_p = soap_new_gmd__CI_USCORESeries_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORESeries_USCOREType * soap_new_set_gmd__CI_USCORESeries_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *name,
	gco__CharacterString_USCOREPropertyType *issueIdentification,
	gco__CharacterString_USCOREPropertyType *page,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCORESeries_USCOREType *_p = soap_new_gmd__CI_USCORESeries_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORESeries_USCOREType::name = name;
		_p->gmd__CI_USCORESeries_USCOREType::issueIdentification = issueIdentification;
		_p->gmd__CI_USCORESeries_USCOREType::page = page;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORESeries_USCOREType(struct soap *soap, gmd__CI_USCORESeries_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Series_Type", "gmd:CI_Series_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCORESeries_USCOREType(struct soap*, gmd__CI_USCORESeries_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORESeries_USCOREType(struct soap *soap, gmd__CI_USCORESeries_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORESeries_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORESeries_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCORESeries_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORESeries_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCORESeries_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORESeries_USCOREPropertyType * soap_new_gmd__CI_USCORESeries_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORESeries_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORESeries_USCOREPropertyType * soap_new_req_gmd__CI_USCORESeries_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCORESeries_USCOREPropertyType *_p = soap_new_gmd__CI_USCORESeries_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORESeries_USCOREPropertyType * soap_new_set_gmd__CI_USCORESeries_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCORESeries_USCOREPropertyType_sequence *__CI_USCORESeries_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCORESeries_USCOREPropertyType *_p = soap_new_gmd__CI_USCORESeries_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORESeries_USCOREPropertyType::__CI_USCORESeries_USCOREPropertyType_sequence = __CI_USCORESeries_USCOREPropertyType_sequence;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCORESeries_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORESeries_USCOREPropertyType(struct soap *soap, gmd__CI_USCORESeries_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Series_PropertyType", "gmd:CI_Series_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCORESeries_USCOREPropertyType(struct soap*, gmd__CI_USCORESeries_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORESeries_USCOREPropertyType(struct soap *soap, gmd__CI_USCORESeries_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORESeries_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * soap_new_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * soap_new_req_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * soap_new_set_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREPresentationFormCode_USCOREPropertyType::__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence = __CI_USCOREPresentationFormCode_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREPresentationFormCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_PresentationFormCode_PropertyType", "gmd:CI_PresentationFormCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORERoleCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORERoleCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCORERoleCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCORERoleCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORERoleCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCORERoleCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORERoleCode_USCOREPropertyType * soap_new_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORERoleCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORERoleCode_USCOREPropertyType * soap_new_req_gmd__CI_USCORERoleCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCORERoleCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCORERoleCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORERoleCode_USCOREPropertyType * soap_new_set_gmd__CI_USCORERoleCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *__CI_USCORERoleCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__CI_USCORERoleCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCORERoleCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORERoleCode_USCOREPropertyType::__CI_USCORERoleCode_USCOREPropertyType_sequence = __CI_USCORERoleCode_USCOREPropertyType_sequence;
		_p->gmd__CI_USCORERoleCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCORERoleCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_RoleCode_PropertyType", "gmd:CI_RoleCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORERoleCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, gmd__CI_USCORERoleCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORERoleCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCORERoleCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORERoleCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * soap_new_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * soap_new_req_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * soap_new_set_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType::__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence = __CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_OnLineFunctionCode_PropertyType", "gmd:CI_OnLineFunctionCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__URL_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__URL_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__URL_USCOREPropertyType(struct soap*, const char*, int, const gmd__URL_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__URL_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__URL_USCOREPropertyType(struct soap*, const char*, gmd__URL_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__URL_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__URL_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__URL_USCOREPropertyType * soap_new_gmd__URL_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__URL_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__URL_USCOREPropertyType * soap_new_req_gmd__URL_USCOREPropertyType(
	struct soap *soap)
{
	gmd__URL_USCOREPropertyType *_p = soap_new_gmd__URL_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__URL_USCOREPropertyType * soap_new_set_gmd__URL_USCOREPropertyType(
	struct soap *soap,
	__gmd__URL_USCOREPropertyType_sequence *__URL_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__URL_USCOREPropertyType *_p = soap_new_gmd__URL_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__URL_USCOREPropertyType::__URL_USCOREPropertyType_sequence = __URL_USCOREPropertyType_sequence;
		_p->gmd__URL_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__URL_USCOREPropertyType(struct soap *soap, gmd__URL_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:URL_PropertyType", "gmd:URL_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__URL_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__URL_USCOREPropertyType(struct soap*, gmd__URL_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__URL_USCOREPropertyType(struct soap *soap, gmd__URL_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__URL_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREOnlineResource_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, const char*, gmd__CI_USCOREOnlineResource_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREOnlineResource_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREOnlineResource_USCOREType * soap_new_gmd__CI_USCOREOnlineResource_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREOnlineResource_USCOREType * soap_new_req_gmd__CI_USCOREOnlineResource_USCOREType(
	struct soap *soap,
	gmd__URL_USCOREPropertyType *linkage)
{
	gmd__CI_USCOREOnlineResource_USCOREType *_p = soap_new_gmd__CI_USCOREOnlineResource_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREOnlineResource_USCOREType::linkage = linkage;
	}
	return _p;
}

inline gmd__CI_USCOREOnlineResource_USCOREType * soap_new_set_gmd__CI_USCOREOnlineResource_USCOREType(
	struct soap *soap,
	gmd__URL_USCOREPropertyType *linkage,
	gco__CharacterString_USCOREPropertyType *protocol,
	gco__CharacterString_USCOREPropertyType *applicationProfile,
	gco__CharacterString_USCOREPropertyType *name,
	gco__CharacterString_USCOREPropertyType *description,
	gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *function,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREOnlineResource_USCOREType *_p = soap_new_gmd__CI_USCOREOnlineResource_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREOnlineResource_USCOREType::linkage = linkage;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::protocol = protocol;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::applicationProfile = applicationProfile;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::name = name;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::description = description;
		_p->gmd__CI_USCOREOnlineResource_USCOREType::function = function;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREOnlineResource_USCOREType(struct soap *soap, gmd__CI_USCOREOnlineResource_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_OnlineResource_Type", "gmd:CI_OnlineResource_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREOnlineResource_USCOREType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREOnlineResource_USCOREType(struct soap *soap, gmd__CI_USCOREOnlineResource_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREOnlineResource_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREOnlineResource_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREOnlineResource_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREOnlineResource_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREOnlineResource_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREOnlineResource_USCOREPropertyType * soap_new_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREOnlineResource_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREOnlineResource_USCOREPropertyType * soap_new_req_gmd__CI_USCOREOnlineResource_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREOnlineResource_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREOnlineResource_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREOnlineResource_USCOREPropertyType * soap_new_set_gmd__CI_USCOREOnlineResource_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *__CI_USCOREOnlineResource_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREOnlineResource_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREOnlineResource_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::__CI_USCOREOnlineResource_USCOREPropertyType_sequence = __CI_USCOREOnlineResource_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREOnlineResource_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREOnlineResource_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_OnlineResource_PropertyType", "gmd:CI_OnlineResource_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREOnlineResource_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREOnlineResource_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREAddress_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREAddress_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREAddress_USCOREType(struct soap*, const char*, gmd__CI_USCOREAddress_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREAddress_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREAddress_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREAddress_USCOREType * soap_new_gmd__CI_USCOREAddress_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREAddress_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREAddress_USCOREType * soap_new_req_gmd__CI_USCOREAddress_USCOREType(
	struct soap *soap)
{
	gmd__CI_USCOREAddress_USCOREType *_p = soap_new_gmd__CI_USCOREAddress_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREAddress_USCOREType * soap_new_set_gmd__CI_USCOREAddress_USCOREType(
	struct soap *soap,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & deliveryPoint,
	gco__CharacterString_USCOREPropertyType *city,
	gco__CharacterString_USCOREPropertyType *administrativeArea,
	gco__CharacterString_USCOREPropertyType *postalCode,
	gco__CharacterString_USCOREPropertyType *country,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & electronicMailAddress,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREAddress_USCOREType *_p = soap_new_gmd__CI_USCOREAddress_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREAddress_USCOREType::deliveryPoint = deliveryPoint;
		_p->gmd__CI_USCOREAddress_USCOREType::city = city;
		_p->gmd__CI_USCOREAddress_USCOREType::administrativeArea = administrativeArea;
		_p->gmd__CI_USCOREAddress_USCOREType::postalCode = postalCode;
		_p->gmd__CI_USCOREAddress_USCOREType::country = country;
		_p->gmd__CI_USCOREAddress_USCOREType::electronicMailAddress = electronicMailAddress;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREAddress_USCOREType(struct soap *soap, gmd__CI_USCOREAddress_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Address_Type", "gmd:CI_Address_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREAddress_USCOREType(struct soap*, gmd__CI_USCOREAddress_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREAddress_USCOREType(struct soap *soap, gmd__CI_USCOREAddress_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREAddress_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREAddress_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREAddress_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREAddress_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREAddress_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREAddress_USCOREPropertyType * soap_new_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREAddress_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREAddress_USCOREPropertyType * soap_new_req_gmd__CI_USCOREAddress_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREAddress_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREAddress_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREAddress_USCOREPropertyType * soap_new_set_gmd__CI_USCOREAddress_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREAddress_USCOREPropertyType_sequence *__CI_USCOREAddress_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREAddress_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREAddress_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::__CI_USCOREAddress_USCOREPropertyType_sequence = __CI_USCOREAddress_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREAddress_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREAddress_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Address_PropertyType", "gmd:CI_Address_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, gmd__CI_USCOREAddress_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREAddress_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREAddress_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREAddress_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORETelephone_USCOREType(struct soap*, const char*, int, const gmd__CI_USCORETelephone_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCORETelephone_USCOREType(struct soap*, const char*, gmd__CI_USCORETelephone_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCORETelephone_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORETelephone_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORETelephone_USCOREType * soap_new_gmd__CI_USCORETelephone_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORETelephone_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORETelephone_USCOREType * soap_new_req_gmd__CI_USCORETelephone_USCOREType(
	struct soap *soap)
{
	gmd__CI_USCORETelephone_USCOREType *_p = soap_new_gmd__CI_USCORETelephone_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORETelephone_USCOREType * soap_new_set_gmd__CI_USCORETelephone_USCOREType(
	struct soap *soap,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & voice,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & facsimile,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCORETelephone_USCOREType *_p = soap_new_gmd__CI_USCORETelephone_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORETelephone_USCOREType::voice = voice;
		_p->gmd__CI_USCORETelephone_USCOREType::facsimile = facsimile;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORETelephone_USCOREType(struct soap *soap, gmd__CI_USCORETelephone_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Telephone_Type", "gmd:CI_Telephone_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCORETelephone_USCOREType(struct soap*, gmd__CI_USCORETelephone_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORETelephone_USCOREType(struct soap *soap, gmd__CI_USCORETelephone_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORETelephone_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORETelephone_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCORETelephone_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORETelephone_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCORETelephone_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORETelephone_USCOREPropertyType * soap_new_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORETelephone_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORETelephone_USCOREPropertyType * soap_new_req_gmd__CI_USCORETelephone_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCORETelephone_USCOREPropertyType *_p = soap_new_gmd__CI_USCORETelephone_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORETelephone_USCOREPropertyType * soap_new_set_gmd__CI_USCORETelephone_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCORETelephone_USCOREPropertyType_sequence *__CI_USCORETelephone_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCORETelephone_USCOREPropertyType *_p = soap_new_gmd__CI_USCORETelephone_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::__CI_USCORETelephone_USCOREPropertyType_sequence = __CI_USCORETelephone_USCOREPropertyType_sequence;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCORETelephone_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap *soap, gmd__CI_USCORETelephone_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Telephone_PropertyType", "gmd:CI_Telephone_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, gmd__CI_USCORETelephone_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORETelephone_USCOREPropertyType(struct soap *soap, gmd__CI_USCORETelephone_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORETelephone_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREContact_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREContact_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREContact_USCOREType(struct soap*, const char*, gmd__CI_USCOREContact_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREContact_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREContact_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREContact_USCOREType * soap_new_gmd__CI_USCOREContact_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREContact_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREContact_USCOREType * soap_new_req_gmd__CI_USCOREContact_USCOREType(
	struct soap *soap)
{
	gmd__CI_USCOREContact_USCOREType *_p = soap_new_gmd__CI_USCOREContact_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREContact_USCOREType * soap_new_set_gmd__CI_USCOREContact_USCOREType(
	struct soap *soap,
	gmd__CI_USCORETelephone_USCOREPropertyType *phone,
	gmd__CI_USCOREAddress_USCOREPropertyType *address,
	gmd__CI_USCOREOnlineResource_USCOREPropertyType *onlineResource,
	gco__CharacterString_USCOREPropertyType *hoursOfService,
	gco__CharacterString_USCOREPropertyType *contactInstructions,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREContact_USCOREType *_p = soap_new_gmd__CI_USCOREContact_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREContact_USCOREType::phone = phone;
		_p->gmd__CI_USCOREContact_USCOREType::address = address;
		_p->gmd__CI_USCOREContact_USCOREType::onlineResource = onlineResource;
		_p->gmd__CI_USCOREContact_USCOREType::hoursOfService = hoursOfService;
		_p->gmd__CI_USCOREContact_USCOREType::contactInstructions = contactInstructions;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREContact_USCOREType(struct soap *soap, gmd__CI_USCOREContact_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Contact_Type", "gmd:CI_Contact_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREContact_USCOREType(struct soap*, gmd__CI_USCOREContact_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREContact_USCOREType(struct soap *soap, gmd__CI_USCOREContact_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREContact_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREContact_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREContact_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREContact_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREContact_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREContact_USCOREPropertyType * soap_new_gmd__CI_USCOREContact_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREContact_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREContact_USCOREPropertyType * soap_new_req_gmd__CI_USCOREContact_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREContact_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREContact_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREContact_USCOREPropertyType * soap_new_set_gmd__CI_USCOREContact_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREContact_USCOREPropertyType_sequence *__CI_USCOREContact_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREContact_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREContact_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREContact_USCOREPropertyType::__CI_USCOREContact_USCOREPropertyType_sequence = __CI_USCOREContact_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREContact_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREContact_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREContact_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Contact_PropertyType", "gmd:CI_Contact_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREContact_USCOREPropertyType(struct soap*, gmd__CI_USCOREContact_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREContact_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREContact_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREContact_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREResponsibleParty_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, const char*, gmd__CI_USCOREResponsibleParty_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREResponsibleParty_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREResponsibleParty_USCOREType * soap_new_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREResponsibleParty_USCOREType * soap_new_req_gmd__CI_USCOREResponsibleParty_USCOREType(
	struct soap *soap,
	gmd__CI_USCORERoleCode_USCOREPropertyType *role)
{
	gmd__CI_USCOREResponsibleParty_USCOREType *_p = soap_new_gmd__CI_USCOREResponsibleParty_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::role = role;
	}
	return _p;
}

inline gmd__CI_USCOREResponsibleParty_USCOREType * soap_new_set_gmd__CI_USCOREResponsibleParty_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *individualName,
	gco__CharacterString_USCOREPropertyType *organisationName,
	gco__CharacterString_USCOREPropertyType *positionName,
	gmd__CI_USCOREContact_USCOREPropertyType *contactInfo,
	gmd__CI_USCORERoleCode_USCOREPropertyType *role,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREResponsibleParty_USCOREType *_p = soap_new_gmd__CI_USCOREResponsibleParty_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::individualName = individualName;
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::organisationName = organisationName;
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::positionName = positionName;
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::contactInfo = contactInfo;
		_p->gmd__CI_USCOREResponsibleParty_USCOREType::role = role;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap *soap, gmd__CI_USCOREResponsibleParty_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_ResponsibleParty_Type", "gmd:CI_ResponsibleParty_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREResponsibleParty_USCOREType(struct soap *soap, gmd__CI_USCOREResponsibleParty_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREResponsibleParty_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREResponsibleParty_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREResponsibleParty_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREResponsibleParty_USCOREPropertyType * soap_new_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREResponsibleParty_USCOREPropertyType * soap_new_req_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREResponsibleParty_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREResponsibleParty_USCOREPropertyType * soap_new_set_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *__CI_USCOREResponsibleParty_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREResponsibleParty_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::__CI_USCOREResponsibleParty_USCOREPropertyType_sequence = __CI_USCOREResponsibleParty_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREResponsibleParty_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREResponsibleParty_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_ResponsibleParty_PropertyType", "gmd:CI_ResponsibleParty_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDateTypeCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREDateTypeCode_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREDateTypeCode_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREDateTypeCode_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREDateTypeCode_USCOREPropertyType * soap_new_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREDateTypeCode_USCOREPropertyType * soap_new_req_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREDateTypeCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREDateTypeCode_USCOREPropertyType * soap_new_set_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *__CI_USCOREDateTypeCode_USCOREPropertyType_sequence,
	std::string *gco__nilReason)
{
	gmd__CI_USCOREDateTypeCode_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREDateTypeCode_USCOREPropertyType::__CI_USCOREDateTypeCode_USCOREPropertyType_sequence = __CI_USCOREDateTypeCode_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREDateTypeCode_USCOREPropertyType::gco__nilReason = gco__nilReason;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREDateTypeCode_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_DateTypeCode_PropertyType", "gmd:CI_DateTypeCode_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREDateTypeCode_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREDateTypeCode_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREDate_USCOREType(struct soap*, const char*, int, const gmd__CI_USCOREDate_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCOREDate_USCOREType(struct soap*, const char*, gmd__CI_USCOREDate_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREDate_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDate_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREDate_USCOREType * soap_new_gmd__CI_USCOREDate_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREDate_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREDate_USCOREType * soap_new_req_gmd__CI_USCOREDate_USCOREType(
	struct soap *soap,
	gco__Date_USCOREPropertyType *date,
	gmd__CI_USCOREDateTypeCode_USCOREPropertyType *dateType)
{
	gmd__CI_USCOREDate_USCOREType *_p = soap_new_gmd__CI_USCOREDate_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREDate_USCOREType::date = date;
		_p->gmd__CI_USCOREDate_USCOREType::dateType = dateType;
	}
	return _p;
}

inline gmd__CI_USCOREDate_USCOREType * soap_new_set_gmd__CI_USCOREDate_USCOREType(
	struct soap *soap,
	gco__Date_USCOREPropertyType *date,
	gmd__CI_USCOREDateTypeCode_USCOREPropertyType *dateType,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCOREDate_USCOREType *_p = soap_new_gmd__CI_USCOREDate_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREDate_USCOREType::date = date;
		_p->gmd__CI_USCOREDate_USCOREType::dateType = dateType;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREDate_USCOREType(struct soap *soap, gmd__CI_USCOREDate_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Date_Type", "gmd:CI_Date_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCOREDate_USCOREType(struct soap*, gmd__CI_USCOREDate_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREDate_USCOREType(struct soap *soap, gmd__CI_USCOREDate_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREDate_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCOREDate_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCOREDate_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREDate_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCOREDate_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCOREDate_USCOREPropertyType * soap_new_gmd__CI_USCOREDate_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCOREDate_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCOREDate_USCOREPropertyType * soap_new_req_gmd__CI_USCOREDate_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCOREDate_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREDate_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCOREDate_USCOREPropertyType * soap_new_set_gmd__CI_USCOREDate_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCOREDate_USCOREPropertyType_sequence *__CI_USCOREDate_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCOREDate_USCOREPropertyType *_p = soap_new_gmd__CI_USCOREDate_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCOREDate_USCOREPropertyType::__CI_USCOREDate_USCOREPropertyType_sequence = __CI_USCOREDate_USCOREPropertyType_sequence;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCOREDate_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCOREDate_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREDate_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Date_PropertyType", "gmd:CI_Date_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCOREDate_USCOREPropertyType(struct soap*, gmd__CI_USCOREDate_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCOREDate_USCOREPropertyType(struct soap *soap, gmd__CI_USCOREDate_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCOREDate_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORECitation_USCOREType(struct soap*, const char*, int, const gmd__CI_USCORECitation_USCOREType *, const char*);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREType * SOAP_FMAC4 soap_in_gmd__CI_USCORECitation_USCOREType(struct soap*, const char*, gmd__CI_USCORECitation_USCOREType *, const char*);
SOAP_FMAC1 gmd__CI_USCORECitation_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORECitation_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORECitation_USCOREType * soap_new_gmd__CI_USCORECitation_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORECitation_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORECitation_USCOREType * soap_new_req_gmd__CI_USCORECitation_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *title,
	const std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> & date)
{
	gmd__CI_USCORECitation_USCOREType *_p = soap_new_gmd__CI_USCORECitation_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORECitation_USCOREType::title = title;
		_p->gmd__CI_USCORECitation_USCOREType::date = date;
	}
	return _p;
}

inline gmd__CI_USCORECitation_USCOREType * soap_new_set_gmd__CI_USCORECitation_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *title,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & alternateTitle,
	const std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> & date,
	gco__CharacterString_USCOREPropertyType *edition,
	gco__Date_USCOREPropertyType *editionDate,
	const std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> & identifier,
	const std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> & citedResponsibleParty,
	const std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> & presentationForm,
	gmd__CI_USCORESeries_USCOREPropertyType *series,
	gco__CharacterString_USCOREPropertyType *otherCitationDetails,
	gco__CharacterString_USCOREPropertyType *collectiveTitle,
	gco__CharacterString_USCOREPropertyType *ISBN,
	gco__CharacterString_USCOREPropertyType *ISSN,
	std::string *id1,
	std::string *uuid1)
{
	gmd__CI_USCORECitation_USCOREType *_p = soap_new_gmd__CI_USCORECitation_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORECitation_USCOREType::title = title;
		_p->gmd__CI_USCORECitation_USCOREType::alternateTitle = alternateTitle;
		_p->gmd__CI_USCORECitation_USCOREType::date = date;
		_p->gmd__CI_USCORECitation_USCOREType::edition = edition;
		_p->gmd__CI_USCORECitation_USCOREType::editionDate = editionDate;
		_p->gmd__CI_USCORECitation_USCOREType::identifier = identifier;
		_p->gmd__CI_USCORECitation_USCOREType::citedResponsibleParty = citedResponsibleParty;
		_p->gmd__CI_USCORECitation_USCOREType::presentationForm = presentationForm;
		_p->gmd__CI_USCORECitation_USCOREType::series = series;
		_p->gmd__CI_USCORECitation_USCOREType::otherCitationDetails = otherCitationDetails;
		_p->gmd__CI_USCORECitation_USCOREType::collectiveTitle = collectiveTitle;
		_p->gmd__CI_USCORECitation_USCOREType::ISBN = ISBN;
		_p->gmd__CI_USCORECitation_USCOREType::ISSN = ISSN;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORECitation_USCOREType(struct soap *soap, gmd__CI_USCORECitation_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Citation_Type", "gmd:CI_Citation_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREType * SOAP_FMAC4 soap_get_gmd__CI_USCORECitation_USCOREType(struct soap*, gmd__CI_USCORECitation_USCOREType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORECitation_USCOREType(struct soap *soap, gmd__CI_USCORECitation_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORECitation_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__CI_USCORECitation_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, const char*, int, const gmd__CI_USCORECitation_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORECitation_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__CI_USCORECitation_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__CI_USCORECitation_USCOREPropertyType * soap_new_gmd__CI_USCORECitation_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__CI_USCORECitation_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__CI_USCORECitation_USCOREPropertyType * soap_new_req_gmd__CI_USCORECitation_USCOREPropertyType(
	struct soap *soap)
{
	gmd__CI_USCORECitation_USCOREPropertyType *_p = soap_new_gmd__CI_USCORECitation_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__CI_USCORECitation_USCOREPropertyType * soap_new_set_gmd__CI_USCORECitation_USCOREPropertyType(
	struct soap *soap,
	__gmd__CI_USCORECitation_USCOREPropertyType_sequence *__CI_USCORECitation_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__CI_USCORECitation_USCOREPropertyType *_p = soap_new_gmd__CI_USCORECitation_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__CI_USCORECitation_USCOREPropertyType::__CI_USCORECitation_USCOREPropertyType_sequence = __CI_USCORECitation_USCOREPropertyType_sequence;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__CI_USCORECitation_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__CI_USCORECitation_USCOREPropertyType(struct soap *soap, gmd__CI_USCORECitation_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:CI_Citation_PropertyType", "gmd:CI_Citation_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__CI_USCORECitation_USCOREPropertyType(struct soap*, gmd__CI_USCORECitation_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__CI_USCORECitation_USCOREPropertyType(struct soap *soap, gmd__CI_USCORECitation_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__CI_USCORECitation_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, const char*, int, const gmd__MD_USCOREIdentifier_USCOREType *, const char*);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREType * SOAP_FMAC4 soap_in_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, const char*, gmd__MD_USCOREIdentifier_USCOREType *, const char*);
SOAP_FMAC1 gmd__MD_USCOREIdentifier_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__MD_USCOREIdentifier_USCOREType * soap_new_gmd__MD_USCOREIdentifier_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__MD_USCOREIdentifier_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__MD_USCOREIdentifier_USCOREType * soap_new_req_gmd__MD_USCOREIdentifier_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *code)
{
	gmd__MD_USCOREIdentifier_USCOREType *_p = soap_new_gmd__MD_USCOREIdentifier_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__MD_USCOREIdentifier_USCOREType::code = code;
	}
	return _p;
}

inline gmd__MD_USCOREIdentifier_USCOREType * soap_new_set_gmd__MD_USCOREIdentifier_USCOREType(
	struct soap *soap,
	gmd__CI_USCORECitation_USCOREPropertyType *authority,
	gco__CharacterString_USCOREPropertyType *code,
	std::string *id1,
	std::string *uuid1)
{
	gmd__MD_USCOREIdentifier_USCOREType *_p = soap_new_gmd__MD_USCOREIdentifier_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__MD_USCOREIdentifier_USCOREType::authority = authority;
		_p->gmd__MD_USCOREIdentifier_USCOREType::code = code;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__MD_USCOREIdentifier_USCOREType(struct soap *soap, gmd__MD_USCOREIdentifier_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:MD_Identifier_Type", "gmd:MD_Identifier_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREType * SOAP_FMAC4 soap_get_gmd__MD_USCOREIdentifier_USCOREType(struct soap*, gmd__MD_USCOREIdentifier_USCOREType *, const char*, const char*);

inline int soap_read_gmd__MD_USCOREIdentifier_USCOREType(struct soap *soap, gmd__MD_USCOREIdentifier_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__MD_USCOREIdentifier_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, int, const gmd__MD_USCOREIdentifier_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, gmd__MD_USCOREIdentifier_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__MD_USCOREIdentifier_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__MD_USCOREIdentifier_USCOREPropertyType * soap_new_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__MD_USCOREIdentifier_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__MD_USCOREIdentifier_USCOREPropertyType * soap_new_req_gmd__MD_USCOREIdentifier_USCOREPropertyType(
	struct soap *soap)
{
	gmd__MD_USCOREIdentifier_USCOREPropertyType *_p = soap_new_gmd__MD_USCOREIdentifier_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__MD_USCOREIdentifier_USCOREPropertyType * soap_new_set_gmd__MD_USCOREIdentifier_USCOREPropertyType(
	struct soap *soap,
	__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *__MD_USCOREIdentifier_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__MD_USCOREIdentifier_USCOREPropertyType *_p = soap_new_gmd__MD_USCOREIdentifier_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::__MD_USCOREIdentifier_USCOREPropertyType_sequence = __MD_USCOREIdentifier_USCOREPropertyType_sequence;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__MD_USCOREIdentifier_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap *soap, gmd__MD_USCOREIdentifier_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:MD_Identifier_PropertyType", "gmd:MD_Identifier_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, gmd__MD_USCOREIdentifier_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap *soap, gmd__MD_USCOREIdentifier_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__MD_USCOREIdentifier_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREElement_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREElement_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, const char*, int, const gmd__AbstractDQ_USCOREElement_USCOREType *, const char*);
SOAP_FMAC3 gmd__AbstractDQ_USCOREElement_USCOREType * SOAP_FMAC4 soap_in_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, const char*, gmd__AbstractDQ_USCOREElement_USCOREType *, const char*);
SOAP_FMAC1 gmd__AbstractDQ_USCOREElement_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__AbstractDQ_USCOREElement_USCOREType * soap_new_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__AbstractDQ_USCOREElement_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__AbstractDQ_USCOREElement_USCOREType * soap_new_req_gmd__AbstractDQ_USCOREElement_USCOREType(
	struct soap *soap,
	const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> & result)
{
	gmd__AbstractDQ_USCOREElement_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREElement_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::result = result;
	}
	return _p;
}

inline gmd__AbstractDQ_USCOREElement_USCOREType * soap_new_set_gmd__AbstractDQ_USCOREElement_USCOREType(
	struct soap *soap,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & nameOfMeasure,
	gmd__MD_USCOREIdentifier_USCOREPropertyType *measureIdentification,
	gco__CharacterString_USCOREPropertyType *measureDescription,
	gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *evaluationMethodType,
	gco__CharacterString_USCOREPropertyType *evaluationMethodDescription,
	gmd__CI_USCORECitation_USCOREPropertyType *evaluationProcedure,
	const std::vector<gco__DateTime_USCOREPropertyType *> & dateTime,
	const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> & result,
	std::string *id1,
	std::string *uuid1)
{
	gmd__AbstractDQ_USCOREElement_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREElement_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::nameOfMeasure = nameOfMeasure;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::measureIdentification = measureIdentification;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::measureDescription = measureDescription;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationMethodType = evaluationMethodType;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationMethodDescription = evaluationMethodDescription;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationProcedure = evaluationProcedure;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::dateTime = dateTime;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::result = result;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREElement_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:AbstractDQ_Element_Type", "gmd:AbstractDQ_Element_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__AbstractDQ_USCOREElement_USCOREType * SOAP_FMAC4 soap_get_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap*, gmd__AbstractDQ_USCOREElement_USCOREType *, const char*, const char*);

inline int soap_read_gmd__AbstractDQ_USCOREElement_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREElement_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__AbstractDQ_USCOREElement_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, const char*, int, const gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *, const char*);
SOAP_FMAC3 gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * SOAP_FMAC4 soap_in_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, const char*, gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *, const char*);
SOAP_FMAC1 gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * soap_new_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * soap_new_req_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(
	struct soap *soap,
	const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> & result1)
{
	gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::result = result1;
	}
	return _p;
}

inline gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * soap_new_set_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(
	struct soap *soap,
	const std::vector<gco__CharacterString_USCOREPropertyType *> & nameOfMeasure1,
	gmd__MD_USCOREIdentifier_USCOREPropertyType *measureIdentification1,
	gco__CharacterString_USCOREPropertyType *measureDescription1,
	gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *evaluationMethodType1,
	gco__CharacterString_USCOREPropertyType *evaluationMethodDescription1,
	gmd__CI_USCORECitation_USCOREPropertyType *evaluationProcedure1,
	const std::vector<gco__DateTime_USCOREPropertyType *> & dateTime1,
	const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> & result1,
	std::string *id2,
	std::string *uuid2)
{
	gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *_p = soap_new_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::nameOfMeasure = nameOfMeasure1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::measureIdentification = measureIdentification1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::measureDescription = measureDescription1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationMethodType = evaluationMethodType1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationMethodDescription = evaluationMethodDescription1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::evaluationProcedure = evaluationProcedure1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::dateTime = dateTime1;
		_p->gmd__AbstractDQ_USCOREElement_USCOREType::result = result1;
		_p->gco__AbstractObject_USCOREType::id = id2;
		_p->gco__AbstractObject_USCOREType::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:AbstractDQ_PositionalAccuracy_Type", "gmd:AbstractDQ_PositionalAccuracy_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType * SOAP_FMAC4 soap_get_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap*, gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *, const char*, const char*);

inline int soap_read_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(struct soap *soap, gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__AbstractDQ_USCOREPositionalAccuracy_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, const char*, int, const gmd__EX_USCOREVerticalExtent_USCOREType *, const char*);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREType * SOAP_FMAC4 soap_in_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, const char*, gmd__EX_USCOREVerticalExtent_USCOREType *, const char*);
SOAP_FMAC1 gmd__EX_USCOREVerticalExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCOREVerticalExtent_USCOREType * soap_new_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCOREVerticalExtent_USCOREType * soap_new_req_gmd__EX_USCOREVerticalExtent_USCOREType(
	struct soap *soap,
	gco__Real_USCOREPropertyType *minimumValue,
	gco__Real_USCOREPropertyType *maximumValue,
	gsr__SC_USCORECRS_USCOREPropertyType *verticalCRS)
{
	gmd__EX_USCOREVerticalExtent_USCOREType *_p = soap_new_gmd__EX_USCOREVerticalExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::minimumValue = minimumValue;
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::maximumValue = maximumValue;
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::verticalCRS = verticalCRS;
	}
	return _p;
}

inline gmd__EX_USCOREVerticalExtent_USCOREType * soap_new_set_gmd__EX_USCOREVerticalExtent_USCOREType(
	struct soap *soap,
	gco__Real_USCOREPropertyType *minimumValue,
	gco__Real_USCOREPropertyType *maximumValue,
	gsr__SC_USCORECRS_USCOREPropertyType *verticalCRS,
	std::string *id1,
	std::string *uuid1)
{
	gmd__EX_USCOREVerticalExtent_USCOREType *_p = soap_new_gmd__EX_USCOREVerticalExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::minimumValue = minimumValue;
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::maximumValue = maximumValue;
		_p->gmd__EX_USCOREVerticalExtent_USCOREType::verticalCRS = verticalCRS;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap *soap, gmd__EX_USCOREVerticalExtent_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_VerticalExtent_Type", "gmd:EX_VerticalExtent_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREType * SOAP_FMAC4 soap_get_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREType *, const char*, const char*);

inline int soap_read_gmd__EX_USCOREVerticalExtent_USCOREType(struct soap *soap, gmd__EX_USCOREVerticalExtent_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCOREVerticalExtent_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, int, const gmd__EX_USCOREVerticalExtent_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__EX_USCOREVerticalExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCOREVerticalExtent_USCOREPropertyType * soap_new_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCOREVerticalExtent_USCOREPropertyType * soap_new_req_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(
	struct soap *soap)
{
	gmd__EX_USCOREVerticalExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__EX_USCOREVerticalExtent_USCOREPropertyType * soap_new_set_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(
	struct soap *soap,
	__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *__EX_USCOREVerticalExtent_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__EX_USCOREVerticalExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::__EX_USCOREVerticalExtent_USCOREPropertyType_sequence = __EX_USCOREVerticalExtent_USCOREPropertyType_sequence;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__EX_USCOREVerticalExtent_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCOREVerticalExtent_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_VerticalExtent_PropertyType", "gmd:EX_VerticalExtent_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, const char*, int, const gmd__EX_USCORETemporalExtent_USCOREType *, const char*);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREType * SOAP_FMAC4 soap_in_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, const char*, gmd__EX_USCORETemporalExtent_USCOREType *, const char*);
SOAP_FMAC1 gmd__EX_USCORETemporalExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCORETemporalExtent_USCOREType * soap_new_gmd__EX_USCORETemporalExtent_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCORETemporalExtent_USCOREType * soap_new_req_gmd__EX_USCORETemporalExtent_USCOREType(
	struct soap *soap,
	gts__TM_USCOREPrimitive_USCOREPropertyType *extent)
{
	gmd__EX_USCORETemporalExtent_USCOREType *_p = soap_new_gmd__EX_USCORETemporalExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCORETemporalExtent_USCOREType::extent = extent;
	}
	return _p;
}

inline gmd__EX_USCORETemporalExtent_USCOREType * soap_new_set_gmd__EX_USCORETemporalExtent_USCOREType(
	struct soap *soap,
	gts__TM_USCOREPrimitive_USCOREPropertyType *extent,
	std::string *id1,
	std::string *uuid1)
{
	gmd__EX_USCORETemporalExtent_USCOREType *_p = soap_new_gmd__EX_USCORETemporalExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCORETemporalExtent_USCOREType::extent = extent;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCORETemporalExtent_USCOREType(struct soap *soap, gmd__EX_USCORETemporalExtent_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_TemporalExtent_Type", "gmd:EX_TemporalExtent_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREType * SOAP_FMAC4 soap_get_gmd__EX_USCORETemporalExtent_USCOREType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREType *, const char*, const char*);

inline int soap_read_gmd__EX_USCORETemporalExtent_USCOREType(struct soap *soap, gmd__EX_USCORETemporalExtent_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCORETemporalExtent_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, int, const gmd__EX_USCORETemporalExtent_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCORETemporalExtent_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__EX_USCORETemporalExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCORETemporalExtent_USCOREPropertyType * soap_new_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCORETemporalExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCORETemporalExtent_USCOREPropertyType * soap_new_req_gmd__EX_USCORETemporalExtent_USCOREPropertyType(
	struct soap *soap)
{
	gmd__EX_USCORETemporalExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCORETemporalExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__EX_USCORETemporalExtent_USCOREPropertyType * soap_new_set_gmd__EX_USCORETemporalExtent_USCOREPropertyType(
	struct soap *soap,
	__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *__EX_USCORETemporalExtent_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__EX_USCORETemporalExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCORETemporalExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::__EX_USCORETemporalExtent_USCOREPropertyType_sequence = __EX_USCORETemporalExtent_USCOREPropertyType_sequence;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__EX_USCORETemporalExtent_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCORETemporalExtent_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_TemporalExtent_PropertyType", "gmd:EX_TemporalExtent_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCORETemporalExtent_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCORETemporalExtent_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__AbstractEX_USCOREGeographicExtent_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, const char*, int, const gmd__AbstractEX_USCOREGeographicExtent_USCOREType *, const char*);
SOAP_FMAC3 gmd__AbstractEX_USCOREGeographicExtent_USCOREType * SOAP_FMAC4 soap_in_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, const char*, gmd__AbstractEX_USCOREGeographicExtent_USCOREType *, const char*);
SOAP_FMAC1 gmd__AbstractEX_USCOREGeographicExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__AbstractEX_USCOREGeographicExtent_USCOREType * soap_new_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__AbstractEX_USCOREGeographicExtent_USCOREType * soap_new_req_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(
	struct soap *soap)
{
	gmd__AbstractEX_USCOREGeographicExtent_USCOREType *_p = soap_new_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__AbstractEX_USCOREGeographicExtent_USCOREType * soap_new_set_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(
	struct soap *soap,
	gco__Boolean_USCOREPropertyType *extentTypeCode,
	std::string *id1,
	std::string *uuid1)
{
	gmd__AbstractEX_USCOREGeographicExtent_USCOREType *_p = soap_new_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__AbstractEX_USCOREGeographicExtent_USCOREType::extentTypeCode = extentTypeCode;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap *soap, gmd__AbstractEX_USCOREGeographicExtent_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:AbstractEX_GeographicExtent_Type", "gmd:AbstractEX_GeographicExtent_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__AbstractEX_USCOREGeographicExtent_USCOREType * SOAP_FMAC4 soap_get_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap*, gmd__AbstractEX_USCOREGeographicExtent_USCOREType *, const char*, const char*);

inline int soap_read_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(struct soap *soap, gmd__AbstractEX_USCOREGeographicExtent_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__AbstractEX_USCOREGeographicExtent_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, int, const gmd__EX_USCOREGeographicExtent_USCOREPropertyType *, const char*);
SOAP_FMAC3 gmd__EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC4 soap_in_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *, const char*);
SOAP_FMAC1 gmd__EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCOREGeographicExtent_USCOREPropertyType * soap_new_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCOREGeographicExtent_USCOREPropertyType * soap_new_req_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(
	struct soap *soap)
{
	gmd__EX_USCOREGeographicExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__EX_USCOREGeographicExtent_USCOREPropertyType * soap_new_set_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(
	struct soap *soap,
	__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *__EX_USCOREGeographicExtent_USCOREPropertyType_sequence,
	std::string *gco__nilReason,
	std::string *uuidref,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gmd__EX_USCOREGeographicExtent_USCOREPropertyType *_p = soap_new_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::__EX_USCOREGeographicExtent_USCOREPropertyType_sequence = __EX_USCOREGeographicExtent_USCOREPropertyType_sequence;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::gco__nilReason = gco__nilReason;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::uuidref = uuidref;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__type = xlink__type;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__href = xlink__href;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__role = xlink__role;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__title = xlink__title;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__show = xlink__show;
		_p->gmd__EX_USCOREGeographicExtent_USCOREPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCOREGeographicExtent_USCOREPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_GeographicExtent_PropertyType", "gmd:EX_GeographicExtent_PropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC4 soap_get_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *, const char*, const char*);

inline int soap_read_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap *soap, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gmd__EX_USCOREExtent_USCOREType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gmd__EX_USCOREExtent_USCOREType(struct soap*, const char*, int, const gmd__EX_USCOREExtent_USCOREType *, const char*);
SOAP_FMAC3 gmd__EX_USCOREExtent_USCOREType * SOAP_FMAC4 soap_in_gmd__EX_USCOREExtent_USCOREType(struct soap*, const char*, gmd__EX_USCOREExtent_USCOREType *, const char*);
SOAP_FMAC1 gmd__EX_USCOREExtent_USCOREType * SOAP_FMAC2 soap_instantiate_gmd__EX_USCOREExtent_USCOREType(struct soap*, int, const char*, const char*, size_t*);

inline gmd__EX_USCOREExtent_USCOREType * soap_new_gmd__EX_USCOREExtent_USCOREType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gmd__EX_USCOREExtent_USCOREType(soap, n, NULL, NULL, NULL);
}

inline gmd__EX_USCOREExtent_USCOREType * soap_new_req_gmd__EX_USCOREExtent_USCOREType(
	struct soap *soap)
{
	gmd__EX_USCOREExtent_USCOREType *_p = soap_new_gmd__EX_USCOREExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gmd__EX_USCOREExtent_USCOREType * soap_new_set_gmd__EX_USCOREExtent_USCOREType(
	struct soap *soap,
	gco__CharacterString_USCOREPropertyType *description,
	const std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> & geographicElement,
	const std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> & temporalElement,
	const std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> & verticalElement,
	std::string *id1,
	std::string *uuid1)
{
	gmd__EX_USCOREExtent_USCOREType *_p = soap_new_gmd__EX_USCOREExtent_USCOREType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gmd__EX_USCOREExtent_USCOREType::description = description;
		_p->gmd__EX_USCOREExtent_USCOREType::geographicElement = geographicElement;
		_p->gmd__EX_USCOREExtent_USCOREType::temporalElement = temporalElement;
		_p->gmd__EX_USCOREExtent_USCOREType::verticalElement = verticalElement;
		_p->gco__AbstractObject_USCOREType::id = id1;
		_p->gco__AbstractObject_USCOREType::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_gmd__EX_USCOREExtent_USCOREType(struct soap *soap, gmd__EX_USCOREExtent_USCOREType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gmd:EX_Extent_Type", "gmd:EX_Extent_Type") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gmd__EX_USCOREExtent_USCOREType * SOAP_FMAC4 soap_get_gmd__EX_USCOREExtent_USCOREType(struct soap*, gmd__EX_USCOREExtent_USCOREType *, const char*, const char*);

inline int soap_read_gmd__EX_USCOREExtent_USCOREType(struct soap *soap, gmd__EX_USCOREExtent_USCOREType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gmd__EX_USCOREExtent_USCOREType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__coordinateOperationAccuracy_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__coordinateOperationAccuracy_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__coordinateOperationAccuracy(struct soap*, const char*, int, const _gml__coordinateOperationAccuracy *, const char*);
SOAP_FMAC3 _gml__coordinateOperationAccuracy * SOAP_FMAC4 soap_in__gml__coordinateOperationAccuracy(struct soap*, const char*, _gml__coordinateOperationAccuracy *, const char*);
SOAP_FMAC1 _gml__coordinateOperationAccuracy * SOAP_FMAC2 soap_instantiate__gml__coordinateOperationAccuracy(struct soap*, int, const char*, const char*, size_t*);

inline _gml__coordinateOperationAccuracy * soap_new__gml__coordinateOperationAccuracy(struct soap *soap, int n = -1)
{
	return soap_instantiate__gml__coordinateOperationAccuracy(soap, n, NULL, NULL, NULL);
}

inline _gml__coordinateOperationAccuracy * soap_new_req__gml__coordinateOperationAccuracy(
	struct soap *soap)
{
	_gml__coordinateOperationAccuracy *_p = soap_new__gml__coordinateOperationAccuracy(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _gml__coordinateOperationAccuracy * soap_new_set__gml__coordinateOperationAccuracy(
	struct soap *soap,
	__gml__coordinateOperationAccuracy_sequence *__coordinateOperationAccuracy_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	_gml__coordinateOperationAccuracy *_p = soap_new__gml__coordinateOperationAccuracy(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__coordinateOperationAccuracy::__coordinateOperationAccuracy_sequence = __coordinateOperationAccuracy_sequence;
		_p->_gml__coordinateOperationAccuracy::nilReason = nilReason;
		_p->_gml__coordinateOperationAccuracy::xlink__type = xlink__type;
		_p->_gml__coordinateOperationAccuracy::xlink__href = xlink__href;
		_p->_gml__coordinateOperationAccuracy::xlink__role = xlink__role;
		_p->_gml__coordinateOperationAccuracy::xlink__arcrole = xlink__arcrole;
		_p->_gml__coordinateOperationAccuracy::xlink__title = xlink__title;
		_p->_gml__coordinateOperationAccuracy::xlink__show = xlink__show;
		_p->_gml__coordinateOperationAccuracy::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write__gml__coordinateOperationAccuracy(struct soap *soap, _gml__coordinateOperationAccuracy const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:coordinateOperationAccuracy", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _gml__coordinateOperationAccuracy * SOAP_FMAC4 soap_get__gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy *, const char*, const char*);

inline int soap_read__gml__coordinateOperationAccuracy(struct soap *soap, _gml__coordinateOperationAccuracy *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__gml__coordinateOperationAccuracy(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__SecondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__SecondDefiningParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__SecondDefiningParameter(struct soap*, const char*, int, const _gml__SecondDefiningParameter *, const char*);
SOAP_FMAC3 _gml__SecondDefiningParameter * SOAP_FMAC4 soap_in__gml__SecondDefiningParameter(struct soap*, const char*, _gml__SecondDefiningParameter *, const char*);
SOAP_FMAC1 _gml__SecondDefiningParameter * SOAP_FMAC2 soap_instantiate__gml__SecondDefiningParameter(struct soap*, int, const char*, const char*, size_t*);

inline _gml__SecondDefiningParameter * soap_new__gml__SecondDefiningParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate__gml__SecondDefiningParameter(soap, n, NULL, NULL, NULL);
}

inline _gml__SecondDefiningParameter * soap_new_req__gml__SecondDefiningParameter(
	struct soap *soap,
	int __union_SecondDefiningParameter,
	const union _gml__union_SecondDefiningParameter& union_SecondDefiningParameter)
{
	_gml__SecondDefiningParameter *_p = soap_new__gml__SecondDefiningParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__SecondDefiningParameter::__union_SecondDefiningParameter = __union_SecondDefiningParameter;
		_p->_gml__SecondDefiningParameter::union_SecondDefiningParameter = union_SecondDefiningParameter;
	}
	return _p;
}

inline _gml__SecondDefiningParameter * soap_new_set__gml__SecondDefiningParameter(
	struct soap *soap,
	int __union_SecondDefiningParameter,
	const union _gml__union_SecondDefiningParameter& union_SecondDefiningParameter)
{
	_gml__SecondDefiningParameter *_p = soap_new__gml__SecondDefiningParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__SecondDefiningParameter::__union_SecondDefiningParameter = __union_SecondDefiningParameter;
		_p->_gml__SecondDefiningParameter::union_SecondDefiningParameter = union_SecondDefiningParameter;
	}
	return _p;
}

inline int soap_write__gml__SecondDefiningParameter(struct soap *soap, _gml__SecondDefiningParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:SecondDefiningParameter", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _gml__SecondDefiningParameter * SOAP_FMAC4 soap_get__gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter *, const char*, const char*);

inline int soap_read__gml__SecondDefiningParameter(struct soap *soap, _gml__SecondDefiningParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__gml__SecondDefiningParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__secondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__secondDefiningParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__secondDefiningParameter(struct soap*, const char*, int, const _gml__secondDefiningParameter *, const char*);
SOAP_FMAC3 _gml__secondDefiningParameter * SOAP_FMAC4 soap_in__gml__secondDefiningParameter(struct soap*, const char*, _gml__secondDefiningParameter *, const char*);
SOAP_FMAC1 _gml__secondDefiningParameter * SOAP_FMAC2 soap_instantiate__gml__secondDefiningParameter(struct soap*, int, const char*, const char*, size_t*);

inline _gml__secondDefiningParameter * soap_new__gml__secondDefiningParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate__gml__secondDefiningParameter(soap, n, NULL, NULL, NULL);
}

inline _gml__secondDefiningParameter * soap_new_req__gml__secondDefiningParameter(
	struct soap *soap,
	_gml__SecondDefiningParameter *SecondDefiningParameter)
{
	_gml__secondDefiningParameter *_p = soap_new__gml__secondDefiningParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__secondDefiningParameter::SecondDefiningParameter = SecondDefiningParameter;
	}
	return _p;
}

inline _gml__secondDefiningParameter * soap_new_set__gml__secondDefiningParameter(
	struct soap *soap,
	_gml__SecondDefiningParameter *SecondDefiningParameter)
{
	_gml__secondDefiningParameter *_p = soap_new__gml__secondDefiningParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__secondDefiningParameter::SecondDefiningParameter = SecondDefiningParameter;
	}
	return _p;
}

inline int soap_write__gml__secondDefiningParameter(struct soap *soap, _gml__secondDefiningParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:secondDefiningParameter", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _gml__secondDefiningParameter * SOAP_FMAC4 soap_get__gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter *, const char*, const char*);

inline int soap_read__gml__secondDefiningParameter(struct soap *soap, _gml__secondDefiningParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__gml__secondDefiningParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__domainOfValidity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__domainOfValidity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__domainOfValidity(struct soap*, const char*, int, const _gml__domainOfValidity *, const char*);
SOAP_FMAC3 _gml__domainOfValidity * SOAP_FMAC4 soap_in__gml__domainOfValidity(struct soap*, const char*, _gml__domainOfValidity *, const char*);
SOAP_FMAC1 _gml__domainOfValidity * SOAP_FMAC2 soap_instantiate__gml__domainOfValidity(struct soap*, int, const char*, const char*, size_t*);

inline _gml__domainOfValidity * soap_new__gml__domainOfValidity(struct soap *soap, int n = -1)
{
	return soap_instantiate__gml__domainOfValidity(soap, n, NULL, NULL, NULL);
}

inline _gml__domainOfValidity * soap_new_req__gml__domainOfValidity(
	struct soap *soap)
{
	_gml__domainOfValidity *_p = soap_new__gml__domainOfValidity(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _gml__domainOfValidity * soap_new_set__gml__domainOfValidity(
	struct soap *soap,
	__gml__domainOfValidity_sequence *__domainOfValidity_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	_gml__domainOfValidity *_p = soap_new__gml__domainOfValidity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_gml__domainOfValidity::__domainOfValidity_sequence = __domainOfValidity_sequence;
		_p->_gml__domainOfValidity::nilReason = nilReason;
		_p->_gml__domainOfValidity::xlink__type = xlink__type;
		_p->_gml__domainOfValidity::xlink__href = xlink__href;
		_p->_gml__domainOfValidity::xlink__role = xlink__role;
		_p->_gml__domainOfValidity::xlink__arcrole = xlink__arcrole;
		_p->_gml__domainOfValidity::xlink__title = xlink__title;
		_p->_gml__domainOfValidity::xlink__show = xlink__show;
		_p->_gml__domainOfValidity::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write__gml__domainOfValidity(struct soap *soap, _gml__domainOfValidity const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:domainOfValidity", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 _gml__domainOfValidity * SOAP_FMAC4 soap_get__gml__domainOfValidity(struct soap*, _gml__domainOfValidity *, const char*, const char*);

inline int soap_read__gml__domainOfValidity(struct soap *soap, _gml__domainOfValidity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get__gml__domainOfValidity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalDatumType(struct soap*, const char*, int, const gml__VerticalDatumType *, const char*);
SOAP_FMAC3 gml__VerticalDatumType * SOAP_FMAC4 soap_in_gml__VerticalDatumType(struct soap*, const char*, gml__VerticalDatumType *, const char*);
SOAP_FMAC1 gml__VerticalDatumType * SOAP_FMAC2 soap_instantiate_gml__VerticalDatumType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalDatumType * soap_new_gml__VerticalDatumType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalDatumType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalDatumType * soap_new_req_gml__VerticalDatumType(
	struct soap *soap,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__VerticalDatumType *_p = soap_new_gml__VerticalDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractDatumType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__VerticalDatumType * soap_new_set_gml__VerticalDatumType(
	struct soap *soap,
	_gml__domainOfValidity *domainOfValidity1,
	const std::vector<std::string> & scope1,
	gml__CodeType *anchorDefinition1,
	std::string *realizationEpoch1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__VerticalDatumType *_p = soap_new_gml__VerticalDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractDatumType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractDatumType::scope = scope1;
		_p->gml__AbstractDatumType::anchorDefinition = anchorDefinition1;
		_p->gml__AbstractDatumType::realizationEpoch = realizationEpoch1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__VerticalDatumType(struct soap *soap, gml__VerticalDatumType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalDatumType", "gml:VerticalDatumType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalDatumType * SOAP_FMAC4 soap_get_gml__VerticalDatumType(struct soap*, gml__VerticalDatumType *, const char*, const char*);

inline int soap_read_gml__VerticalDatumType(struct soap *soap, gml__VerticalDatumType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalDatumType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalDatumPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalDatumPropertyType(struct soap*, const char*, int, const gml__VerticalDatumPropertyType *, const char*);
SOAP_FMAC3 gml__VerticalDatumPropertyType * SOAP_FMAC4 soap_in_gml__VerticalDatumPropertyType(struct soap*, const char*, gml__VerticalDatumPropertyType *, const char*);
SOAP_FMAC1 gml__VerticalDatumPropertyType * SOAP_FMAC2 soap_instantiate_gml__VerticalDatumPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalDatumPropertyType * soap_new_gml__VerticalDatumPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalDatumPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalDatumPropertyType * soap_new_req_gml__VerticalDatumPropertyType(
	struct soap *soap)
{
	gml__VerticalDatumPropertyType *_p = soap_new_gml__VerticalDatumPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__VerticalDatumPropertyType * soap_new_set_gml__VerticalDatumPropertyType(
	struct soap *soap,
	__gml__VerticalDatumPropertyType_sequence *__VerticalDatumPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__VerticalDatumPropertyType *_p = soap_new_gml__VerticalDatumPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__VerticalDatumPropertyType::__VerticalDatumPropertyType_sequence = __VerticalDatumPropertyType_sequence;
		_p->gml__VerticalDatumPropertyType::nilReason = nilReason;
		_p->gml__VerticalDatumPropertyType::xlink__type = xlink__type;
		_p->gml__VerticalDatumPropertyType::xlink__href = xlink__href;
		_p->gml__VerticalDatumPropertyType::xlink__role = xlink__role;
		_p->gml__VerticalDatumPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__VerticalDatumPropertyType::xlink__title = xlink__title;
		_p->gml__VerticalDatumPropertyType::xlink__show = xlink__show;
		_p->gml__VerticalDatumPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__VerticalDatumPropertyType(struct soap *soap, gml__VerticalDatumPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalDatumPropertyType", "gml:VerticalDatumPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalDatumPropertyType * SOAP_FMAC4 soap_get_gml__VerticalDatumPropertyType(struct soap*, gml__VerticalDatumPropertyType *, const char*, const char*);

inline int soap_read_gml__VerticalDatumPropertyType(struct soap *soap, gml__VerticalDatumPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalDatumPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalCSType(struct soap*, const char*, int, const gml__VerticalCSType *, const char*);
SOAP_FMAC3 gml__VerticalCSType * SOAP_FMAC4 soap_in_gml__VerticalCSType(struct soap*, const char*, gml__VerticalCSType *, const char*);
SOAP_FMAC1 gml__VerticalCSType * SOAP_FMAC2 soap_instantiate_gml__VerticalCSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalCSType * soap_new_gml__VerticalCSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalCSType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalCSType * soap_new_req_gml__VerticalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__VerticalCSType *_p = soap_new_gml__VerticalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__VerticalCSType * soap_new_set_gml__VerticalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	enum gml__AggregationType *aggregationType1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__VerticalCSType *_p = soap_new_gml__VerticalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__VerticalCSType(struct soap *soap, gml__VerticalCSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalCSType", "gml:VerticalCSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalCSType * SOAP_FMAC4 soap_get_gml__VerticalCSType(struct soap*, gml__VerticalCSType *, const char*, const char*);

inline int soap_read_gml__VerticalCSType(struct soap *soap, gml__VerticalCSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalCSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalCSPropertyType(struct soap*, const char*, int, const gml__VerticalCSPropertyType *, const char*);
SOAP_FMAC3 gml__VerticalCSPropertyType * SOAP_FMAC4 soap_in_gml__VerticalCSPropertyType(struct soap*, const char*, gml__VerticalCSPropertyType *, const char*);
SOAP_FMAC1 gml__VerticalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__VerticalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalCSPropertyType * soap_new_gml__VerticalCSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalCSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalCSPropertyType * soap_new_req_gml__VerticalCSPropertyType(
	struct soap *soap)
{
	gml__VerticalCSPropertyType *_p = soap_new_gml__VerticalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__VerticalCSPropertyType * soap_new_set_gml__VerticalCSPropertyType(
	struct soap *soap,
	__gml__VerticalCSPropertyType_sequence *__VerticalCSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__VerticalCSPropertyType *_p = soap_new_gml__VerticalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__VerticalCSPropertyType::__VerticalCSPropertyType_sequence = __VerticalCSPropertyType_sequence;
		_p->gml__VerticalCSPropertyType::nilReason = nilReason;
		_p->gml__VerticalCSPropertyType::xlink__type = xlink__type;
		_p->gml__VerticalCSPropertyType::xlink__href = xlink__href;
		_p->gml__VerticalCSPropertyType::xlink__role = xlink__role;
		_p->gml__VerticalCSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__VerticalCSPropertyType::xlink__title = xlink__title;
		_p->gml__VerticalCSPropertyType::xlink__show = xlink__show;
		_p->gml__VerticalCSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__VerticalCSPropertyType(struct soap *soap, gml__VerticalCSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalCSPropertyType", "gml:VerticalCSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalCSPropertyType * SOAP_FMAC4 soap_get_gml__VerticalCSPropertyType(struct soap*, gml__VerticalCSPropertyType *, const char*, const char*);

inline int soap_read_gml__VerticalCSPropertyType(struct soap *soap, gml__VerticalCSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalCSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__VerticalCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__VerticalCRSType(struct soap*, const char*, int, const gml__VerticalCRSType *, const char*);
SOAP_FMAC3 gml__VerticalCRSType * SOAP_FMAC4 soap_in_gml__VerticalCRSType(struct soap*, const char*, gml__VerticalCRSType *, const char*);
SOAP_FMAC1 gml__VerticalCRSType * SOAP_FMAC2 soap_instantiate_gml__VerticalCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__VerticalCRSType * soap_new_gml__VerticalCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__VerticalCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__VerticalCRSType * soap_new_req_gml__VerticalCRSType(
	struct soap *soap,
	gml__VerticalCSPropertyType *verticalCS,
	gml__VerticalDatumPropertyType *verticalDatum,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__VerticalCRSType *_p = soap_new_gml__VerticalCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__VerticalCRSType::verticalCS = verticalCS;
		_p->gml__VerticalCRSType::verticalDatum = verticalDatum;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__VerticalCRSType * soap_new_set_gml__VerticalCRSType(
	struct soap *soap,
	gml__VerticalCSPropertyType *verticalCS,
	gml__VerticalDatumPropertyType *verticalDatum,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity1,
	const std::vector<std::string> & scope1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__VerticalCRSType *_p = soap_new_gml__VerticalCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__VerticalCRSType::verticalCS = verticalCS;
		_p->gml__VerticalCRSType::verticalDatum = verticalDatum;
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__VerticalCRSType(struct soap *soap, gml__VerticalCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:VerticalCRSType", "gml:VerticalCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__VerticalCRSType * SOAP_FMAC4 soap_get_gml__VerticalCRSType(struct soap*, gml__VerticalCRSType *, const char*, const char*);

inline int soap_read_gml__VerticalCRSType(struct soap *soap, gml__VerticalCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__VerticalCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeodeticCRSPropertyType(struct soap*, const char*, int, const gml__GeodeticCRSPropertyType *, const char*);
SOAP_FMAC3 gml__GeodeticCRSPropertyType * SOAP_FMAC4 soap_in_gml__GeodeticCRSPropertyType(struct soap*, const char*, gml__GeodeticCRSPropertyType *, const char*);
SOAP_FMAC1 gml__GeodeticCRSPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeodeticCRSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeodeticCRSPropertyType * soap_new_gml__GeodeticCRSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeodeticCRSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__GeodeticCRSPropertyType * soap_new_req_gml__GeodeticCRSPropertyType(
	struct soap *soap)
{
	gml__GeodeticCRSPropertyType *_p = soap_new_gml__GeodeticCRSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__GeodeticCRSPropertyType * soap_new_set_gml__GeodeticCRSPropertyType(
	struct soap *soap,
	__gml__GeodeticCRSPropertyType_sequence *__GeodeticCRSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__GeodeticCRSPropertyType *_p = soap_new_gml__GeodeticCRSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticCRSPropertyType::__GeodeticCRSPropertyType_sequence = __GeodeticCRSPropertyType_sequence;
		_p->gml__GeodeticCRSPropertyType::nilReason = nilReason;
		_p->gml__GeodeticCRSPropertyType::xlink__type = xlink__type;
		_p->gml__GeodeticCRSPropertyType::xlink__href = xlink__href;
		_p->gml__GeodeticCRSPropertyType::xlink__role = xlink__role;
		_p->gml__GeodeticCRSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__GeodeticCRSPropertyType::xlink__title = xlink__title;
		_p->gml__GeodeticCRSPropertyType::xlink__show = xlink__show;
		_p->gml__GeodeticCRSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__GeodeticCRSPropertyType(struct soap *soap, gml__GeodeticCRSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeodeticCRSPropertyType", "gml:GeodeticCRSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeodeticCRSPropertyType * SOAP_FMAC4 soap_get_gml__GeodeticCRSPropertyType(struct soap*, gml__GeodeticCRSPropertyType *, const char*, const char*);

inline int soap_read_gml__GeodeticCRSPropertyType(struct soap *soap, gml__GeodeticCRSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeodeticCRSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CRSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CRSPropertyType(struct soap*, const char*, int, const gml__CRSPropertyType *, const char*);
SOAP_FMAC3 gml__CRSPropertyType * SOAP_FMAC4 soap_in_gml__CRSPropertyType(struct soap*, const char*, gml__CRSPropertyType *, const char*);
SOAP_FMAC1 gml__CRSPropertyType * SOAP_FMAC2 soap_instantiate_gml__CRSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CRSPropertyType * soap_new_gml__CRSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CRSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__CRSPropertyType * soap_new_req_gml__CRSPropertyType(
	struct soap *soap)
{
	gml__CRSPropertyType *_p = soap_new_gml__CRSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__CRSPropertyType * soap_new_set_gml__CRSPropertyType(
	struct soap *soap,
	__gml__CRSPropertyType_sequence *__CRSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__CRSPropertyType *_p = soap_new_gml__CRSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CRSPropertyType::__CRSPropertyType_sequence = __CRSPropertyType_sequence;
		_p->gml__CRSPropertyType::nilReason = nilReason;
		_p->gml__CRSPropertyType::xlink__type = xlink__type;
		_p->gml__CRSPropertyType::xlink__href = xlink__href;
		_p->gml__CRSPropertyType::xlink__role = xlink__role;
		_p->gml__CRSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__CRSPropertyType::xlink__title = xlink__title;
		_p->gml__CRSPropertyType::xlink__show = xlink__show;
		_p->gml__CRSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__CRSPropertyType(struct soap *soap, gml__CRSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CRSPropertyType", "gml:CRSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CRSPropertyType * SOAP_FMAC4 soap_get_gml__CRSPropertyType(struct soap*, gml__CRSPropertyType *, const char*, const char*);

inline int soap_read_gml__CRSPropertyType(struct soap *soap, gml__CRSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CRSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateOperationType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateOperationType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractCoordinateOperationType(struct soap*, const char*, int, const gml__AbstractCoordinateOperationType *, const char*);
SOAP_FMAC3 gml__AbstractCoordinateOperationType * SOAP_FMAC4 soap_in_gml__AbstractCoordinateOperationType(struct soap*, const char*, gml__AbstractCoordinateOperationType *, const char*);
SOAP_FMAC1 gml__AbstractCoordinateOperationType * SOAP_FMAC2 soap_instantiate_gml__AbstractCoordinateOperationType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractCoordinateOperationType * soap_new_gml__AbstractCoordinateOperationType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractCoordinateOperationType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractCoordinateOperationType * soap_new_req_gml__AbstractCoordinateOperationType(
	struct soap *soap,
	const std::vector<std::string> & scope,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__AbstractCoordinateOperationType *_p = soap_new_gml__AbstractCoordinateOperationType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateOperationType::scope = scope;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__AbstractCoordinateOperationType * soap_new_set_gml__AbstractCoordinateOperationType(
	struct soap *soap,
	_gml__domainOfValidity *domainOfValidity,
	const std::vector<std::string> & scope,
	std::string *operationVersion,
	const std::vector<_gml__coordinateOperationAccuracy *> & coordinateOperationAccuracy,
	gml__CRSPropertyType *sourceCRS,
	gml__CRSPropertyType *targetCRS,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__AbstractCoordinateOperationType *_p = soap_new_gml__AbstractCoordinateOperationType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateOperationType::domainOfValidity = domainOfValidity;
		_p->gml__AbstractCoordinateOperationType::scope = scope;
		_p->gml__AbstractCoordinateOperationType::operationVersion = operationVersion;
		_p->gml__AbstractCoordinateOperationType::coordinateOperationAccuracy = coordinateOperationAccuracy;
		_p->gml__AbstractCoordinateOperationType::sourceCRS = sourceCRS;
		_p->gml__AbstractCoordinateOperationType::targetCRS = targetCRS;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__AbstractCoordinateOperationType(struct soap *soap, gml__AbstractCoordinateOperationType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractCoordinateOperationType", "gml:AbstractCoordinateOperationType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractCoordinateOperationType * SOAP_FMAC4 soap_get_gml__AbstractCoordinateOperationType(struct soap*, gml__AbstractCoordinateOperationType *, const char*, const char*);

inline int soap_read_gml__AbstractCoordinateOperationType(struct soap *soap, gml__AbstractCoordinateOperationType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractCoordinateOperationType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralConversionType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralConversionType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractGeneralConversionType(struct soap*, const char*, int, const gml__AbstractGeneralConversionType *, const char*);
SOAP_FMAC3 gml__AbstractGeneralConversionType * SOAP_FMAC4 soap_in_gml__AbstractGeneralConversionType(struct soap*, const char*, gml__AbstractGeneralConversionType *, const char*);
SOAP_FMAC1 gml__AbstractGeneralConversionType * SOAP_FMAC2 soap_instantiate_gml__AbstractGeneralConversionType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractGeneralConversionType * soap_new_gml__AbstractGeneralConversionType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractGeneralConversionType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractGeneralConversionType * soap_new_req_gml__AbstractGeneralConversionType(
	struct soap *soap,
	gml__CodeWithAuthorityType *identifier,
	const std::vector<std::string> & scope,
	const std::string& gml__id)
{
	gml__AbstractGeneralConversionType *_p = soap_new_gml__AbstractGeneralConversionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGeneralConversionType::identifier = identifier;
		_p->gml__AbstractGeneralConversionType::scope = scope;
		_p->gml__AbstractGeneralConversionType::gml__id = gml__id;
	}
	return _p;
}

inline gml__AbstractGeneralConversionType * soap_new_set_gml__AbstractGeneralConversionType(
	struct soap *soap,
	gml__StringOrRefType *description,
	gml__ReferenceType *descriptionReference,
	gml__CodeWithAuthorityType *identifier,
	const std::vector<gml__CodeType *> & name,
	std::string *remarks,
	_gml__domainOfValidity *domainOfValidity,
	const std::vector<std::string> & scope,
	const std::vector<_gml__coordinateOperationAccuracy *> & coordinateOperationAccuracy,
	const std::string& gml__id)
{
	gml__AbstractGeneralConversionType *_p = soap_new_gml__AbstractGeneralConversionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGeneralConversionType::description = description;
		_p->gml__AbstractGeneralConversionType::descriptionReference = descriptionReference;
		_p->gml__AbstractGeneralConversionType::identifier = identifier;
		_p->gml__AbstractGeneralConversionType::name = name;
		_p->gml__AbstractGeneralConversionType::remarks = remarks;
		_p->gml__AbstractGeneralConversionType::domainOfValidity = domainOfValidity;
		_p->gml__AbstractGeneralConversionType::scope = scope;
		_p->gml__AbstractGeneralConversionType::coordinateOperationAccuracy = coordinateOperationAccuracy;
		_p->gml__AbstractGeneralConversionType::gml__id = gml__id;
	}
	return _p;
}

inline int soap_write_gml__AbstractGeneralConversionType(struct soap *soap, gml__AbstractGeneralConversionType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractGeneralConversionType", "gml:AbstractGeneralConversionType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractGeneralConversionType * SOAP_FMAC4 soap_get_gml__AbstractGeneralConversionType(struct soap*, gml__AbstractGeneralConversionType *, const char*, const char*);

inline int soap_read_gml__AbstractGeneralConversionType(struct soap *soap, gml__AbstractGeneralConversionType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractGeneralConversionType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeneralConversionPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeneralConversionPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeneralConversionPropertyType(struct soap*, const char*, int, const gml__GeneralConversionPropertyType *, const char*);
SOAP_FMAC3 gml__GeneralConversionPropertyType * SOAP_FMAC4 soap_in_gml__GeneralConversionPropertyType(struct soap*, const char*, gml__GeneralConversionPropertyType *, const char*);
SOAP_FMAC1 gml__GeneralConversionPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeneralConversionPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeneralConversionPropertyType * soap_new_gml__GeneralConversionPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeneralConversionPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__GeneralConversionPropertyType * soap_new_req_gml__GeneralConversionPropertyType(
	struct soap *soap)
{
	gml__GeneralConversionPropertyType *_p = soap_new_gml__GeneralConversionPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__GeneralConversionPropertyType * soap_new_set_gml__GeneralConversionPropertyType(
	struct soap *soap,
	__gml__GeneralConversionPropertyType_sequence *__GeneralConversionPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__GeneralConversionPropertyType *_p = soap_new_gml__GeneralConversionPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeneralConversionPropertyType::__GeneralConversionPropertyType_sequence = __GeneralConversionPropertyType_sequence;
		_p->gml__GeneralConversionPropertyType::nilReason = nilReason;
		_p->gml__GeneralConversionPropertyType::xlink__type = xlink__type;
		_p->gml__GeneralConversionPropertyType::xlink__href = xlink__href;
		_p->gml__GeneralConversionPropertyType::xlink__role = xlink__role;
		_p->gml__GeneralConversionPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__GeneralConversionPropertyType::xlink__title = xlink__title;
		_p->gml__GeneralConversionPropertyType::xlink__show = xlink__show;
		_p->gml__GeneralConversionPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__GeneralConversionPropertyType(struct soap *soap, gml__GeneralConversionPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeneralConversionPropertyType", "gml:GeneralConversionPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeneralConversionPropertyType * SOAP_FMAC4 soap_get_gml__GeneralConversionPropertyType(struct soap*, gml__GeneralConversionPropertyType *, const char*, const char*);

inline int soap_read_gml__GeneralConversionPropertyType(struct soap *soap, gml__GeneralConversionPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeneralConversionPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralDerivedCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGeneralDerivedCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractGeneralDerivedCRSType(struct soap*, const char*, int, const gml__AbstractGeneralDerivedCRSType *, const char*);
SOAP_FMAC3 gml__AbstractGeneralDerivedCRSType * SOAP_FMAC4 soap_in_gml__AbstractGeneralDerivedCRSType(struct soap*, const char*, gml__AbstractGeneralDerivedCRSType *, const char*);
SOAP_FMAC1 gml__AbstractGeneralDerivedCRSType * SOAP_FMAC2 soap_instantiate_gml__AbstractGeneralDerivedCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractGeneralDerivedCRSType * soap_new_gml__AbstractGeneralDerivedCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractGeneralDerivedCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractGeneralDerivedCRSType * soap_new_req_gml__AbstractGeneralDerivedCRSType(
	struct soap *soap,
	gml__GeneralConversionPropertyType *conversion,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__AbstractGeneralDerivedCRSType *_p = soap_new_gml__AbstractGeneralDerivedCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGeneralDerivedCRSType::conversion = conversion;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__AbstractGeneralDerivedCRSType * soap_new_set_gml__AbstractGeneralDerivedCRSType(
	struct soap *soap,
	gml__GeneralConversionPropertyType *conversion,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity1,
	const std::vector<std::string> & scope1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__AbstractGeneralDerivedCRSType *_p = soap_new_gml__AbstractGeneralDerivedCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGeneralDerivedCRSType::conversion = conversion;
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__AbstractGeneralDerivedCRSType(struct soap *soap, gml__AbstractGeneralDerivedCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractGeneralDerivedCRSType", "gml:AbstractGeneralDerivedCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractGeneralDerivedCRSType * SOAP_FMAC4 soap_get_gml__AbstractGeneralDerivedCRSType(struct soap*, gml__AbstractGeneralDerivedCRSType *, const char*, const char*);

inline int soap_read_gml__AbstractGeneralDerivedCRSType(struct soap *soap, gml__AbstractGeneralDerivedCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractGeneralDerivedCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__ProjectedCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__ProjectedCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__ProjectedCRSType(struct soap*, const char*, int, const gml__ProjectedCRSType *, const char*);
SOAP_FMAC3 gml__ProjectedCRSType * SOAP_FMAC4 soap_in_gml__ProjectedCRSType(struct soap*, const char*, gml__ProjectedCRSType *, const char*);
SOAP_FMAC1 gml__ProjectedCRSType * SOAP_FMAC2 soap_instantiate_gml__ProjectedCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__ProjectedCRSType * soap_new_gml__ProjectedCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__ProjectedCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__ProjectedCRSType * soap_new_req_gml__ProjectedCRSType(
	struct soap *soap,
	int __union_ProjectedCRSType,
	const union _gml__union_ProjectedCRSType& union_ProjectedCRSType,
	gml__CartesianCSPropertyType *cartesianCS,
	gml__GeneralConversionPropertyType *conversion1,
	const std::vector<std::string> & scope2,
	gml__CodeWithAuthorityType *identifier5,
	const std::string& gml__id5)
{
	gml__ProjectedCRSType *_p = soap_new_gml__ProjectedCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__ProjectedCRSType::__union_ProjectedCRSType = __union_ProjectedCRSType;
		_p->gml__ProjectedCRSType::union_ProjectedCRSType = union_ProjectedCRSType;
		_p->gml__ProjectedCRSType::cartesianCS = cartesianCS;
		_p->gml__AbstractGeneralDerivedCRSType::conversion = conversion1;
		_p->gml__AbstractCRSType::scope = scope2;
		_p->gml__DefinitionBaseType::identifier = identifier5;
		_p->gml__DefinitionBaseType::gml__id = gml__id5;
	}
	return _p;
}

inline gml__ProjectedCRSType * soap_new_set_gml__ProjectedCRSType(
	struct soap *soap,
	int __union_ProjectedCRSType,
	const union _gml__union_ProjectedCRSType& union_ProjectedCRSType,
	gml__CartesianCSPropertyType *cartesianCS,
	gml__GeneralConversionPropertyType *conversion1,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity2,
	const std::vector<std::string> & scope2,
	std::string *remarks4,
	gml__StringOrRefType *description5,
	gml__ReferenceType *descriptionReference5,
	gml__CodeWithAuthorityType *identifier5,
	const std::vector<gml__CodeType *> & name5,
	const std::string& gml__id5)
{
	gml__ProjectedCRSType *_p = soap_new_gml__ProjectedCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__ProjectedCRSType::__union_ProjectedCRSType = __union_ProjectedCRSType;
		_p->gml__ProjectedCRSType::union_ProjectedCRSType = union_ProjectedCRSType;
		_p->gml__ProjectedCRSType::cartesianCS = cartesianCS;
		_p->gml__AbstractGeneralDerivedCRSType::conversion = conversion1;
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity2;
		_p->gml__AbstractCRSType::scope = scope2;
		_p->gml__DefinitionType::remarks = remarks4;
		_p->gml__DefinitionBaseType::description = description5;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference5;
		_p->gml__DefinitionBaseType::identifier = identifier5;
		_p->gml__DefinitionBaseType::name = name5;
		_p->gml__DefinitionBaseType::gml__id = gml__id5;
	}
	return _p;
}

inline int soap_write_gml__ProjectedCRSType(struct soap *soap, gml__ProjectedCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:ProjectedCRSType", "gml:ProjectedCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__ProjectedCRSType * SOAP_FMAC4 soap_get_gml__ProjectedCRSType(struct soap*, gml__ProjectedCRSType *, const char*, const char*);

inline int soap_read_gml__ProjectedCRSType(struct soap *soap, gml__ProjectedCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__ProjectedCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__LengthType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__LengthType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__LengthType(struct soap*, const char*, int, const gml__LengthType *, const char*);
SOAP_FMAC3 gml__LengthType * SOAP_FMAC4 soap_in_gml__LengthType(struct soap*, const char*, gml__LengthType *, const char*);
SOAP_FMAC1 gml__LengthType * SOAP_FMAC2 soap_instantiate_gml__LengthType(struct soap*, int, const char*, const char*, size_t*);

inline gml__LengthType * soap_new_gml__LengthType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__LengthType(soap, n, NULL, NULL, NULL);
}

inline gml__LengthType * soap_new_req_gml__LengthType(
	struct soap *soap,
	double __item1)
{
	gml__LengthType *_p = soap_new_gml__LengthType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item1;
	}
	return _p;
}

inline gml__LengthType * soap_new_set_gml__LengthType(
	struct soap *soap,
	double __item1)
{
	gml__LengthType *_p = soap_new_gml__LengthType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item1;
	}
	return _p;
}

inline int soap_write_gml__LengthType(struct soap *soap, gml__LengthType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:LengthType", "gml:LengthType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__LengthType * SOAP_FMAC4 soap_get_gml__LengthType(struct soap*, gml__LengthType *, const char*, const char*);

inline int soap_read_gml__LengthType(struct soap *soap, gml__LengthType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__LengthType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__EllipsoidType(struct soap*, const char*, int, const gml__EllipsoidType *, const char*);
SOAP_FMAC3 gml__EllipsoidType * SOAP_FMAC4 soap_in_gml__EllipsoidType(struct soap*, const char*, gml__EllipsoidType *, const char*);
SOAP_FMAC1 gml__EllipsoidType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidType(struct soap*, int, const char*, const char*, size_t*);

inline gml__EllipsoidType * soap_new_gml__EllipsoidType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__EllipsoidType(soap, n, NULL, NULL, NULL);
}

inline gml__EllipsoidType * soap_new_req_gml__EllipsoidType(
	struct soap *soap,
	gml__MeasureType *semiMajorAxis,
	_gml__secondDefiningParameter *secondDefiningParameter,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__EllipsoidType *_p = soap_new_gml__EllipsoidType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__EllipsoidType::semiMajorAxis = semiMajorAxis;
		_p->gml__EllipsoidType::secondDefiningParameter = secondDefiningParameter;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__EllipsoidType * soap_new_set_gml__EllipsoidType(
	struct soap *soap,
	gml__MeasureType *semiMajorAxis,
	_gml__secondDefiningParameter *secondDefiningParameter,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__EllipsoidType *_p = soap_new_gml__EllipsoidType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__EllipsoidType::semiMajorAxis = semiMajorAxis;
		_p->gml__EllipsoidType::secondDefiningParameter = secondDefiningParameter;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__EllipsoidType(struct soap *soap, gml__EllipsoidType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:EllipsoidType", "gml:EllipsoidType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__EllipsoidType * SOAP_FMAC4 soap_get_gml__EllipsoidType(struct soap*, gml__EllipsoidType *, const char*, const char*);

inline int soap_read_gml__EllipsoidType(struct soap *soap, gml__EllipsoidType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__EllipsoidType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__EllipsoidPropertyType(struct soap*, const char*, int, const gml__EllipsoidPropertyType *, const char*);
SOAP_FMAC3 gml__EllipsoidPropertyType * SOAP_FMAC4 soap_in_gml__EllipsoidPropertyType(struct soap*, const char*, gml__EllipsoidPropertyType *, const char*);
SOAP_FMAC1 gml__EllipsoidPropertyType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__EllipsoidPropertyType * soap_new_gml__EllipsoidPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__EllipsoidPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__EllipsoidPropertyType * soap_new_req_gml__EllipsoidPropertyType(
	struct soap *soap)
{
	gml__EllipsoidPropertyType *_p = soap_new_gml__EllipsoidPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__EllipsoidPropertyType * soap_new_set_gml__EllipsoidPropertyType(
	struct soap *soap,
	__gml__EllipsoidPropertyType_sequence *__EllipsoidPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__EllipsoidPropertyType *_p = soap_new_gml__EllipsoidPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__EllipsoidPropertyType::__EllipsoidPropertyType_sequence = __EllipsoidPropertyType_sequence;
		_p->gml__EllipsoidPropertyType::nilReason = nilReason;
		_p->gml__EllipsoidPropertyType::xlink__type = xlink__type;
		_p->gml__EllipsoidPropertyType::xlink__href = xlink__href;
		_p->gml__EllipsoidPropertyType::xlink__role = xlink__role;
		_p->gml__EllipsoidPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__EllipsoidPropertyType::xlink__title = xlink__title;
		_p->gml__EllipsoidPropertyType::xlink__show = xlink__show;
		_p->gml__EllipsoidPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__EllipsoidPropertyType(struct soap *soap, gml__EllipsoidPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:EllipsoidPropertyType", "gml:EllipsoidPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__EllipsoidPropertyType * SOAP_FMAC4 soap_get_gml__EllipsoidPropertyType(struct soap*, gml__EllipsoidPropertyType *, const char*, const char*);

inline int soap_read_gml__EllipsoidPropertyType(struct soap *soap, gml__EllipsoidPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__EllipsoidPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__MeasureType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__MeasureType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__MeasureType(struct soap*, const char*, int, const gml__MeasureType *, const char*);
SOAP_FMAC3 gml__MeasureType * SOAP_FMAC4 soap_in_gml__MeasureType(struct soap*, const char*, gml__MeasureType *, const char*);
SOAP_FMAC1 gml__MeasureType * SOAP_FMAC2 soap_instantiate_gml__MeasureType(struct soap*, int, const char*, const char*, size_t*);

inline gml__MeasureType * soap_new_gml__MeasureType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__MeasureType(soap, n, NULL, NULL, NULL);
}

inline gml__MeasureType * soap_new_req_gml__MeasureType(
	struct soap *soap,
	double __item)
{
	gml__MeasureType *_p = soap_new_gml__MeasureType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item;
	}
	return _p;
}

inline gml__MeasureType * soap_new_set_gml__MeasureType(
	struct soap *soap,
	double __item)
{
	gml__MeasureType *_p = soap_new_gml__MeasureType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item;
	}
	return _p;
}

inline int soap_write_gml__MeasureType(struct soap *soap, gml__MeasureType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:MeasureType", "gml:MeasureType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__MeasureType * SOAP_FMAC4 soap_get_gml__MeasureType(struct soap*, gml__MeasureType *, const char*, const char*);

inline int soap_read_gml__MeasureType(struct soap *soap, gml__MeasureType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__MeasureType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AngleType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AngleType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AngleType(struct soap*, const char*, int, const gml__AngleType *, const char*);
SOAP_FMAC3 gml__AngleType * SOAP_FMAC4 soap_in_gml__AngleType(struct soap*, const char*, gml__AngleType *, const char*);
SOAP_FMAC1 gml__AngleType * SOAP_FMAC2 soap_instantiate_gml__AngleType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AngleType * soap_new_gml__AngleType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AngleType(soap, n, NULL, NULL, NULL);
}

inline gml__AngleType * soap_new_req_gml__AngleType(
	struct soap *soap,
	double __item1)
{
	gml__AngleType *_p = soap_new_gml__AngleType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item1;
	}
	return _p;
}

inline gml__AngleType * soap_new_set_gml__AngleType(
	struct soap *soap,
	double __item1)
{
	gml__AngleType *_p = soap_new_gml__AngleType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__MeasureType::__item = __item1;
	}
	return _p;
}

inline int soap_write_gml__AngleType(struct soap *soap, gml__AngleType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AngleType", "gml:AngleType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AngleType * SOAP_FMAC4 soap_get_gml__AngleType(struct soap*, gml__AngleType *, const char*, const char*);

inline int soap_read_gml__AngleType(struct soap *soap, gml__AngleType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AngleType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__PrimeMeridianType(struct soap*, const char*, int, const gml__PrimeMeridianType *, const char*);
SOAP_FMAC3 gml__PrimeMeridianType * SOAP_FMAC4 soap_in_gml__PrimeMeridianType(struct soap*, const char*, gml__PrimeMeridianType *, const char*);
SOAP_FMAC1 gml__PrimeMeridianType * SOAP_FMAC2 soap_instantiate_gml__PrimeMeridianType(struct soap*, int, const char*, const char*, size_t*);

inline gml__PrimeMeridianType * soap_new_gml__PrimeMeridianType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__PrimeMeridianType(soap, n, NULL, NULL, NULL);
}

inline gml__PrimeMeridianType * soap_new_req_gml__PrimeMeridianType(
	struct soap *soap,
	gml__AngleType *greenwichLongitude,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__PrimeMeridianType *_p = soap_new_gml__PrimeMeridianType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__PrimeMeridianType::greenwichLongitude = greenwichLongitude;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__PrimeMeridianType * soap_new_set_gml__PrimeMeridianType(
	struct soap *soap,
	gml__AngleType *greenwichLongitude,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__PrimeMeridianType *_p = soap_new_gml__PrimeMeridianType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__PrimeMeridianType::greenwichLongitude = greenwichLongitude;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__PrimeMeridianType(struct soap *soap, gml__PrimeMeridianType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:PrimeMeridianType", "gml:PrimeMeridianType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__PrimeMeridianType * SOAP_FMAC4 soap_get_gml__PrimeMeridianType(struct soap*, gml__PrimeMeridianType *, const char*, const char*);

inline int soap_read_gml__PrimeMeridianType(struct soap *soap, gml__PrimeMeridianType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__PrimeMeridianType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__PrimeMeridianPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__PrimeMeridianPropertyType(struct soap*, const char*, int, const gml__PrimeMeridianPropertyType *, const char*);
SOAP_FMAC3 gml__PrimeMeridianPropertyType * SOAP_FMAC4 soap_in_gml__PrimeMeridianPropertyType(struct soap*, const char*, gml__PrimeMeridianPropertyType *, const char*);
SOAP_FMAC1 gml__PrimeMeridianPropertyType * SOAP_FMAC2 soap_instantiate_gml__PrimeMeridianPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__PrimeMeridianPropertyType * soap_new_gml__PrimeMeridianPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__PrimeMeridianPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__PrimeMeridianPropertyType * soap_new_req_gml__PrimeMeridianPropertyType(
	struct soap *soap)
{
	gml__PrimeMeridianPropertyType *_p = soap_new_gml__PrimeMeridianPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__PrimeMeridianPropertyType * soap_new_set_gml__PrimeMeridianPropertyType(
	struct soap *soap,
	__gml__PrimeMeridianPropertyType_sequence *__PrimeMeridianPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__PrimeMeridianPropertyType *_p = soap_new_gml__PrimeMeridianPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__PrimeMeridianPropertyType::__PrimeMeridianPropertyType_sequence = __PrimeMeridianPropertyType_sequence;
		_p->gml__PrimeMeridianPropertyType::nilReason = nilReason;
		_p->gml__PrimeMeridianPropertyType::xlink__type = xlink__type;
		_p->gml__PrimeMeridianPropertyType::xlink__href = xlink__href;
		_p->gml__PrimeMeridianPropertyType::xlink__role = xlink__role;
		_p->gml__PrimeMeridianPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__PrimeMeridianPropertyType::xlink__title = xlink__title;
		_p->gml__PrimeMeridianPropertyType::xlink__show = xlink__show;
		_p->gml__PrimeMeridianPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__PrimeMeridianPropertyType(struct soap *soap, gml__PrimeMeridianPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:PrimeMeridianPropertyType", "gml:PrimeMeridianPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__PrimeMeridianPropertyType * SOAP_FMAC4 soap_get_gml__PrimeMeridianPropertyType(struct soap*, gml__PrimeMeridianPropertyType *, const char*, const char*);

inline int soap_read_gml__PrimeMeridianPropertyType(struct soap *soap, gml__PrimeMeridianPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__PrimeMeridianPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractDatumType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractDatumType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractDatumType(struct soap*, const char*, int, const gml__AbstractDatumType *, const char*);
SOAP_FMAC3 gml__AbstractDatumType * SOAP_FMAC4 soap_in_gml__AbstractDatumType(struct soap*, const char*, gml__AbstractDatumType *, const char*);
SOAP_FMAC1 gml__AbstractDatumType * SOAP_FMAC2 soap_instantiate_gml__AbstractDatumType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractDatumType * soap_new_gml__AbstractDatumType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractDatumType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractDatumType * soap_new_req_gml__AbstractDatumType(
	struct soap *soap,
	const std::vector<std::string> & scope,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__AbstractDatumType *_p = soap_new_gml__AbstractDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractDatumType::scope = scope;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__AbstractDatumType * soap_new_set_gml__AbstractDatumType(
	struct soap *soap,
	_gml__domainOfValidity *domainOfValidity,
	const std::vector<std::string> & scope,
	gml__CodeType *anchorDefinition,
	std::string *realizationEpoch,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__AbstractDatumType *_p = soap_new_gml__AbstractDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractDatumType::domainOfValidity = domainOfValidity;
		_p->gml__AbstractDatumType::scope = scope;
		_p->gml__AbstractDatumType::anchorDefinition = anchorDefinition;
		_p->gml__AbstractDatumType::realizationEpoch = realizationEpoch;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__AbstractDatumType(struct soap *soap, gml__AbstractDatumType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractDatumType", "gml:AbstractDatumType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractDatumType * SOAP_FMAC4 soap_get_gml__AbstractDatumType(struct soap*, gml__AbstractDatumType *, const char*, const char*);

inline int soap_read_gml__AbstractDatumType(struct soap *soap, gml__AbstractDatumType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractDatumType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeodeticDatumType(struct soap*, const char*, int, const gml__GeodeticDatumType *, const char*);
SOAP_FMAC3 gml__GeodeticDatumType * SOAP_FMAC4 soap_in_gml__GeodeticDatumType(struct soap*, const char*, gml__GeodeticDatumType *, const char*);
SOAP_FMAC1 gml__GeodeticDatumType * SOAP_FMAC2 soap_instantiate_gml__GeodeticDatumType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeodeticDatumType * soap_new_gml__GeodeticDatumType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeodeticDatumType(soap, n, NULL, NULL, NULL);
}

inline gml__GeodeticDatumType * soap_new_req_gml__GeodeticDatumType(
	struct soap *soap,
	gml__PrimeMeridianPropertyType *primeMeridian,
	gml__EllipsoidPropertyType *ellipsoid,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__GeodeticDatumType *_p = soap_new_gml__GeodeticDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticDatumType::primeMeridian = primeMeridian;
		_p->gml__GeodeticDatumType::ellipsoid = ellipsoid;
		_p->gml__AbstractDatumType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__GeodeticDatumType * soap_new_set_gml__GeodeticDatumType(
	struct soap *soap,
	gml__PrimeMeridianPropertyType *primeMeridian,
	gml__EllipsoidPropertyType *ellipsoid,
	_gml__domainOfValidity *domainOfValidity1,
	const std::vector<std::string> & scope1,
	gml__CodeType *anchorDefinition1,
	std::string *realizationEpoch1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__GeodeticDatumType *_p = soap_new_gml__GeodeticDatumType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticDatumType::primeMeridian = primeMeridian;
		_p->gml__GeodeticDatumType::ellipsoid = ellipsoid;
		_p->gml__AbstractDatumType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractDatumType::scope = scope1;
		_p->gml__AbstractDatumType::anchorDefinition = anchorDefinition1;
		_p->gml__AbstractDatumType::realizationEpoch = realizationEpoch1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__GeodeticDatumType(struct soap *soap, gml__GeodeticDatumType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeodeticDatumType", "gml:GeodeticDatumType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeodeticDatumType * SOAP_FMAC4 soap_get_gml__GeodeticDatumType(struct soap*, gml__GeodeticDatumType *, const char*, const char*);

inline int soap_read_gml__GeodeticDatumType(struct soap *soap, gml__GeodeticDatumType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeodeticDatumType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticDatumPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeodeticDatumPropertyType(struct soap*, const char*, int, const gml__GeodeticDatumPropertyType *, const char*);
SOAP_FMAC3 gml__GeodeticDatumPropertyType * SOAP_FMAC4 soap_in_gml__GeodeticDatumPropertyType(struct soap*, const char*, gml__GeodeticDatumPropertyType *, const char*);
SOAP_FMAC1 gml__GeodeticDatumPropertyType * SOAP_FMAC2 soap_instantiate_gml__GeodeticDatumPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeodeticDatumPropertyType * soap_new_gml__GeodeticDatumPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeodeticDatumPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__GeodeticDatumPropertyType * soap_new_req_gml__GeodeticDatumPropertyType(
	struct soap *soap)
{
	gml__GeodeticDatumPropertyType *_p = soap_new_gml__GeodeticDatumPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__GeodeticDatumPropertyType * soap_new_set_gml__GeodeticDatumPropertyType(
	struct soap *soap,
	__gml__GeodeticDatumPropertyType_sequence *__GeodeticDatumPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__GeodeticDatumPropertyType *_p = soap_new_gml__GeodeticDatumPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticDatumPropertyType::__GeodeticDatumPropertyType_sequence = __GeodeticDatumPropertyType_sequence;
		_p->gml__GeodeticDatumPropertyType::nilReason = nilReason;
		_p->gml__GeodeticDatumPropertyType::xlink__type = xlink__type;
		_p->gml__GeodeticDatumPropertyType::xlink__href = xlink__href;
		_p->gml__GeodeticDatumPropertyType::xlink__role = xlink__role;
		_p->gml__GeodeticDatumPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__GeodeticDatumPropertyType::xlink__title = xlink__title;
		_p->gml__GeodeticDatumPropertyType::xlink__show = xlink__show;
		_p->gml__GeodeticDatumPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__GeodeticDatumPropertyType(struct soap *soap, gml__GeodeticDatumPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeodeticDatumPropertyType", "gml:GeodeticDatumPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeodeticDatumPropertyType * SOAP_FMAC4 soap_get_gml__GeodeticDatumPropertyType(struct soap*, gml__GeodeticDatumPropertyType *, const char*, const char*);

inline int soap_read_gml__GeodeticDatumPropertyType(struct soap *soap, gml__GeodeticDatumPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeodeticDatumPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__SphericalCSType(struct soap*, const char*, int, const gml__SphericalCSType *, const char*);
SOAP_FMAC3 gml__SphericalCSType * SOAP_FMAC4 soap_in_gml__SphericalCSType(struct soap*, const char*, gml__SphericalCSType *, const char*);
SOAP_FMAC1 gml__SphericalCSType * SOAP_FMAC2 soap_instantiate_gml__SphericalCSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__SphericalCSType * soap_new_gml__SphericalCSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__SphericalCSType(soap, n, NULL, NULL, NULL);
}

inline gml__SphericalCSType * soap_new_req_gml__SphericalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__SphericalCSType *_p = soap_new_gml__SphericalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__SphericalCSType * soap_new_set_gml__SphericalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	enum gml__AggregationType *aggregationType1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__SphericalCSType *_p = soap_new_gml__SphericalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__SphericalCSType(struct soap *soap, gml__SphericalCSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:SphericalCSType", "gml:SphericalCSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__SphericalCSType * SOAP_FMAC4 soap_get_gml__SphericalCSType(struct soap*, gml__SphericalCSType *, const char*, const char*);

inline int soap_read_gml__SphericalCSType(struct soap *soap, gml__SphericalCSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__SphericalCSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__SphericalCSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__SphericalCSPropertyType(struct soap*, const char*, int, const gml__SphericalCSPropertyType *, const char*);
SOAP_FMAC3 gml__SphericalCSPropertyType * SOAP_FMAC4 soap_in_gml__SphericalCSPropertyType(struct soap*, const char*, gml__SphericalCSPropertyType *, const char*);
SOAP_FMAC1 gml__SphericalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__SphericalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__SphericalCSPropertyType * soap_new_gml__SphericalCSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__SphericalCSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__SphericalCSPropertyType * soap_new_req_gml__SphericalCSPropertyType(
	struct soap *soap)
{
	gml__SphericalCSPropertyType *_p = soap_new_gml__SphericalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__SphericalCSPropertyType * soap_new_set_gml__SphericalCSPropertyType(
	struct soap *soap,
	__gml__SphericalCSPropertyType_sequence *__SphericalCSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__SphericalCSPropertyType *_p = soap_new_gml__SphericalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__SphericalCSPropertyType::__SphericalCSPropertyType_sequence = __SphericalCSPropertyType_sequence;
		_p->gml__SphericalCSPropertyType::nilReason = nilReason;
		_p->gml__SphericalCSPropertyType::xlink__type = xlink__type;
		_p->gml__SphericalCSPropertyType::xlink__href = xlink__href;
		_p->gml__SphericalCSPropertyType::xlink__role = xlink__role;
		_p->gml__SphericalCSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__SphericalCSPropertyType::xlink__title = xlink__title;
		_p->gml__SphericalCSPropertyType::xlink__show = xlink__show;
		_p->gml__SphericalCSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__SphericalCSPropertyType(struct soap *soap, gml__SphericalCSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:SphericalCSPropertyType", "gml:SphericalCSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__SphericalCSPropertyType * SOAP_FMAC4 soap_get_gml__SphericalCSPropertyType(struct soap*, gml__SphericalCSPropertyType *, const char*, const char*);

inline int soap_read_gml__SphericalCSPropertyType(struct soap *soap, gml__SphericalCSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__SphericalCSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CartesianCSType(struct soap*, const char*, int, const gml__CartesianCSType *, const char*);
SOAP_FMAC3 gml__CartesianCSType * SOAP_FMAC4 soap_in_gml__CartesianCSType(struct soap*, const char*, gml__CartesianCSType *, const char*);
SOAP_FMAC1 gml__CartesianCSType * SOAP_FMAC2 soap_instantiate_gml__CartesianCSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CartesianCSType * soap_new_gml__CartesianCSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CartesianCSType(soap, n, NULL, NULL, NULL);
}

inline gml__CartesianCSType * soap_new_req_gml__CartesianCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__CartesianCSType *_p = soap_new_gml__CartesianCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__CartesianCSType * soap_new_set_gml__CartesianCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	enum gml__AggregationType *aggregationType1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__CartesianCSType *_p = soap_new_gml__CartesianCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__CartesianCSType(struct soap *soap, gml__CartesianCSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CartesianCSType", "gml:CartesianCSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CartesianCSType * SOAP_FMAC4 soap_get_gml__CartesianCSType(struct soap*, gml__CartesianCSType *, const char*, const char*);

inline int soap_read_gml__CartesianCSType(struct soap *soap, gml__CartesianCSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CartesianCSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CartesianCSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CartesianCSPropertyType(struct soap*, const char*, int, const gml__CartesianCSPropertyType *, const char*);
SOAP_FMAC3 gml__CartesianCSPropertyType * SOAP_FMAC4 soap_in_gml__CartesianCSPropertyType(struct soap*, const char*, gml__CartesianCSPropertyType *, const char*);
SOAP_FMAC1 gml__CartesianCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__CartesianCSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CartesianCSPropertyType * soap_new_gml__CartesianCSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CartesianCSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__CartesianCSPropertyType * soap_new_req_gml__CartesianCSPropertyType(
	struct soap *soap)
{
	gml__CartesianCSPropertyType *_p = soap_new_gml__CartesianCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__CartesianCSPropertyType * soap_new_set_gml__CartesianCSPropertyType(
	struct soap *soap,
	__gml__CartesianCSPropertyType_sequence *__CartesianCSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__CartesianCSPropertyType *_p = soap_new_gml__CartesianCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CartesianCSPropertyType::__CartesianCSPropertyType_sequence = __CartesianCSPropertyType_sequence;
		_p->gml__CartesianCSPropertyType::nilReason = nilReason;
		_p->gml__CartesianCSPropertyType::xlink__type = xlink__type;
		_p->gml__CartesianCSPropertyType::xlink__href = xlink__href;
		_p->gml__CartesianCSPropertyType::xlink__role = xlink__role;
		_p->gml__CartesianCSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__CartesianCSPropertyType::xlink__title = xlink__title;
		_p->gml__CartesianCSPropertyType::xlink__show = xlink__show;
		_p->gml__CartesianCSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__CartesianCSPropertyType(struct soap *soap, gml__CartesianCSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CartesianCSPropertyType", "gml:CartesianCSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CartesianCSPropertyType * SOAP_FMAC4 soap_get_gml__CartesianCSPropertyType(struct soap*, gml__CartesianCSPropertyType *, const char*, const char*);

inline int soap_read_gml__CartesianCSPropertyType(struct soap *soap, gml__CartesianCSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CartesianCSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CoordinateSystemAxisType(struct soap*, const char*, int, const gml__CoordinateSystemAxisType *, const char*);
SOAP_FMAC3 gml__CoordinateSystemAxisType * SOAP_FMAC4 soap_in_gml__CoordinateSystemAxisType(struct soap*, const char*, gml__CoordinateSystemAxisType *, const char*);
SOAP_FMAC1 gml__CoordinateSystemAxisType * SOAP_FMAC2 soap_instantiate_gml__CoordinateSystemAxisType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CoordinateSystemAxisType * soap_new_gml__CoordinateSystemAxisType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CoordinateSystemAxisType(soap, n, NULL, NULL, NULL);
}

inline gml__CoordinateSystemAxisType * soap_new_req_gml__CoordinateSystemAxisType(
	struct soap *soap,
	gml__CodeType *axisAbbrev,
	gml__CodeWithAuthorityType *axisDirection,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__CoordinateSystemAxisType *_p = soap_new_gml__CoordinateSystemAxisType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CoordinateSystemAxisType::axisAbbrev = axisAbbrev;
		_p->gml__CoordinateSystemAxisType::axisDirection = axisDirection;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__CoordinateSystemAxisType * soap_new_set_gml__CoordinateSystemAxisType(
	struct soap *soap,
	gml__CodeType *axisAbbrev,
	gml__CodeWithAuthorityType *axisDirection,
	double *minimumValue,
	double *maximumValue,
	gml__CodeWithAuthorityType *rangeMeaning,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__CoordinateSystemAxisType *_p = soap_new_gml__CoordinateSystemAxisType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CoordinateSystemAxisType::axisAbbrev = axisAbbrev;
		_p->gml__CoordinateSystemAxisType::axisDirection = axisDirection;
		_p->gml__CoordinateSystemAxisType::minimumValue = minimumValue;
		_p->gml__CoordinateSystemAxisType::maximumValue = maximumValue;
		_p->gml__CoordinateSystemAxisType::rangeMeaning = rangeMeaning;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__CoordinateSystemAxisType(struct soap *soap, gml__CoordinateSystemAxisType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CoordinateSystemAxisType", "gml:CoordinateSystemAxisType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CoordinateSystemAxisType * SOAP_FMAC4 soap_get_gml__CoordinateSystemAxisType(struct soap*, gml__CoordinateSystemAxisType *, const char*, const char*);

inline int soap_read_gml__CoordinateSystemAxisType(struct soap *soap, gml__CoordinateSystemAxisType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CoordinateSystemAxisType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CoordinateSystemAxisPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CoordinateSystemAxisPropertyType(struct soap*, const char*, int, const gml__CoordinateSystemAxisPropertyType *, const char*);
SOAP_FMAC3 gml__CoordinateSystemAxisPropertyType * SOAP_FMAC4 soap_in_gml__CoordinateSystemAxisPropertyType(struct soap*, const char*, gml__CoordinateSystemAxisPropertyType *, const char*);
SOAP_FMAC1 gml__CoordinateSystemAxisPropertyType * SOAP_FMAC2 soap_instantiate_gml__CoordinateSystemAxisPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CoordinateSystemAxisPropertyType * soap_new_gml__CoordinateSystemAxisPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CoordinateSystemAxisPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__CoordinateSystemAxisPropertyType * soap_new_req_gml__CoordinateSystemAxisPropertyType(
	struct soap *soap)
{
	gml__CoordinateSystemAxisPropertyType *_p = soap_new_gml__CoordinateSystemAxisPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__CoordinateSystemAxisPropertyType * soap_new_set_gml__CoordinateSystemAxisPropertyType(
	struct soap *soap,
	__gml__CoordinateSystemAxisPropertyType_sequence *__CoordinateSystemAxisPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__CoordinateSystemAxisPropertyType *_p = soap_new_gml__CoordinateSystemAxisPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CoordinateSystemAxisPropertyType::__CoordinateSystemAxisPropertyType_sequence = __CoordinateSystemAxisPropertyType_sequence;
		_p->gml__CoordinateSystemAxisPropertyType::nilReason = nilReason;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__type = xlink__type;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__href = xlink__href;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__role = xlink__role;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__title = xlink__title;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__show = xlink__show;
		_p->gml__CoordinateSystemAxisPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__CoordinateSystemAxisPropertyType(struct soap *soap, gml__CoordinateSystemAxisPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CoordinateSystemAxisPropertyType", "gml:CoordinateSystemAxisPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CoordinateSystemAxisPropertyType * SOAP_FMAC4 soap_get_gml__CoordinateSystemAxisPropertyType(struct soap*, gml__CoordinateSystemAxisPropertyType *, const char*, const char*);

inline int soap_read_gml__CoordinateSystemAxisPropertyType(struct soap *soap, gml__CoordinateSystemAxisPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CoordinateSystemAxisPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateSystemType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCoordinateSystemType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractCoordinateSystemType(struct soap*, const char*, int, const gml__AbstractCoordinateSystemType *, const char*);
SOAP_FMAC3 gml__AbstractCoordinateSystemType * SOAP_FMAC4 soap_in_gml__AbstractCoordinateSystemType(struct soap*, const char*, gml__AbstractCoordinateSystemType *, const char*);
SOAP_FMAC1 gml__AbstractCoordinateSystemType * SOAP_FMAC2 soap_instantiate_gml__AbstractCoordinateSystemType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractCoordinateSystemType * soap_new_gml__AbstractCoordinateSystemType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractCoordinateSystemType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractCoordinateSystemType * soap_new_req_gml__AbstractCoordinateSystemType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__AbstractCoordinateSystemType *_p = soap_new_gml__AbstractCoordinateSystemType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__AbstractCoordinateSystemType * soap_new_set_gml__AbstractCoordinateSystemType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis,
	enum gml__AggregationType *aggregationType,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__AbstractCoordinateSystemType *_p = soap_new_gml__AbstractCoordinateSystemType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__AbstractCoordinateSystemType(struct soap *soap, gml__AbstractCoordinateSystemType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractCoordinateSystemType", "gml:AbstractCoordinateSystemType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractCoordinateSystemType * SOAP_FMAC4 soap_get_gml__AbstractCoordinateSystemType(struct soap*, gml__AbstractCoordinateSystemType *, const char*, const char*);

inline int soap_read_gml__AbstractCoordinateSystemType(struct soap *soap, gml__AbstractCoordinateSystemType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractCoordinateSystemType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__EllipsoidalCSType(struct soap*, const char*, int, const gml__EllipsoidalCSType *, const char*);
SOAP_FMAC3 gml__EllipsoidalCSType * SOAP_FMAC4 soap_in_gml__EllipsoidalCSType(struct soap*, const char*, gml__EllipsoidalCSType *, const char*);
SOAP_FMAC1 gml__EllipsoidalCSType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidalCSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__EllipsoidalCSType * soap_new_gml__EllipsoidalCSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__EllipsoidalCSType(soap, n, NULL, NULL, NULL);
}

inline gml__EllipsoidalCSType * soap_new_req_gml__EllipsoidalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__EllipsoidalCSType *_p = soap_new_gml__EllipsoidalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__EllipsoidalCSType * soap_new_set_gml__EllipsoidalCSType(
	struct soap *soap,
	const std::vector<gml__CoordinateSystemAxisPropertyType *> & axis1,
	enum gml__AggregationType *aggregationType1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__EllipsoidalCSType *_p = soap_new_gml__EllipsoidalCSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCoordinateSystemType::axis = axis1;
		_p->gml__AbstractCoordinateSystemType::aggregationType = aggregationType1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__EllipsoidalCSType(struct soap *soap, gml__EllipsoidalCSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:EllipsoidalCSType", "gml:EllipsoidalCSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__EllipsoidalCSType * SOAP_FMAC4 soap_get_gml__EllipsoidalCSType(struct soap*, gml__EllipsoidalCSType *, const char*, const char*);

inline int soap_read_gml__EllipsoidalCSType(struct soap *soap, gml__EllipsoidalCSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__EllipsoidalCSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__EllipsoidalCSPropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__EllipsoidalCSPropertyType(struct soap*, const char*, int, const gml__EllipsoidalCSPropertyType *, const char*);
SOAP_FMAC3 gml__EllipsoidalCSPropertyType * SOAP_FMAC4 soap_in_gml__EllipsoidalCSPropertyType(struct soap*, const char*, gml__EllipsoidalCSPropertyType *, const char*);
SOAP_FMAC1 gml__EllipsoidalCSPropertyType * SOAP_FMAC2 soap_instantiate_gml__EllipsoidalCSPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__EllipsoidalCSPropertyType * soap_new_gml__EllipsoidalCSPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__EllipsoidalCSPropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__EllipsoidalCSPropertyType * soap_new_req_gml__EllipsoidalCSPropertyType(
	struct soap *soap)
{
	gml__EllipsoidalCSPropertyType *_p = soap_new_gml__EllipsoidalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__EllipsoidalCSPropertyType * soap_new_set_gml__EllipsoidalCSPropertyType(
	struct soap *soap,
	__gml__EllipsoidalCSPropertyType_sequence *__EllipsoidalCSPropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__EllipsoidalCSPropertyType *_p = soap_new_gml__EllipsoidalCSPropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__EllipsoidalCSPropertyType::__EllipsoidalCSPropertyType_sequence = __EllipsoidalCSPropertyType_sequence;
		_p->gml__EllipsoidalCSPropertyType::nilReason = nilReason;
		_p->gml__EllipsoidalCSPropertyType::xlink__type = xlink__type;
		_p->gml__EllipsoidalCSPropertyType::xlink__href = xlink__href;
		_p->gml__EllipsoidalCSPropertyType::xlink__role = xlink__role;
		_p->gml__EllipsoidalCSPropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__EllipsoidalCSPropertyType::xlink__title = xlink__title;
		_p->gml__EllipsoidalCSPropertyType::xlink__show = xlink__show;
		_p->gml__EllipsoidalCSPropertyType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__EllipsoidalCSPropertyType(struct soap *soap, gml__EllipsoidalCSPropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:EllipsoidalCSPropertyType", "gml:EllipsoidalCSPropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__EllipsoidalCSPropertyType * SOAP_FMAC4 soap_get_gml__EllipsoidalCSPropertyType(struct soap*, gml__EllipsoidalCSPropertyType *, const char*, const char*);

inline int soap_read_gml__EllipsoidalCSPropertyType(struct soap *soap, gml__EllipsoidalCSPropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__EllipsoidalCSPropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__TimePrimitivePropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__TimePrimitivePropertyType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__TimePrimitivePropertyType(struct soap*, const char*, int, const gml__TimePrimitivePropertyType *, const char*);
SOAP_FMAC3 gml__TimePrimitivePropertyType * SOAP_FMAC4 soap_in_gml__TimePrimitivePropertyType(struct soap*, const char*, gml__TimePrimitivePropertyType *, const char*);
SOAP_FMAC1 gml__TimePrimitivePropertyType * SOAP_FMAC2 soap_instantiate_gml__TimePrimitivePropertyType(struct soap*, int, const char*, const char*, size_t*);

inline gml__TimePrimitivePropertyType * soap_new_gml__TimePrimitivePropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__TimePrimitivePropertyType(soap, n, NULL, NULL, NULL);
}

inline gml__TimePrimitivePropertyType * soap_new_req_gml__TimePrimitivePropertyType(
	struct soap *soap)
{
	gml__TimePrimitivePropertyType *_p = soap_new_gml__TimePrimitivePropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__TimePrimitivePropertyType * soap_new_set_gml__TimePrimitivePropertyType(
	struct soap *soap,
	__gml__TimePrimitivePropertyType_sequence *__TimePrimitivePropertyType_sequence,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate,
	bool owns)
{
	gml__TimePrimitivePropertyType *_p = soap_new_gml__TimePrimitivePropertyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__TimePrimitivePropertyType::__TimePrimitivePropertyType_sequence = __TimePrimitivePropertyType_sequence;
		_p->gml__TimePrimitivePropertyType::nilReason = nilReason;
		_p->gml__TimePrimitivePropertyType::xlink__type = xlink__type;
		_p->gml__TimePrimitivePropertyType::xlink__href = xlink__href;
		_p->gml__TimePrimitivePropertyType::xlink__role = xlink__role;
		_p->gml__TimePrimitivePropertyType::xlink__arcrole = xlink__arcrole;
		_p->gml__TimePrimitivePropertyType::xlink__title = xlink__title;
		_p->gml__TimePrimitivePropertyType::xlink__show = xlink__show;
		_p->gml__TimePrimitivePropertyType::xlink__actuate = xlink__actuate;
		_p->gml__TimePrimitivePropertyType::owns = owns;
	}
	return _p;
}

inline int soap_write_gml__TimePrimitivePropertyType(struct soap *soap, gml__TimePrimitivePropertyType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:TimePrimitivePropertyType", "gml:TimePrimitivePropertyType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__TimePrimitivePropertyType * SOAP_FMAC4 soap_get_gml__TimePrimitivePropertyType(struct soap*, gml__TimePrimitivePropertyType *, const char*, const char*);

inline int soap_read_gml__TimePrimitivePropertyType(struct soap *soap, gml__TimePrimitivePropertyType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__TimePrimitivePropertyType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__RelatedTimeType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__RelatedTimeType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__RelatedTimeType(struct soap*, const char*, int, const gml__RelatedTimeType *, const char*);
SOAP_FMAC3 gml__RelatedTimeType * SOAP_FMAC4 soap_in_gml__RelatedTimeType(struct soap*, const char*, gml__RelatedTimeType *, const char*);
SOAP_FMAC1 gml__RelatedTimeType * SOAP_FMAC2 soap_instantiate_gml__RelatedTimeType(struct soap*, int, const char*, const char*, size_t*);

inline gml__RelatedTimeType * soap_new_gml__RelatedTimeType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__RelatedTimeType(soap, n, NULL, NULL, NULL);
}

inline gml__RelatedTimeType * soap_new_req_gml__RelatedTimeType(
	struct soap *soap)
{
	gml__RelatedTimeType *_p = soap_new_gml__RelatedTimeType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__RelatedTimeType * soap_new_set_gml__RelatedTimeType(
	struct soap *soap,
	enum _gml__RelatedTimeType_relativePosition *relativePosition,
	__gml__TimePrimitivePropertyType_sequence *__TimePrimitivePropertyType_sequence1,
	std::string *nilReason1,
	std::string *xlink__type1,
	std::string *xlink__href1,
	std::string *xlink__role1,
	std::string *xlink__arcrole1,
	std::string *xlink__title1,
	enum _xlink__show *xlink__show1,
	enum _xlink__actuate *xlink__actuate1,
	bool owns1)
{
	gml__RelatedTimeType *_p = soap_new_gml__RelatedTimeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__RelatedTimeType::relativePosition = relativePosition;
		_p->gml__TimePrimitivePropertyType::__TimePrimitivePropertyType_sequence = __TimePrimitivePropertyType_sequence1;
		_p->gml__TimePrimitivePropertyType::nilReason = nilReason1;
		_p->gml__TimePrimitivePropertyType::xlink__type = xlink__type1;
		_p->gml__TimePrimitivePropertyType::xlink__href = xlink__href1;
		_p->gml__TimePrimitivePropertyType::xlink__role = xlink__role1;
		_p->gml__TimePrimitivePropertyType::xlink__arcrole = xlink__arcrole1;
		_p->gml__TimePrimitivePropertyType::xlink__title = xlink__title1;
		_p->gml__TimePrimitivePropertyType::xlink__show = xlink__show1;
		_p->gml__TimePrimitivePropertyType::xlink__actuate = xlink__actuate1;
		_p->gml__TimePrimitivePropertyType::owns = owns1;
	}
	return _p;
}

inline int soap_write_gml__RelatedTimeType(struct soap *soap, gml__RelatedTimeType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:RelatedTimeType", "gml:RelatedTimeType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__RelatedTimeType * SOAP_FMAC4 soap_get_gml__RelatedTimeType(struct soap*, gml__RelatedTimeType *, const char*, const char*);

inline int soap_read_gml__RelatedTimeType(struct soap *soap, gml__RelatedTimeType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__RelatedTimeType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimeObjectType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimeObjectType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractTimeObjectType(struct soap*, const char*, int, const gml__AbstractTimeObjectType *, const char*);
SOAP_FMAC3 gml__AbstractTimeObjectType * SOAP_FMAC4 soap_in_gml__AbstractTimeObjectType(struct soap*, const char*, gml__AbstractTimeObjectType *, const char*);
SOAP_FMAC1 gml__AbstractTimeObjectType * SOAP_FMAC2 soap_instantiate_gml__AbstractTimeObjectType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractTimeObjectType * soap_new_gml__AbstractTimeObjectType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractTimeObjectType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractTimeObjectType * soap_new_req_gml__AbstractTimeObjectType(
	struct soap *soap,
	const std::string& gml__id1)
{
	gml__AbstractTimeObjectType *_p = soap_new_gml__AbstractTimeObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::gml__id = gml__id1;
	}
	return _p;
}

inline gml__AbstractTimeObjectType * soap_new_set_gml__AbstractTimeObjectType(
	struct soap *soap,
	gml__StringOrRefType *description1,
	gml__ReferenceType *descriptionReference1,
	gml__CodeWithAuthorityType *identifier1,
	const std::vector<gml__CodeType *> & name1,
	const std::string& gml__id1)
{
	gml__AbstractTimeObjectType *_p = soap_new_gml__AbstractTimeObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::description = description1;
		_p->gml__AbstractGMLType::descriptionReference = descriptionReference1;
		_p->gml__AbstractGMLType::identifier = identifier1;
		_p->gml__AbstractGMLType::name = name1;
		_p->gml__AbstractGMLType::gml__id = gml__id1;
	}
	return _p;
}

inline int soap_write_gml__AbstractTimeObjectType(struct soap *soap, gml__AbstractTimeObjectType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractTimeObjectType", "gml:AbstractTimeObjectType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractTimeObjectType * SOAP_FMAC4 soap_get_gml__AbstractTimeObjectType(struct soap*, gml__AbstractTimeObjectType *, const char*, const char*);

inline int soap_read_gml__AbstractTimeObjectType(struct soap *soap, gml__AbstractTimeObjectType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractTimeObjectType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimePrimitiveType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractTimePrimitiveType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractTimePrimitiveType(struct soap*, const char*, int, const gml__AbstractTimePrimitiveType *, const char*);
SOAP_FMAC3 gml__AbstractTimePrimitiveType * SOAP_FMAC4 soap_in_gml__AbstractTimePrimitiveType(struct soap*, const char*, gml__AbstractTimePrimitiveType *, const char*);
SOAP_FMAC1 gml__AbstractTimePrimitiveType * SOAP_FMAC2 soap_instantiate_gml__AbstractTimePrimitiveType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractTimePrimitiveType * soap_new_gml__AbstractTimePrimitiveType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractTimePrimitiveType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractTimePrimitiveType * soap_new_req_gml__AbstractTimePrimitiveType(
	struct soap *soap,
	const std::string& gml__id2)
{
	gml__AbstractTimePrimitiveType *_p = soap_new_gml__AbstractTimePrimitiveType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::gml__id = gml__id2;
	}
	return _p;
}

inline gml__AbstractTimePrimitiveType * soap_new_set_gml__AbstractTimePrimitiveType(
	struct soap *soap,
	const std::vector<gml__RelatedTimeType *> & relatedTime,
	gml__StringOrRefType *description2,
	gml__ReferenceType *descriptionReference2,
	gml__CodeWithAuthorityType *identifier2,
	const std::vector<gml__CodeType *> & name2,
	const std::string& gml__id2)
{
	gml__AbstractTimePrimitiveType *_p = soap_new_gml__AbstractTimePrimitiveType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractTimePrimitiveType::relatedTime = relatedTime;
		_p->gml__AbstractGMLType::description = description2;
		_p->gml__AbstractGMLType::descriptionReference = descriptionReference2;
		_p->gml__AbstractGMLType::identifier = identifier2;
		_p->gml__AbstractGMLType::name = name2;
		_p->gml__AbstractGMLType::gml__id = gml__id2;
	}
	return _p;
}

inline int soap_write_gml__AbstractTimePrimitiveType(struct soap *soap, gml__AbstractTimePrimitiveType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractTimePrimitiveType", "gml:AbstractTimePrimitiveType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractTimePrimitiveType * SOAP_FMAC4 soap_get_gml__AbstractTimePrimitiveType(struct soap*, gml__AbstractTimePrimitiveType *, const char*, const char*);

inline int soap_read_gml__AbstractTimePrimitiveType(struct soap *soap, gml__AbstractTimePrimitiveType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractTimePrimitiveType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CodeType(struct soap*, const char*, int, const gml__CodeType *, const char*);
SOAP_FMAC3 gml__CodeType * SOAP_FMAC4 soap_in_gml__CodeType(struct soap*, const char*, gml__CodeType *, const char*);
SOAP_FMAC1 gml__CodeType * SOAP_FMAC2 soap_instantiate_gml__CodeType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CodeType * soap_new_gml__CodeType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CodeType(soap, n, NULL, NULL, NULL);
}

inline gml__CodeType * soap_new_req_gml__CodeType(
	struct soap *soap,
	const std::string& __item)
{
	gml__CodeType *_p = soap_new_gml__CodeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CodeType::__item = __item;
	}
	return _p;
}

inline gml__CodeType * soap_new_set_gml__CodeType(
	struct soap *soap,
	const std::string& __item,
	std::string *codeSpace)
{
	gml__CodeType *_p = soap_new_gml__CodeType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CodeType::__item = __item;
		_p->gml__CodeType::codeSpace = codeSpace;
	}
	return _p;
}

inline int soap_write_gml__CodeType(struct soap *soap, gml__CodeType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CodeType", "gml:CodeType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CodeType * SOAP_FMAC4 soap_get_gml__CodeType(struct soap*, gml__CodeType *, const char*, const char*);

inline int soap_read_gml__CodeType(struct soap *soap, gml__CodeType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CodeType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeWithAuthorityType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__CodeWithAuthorityType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__CodeWithAuthorityType(struct soap*, const char*, int, const gml__CodeWithAuthorityType *, const char*);
SOAP_FMAC3 gml__CodeWithAuthorityType * SOAP_FMAC4 soap_in_gml__CodeWithAuthorityType(struct soap*, const char*, gml__CodeWithAuthorityType *, const char*);
SOAP_FMAC1 gml__CodeWithAuthorityType * SOAP_FMAC2 soap_instantiate_gml__CodeWithAuthorityType(struct soap*, int, const char*, const char*, size_t*);

inline gml__CodeWithAuthorityType * soap_new_gml__CodeWithAuthorityType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__CodeWithAuthorityType(soap, n, NULL, NULL, NULL);
}

inline gml__CodeWithAuthorityType * soap_new_req_gml__CodeWithAuthorityType(
	struct soap *soap,
	const std::string& __item,
	const std::string& codeSpace)
{
	gml__CodeWithAuthorityType *_p = soap_new_gml__CodeWithAuthorityType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CodeWithAuthorityType::__item = __item;
		_p->gml__CodeWithAuthorityType::codeSpace = codeSpace;
	}
	return _p;
}

inline gml__CodeWithAuthorityType * soap_new_set_gml__CodeWithAuthorityType(
	struct soap *soap,
	const std::string& __item,
	const std::string& codeSpace,
	std::string *codeSpace_)
{
	gml__CodeWithAuthorityType *_p = soap_new_gml__CodeWithAuthorityType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__CodeWithAuthorityType::__item = __item;
		_p->gml__CodeWithAuthorityType::codeSpace = codeSpace;
		_p->gml__CodeWithAuthorityType::codeSpace_ = codeSpace_;
	}
	return _p;
}

inline int soap_write_gml__CodeWithAuthorityType(struct soap *soap, gml__CodeWithAuthorityType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:CodeWithAuthorityType", "gml:CodeWithAuthorityType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__CodeWithAuthorityType * SOAP_FMAC4 soap_get_gml__CodeWithAuthorityType(struct soap*, gml__CodeWithAuthorityType *, const char*, const char*);

inline int soap_read_gml__CodeWithAuthorityType(struct soap *soap, gml__CodeWithAuthorityType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__CodeWithAuthorityType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__ReferenceType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__ReferenceType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__ReferenceType(struct soap*, const char*, int, const gml__ReferenceType *, const char*);
SOAP_FMAC3 gml__ReferenceType * SOAP_FMAC4 soap_in_gml__ReferenceType(struct soap*, const char*, gml__ReferenceType *, const char*);
SOAP_FMAC1 gml__ReferenceType * SOAP_FMAC2 soap_instantiate_gml__ReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline gml__ReferenceType * soap_new_gml__ReferenceType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__ReferenceType(soap, n, NULL, NULL, NULL);
}

inline gml__ReferenceType * soap_new_req_gml__ReferenceType(
	struct soap *soap)
{
	gml__ReferenceType *_p = soap_new_gml__ReferenceType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline gml__ReferenceType * soap_new_set_gml__ReferenceType(
	struct soap *soap,
	bool owns,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__ReferenceType *_p = soap_new_gml__ReferenceType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__ReferenceType::owns = owns;
		_p->gml__ReferenceType::nilReason = nilReason;
		_p->gml__ReferenceType::xlink__type = xlink__type;
		_p->gml__ReferenceType::xlink__href = xlink__href;
		_p->gml__ReferenceType::xlink__role = xlink__role;
		_p->gml__ReferenceType::xlink__arcrole = xlink__arcrole;
		_p->gml__ReferenceType::xlink__title = xlink__title;
		_p->gml__ReferenceType::xlink__show = xlink__show;
		_p->gml__ReferenceType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__ReferenceType(struct soap *soap, gml__ReferenceType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:ReferenceType", "gml:ReferenceType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__ReferenceType * SOAP_FMAC4 soap_get_gml__ReferenceType(struct soap*, gml__ReferenceType *, const char*, const char*);

inline int soap_read_gml__ReferenceType(struct soap *soap, gml__ReferenceType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__ReferenceType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__StringOrRefType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__StringOrRefType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__StringOrRefType(struct soap*, const char*, int, const gml__StringOrRefType *, const char*);
SOAP_FMAC3 gml__StringOrRefType * SOAP_FMAC4 soap_in_gml__StringOrRefType(struct soap*, const char*, gml__StringOrRefType *, const char*);
SOAP_FMAC1 gml__StringOrRefType * SOAP_FMAC2 soap_instantiate_gml__StringOrRefType(struct soap*, int, const char*, const char*, size_t*);

inline gml__StringOrRefType * soap_new_gml__StringOrRefType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__StringOrRefType(soap, n, NULL, NULL, NULL);
}

inline gml__StringOrRefType * soap_new_req_gml__StringOrRefType(
	struct soap *soap,
	const std::string& __item)
{
	gml__StringOrRefType *_p = soap_new_gml__StringOrRefType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__StringOrRefType::__item = __item;
	}
	return _p;
}

inline gml__StringOrRefType * soap_new_set_gml__StringOrRefType(
	struct soap *soap,
	const std::string& __item,
	std::string *nilReason,
	std::string *xlink__type,
	std::string *xlink__href,
	std::string *xlink__role,
	std::string *xlink__arcrole,
	std::string *xlink__title,
	enum _xlink__show *xlink__show,
	enum _xlink__actuate *xlink__actuate)
{
	gml__StringOrRefType *_p = soap_new_gml__StringOrRefType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__StringOrRefType::__item = __item;
		_p->gml__StringOrRefType::nilReason = nilReason;
		_p->gml__StringOrRefType::xlink__type = xlink__type;
		_p->gml__StringOrRefType::xlink__href = xlink__href;
		_p->gml__StringOrRefType::xlink__role = xlink__role;
		_p->gml__StringOrRefType::xlink__arcrole = xlink__arcrole;
		_p->gml__StringOrRefType::xlink__title = xlink__title;
		_p->gml__StringOrRefType::xlink__show = xlink__show;
		_p->gml__StringOrRefType::xlink__actuate = xlink__actuate;
	}
	return _p;
}

inline int soap_write_gml__StringOrRefType(struct soap *soap, gml__StringOrRefType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:StringOrRefType", "gml:StringOrRefType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__StringOrRefType * SOAP_FMAC4 soap_get_gml__StringOrRefType(struct soap*, gml__StringOrRefType *, const char*, const char*);

inline int soap_read_gml__StringOrRefType(struct soap *soap, gml__StringOrRefType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__StringOrRefType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGMLType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractGMLType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractGMLType(struct soap*, const char*, int, const gml__AbstractGMLType *, const char*);
SOAP_FMAC3 gml__AbstractGMLType * SOAP_FMAC4 soap_in_gml__AbstractGMLType(struct soap*, const char*, gml__AbstractGMLType *, const char*);
SOAP_FMAC1 gml__AbstractGMLType * SOAP_FMAC2 soap_instantiate_gml__AbstractGMLType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractGMLType * soap_new_gml__AbstractGMLType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractGMLType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractGMLType * soap_new_req_gml__AbstractGMLType(
	struct soap *soap,
	const std::string& gml__id)
{
	gml__AbstractGMLType *_p = soap_new_gml__AbstractGMLType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::gml__id = gml__id;
	}
	return _p;
}

inline gml__AbstractGMLType * soap_new_set_gml__AbstractGMLType(
	struct soap *soap,
	gml__StringOrRefType *description,
	gml__ReferenceType *descriptionReference,
	gml__CodeWithAuthorityType *identifier,
	const std::vector<gml__CodeType *> & name,
	const std::string& gml__id)
{
	gml__AbstractGMLType *_p = soap_new_gml__AbstractGMLType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractGMLType::description = description;
		_p->gml__AbstractGMLType::descriptionReference = descriptionReference;
		_p->gml__AbstractGMLType::identifier = identifier;
		_p->gml__AbstractGMLType::name = name;
		_p->gml__AbstractGMLType::gml__id = gml__id;
	}
	return _p;
}

inline int soap_write_gml__AbstractGMLType(struct soap *soap, gml__AbstractGMLType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractGMLType", "gml:AbstractGMLType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractGMLType * SOAP_FMAC4 soap_get_gml__AbstractGMLType(struct soap*, gml__AbstractGMLType *, const char*, const char*);

inline int soap_read_gml__AbstractGMLType(struct soap *soap, gml__AbstractGMLType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractGMLType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionBaseType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionBaseType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__DefinitionBaseType(struct soap*, const char*, int, const gml__DefinitionBaseType *, const char*);
SOAP_FMAC3 gml__DefinitionBaseType * SOAP_FMAC4 soap_in_gml__DefinitionBaseType(struct soap*, const char*, gml__DefinitionBaseType *, const char*);
SOAP_FMAC1 gml__DefinitionBaseType * SOAP_FMAC2 soap_instantiate_gml__DefinitionBaseType(struct soap*, int, const char*, const char*, size_t*);

inline gml__DefinitionBaseType * soap_new_gml__DefinitionBaseType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__DefinitionBaseType(soap, n, NULL, NULL, NULL);
}

inline gml__DefinitionBaseType * soap_new_req_gml__DefinitionBaseType(
	struct soap *soap,
	gml__CodeWithAuthorityType *identifier,
	const std::string& gml__id)
{
	gml__DefinitionBaseType *_p = soap_new_gml__DefinitionBaseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionBaseType::identifier = identifier;
		_p->gml__DefinitionBaseType::gml__id = gml__id;
	}
	return _p;
}

inline gml__DefinitionBaseType * soap_new_set_gml__DefinitionBaseType(
	struct soap *soap,
	gml__StringOrRefType *description,
	gml__ReferenceType *descriptionReference,
	gml__CodeWithAuthorityType *identifier,
	const std::vector<gml__CodeType *> & name,
	const std::string& gml__id)
{
	gml__DefinitionBaseType *_p = soap_new_gml__DefinitionBaseType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionBaseType::description = description;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference;
		_p->gml__DefinitionBaseType::identifier = identifier;
		_p->gml__DefinitionBaseType::name = name;
		_p->gml__DefinitionBaseType::gml__id = gml__id;
	}
	return _p;
}

inline int soap_write_gml__DefinitionBaseType(struct soap *soap, gml__DefinitionBaseType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:DefinitionBaseType", "gml:DefinitionBaseType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__DefinitionBaseType * SOAP_FMAC4 soap_get_gml__DefinitionBaseType(struct soap*, gml__DefinitionBaseType *, const char*, const char*);

inline int soap_read_gml__DefinitionBaseType(struct soap *soap, gml__DefinitionBaseType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__DefinitionBaseType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__DefinitionType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__DefinitionType(struct soap*, const char*, int, const gml__DefinitionType *, const char*);
SOAP_FMAC3 gml__DefinitionType * SOAP_FMAC4 soap_in_gml__DefinitionType(struct soap*, const char*, gml__DefinitionType *, const char*);
SOAP_FMAC1 gml__DefinitionType * SOAP_FMAC2 soap_instantiate_gml__DefinitionType(struct soap*, int, const char*, const char*, size_t*);

inline gml__DefinitionType * soap_new_gml__DefinitionType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__DefinitionType(soap, n, NULL, NULL, NULL);
}

inline gml__DefinitionType * soap_new_req_gml__DefinitionType(
	struct soap *soap,
	gml__CodeWithAuthorityType *identifier1,
	const std::string& gml__id1)
{
	gml__DefinitionType *_p = soap_new_gml__DefinitionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionBaseType::identifier = identifier1;
		_p->gml__DefinitionBaseType::gml__id = gml__id1;
	}
	return _p;
}

inline gml__DefinitionType * soap_new_set_gml__DefinitionType(
	struct soap *soap,
	std::string *remarks,
	gml__StringOrRefType *description1,
	gml__ReferenceType *descriptionReference1,
	gml__CodeWithAuthorityType *identifier1,
	const std::vector<gml__CodeType *> & name1,
	const std::string& gml__id1)
{
	gml__DefinitionType *_p = soap_new_gml__DefinitionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionType::remarks = remarks;
		_p->gml__DefinitionBaseType::description = description1;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference1;
		_p->gml__DefinitionBaseType::identifier = identifier1;
		_p->gml__DefinitionBaseType::name = name1;
		_p->gml__DefinitionBaseType::gml__id = gml__id1;
	}
	return _p;
}

inline int soap_write_gml__DefinitionType(struct soap *soap, gml__DefinitionType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:DefinitionType", "gml:DefinitionType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__DefinitionType * SOAP_FMAC4 soap_get_gml__DefinitionType(struct soap*, gml__DefinitionType *, const char*, const char*);

inline int soap_read_gml__DefinitionType(struct soap *soap, gml__DefinitionType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__DefinitionType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__IdentifiedObjectType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__IdentifiedObjectType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__IdentifiedObjectType(struct soap*, const char*, int, const gml__IdentifiedObjectType *, const char*);
SOAP_FMAC3 gml__IdentifiedObjectType * SOAP_FMAC4 soap_in_gml__IdentifiedObjectType(struct soap*, const char*, gml__IdentifiedObjectType *, const char*);
SOAP_FMAC1 gml__IdentifiedObjectType * SOAP_FMAC2 soap_instantiate_gml__IdentifiedObjectType(struct soap*, int, const char*, const char*, size_t*);

inline gml__IdentifiedObjectType * soap_new_gml__IdentifiedObjectType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__IdentifiedObjectType(soap, n, NULL, NULL, NULL);
}

inline gml__IdentifiedObjectType * soap_new_req_gml__IdentifiedObjectType(
	struct soap *soap,
	gml__CodeWithAuthorityType *identifier2,
	const std::string& gml__id2)
{
	gml__IdentifiedObjectType *_p = soap_new_gml__IdentifiedObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionBaseType::identifier = identifier2;
		_p->gml__DefinitionBaseType::gml__id = gml__id2;
	}
	return _p;
}

inline gml__IdentifiedObjectType * soap_new_set_gml__IdentifiedObjectType(
	struct soap *soap,
	std::string *remarks1,
	gml__StringOrRefType *description2,
	gml__ReferenceType *descriptionReference2,
	gml__CodeWithAuthorityType *identifier2,
	const std::vector<gml__CodeType *> & name2,
	const std::string& gml__id2)
{
	gml__IdentifiedObjectType *_p = soap_new_gml__IdentifiedObjectType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__DefinitionType::remarks = remarks1;
		_p->gml__DefinitionBaseType::description = description2;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference2;
		_p->gml__DefinitionBaseType::identifier = identifier2;
		_p->gml__DefinitionBaseType::name = name2;
		_p->gml__DefinitionBaseType::gml__id = gml__id2;
	}
	return _p;
}

inline int soap_write_gml__IdentifiedObjectType(struct soap *soap, gml__IdentifiedObjectType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:IdentifiedObjectType", "gml:IdentifiedObjectType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__IdentifiedObjectType * SOAP_FMAC4 soap_get_gml__IdentifiedObjectType(struct soap*, gml__IdentifiedObjectType *, const char*, const char*);

inline int soap_read_gml__IdentifiedObjectType(struct soap *soap, gml__IdentifiedObjectType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__IdentifiedObjectType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__AbstractCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__AbstractCRSType(struct soap*, const char*, int, const gml__AbstractCRSType *, const char*);
SOAP_FMAC3 gml__AbstractCRSType * SOAP_FMAC4 soap_in_gml__AbstractCRSType(struct soap*, const char*, gml__AbstractCRSType *, const char*);
SOAP_FMAC1 gml__AbstractCRSType * SOAP_FMAC2 soap_instantiate_gml__AbstractCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__AbstractCRSType * soap_new_gml__AbstractCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__AbstractCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__AbstractCRSType * soap_new_req_gml__AbstractCRSType(
	struct soap *soap,
	const std::vector<std::string> & scope,
	gml__CodeWithAuthorityType *identifier3,
	const std::string& gml__id3)
{
	gml__AbstractCRSType *_p = soap_new_gml__AbstractCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCRSType::scope = scope;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline gml__AbstractCRSType * soap_new_set_gml__AbstractCRSType(
	struct soap *soap,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity,
	const std::vector<std::string> & scope,
	std::string *remarks2,
	gml__StringOrRefType *description3,
	gml__ReferenceType *descriptionReference3,
	gml__CodeWithAuthorityType *identifier3,
	const std::vector<gml__CodeType *> & name3,
	const std::string& gml__id3)
{
	gml__AbstractCRSType *_p = soap_new_gml__AbstractCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity;
		_p->gml__AbstractCRSType::scope = scope;
		_p->gml__DefinitionType::remarks = remarks2;
		_p->gml__DefinitionBaseType::description = description3;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference3;
		_p->gml__DefinitionBaseType::identifier = identifier3;
		_p->gml__DefinitionBaseType::name = name3;
		_p->gml__DefinitionBaseType::gml__id = gml__id3;
	}
	return _p;
}

inline int soap_write_gml__AbstractCRSType(struct soap *soap, gml__AbstractCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:AbstractCRSType", "gml:AbstractCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__AbstractCRSType * SOAP_FMAC4 soap_get_gml__AbstractCRSType(struct soap*, gml__AbstractCRSType *, const char*, const char*);

inline int soap_read_gml__AbstractCRSType(struct soap *soap, gml__AbstractCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__AbstractCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_gml__GeodeticCRSType_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_gml__GeodeticCRSType(struct soap*, const char*, int, const gml__GeodeticCRSType *, const char*);
SOAP_FMAC3 gml__GeodeticCRSType * SOAP_FMAC4 soap_in_gml__GeodeticCRSType(struct soap*, const char*, gml__GeodeticCRSType *, const char*);
SOAP_FMAC1 gml__GeodeticCRSType * SOAP_FMAC2 soap_instantiate_gml__GeodeticCRSType(struct soap*, int, const char*, const char*, size_t*);

inline gml__GeodeticCRSType * soap_new_gml__GeodeticCRSType(struct soap *soap, int n = -1)
{
	return soap_instantiate_gml__GeodeticCRSType(soap, n, NULL, NULL, NULL);
}

inline gml__GeodeticCRSType * soap_new_req_gml__GeodeticCRSType(
	struct soap *soap,
	int __union_GeodeticCRSType,
	const union _gml__union_GeodeticCRSType& union_GeodeticCRSType,
	gml__GeodeticDatumPropertyType *geodeticDatum,
	const std::vector<std::string> & scope1,
	gml__CodeWithAuthorityType *identifier4,
	const std::string& gml__id4)
{
	gml__GeodeticCRSType *_p = soap_new_gml__GeodeticCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticCRSType::__union_GeodeticCRSType = __union_GeodeticCRSType;
		_p->gml__GeodeticCRSType::union_GeodeticCRSType = union_GeodeticCRSType;
		_p->gml__GeodeticCRSType::geodeticDatum = geodeticDatum;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline gml__GeodeticCRSType * soap_new_set_gml__GeodeticCRSType(
	struct soap *soap,
	int __union_GeodeticCRSType,
	const union _gml__union_GeodeticCRSType& union_GeodeticCRSType,
	gml__GeodeticDatumPropertyType *geodeticDatum,
	const std::vector<_gml__domainOfValidity *> & domainOfValidity1,
	const std::vector<std::string> & scope1,
	std::string *remarks3,
	gml__StringOrRefType *description4,
	gml__ReferenceType *descriptionReference4,
	gml__CodeWithAuthorityType *identifier4,
	const std::vector<gml__CodeType *> & name4,
	const std::string& gml__id4)
{
	gml__GeodeticCRSType *_p = soap_new_gml__GeodeticCRSType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->gml__GeodeticCRSType::__union_GeodeticCRSType = __union_GeodeticCRSType;
		_p->gml__GeodeticCRSType::union_GeodeticCRSType = union_GeodeticCRSType;
		_p->gml__GeodeticCRSType::geodeticDatum = geodeticDatum;
		_p->gml__AbstractCRSType::domainOfValidity = domainOfValidity1;
		_p->gml__AbstractCRSType::scope = scope1;
		_p->gml__DefinitionType::remarks = remarks3;
		_p->gml__DefinitionBaseType::description = description4;
		_p->gml__DefinitionBaseType::descriptionReference = descriptionReference4;
		_p->gml__DefinitionBaseType::identifier = identifier4;
		_p->gml__DefinitionBaseType::name = name4;
		_p->gml__DefinitionBaseType::gml__id = gml__id4;
	}
	return _p;
}

inline int soap_write_gml__GeodeticCRSType(struct soap *soap, gml__GeodeticCRSType const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "gml:GeodeticCRSType", "gml:GeodeticCRSType") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 gml__GeodeticCRSType * SOAP_FMAC4 soap_get_gml__GeodeticCRSType(struct soap*, gml__GeodeticCRSType *, const char*, const char*);

inline int soap_read_gml__GeodeticCRSType(struct soap *soap, gml__GeodeticCRSType *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_gml__GeodeticCRSType(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MobilityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MobilityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MobilityMeasure(struct soap*, const char*, int, const eml__MobilityMeasure *, const char*);
SOAP_FMAC3 eml__MobilityMeasure * SOAP_FMAC4 soap_in_eml__MobilityMeasure(struct soap*, const char*, eml__MobilityMeasure *, const char*);
SOAP_FMAC1 eml__MobilityMeasure * SOAP_FMAC2 soap_instantiate_eml__MobilityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MobilityMeasure * soap_new_eml__MobilityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MobilityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MobilityMeasure * soap_new_req_eml__MobilityMeasure(
	struct soap *soap,
	double __item,
	enum eml__MobilityUom uom)
{
	eml__MobilityMeasure *_p = soap_new_eml__MobilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MobilityMeasure::__item = __item;
		_p->eml__MobilityMeasure::uom = uom;
	}
	return _p;
}

inline eml__MobilityMeasure * soap_new_set_eml__MobilityMeasure(
	struct soap *soap,
	double __item,
	enum eml__MobilityUom uom)
{
	eml__MobilityMeasure *_p = soap_new_eml__MobilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MobilityMeasure::__item = __item;
		_p->eml__MobilityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MobilityMeasure(struct soap *soap, eml__MobilityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MobilityMeasure", "eml:MobilityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MobilityMeasure * SOAP_FMAC4 soap_get_eml__MobilityMeasure(struct soap*, eml__MobilityMeasure *, const char*, const char*);

inline int soap_read_eml__MobilityMeasure(struct soap *soap, eml__MobilityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MobilityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerMassMeasure(struct soap*, const char*, int, const eml__LengthPerMassMeasure *, const char*);
SOAP_FMAC3 eml__LengthPerMassMeasure * SOAP_FMAC4 soap_in_eml__LengthPerMassMeasure(struct soap*, const char*, eml__LengthPerMassMeasure *, const char*);
SOAP_FMAC1 eml__LengthPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml__LengthPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LengthPerMassMeasure * soap_new_eml__LengthPerMassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LengthPerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LengthPerMassMeasure * soap_new_req_eml__LengthPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerMassUom uom)
{
	eml__LengthPerMassMeasure *_p = soap_new_eml__LengthPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerMassMeasure::__item = __item;
		_p->eml__LengthPerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml__LengthPerMassMeasure * soap_new_set_eml__LengthPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerMassUom uom)
{
	eml__LengthPerMassMeasure *_p = soap_new_eml__LengthPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerMassMeasure::__item = __item;
		_p->eml__LengthPerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LengthPerMassMeasure(struct soap *soap, eml__LengthPerMassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LengthPerMassMeasure", "eml:LengthPerMassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LengthPerMassMeasure * SOAP_FMAC4 soap_get_eml__LengthPerMassMeasure(struct soap*, eml__LengthPerMassMeasure *, const char*, const char*);

inline int soap_read_eml__LengthPerMassMeasure(struct soap *soap, eml__LengthPerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LengthPerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaMeasure(struct soap*, const char*, int, const eml__AreaMeasure *, const char*);
SOAP_FMAC3 eml__AreaMeasure * SOAP_FMAC4 soap_in_eml__AreaMeasure(struct soap*, const char*, eml__AreaMeasure *, const char*);
SOAP_FMAC1 eml__AreaMeasure * SOAP_FMAC2 soap_instantiate_eml__AreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AreaMeasure * soap_new_eml__AreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AreaMeasure * soap_new_req_eml__AreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaUom uom)
{
	eml__AreaMeasure *_p = soap_new_eml__AreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaMeasure::__item = __item;
		_p->eml__AreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__AreaMeasure * soap_new_set_eml__AreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaUom uom)
{
	eml__AreaMeasure *_p = soap_new_eml__AreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaMeasure::__item = __item;
		_p->eml__AreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AreaMeasure(struct soap *soap, eml__AreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AreaMeasure", "eml:AreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AreaMeasure * SOAP_FMAC4 soap_get_eml__AreaMeasure(struct soap*, eml__AreaMeasure *, const char*, const char*);

inline int soap_read_eml__AreaMeasure(struct soap *soap, eml__AreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerVolumeMeasure(struct soap*, const char*, int, const eml__VolumePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerVolumeMeasure * SOAP_FMAC4 soap_in_eml__VolumePerVolumeMeasure(struct soap*, const char*, eml__VolumePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerVolumeMeasure * soap_new_eml__VolumePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerVolumeMeasure * soap_new_req_eml__VolumePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerVolumeUom uom)
{
	eml__VolumePerVolumeMeasure *_p = soap_new_eml__VolumePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerVolumeMeasure::__item = __item;
		_p->eml__VolumePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerVolumeMeasure * soap_new_set_eml__VolumePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerVolumeUom uom)
{
	eml__VolumePerVolumeMeasure *_p = soap_new_eml__VolumePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerVolumeMeasure::__item = __item;
		_p->eml__VolumePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerVolumeMeasure(struct soap *soap, eml__VolumePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerVolumeMeasure", "eml:VolumePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerVolumeMeasure * SOAP_FMAC4 soap_get_eml__VolumePerVolumeMeasure(struct soap*, eml__VolumePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerVolumeMeasure(struct soap *soap, eml__VolumePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricResistanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricResistanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricResistanceMeasure(struct soap*, const char*, int, const eml__ElectricResistanceMeasure *, const char*);
SOAP_FMAC3 eml__ElectricResistanceMeasure * SOAP_FMAC4 soap_in_eml__ElectricResistanceMeasure(struct soap*, const char*, eml__ElectricResistanceMeasure *, const char*);
SOAP_FMAC1 eml__ElectricResistanceMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricResistanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricResistanceMeasure * soap_new_eml__ElectricResistanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricResistanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricResistanceMeasure * soap_new_req_eml__ElectricResistanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricResistanceUom uom)
{
	eml__ElectricResistanceMeasure *_p = soap_new_eml__ElectricResistanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricResistanceMeasure::__item = __item;
		_p->eml__ElectricResistanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricResistanceMeasure * soap_new_set_eml__ElectricResistanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricResistanceUom uom)
{
	eml__ElectricResistanceMeasure *_p = soap_new_eml__ElectricResistanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricResistanceMeasure::__item = __item;
		_p->eml__ElectricResistanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricResistanceMeasure(struct soap *soap, eml__ElectricResistanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricResistanceMeasure", "eml:ElectricResistanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricResistanceMeasure * SOAP_FMAC4 soap_get_eml__ElectricResistanceMeasure(struct soap*, eml__ElectricResistanceMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricResistanceMeasure(struct soap *soap, eml__ElectricResistanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricResistanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerVolumeMeasure(struct soap*, const char*, int, const eml__AreaPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__AreaPerVolumeMeasure * SOAP_FMAC4 soap_in_eml__AreaPerVolumeMeasure(struct soap*, const char*, eml__AreaPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__AreaPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__AreaPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AreaPerVolumeMeasure * soap_new_eml__AreaPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AreaPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AreaPerVolumeMeasure * soap_new_req_eml__AreaPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerVolumeUom uom)
{
	eml__AreaPerVolumeMeasure *_p = soap_new_eml__AreaPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerVolumeMeasure::__item = __item;
		_p->eml__AreaPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__AreaPerVolumeMeasure * soap_new_set_eml__AreaPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerVolumeUom uom)
{
	eml__AreaPerVolumeMeasure *_p = soap_new_eml__AreaPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerVolumeMeasure::__item = __item;
		_p->eml__AreaPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AreaPerVolumeMeasure(struct soap *soap, eml__AreaPerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AreaPerVolumeMeasure", "eml:AreaPerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AreaPerVolumeMeasure * SOAP_FMAC4 soap_get_eml__AreaPerVolumeMeasure(struct soap*, eml__AreaPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__AreaPerVolumeMeasure(struct soap *soap, eml__AreaPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AreaPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimePerTimeMeasure(struct soap*, const char*, int, const eml__TimePerTimeMeasure *, const char*);
SOAP_FMAC3 eml__TimePerTimeMeasure * SOAP_FMAC4 soap_in_eml__TimePerTimeMeasure(struct soap*, const char*, eml__TimePerTimeMeasure *, const char*);
SOAP_FMAC1 eml__TimePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__TimePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__TimePerTimeMeasure * soap_new_eml__TimePerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__TimePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__TimePerTimeMeasure * soap_new_req_eml__TimePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimePerTimeUom uom)
{
	eml__TimePerTimeMeasure *_p = soap_new_eml__TimePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimePerTimeMeasure::__item = __item;
		_p->eml__TimePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__TimePerTimeMeasure * soap_new_set_eml__TimePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimePerTimeUom uom)
{
	eml__TimePerTimeMeasure *_p = soap_new_eml__TimePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimePerTimeMeasure::__item = __item;
		_p->eml__TimePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__TimePerTimeMeasure(struct soap *soap, eml__TimePerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:TimePerTimeMeasure", "eml:TimePerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__TimePerTimeMeasure * SOAP_FMAC4 soap_get_eml__TimePerTimeMeasure(struct soap*, eml__TimePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__TimePerTimeMeasure(struct soap *soap, eml__TimePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__TimePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerVolumeMeasure(struct soap*, const char*, int, const eml__AmountOfSubstancePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__AmountOfSubstancePerVolumeMeasure * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerVolumeMeasure(struct soap*, const char*, eml__AmountOfSubstancePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__AmountOfSubstancePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__AmountOfSubstancePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AmountOfSubstancePerVolumeMeasure * soap_new_eml__AmountOfSubstancePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AmountOfSubstancePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AmountOfSubstancePerVolumeMeasure * soap_new_req_eml__AmountOfSubstancePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerVolumeUom uom)
{
	eml__AmountOfSubstancePerVolumeMeasure *_p = soap_new_eml__AmountOfSubstancePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerVolumeMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__AmountOfSubstancePerVolumeMeasure * soap_new_set_eml__AmountOfSubstancePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerVolumeUom uom)
{
	eml__AmountOfSubstancePerVolumeMeasure *_p = soap_new_eml__AmountOfSubstancePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerVolumeMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AmountOfSubstancePerVolumeMeasure(struct soap *soap, eml__AmountOfSubstancePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AmountOfSubstancePerVolumeMeasure", "eml:AmountOfSubstancePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AmountOfSubstancePerVolumeMeasure * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerVolumeMeasure(struct soap*, eml__AmountOfSubstancePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerVolumeMeasure(struct soap *soap, eml__AmountOfSubstancePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerAreaMeasure(struct soap*, const char*, int, const eml__MassPerAreaMeasure *, const char*);
SOAP_FMAC3 eml__MassPerAreaMeasure * SOAP_FMAC4 soap_in_eml__MassPerAreaMeasure(struct soap*, const char*, eml__MassPerAreaMeasure *, const char*);
SOAP_FMAC1 eml__MassPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__MassPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassPerAreaMeasure * soap_new_eml__MassPerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassPerAreaMeasure * soap_new_req_eml__MassPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerAreaUom uom)
{
	eml__MassPerAreaMeasure *_p = soap_new_eml__MassPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerAreaMeasure::__item = __item;
		_p->eml__MassPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassPerAreaMeasure * soap_new_set_eml__MassPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerAreaUom uom)
{
	eml__MassPerAreaMeasure *_p = soap_new_eml__MassPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerAreaMeasure::__item = __item;
		_p->eml__MassPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassPerAreaMeasure(struct soap *soap, eml__MassPerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassPerAreaMeasure", "eml:MassPerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassPerAreaMeasure * SOAP_FMAC4 soap_get_eml__MassPerAreaMeasure(struct soap*, eml__MassPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__MassPerAreaMeasure(struct soap *soap, eml__MassPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerPressureMeasure(struct soap*, const char*, int, const eml__VolumePerPressureMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerPressureMeasure * SOAP_FMAC4 soap_in_eml__VolumePerPressureMeasure(struct soap*, const char*, eml__VolumePerPressureMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerPressureMeasure * soap_new_eml__VolumePerPressureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerPressureMeasure * soap_new_req_eml__VolumePerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerPressureUom uom)
{
	eml__VolumePerPressureMeasure *_p = soap_new_eml__VolumePerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerPressureMeasure::__item = __item;
		_p->eml__VolumePerPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerPressureMeasure * soap_new_set_eml__VolumePerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerPressureUom uom)
{
	eml__VolumePerPressureMeasure *_p = soap_new_eml__VolumePerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerPressureMeasure::__item = __item;
		_p->eml__VolumePerPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerPressureMeasure(struct soap *soap, eml__VolumePerPressureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerPressureMeasure", "eml:VolumePerPressureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerPressureMeasure * SOAP_FMAC4 soap_get_eml__VolumePerPressureMeasure(struct soap*, eml__VolumePerPressureMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerPressureMeasure(struct soap *soap, eml__VolumePerPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerTimePerAreaMeasure(struct soap*, const char*, int, const eml__MassPerTimePerAreaMeasure *, const char*);
SOAP_FMAC3 eml__MassPerTimePerAreaMeasure * SOAP_FMAC4 soap_in_eml__MassPerTimePerAreaMeasure(struct soap*, const char*, eml__MassPerTimePerAreaMeasure *, const char*);
SOAP_FMAC1 eml__MassPerTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__MassPerTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassPerTimePerAreaMeasure * soap_new_eml__MassPerTimePerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassPerTimePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassPerTimePerAreaMeasure * soap_new_req_eml__MassPerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerTimePerAreaUom uom)
{
	eml__MassPerTimePerAreaMeasure *_p = soap_new_eml__MassPerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerTimePerAreaMeasure::__item = __item;
		_p->eml__MassPerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassPerTimePerAreaMeasure * soap_new_set_eml__MassPerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerTimePerAreaUom uom)
{
	eml__MassPerTimePerAreaMeasure *_p = soap_new_eml__MassPerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerTimePerAreaMeasure::__item = __item;
		_p->eml__MassPerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassPerTimePerAreaMeasure(struct soap *soap, eml__MassPerTimePerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassPerTimePerAreaMeasure", "eml:MassPerTimePerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassPerTimePerAreaMeasure * SOAP_FMAC4 soap_get_eml__MassPerTimePerAreaMeasure(struct soap*, eml__MassPerTimePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__MassPerTimePerAreaMeasure(struct soap *soap, eml__MassPerTimePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassPerTimePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DoseEquivalentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DoseEquivalentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DoseEquivalentMeasure(struct soap*, const char*, int, const eml__DoseEquivalentMeasure *, const char*);
SOAP_FMAC3 eml__DoseEquivalentMeasure * SOAP_FMAC4 soap_in_eml__DoseEquivalentMeasure(struct soap*, const char*, eml__DoseEquivalentMeasure *, const char*);
SOAP_FMAC1 eml__DoseEquivalentMeasure * SOAP_FMAC2 soap_instantiate_eml__DoseEquivalentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__DoseEquivalentMeasure * soap_new_eml__DoseEquivalentMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__DoseEquivalentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__DoseEquivalentMeasure * soap_new_req_eml__DoseEquivalentMeasure(
	struct soap *soap,
	double __item,
	enum eml__DoseEquivalentUom uom)
{
	eml__DoseEquivalentMeasure *_p = soap_new_eml__DoseEquivalentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DoseEquivalentMeasure::__item = __item;
		_p->eml__DoseEquivalentMeasure::uom = uom;
	}
	return _p;
}

inline eml__DoseEquivalentMeasure * soap_new_set_eml__DoseEquivalentMeasure(
	struct soap *soap,
	double __item,
	enum eml__DoseEquivalentUom uom)
{
	eml__DoseEquivalentMeasure *_p = soap_new_eml__DoseEquivalentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DoseEquivalentMeasure::__item = __item;
		_p->eml__DoseEquivalentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__DoseEquivalentMeasure(struct soap *soap, eml__DoseEquivalentMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:DoseEquivalentMeasure", "eml:DoseEquivalentMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__DoseEquivalentMeasure * SOAP_FMAC4 soap_get_eml__DoseEquivalentMeasure(struct soap*, eml__DoseEquivalentMeasure *, const char*, const char*);

inline int soap_read_eml__DoseEquivalentMeasure(struct soap *soap, eml__DoseEquivalentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__DoseEquivalentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PermeabilityRockMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PermeabilityRockMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PermeabilityRockMeasure(struct soap*, const char*, int, const eml__PermeabilityRockMeasure *, const char*);
SOAP_FMAC3 eml__PermeabilityRockMeasure * SOAP_FMAC4 soap_in_eml__PermeabilityRockMeasure(struct soap*, const char*, eml__PermeabilityRockMeasure *, const char*);
SOAP_FMAC1 eml__PermeabilityRockMeasure * SOAP_FMAC2 soap_instantiate_eml__PermeabilityRockMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PermeabilityRockMeasure * soap_new_eml__PermeabilityRockMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PermeabilityRockMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PermeabilityRockMeasure * soap_new_req_eml__PermeabilityRockMeasure(
	struct soap *soap,
	double __item,
	enum eml__PermeabilityRockUom uom)
{
	eml__PermeabilityRockMeasure *_p = soap_new_eml__PermeabilityRockMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PermeabilityRockMeasure::__item = __item;
		_p->eml__PermeabilityRockMeasure::uom = uom;
	}
	return _p;
}

inline eml__PermeabilityRockMeasure * soap_new_set_eml__PermeabilityRockMeasure(
	struct soap *soap,
	double __item,
	enum eml__PermeabilityRockUom uom)
{
	eml__PermeabilityRockMeasure *_p = soap_new_eml__PermeabilityRockMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PermeabilityRockMeasure::__item = __item;
		_p->eml__PermeabilityRockMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PermeabilityRockMeasure(struct soap *soap, eml__PermeabilityRockMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PermeabilityRockMeasure", "eml:PermeabilityRockMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PermeabilityRockMeasure * SOAP_FMAC4 soap_get_eml__PermeabilityRockMeasure(struct soap*, eml__PermeabilityRockMeasure *, const char*, const char*);

inline int soap_read_eml__PermeabilityRockMeasure(struct soap *soap, eml__PermeabilityRockMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PermeabilityRockMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFieldStrengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFieldStrengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticFieldStrengthMeasure(struct soap*, const char*, int, const eml__MagneticFieldStrengthMeasure *, const char*);
SOAP_FMAC3 eml__MagneticFieldStrengthMeasure * SOAP_FMAC4 soap_in_eml__MagneticFieldStrengthMeasure(struct soap*, const char*, eml__MagneticFieldStrengthMeasure *, const char*);
SOAP_FMAC1 eml__MagneticFieldStrengthMeasure * SOAP_FMAC2 soap_instantiate_eml__MagneticFieldStrengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MagneticFieldStrengthMeasure * soap_new_eml__MagneticFieldStrengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MagneticFieldStrengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MagneticFieldStrengthMeasure * soap_new_req_eml__MagneticFieldStrengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticFieldStrengthUom uom)
{
	eml__MagneticFieldStrengthMeasure *_p = soap_new_eml__MagneticFieldStrengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticFieldStrengthMeasure::__item = __item;
		_p->eml__MagneticFieldStrengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__MagneticFieldStrengthMeasure * soap_new_set_eml__MagneticFieldStrengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticFieldStrengthUom uom)
{
	eml__MagneticFieldStrengthMeasure *_p = soap_new_eml__MagneticFieldStrengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticFieldStrengthMeasure::__item = __item;
		_p->eml__MagneticFieldStrengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MagneticFieldStrengthMeasure(struct soap *soap, eml__MagneticFieldStrengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MagneticFieldStrengthMeasure", "eml:MagneticFieldStrengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MagneticFieldStrengthMeasure * SOAP_FMAC4 soap_get_eml__MagneticFieldStrengthMeasure(struct soap*, eml__MagneticFieldStrengthMeasure *, const char*, const char*);

inline int soap_read_eml__MagneticFieldStrengthMeasure(struct soap *soap, eml__MagneticFieldStrengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MagneticFieldStrengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerPressureLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerPressureLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerPressureLengthMeasure(struct soap*, const char*, int, const eml__VolumePerTimePerPressureLengthMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerTimePerPressureLengthMeasure * SOAP_FMAC4 soap_in_eml__VolumePerTimePerPressureLengthMeasure(struct soap*, const char*, eml__VolumePerTimePerPressureLengthMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerTimePerPressureLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerTimePerPressureLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerTimePerPressureLengthMeasure * soap_new_eml__VolumePerTimePerPressureLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerTimePerPressureLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerTimePerPressureLengthMeasure * soap_new_req_eml__VolumePerTimePerPressureLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerPressureLengthUom uom)
{
	eml__VolumePerTimePerPressureLengthMeasure *_p = soap_new_eml__VolumePerTimePerPressureLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerPressureLengthMeasure::__item = __item;
		_p->eml__VolumePerTimePerPressureLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerTimePerPressureLengthMeasure * soap_new_set_eml__VolumePerTimePerPressureLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerPressureLengthUom uom)
{
	eml__VolumePerTimePerPressureLengthMeasure *_p = soap_new_eml__VolumePerTimePerPressureLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerPressureLengthMeasure::__item = __item;
		_p->eml__VolumePerTimePerPressureLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerTimePerPressureLengthMeasure(struct soap *soap, eml__VolumePerTimePerPressureLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerTimePerPressureLengthMeasure", "eml:VolumePerTimePerPressureLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerTimePerPressureLengthMeasure * SOAP_FMAC4 soap_get_eml__VolumePerTimePerPressureLengthMeasure(struct soap*, eml__VolumePerTimePerPressureLengthMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerPressureLengthMeasure(struct soap *soap, eml__VolumePerTimePerPressureLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerPressureLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressureMeasure(struct soap*, const char*, int, const eml__PressureMeasure *, const char*);
SOAP_FMAC3 eml__PressureMeasure * SOAP_FMAC4 soap_in_eml__PressureMeasure(struct soap*, const char*, eml__PressureMeasure *, const char*);
SOAP_FMAC1 eml__PressureMeasure * SOAP_FMAC2 soap_instantiate_eml__PressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PressureMeasure * soap_new_eml__PressureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PressureMeasure * soap_new_req_eml__PressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressureUom uom)
{
	eml__PressureMeasure *_p = soap_new_eml__PressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressureMeasure::__item = __item;
		_p->eml__PressureMeasure::uom = uom;
	}
	return _p;
}

inline eml__PressureMeasure * soap_new_set_eml__PressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressureUom uom)
{
	eml__PressureMeasure *_p = soap_new_eml__PressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressureMeasure::__item = __item;
		_p->eml__PressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PressureMeasure(struct soap *soap, eml__PressureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PressureMeasure", "eml:PressureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PressureMeasure * SOAP_FMAC4 soap_get_eml__PressureMeasure(struct soap*, eml__PressureMeasure *, const char*, const char*);

inline int soap_read_eml__PressureMeasure(struct soap *soap, eml__PressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxDensityPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxDensityPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticFluxDensityPerLengthMeasure(struct soap*, const char*, int, const eml__MagneticFluxDensityPerLengthMeasure *, const char*);
SOAP_FMAC3 eml__MagneticFluxDensityPerLengthMeasure * SOAP_FMAC4 soap_in_eml__MagneticFluxDensityPerLengthMeasure(struct soap*, const char*, eml__MagneticFluxDensityPerLengthMeasure *, const char*);
SOAP_FMAC1 eml__MagneticFluxDensityPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__MagneticFluxDensityPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MagneticFluxDensityPerLengthMeasure * soap_new_eml__MagneticFluxDensityPerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MagneticFluxDensityPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MagneticFluxDensityPerLengthMeasure * soap_new_req_eml__MagneticFluxDensityPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticFluxDensityPerLengthUom uom)
{
	eml__MagneticFluxDensityPerLengthMeasure *_p = soap_new_eml__MagneticFluxDensityPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticFluxDensityPerLengthMeasure::__item = __item;
		_p->eml__MagneticFluxDensityPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__MagneticFluxDensityPerLengthMeasure * soap_new_set_eml__MagneticFluxDensityPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticFluxDensityPerLengthUom uom)
{
	eml__MagneticFluxDensityPerLengthMeasure *_p = soap_new_eml__MagneticFluxDensityPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticFluxDensityPerLengthMeasure::__item = __item;
		_p->eml__MagneticFluxDensityPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MagneticFluxDensityPerLengthMeasure(struct soap *soap, eml__MagneticFluxDensityPerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MagneticFluxDensityPerLengthMeasure", "eml:MagneticFluxDensityPerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MagneticFluxDensityPerLengthMeasure * SOAP_FMAC4 soap_get_eml__MagneticFluxDensityPerLengthMeasure(struct soap*, eml__MagneticFluxDensityPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__MagneticFluxDensityPerLengthMeasure(struct soap *soap, eml__MagneticFluxDensityPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MagneticFluxDensityPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PowerPerAreaMeasure(struct soap*, const char*, int, const eml__PowerPerAreaMeasure *, const char*);
SOAP_FMAC3 eml__PowerPerAreaMeasure * SOAP_FMAC4 soap_in_eml__PowerPerAreaMeasure(struct soap*, const char*, eml__PowerPerAreaMeasure *, const char*);
SOAP_FMAC1 eml__PowerPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__PowerPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PowerPerAreaMeasure * soap_new_eml__PowerPerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PowerPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PowerPerAreaMeasure * soap_new_req_eml__PowerPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__PowerPerAreaUom uom)
{
	eml__PowerPerAreaMeasure *_p = soap_new_eml__PowerPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PowerPerAreaMeasure::__item = __item;
		_p->eml__PowerPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__PowerPerAreaMeasure * soap_new_set_eml__PowerPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__PowerPerAreaUom uom)
{
	eml__PowerPerAreaMeasure *_p = soap_new_eml__PowerPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PowerPerAreaMeasure::__item = __item;
		_p->eml__PowerPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PowerPerAreaMeasure(struct soap *soap, eml__PowerPerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PowerPerAreaMeasure", "eml:PowerPerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PowerPerAreaMeasure * SOAP_FMAC4 soap_get_eml__PowerPerAreaMeasure(struct soap*, eml__PowerPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__PowerPerAreaMeasure(struct soap *soap, eml__PowerPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PowerPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricFieldStrengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricFieldStrengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricFieldStrengthMeasure(struct soap*, const char*, int, const eml__ElectricFieldStrengthMeasure *, const char*);
SOAP_FMAC3 eml__ElectricFieldStrengthMeasure * SOAP_FMAC4 soap_in_eml__ElectricFieldStrengthMeasure(struct soap*, const char*, eml__ElectricFieldStrengthMeasure *, const char*);
SOAP_FMAC1 eml__ElectricFieldStrengthMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricFieldStrengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricFieldStrengthMeasure * soap_new_eml__ElectricFieldStrengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricFieldStrengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricFieldStrengthMeasure * soap_new_req_eml__ElectricFieldStrengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricFieldStrengthUom uom)
{
	eml__ElectricFieldStrengthMeasure *_p = soap_new_eml__ElectricFieldStrengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricFieldStrengthMeasure::__item = __item;
		_p->eml__ElectricFieldStrengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricFieldStrengthMeasure * soap_new_set_eml__ElectricFieldStrengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricFieldStrengthUom uom)
{
	eml__ElectricFieldStrengthMeasure *_p = soap_new_eml__ElectricFieldStrengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricFieldStrengthMeasure::__item = __item;
		_p->eml__ElectricFieldStrengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricFieldStrengthMeasure(struct soap *soap, eml__ElectricFieldStrengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricFieldStrengthMeasure", "eml:ElectricFieldStrengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricFieldStrengthMeasure * SOAP_FMAC4 soap_get_eml__ElectricFieldStrengthMeasure(struct soap*, eml__ElectricFieldStrengthMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricFieldStrengthMeasure(struct soap *soap, eml__ElectricFieldStrengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricFieldStrengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerAmountOfSubstanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerAmountOfSubstanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, const char*, int, const eml__AmountOfSubstancePerAmountOfSubstanceMeasure *, const char*);
SOAP_FMAC3 eml__AmountOfSubstancePerAmountOfSubstanceMeasure * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, const char*, eml__AmountOfSubstancePerAmountOfSubstanceMeasure *, const char*);
SOAP_FMAC1 eml__AmountOfSubstancePerAmountOfSubstanceMeasure * SOAP_FMAC2 soap_instantiate_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AmountOfSubstancePerAmountOfSubstanceMeasure * soap_new_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AmountOfSubstancePerAmountOfSubstanceMeasure * soap_new_req_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerAmountOfSubstanceUom uom)
{
	eml__AmountOfSubstancePerAmountOfSubstanceMeasure *_p = soap_new_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerAmountOfSubstanceMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerAmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__AmountOfSubstancePerAmountOfSubstanceMeasure * soap_new_set_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerAmountOfSubstanceUom uom)
{
	eml__AmountOfSubstancePerAmountOfSubstanceMeasure *_p = soap_new_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerAmountOfSubstanceMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerAmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, eml__AmountOfSubstancePerAmountOfSubstanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AmountOfSubstancePerAmountOfSubstanceMeasure", "eml:AmountOfSubstancePerAmountOfSubstanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AmountOfSubstancePerAmountOfSubstanceMeasure * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap*, eml__AmountOfSubstancePerAmountOfSubstanceMeasure *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(struct soap *soap, eml__AmountOfSubstancePerAmountOfSubstanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerAmountOfSubstanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricConductivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricConductivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricConductivityMeasure(struct soap*, const char*, int, const eml__ElectricConductivityMeasure *, const char*);
SOAP_FMAC3 eml__ElectricConductivityMeasure * SOAP_FMAC4 soap_in_eml__ElectricConductivityMeasure(struct soap*, const char*, eml__ElectricConductivityMeasure *, const char*);
SOAP_FMAC1 eml__ElectricConductivityMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricConductivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricConductivityMeasure * soap_new_eml__ElectricConductivityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricConductivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricConductivityMeasure * soap_new_req_eml__ElectricConductivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricConductivityUom uom)
{
	eml__ElectricConductivityMeasure *_p = soap_new_eml__ElectricConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricConductivityMeasure::__item = __item;
		_p->eml__ElectricConductivityMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricConductivityMeasure * soap_new_set_eml__ElectricConductivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricConductivityUom uom)
{
	eml__ElectricConductivityMeasure *_p = soap_new_eml__ElectricConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricConductivityMeasure::__item = __item;
		_p->eml__ElectricConductivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricConductivityMeasure(struct soap *soap, eml__ElectricConductivityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricConductivityMeasure", "eml:ElectricConductivityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricConductivityMeasure * SOAP_FMAC4 soap_get_eml__ElectricConductivityMeasure(struct soap*, eml__ElectricConductivityMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricConductivityMeasure(struct soap *soap, eml__ElectricConductivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricConductivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AngularVelocityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AngularVelocityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AngularVelocityMeasure(struct soap*, const char*, int, const eml__AngularVelocityMeasure *, const char*);
SOAP_FMAC3 eml__AngularVelocityMeasure * SOAP_FMAC4 soap_in_eml__AngularVelocityMeasure(struct soap*, const char*, eml__AngularVelocityMeasure *, const char*);
SOAP_FMAC1 eml__AngularVelocityMeasure * SOAP_FMAC2 soap_instantiate_eml__AngularVelocityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AngularVelocityMeasure * soap_new_eml__AngularVelocityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AngularVelocityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AngularVelocityMeasure * soap_new_req_eml__AngularVelocityMeasure(
	struct soap *soap,
	double __item,
	enum eml__AngularVelocityUom uom)
{
	eml__AngularVelocityMeasure *_p = soap_new_eml__AngularVelocityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AngularVelocityMeasure::__item = __item;
		_p->eml__AngularVelocityMeasure::uom = uom;
	}
	return _p;
}

inline eml__AngularVelocityMeasure * soap_new_set_eml__AngularVelocityMeasure(
	struct soap *soap,
	double __item,
	enum eml__AngularVelocityUom uom)
{
	eml__AngularVelocityMeasure *_p = soap_new_eml__AngularVelocityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AngularVelocityMeasure::__item = __item;
		_p->eml__AngularVelocityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AngularVelocityMeasure(struct soap *soap, eml__AngularVelocityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AngularVelocityMeasure", "eml:AngularVelocityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AngularVelocityMeasure * SOAP_FMAC4 soap_get_eml__AngularVelocityMeasure(struct soap*, eml__AngularVelocityMeasure *, const char*, const char*);

inline int soap_read_eml__AngularVelocityMeasure(struct soap *soap, eml__AngularVelocityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AngularVelocityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerMassMeasure(struct soap*, const char*, int, const eml__EnergyPerMassMeasure *, const char*);
SOAP_FMAC3 eml__EnergyPerMassMeasure * SOAP_FMAC4 soap_in_eml__EnergyPerMassMeasure(struct soap*, const char*, eml__EnergyPerMassMeasure *, const char*);
SOAP_FMAC1 eml__EnergyPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml__EnergyPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__EnergyPerMassMeasure * soap_new_eml__EnergyPerMassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__EnergyPerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__EnergyPerMassMeasure * soap_new_req_eml__EnergyPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerMassUom uom)
{
	eml__EnergyPerMassMeasure *_p = soap_new_eml__EnergyPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerMassMeasure::__item = __item;
		_p->eml__EnergyPerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml__EnergyPerMassMeasure * soap_new_set_eml__EnergyPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerMassUom uom)
{
	eml__EnergyPerMassMeasure *_p = soap_new_eml__EnergyPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerMassMeasure::__item = __item;
		_p->eml__EnergyPerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__EnergyPerMassMeasure(struct soap *soap, eml__EnergyPerMassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:EnergyPerMassMeasure", "eml:EnergyPerMassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__EnergyPerMassMeasure * SOAP_FMAC4 soap_get_eml__EnergyPerMassMeasure(struct soap*, eml__EnergyPerMassMeasure *, const char*, const char*);

inline int soap_read_eml__EnergyPerMassMeasure(struct soap *soap, eml__EnergyPerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__EnergyPerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyLengthPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyLengthPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyLengthPerAreaMeasure(struct soap*, const char*, int, const eml__EnergyLengthPerAreaMeasure *, const char*);
SOAP_FMAC3 eml__EnergyLengthPerAreaMeasure * SOAP_FMAC4 soap_in_eml__EnergyLengthPerAreaMeasure(struct soap*, const char*, eml__EnergyLengthPerAreaMeasure *, const char*);
SOAP_FMAC1 eml__EnergyLengthPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__EnergyLengthPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__EnergyLengthPerAreaMeasure * soap_new_eml__EnergyLengthPerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__EnergyLengthPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__EnergyLengthPerAreaMeasure * soap_new_req_eml__EnergyLengthPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyLengthPerAreaUom uom)
{
	eml__EnergyLengthPerAreaMeasure *_p = soap_new_eml__EnergyLengthPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyLengthPerAreaMeasure::__item = __item;
		_p->eml__EnergyLengthPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__EnergyLengthPerAreaMeasure * soap_new_set_eml__EnergyLengthPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyLengthPerAreaUom uom)
{
	eml__EnergyLengthPerAreaMeasure *_p = soap_new_eml__EnergyLengthPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyLengthPerAreaMeasure::__item = __item;
		_p->eml__EnergyLengthPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__EnergyLengthPerAreaMeasure(struct soap *soap, eml__EnergyLengthPerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:EnergyLengthPerAreaMeasure", "eml:EnergyLengthPerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__EnergyLengthPerAreaMeasure * SOAP_FMAC4 soap_get_eml__EnergyLengthPerAreaMeasure(struct soap*, eml__EnergyLengthPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__EnergyLengthPerAreaMeasure(struct soap *soap, eml__EnergyLengthPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__EnergyLengthPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PlaneAngleMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PlaneAngleMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PlaneAngleMeasure(struct soap*, const char*, int, const eml__PlaneAngleMeasure *, const char*);
SOAP_FMAC3 eml__PlaneAngleMeasure * SOAP_FMAC4 soap_in_eml__PlaneAngleMeasure(struct soap*, const char*, eml__PlaneAngleMeasure *, const char*);
SOAP_FMAC1 eml__PlaneAngleMeasure * SOAP_FMAC2 soap_instantiate_eml__PlaneAngleMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PlaneAngleMeasure * soap_new_eml__PlaneAngleMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PlaneAngleMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PlaneAngleMeasure * soap_new_req_eml__PlaneAngleMeasure(
	struct soap *soap,
	double __item,
	enum eml__PlaneAngleUom uom)
{
	eml__PlaneAngleMeasure *_p = soap_new_eml__PlaneAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PlaneAngleMeasure::__item = __item;
		_p->eml__PlaneAngleMeasure::uom = uom;
	}
	return _p;
}

inline eml__PlaneAngleMeasure * soap_new_set_eml__PlaneAngleMeasure(
	struct soap *soap,
	double __item,
	enum eml__PlaneAngleUom uom)
{
	eml__PlaneAngleMeasure *_p = soap_new_eml__PlaneAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PlaneAngleMeasure::__item = __item;
		_p->eml__PlaneAngleMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PlaneAngleMeasure(struct soap *soap, eml__PlaneAngleMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PlaneAngleMeasure", "eml:PlaneAngleMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PlaneAngleMeasure * SOAP_FMAC4 soap_get_eml__PlaneAngleMeasure(struct soap*, eml__PlaneAngleMeasure *, const char*, const char*);

inline int soap_read_eml__PlaneAngleMeasure(struct soap *soap, eml__PlaneAngleMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PlaneAngleMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalForceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalForceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalForceMeasure(struct soap*, const char*, int, const eml__ReciprocalForceMeasure *, const char*);
SOAP_FMAC3 eml__ReciprocalForceMeasure * SOAP_FMAC4 soap_in_eml__ReciprocalForceMeasure(struct soap*, const char*, eml__ReciprocalForceMeasure *, const char*);
SOAP_FMAC1 eml__ReciprocalForceMeasure * SOAP_FMAC2 soap_instantiate_eml__ReciprocalForceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReciprocalForceMeasure * soap_new_eml__ReciprocalForceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReciprocalForceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReciprocalForceMeasure * soap_new_req_eml__ReciprocalForceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalForceUom uom)
{
	eml__ReciprocalForceMeasure *_p = soap_new_eml__ReciprocalForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalForceMeasure::__item = __item;
		_p->eml__ReciprocalForceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReciprocalForceMeasure * soap_new_set_eml__ReciprocalForceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalForceUom uom)
{
	eml__ReciprocalForceMeasure *_p = soap_new_eml__ReciprocalForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalForceMeasure::__item = __item;
		_p->eml__ReciprocalForceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReciprocalForceMeasure(struct soap *soap, eml__ReciprocalForceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReciprocalForceMeasure", "eml:ReciprocalForceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReciprocalForceMeasure * SOAP_FMAC4 soap_get_eml__ReciprocalForceMeasure(struct soap*, eml__ReciprocalForceMeasure *, const char*, const char*);

inline int soap_read_eml__ReciprocalForceMeasure(struct soap *soap, eml__ReciprocalForceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReciprocalForceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalMassMeasure(struct soap*, const char*, int, const eml__ReciprocalMassMeasure *, const char*);
SOAP_FMAC3 eml__ReciprocalMassMeasure * SOAP_FMAC4 soap_in_eml__ReciprocalMassMeasure(struct soap*, const char*, eml__ReciprocalMassMeasure *, const char*);
SOAP_FMAC1 eml__ReciprocalMassMeasure * SOAP_FMAC2 soap_instantiate_eml__ReciprocalMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReciprocalMassMeasure * soap_new_eml__ReciprocalMassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReciprocalMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReciprocalMassMeasure * soap_new_req_eml__ReciprocalMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalMassUom uom)
{
	eml__ReciprocalMassMeasure *_p = soap_new_eml__ReciprocalMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalMassMeasure::__item = __item;
		_p->eml__ReciprocalMassMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReciprocalMassMeasure * soap_new_set_eml__ReciprocalMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalMassUom uom)
{
	eml__ReciprocalMassMeasure *_p = soap_new_eml__ReciprocalMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalMassMeasure::__item = __item;
		_p->eml__ReciprocalMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReciprocalMassMeasure(struct soap *soap, eml__ReciprocalMassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReciprocalMassMeasure", "eml:ReciprocalMassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReciprocalMassMeasure * SOAP_FMAC4 soap_get_eml__ReciprocalMassMeasure(struct soap*, eml__ReciprocalMassMeasure *, const char*, const char*);

inline int soap_read_eml__ReciprocalMassMeasure(struct soap *soap, eml__ReciprocalMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReciprocalMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AngularAccelerationMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AngularAccelerationMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AngularAccelerationMeasure(struct soap*, const char*, int, const eml__AngularAccelerationMeasure *, const char*);
SOAP_FMAC3 eml__AngularAccelerationMeasure * SOAP_FMAC4 soap_in_eml__AngularAccelerationMeasure(struct soap*, const char*, eml__AngularAccelerationMeasure *, const char*);
SOAP_FMAC1 eml__AngularAccelerationMeasure * SOAP_FMAC2 soap_instantiate_eml__AngularAccelerationMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AngularAccelerationMeasure * soap_new_eml__AngularAccelerationMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AngularAccelerationMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AngularAccelerationMeasure * soap_new_req_eml__AngularAccelerationMeasure(
	struct soap *soap,
	double __item,
	enum eml__AngularAccelerationUom uom)
{
	eml__AngularAccelerationMeasure *_p = soap_new_eml__AngularAccelerationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AngularAccelerationMeasure::__item = __item;
		_p->eml__AngularAccelerationMeasure::uom = uom;
	}
	return _p;
}

inline eml__AngularAccelerationMeasure * soap_new_set_eml__AngularAccelerationMeasure(
	struct soap *soap,
	double __item,
	enum eml__AngularAccelerationUom uom)
{
	eml__AngularAccelerationMeasure *_p = soap_new_eml__AngularAccelerationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AngularAccelerationMeasure::__item = __item;
		_p->eml__AngularAccelerationMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AngularAccelerationMeasure(struct soap *soap, eml__AngularAccelerationMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AngularAccelerationMeasure", "eml:AngularAccelerationMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AngularAccelerationMeasure * SOAP_FMAC4 soap_get_eml__AngularAccelerationMeasure(struct soap*, eml__AngularAccelerationMeasure *, const char*, const char*);

inline int soap_read_eml__AngularAccelerationMeasure(struct soap *soap, eml__AngularAccelerationMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AngularAccelerationMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LogarithmicPowerRatioMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LogarithmicPowerRatioMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LogarithmicPowerRatioMeasure(struct soap*, const char*, int, const eml__LogarithmicPowerRatioMeasure *, const char*);
SOAP_FMAC3 eml__LogarithmicPowerRatioMeasure * SOAP_FMAC4 soap_in_eml__LogarithmicPowerRatioMeasure(struct soap*, const char*, eml__LogarithmicPowerRatioMeasure *, const char*);
SOAP_FMAC1 eml__LogarithmicPowerRatioMeasure * SOAP_FMAC2 soap_instantiate_eml__LogarithmicPowerRatioMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LogarithmicPowerRatioMeasure * soap_new_eml__LogarithmicPowerRatioMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LogarithmicPowerRatioMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LogarithmicPowerRatioMeasure * soap_new_req_eml__LogarithmicPowerRatioMeasure(
	struct soap *soap,
	double __item,
	enum eml__LogarithmicPowerRatioUom uom)
{
	eml__LogarithmicPowerRatioMeasure *_p = soap_new_eml__LogarithmicPowerRatioMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LogarithmicPowerRatioMeasure::__item = __item;
		_p->eml__LogarithmicPowerRatioMeasure::uom = uom;
	}
	return _p;
}

inline eml__LogarithmicPowerRatioMeasure * soap_new_set_eml__LogarithmicPowerRatioMeasure(
	struct soap *soap,
	double __item,
	enum eml__LogarithmicPowerRatioUom uom)
{
	eml__LogarithmicPowerRatioMeasure *_p = soap_new_eml__LogarithmicPowerRatioMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LogarithmicPowerRatioMeasure::__item = __item;
		_p->eml__LogarithmicPowerRatioMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LogarithmicPowerRatioMeasure(struct soap *soap, eml__LogarithmicPowerRatioMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LogarithmicPowerRatioMeasure", "eml:LogarithmicPowerRatioMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LogarithmicPowerRatioMeasure * SOAP_FMAC4 soap_get_eml__LogarithmicPowerRatioMeasure(struct soap*, eml__LogarithmicPowerRatioMeasure *, const char*, const char*);

inline int soap_read_eml__LogarithmicPowerRatioMeasure(struct soap *soap, eml__LogarithmicPowerRatioMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LogarithmicPowerRatioMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__NormalizedPowerMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__NormalizedPowerMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__NormalizedPowerMeasure(struct soap*, const char*, int, const eml__NormalizedPowerMeasure *, const char*);
SOAP_FMAC3 eml__NormalizedPowerMeasure * SOAP_FMAC4 soap_in_eml__NormalizedPowerMeasure(struct soap*, const char*, eml__NormalizedPowerMeasure *, const char*);
SOAP_FMAC1 eml__NormalizedPowerMeasure * SOAP_FMAC2 soap_instantiate_eml__NormalizedPowerMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__NormalizedPowerMeasure * soap_new_eml__NormalizedPowerMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__NormalizedPowerMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__NormalizedPowerMeasure * soap_new_req_eml__NormalizedPowerMeasure(
	struct soap *soap,
	double __item,
	enum eml__NormalizedPowerUom uom)
{
	eml__NormalizedPowerMeasure *_p = soap_new_eml__NormalizedPowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__NormalizedPowerMeasure::__item = __item;
		_p->eml__NormalizedPowerMeasure::uom = uom;
	}
	return _p;
}

inline eml__NormalizedPowerMeasure * soap_new_set_eml__NormalizedPowerMeasure(
	struct soap *soap,
	double __item,
	enum eml__NormalizedPowerUom uom)
{
	eml__NormalizedPowerMeasure *_p = soap_new_eml__NormalizedPowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__NormalizedPowerMeasure::__item = __item;
		_p->eml__NormalizedPowerMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__NormalizedPowerMeasure(struct soap *soap, eml__NormalizedPowerMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:NormalizedPowerMeasure", "eml:NormalizedPowerMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__NormalizedPowerMeasure * SOAP_FMAC4 soap_get_eml__NormalizedPowerMeasure(struct soap*, eml__NormalizedPowerMeasure *, const char*, const char*);

inline int soap_read_eml__NormalizedPowerMeasure(struct soap *soap, eml__NormalizedPowerMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__NormalizedPowerMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassMeasure(struct soap*, const char*, int, const eml__MassMeasure *, const char*);
SOAP_FMAC3 eml__MassMeasure * SOAP_FMAC4 soap_in_eml__MassMeasure(struct soap*, const char*, eml__MassMeasure *, const char*);
SOAP_FMAC1 eml__MassMeasure * SOAP_FMAC2 soap_instantiate_eml__MassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassMeasure * soap_new_eml__MassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassMeasure * soap_new_req_eml__MassMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassUom uom)
{
	eml__MassMeasure *_p = soap_new_eml__MassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassMeasure::__item = __item;
		_p->eml__MassMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassMeasure * soap_new_set_eml__MassMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassUom uom)
{
	eml__MassMeasure *_p = soap_new_eml__MassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassMeasure::__item = __item;
		_p->eml__MassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassMeasure(struct soap *soap, eml__MassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassMeasure", "eml:MassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassMeasure * SOAP_FMAC4 soap_get_eml__MassMeasure(struct soap*, eml__MassMeasure *, const char*, const char*);

inline int soap_read_eml__MassMeasure(struct soap *soap, eml__MassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalConductivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalConductivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalConductivityMeasure(struct soap*, const char*, int, const eml__ThermalConductivityMeasure *, const char*);
SOAP_FMAC3 eml__ThermalConductivityMeasure * SOAP_FMAC4 soap_in_eml__ThermalConductivityMeasure(struct soap*, const char*, eml__ThermalConductivityMeasure *, const char*);
SOAP_FMAC1 eml__ThermalConductivityMeasure * SOAP_FMAC2 soap_instantiate_eml__ThermalConductivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ThermalConductivityMeasure * soap_new_eml__ThermalConductivityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ThermalConductivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ThermalConductivityMeasure * soap_new_req_eml__ThermalConductivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalConductivityUom uom)
{
	eml__ThermalConductivityMeasure *_p = soap_new_eml__ThermalConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalConductivityMeasure::__item = __item;
		_p->eml__ThermalConductivityMeasure::uom = uom;
	}
	return _p;
}

inline eml__ThermalConductivityMeasure * soap_new_set_eml__ThermalConductivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalConductivityUom uom)
{
	eml__ThermalConductivityMeasure *_p = soap_new_eml__ThermalConductivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalConductivityMeasure::__item = __item;
		_p->eml__ThermalConductivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ThermalConductivityMeasure(struct soap *soap, eml__ThermalConductivityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ThermalConductivityMeasure", "eml:ThermalConductivityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ThermalConductivityMeasure * SOAP_FMAC4 soap_get_eml__ThermalConductivityMeasure(struct soap*, eml__ThermalConductivityMeasure *, const char*, const char*);

inline int soap_read_eml__ThermalConductivityMeasure(struct soap *soap, eml__ThermalConductivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ThermalConductivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerPressureMeasure(struct soap*, const char*, int, const eml__LengthPerPressureMeasure *, const char*);
SOAP_FMAC3 eml__LengthPerPressureMeasure * SOAP_FMAC4 soap_in_eml__LengthPerPressureMeasure(struct soap*, const char*, eml__LengthPerPressureMeasure *, const char*);
SOAP_FMAC1 eml__LengthPerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml__LengthPerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LengthPerPressureMeasure * soap_new_eml__LengthPerPressureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LengthPerPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LengthPerPressureMeasure * soap_new_req_eml__LengthPerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerPressureUom uom)
{
	eml__LengthPerPressureMeasure *_p = soap_new_eml__LengthPerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerPressureMeasure::__item = __item;
		_p->eml__LengthPerPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml__LengthPerPressureMeasure * soap_new_set_eml__LengthPerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerPressureUom uom)
{
	eml__LengthPerPressureMeasure *_p = soap_new_eml__LengthPerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerPressureMeasure::__item = __item;
		_p->eml__LengthPerPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LengthPerPressureMeasure(struct soap *soap, eml__LengthPerPressureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LengthPerPressureMeasure", "eml:LengthPerPressureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LengthPerPressureMeasure * SOAP_FMAC4 soap_get_eml__LengthPerPressureMeasure(struct soap*, eml__LengthPerPressureMeasure *, const char*, const char*);

inline int soap_read_eml__LengthPerPressureMeasure(struct soap *soap, eml__LengthPerPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LengthPerPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AnglePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AnglePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AnglePerVolumeMeasure(struct soap*, const char*, int, const eml__AnglePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__AnglePerVolumeMeasure * SOAP_FMAC4 soap_in_eml__AnglePerVolumeMeasure(struct soap*, const char*, eml__AnglePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__AnglePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__AnglePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AnglePerVolumeMeasure * soap_new_eml__AnglePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AnglePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AnglePerVolumeMeasure * soap_new_req_eml__AnglePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AnglePerVolumeUom uom)
{
	eml__AnglePerVolumeMeasure *_p = soap_new_eml__AnglePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AnglePerVolumeMeasure::__item = __item;
		_p->eml__AnglePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__AnglePerVolumeMeasure * soap_new_set_eml__AnglePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AnglePerVolumeUom uom)
{
	eml__AnglePerVolumeMeasure *_p = soap_new_eml__AnglePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AnglePerVolumeMeasure::__item = __item;
		_p->eml__AnglePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AnglePerVolumeMeasure(struct soap *soap, eml__AnglePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AnglePerVolumeMeasure", "eml:AnglePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AnglePerVolumeMeasure * SOAP_FMAC4 soap_get_eml__AnglePerVolumeMeasure(struct soap*, eml__AnglePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__AnglePerVolumeMeasure(struct soap *soap, eml__AnglePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AnglePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureSquaredPerForceTimePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureSquaredPerForceTimePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, const char*, int, const eml__PressureSquaredPerForceTimePerAreaMeasure *, const char*);
SOAP_FMAC3 eml__PressureSquaredPerForceTimePerAreaMeasure * SOAP_FMAC4 soap_in_eml__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, const char*, eml__PressureSquaredPerForceTimePerAreaMeasure *, const char*);
SOAP_FMAC1 eml__PressureSquaredPerForceTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PressureSquaredPerForceTimePerAreaMeasure * soap_new_eml__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PressureSquaredPerForceTimePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PressureSquaredPerForceTimePerAreaMeasure * soap_new_req_eml__PressureSquaredPerForceTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressureSquaredPerForceTimePerAreaUom uom)
{
	eml__PressureSquaredPerForceTimePerAreaMeasure *_p = soap_new_eml__PressureSquaredPerForceTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressureSquaredPerForceTimePerAreaMeasure::__item = __item;
		_p->eml__PressureSquaredPerForceTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__PressureSquaredPerForceTimePerAreaMeasure * soap_new_set_eml__PressureSquaredPerForceTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressureSquaredPerForceTimePerAreaUom uom)
{
	eml__PressureSquaredPerForceTimePerAreaMeasure *_p = soap_new_eml__PressureSquaredPerForceTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressureSquaredPerForceTimePerAreaMeasure::__item = __item;
		_p->eml__PressureSquaredPerForceTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, eml__PressureSquaredPerForceTimePerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PressureSquaredPerForceTimePerAreaMeasure", "eml:PressureSquaredPerForceTimePerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PressureSquaredPerForceTimePerAreaMeasure * SOAP_FMAC4 soap_get_eml__PressureSquaredPerForceTimePerAreaMeasure(struct soap*, eml__PressureSquaredPerForceTimePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__PressureSquaredPerForceTimePerAreaMeasure(struct soap *soap, eml__PressureSquaredPerForceTimePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PressureSquaredPerForceTimePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimeLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimeLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimeLengthMeasure(struct soap*, const char*, int, const eml__VolumePerTimeLengthMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerTimeLengthMeasure * SOAP_FMAC4 soap_in_eml__VolumePerTimeLengthMeasure(struct soap*, const char*, eml__VolumePerTimeLengthMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerTimeLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerTimeLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerTimeLengthMeasure * soap_new_eml__VolumePerTimeLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerTimeLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerTimeLengthMeasure * soap_new_req_eml__VolumePerTimeLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimeLengthUom uom)
{
	eml__VolumePerTimeLengthMeasure *_p = soap_new_eml__VolumePerTimeLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimeLengthMeasure::__item = __item;
		_p->eml__VolumePerTimeLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerTimeLengthMeasure * soap_new_set_eml__VolumePerTimeLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimeLengthUom uom)
{
	eml__VolumePerTimeLengthMeasure *_p = soap_new_eml__VolumePerTimeLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimeLengthMeasure::__item = __item;
		_p->eml__VolumePerTimeLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerTimeLengthMeasure(struct soap *soap, eml__VolumePerTimeLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerTimeLengthMeasure", "eml:VolumePerTimeLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerTimeLengthMeasure * SOAP_FMAC4 soap_get_eml__VolumePerTimeLengthMeasure(struct soap*, eml__VolumePerTimeLengthMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerTimeLengthMeasure(struct soap *soap, eml__VolumePerTimeLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimeLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerTemperatureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerTemperatureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerTemperatureMeasure(struct soap*, const char*, int, const eml__LengthPerTemperatureMeasure *, const char*);
SOAP_FMAC3 eml__LengthPerTemperatureMeasure * SOAP_FMAC4 soap_in_eml__LengthPerTemperatureMeasure(struct soap*, const char*, eml__LengthPerTemperatureMeasure *, const char*);
SOAP_FMAC1 eml__LengthPerTemperatureMeasure * SOAP_FMAC2 soap_instantiate_eml__LengthPerTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LengthPerTemperatureMeasure * soap_new_eml__LengthPerTemperatureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LengthPerTemperatureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LengthPerTemperatureMeasure * soap_new_req_eml__LengthPerTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerTemperatureUom uom)
{
	eml__LengthPerTemperatureMeasure *_p = soap_new_eml__LengthPerTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerTemperatureMeasure::__item = __item;
		_p->eml__LengthPerTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline eml__LengthPerTemperatureMeasure * soap_new_set_eml__LengthPerTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerTemperatureUom uom)
{
	eml__LengthPerTemperatureMeasure *_p = soap_new_eml__LengthPerTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerTemperatureMeasure::__item = __item;
		_p->eml__LengthPerTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LengthPerTemperatureMeasure(struct soap *soap, eml__LengthPerTemperatureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LengthPerTemperatureMeasure", "eml:LengthPerTemperatureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LengthPerTemperatureMeasure * SOAP_FMAC4 soap_get_eml__LengthPerTemperatureMeasure(struct soap*, eml__LengthPerTemperatureMeasure *, const char*, const char*);

inline int soap_read_eml__LengthPerTemperatureMeasure(struct soap *soap, eml__LengthPerTemperatureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LengthPerTemperatureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerTimeMeasure(struct soap*, const char*, int, const eml__AmountOfSubstancePerTimeMeasure *, const char*);
SOAP_FMAC3 eml__AmountOfSubstancePerTimeMeasure * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerTimeMeasure(struct soap*, const char*, eml__AmountOfSubstancePerTimeMeasure *, const char*);
SOAP_FMAC1 eml__AmountOfSubstancePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__AmountOfSubstancePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AmountOfSubstancePerTimeMeasure * soap_new_eml__AmountOfSubstancePerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AmountOfSubstancePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AmountOfSubstancePerTimeMeasure * soap_new_req_eml__AmountOfSubstancePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerTimeUom uom)
{
	eml__AmountOfSubstancePerTimeMeasure *_p = soap_new_eml__AmountOfSubstancePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerTimeMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__AmountOfSubstancePerTimeMeasure * soap_new_set_eml__AmountOfSubstancePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerTimeUom uom)
{
	eml__AmountOfSubstancePerTimeMeasure *_p = soap_new_eml__AmountOfSubstancePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerTimeMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AmountOfSubstancePerTimeMeasure(struct soap *soap, eml__AmountOfSubstancePerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AmountOfSubstancePerTimeMeasure", "eml:AmountOfSubstancePerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AmountOfSubstancePerTimeMeasure * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerTimeMeasure(struct soap*, eml__AmountOfSubstancePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerTimeMeasure(struct soap *soap, eml__AmountOfSubstancePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForcePerLengthMeasure(struct soap*, const char*, int, const eml__ForcePerLengthMeasure *, const char*);
SOAP_FMAC3 eml__ForcePerLengthMeasure * SOAP_FMAC4 soap_in_eml__ForcePerLengthMeasure(struct soap*, const char*, eml__ForcePerLengthMeasure *, const char*);
SOAP_FMAC1 eml__ForcePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__ForcePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ForcePerLengthMeasure * soap_new_eml__ForcePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ForcePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ForcePerLengthMeasure * soap_new_req_eml__ForcePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForcePerLengthUom uom)
{
	eml__ForcePerLengthMeasure *_p = soap_new_eml__ForcePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForcePerLengthMeasure::__item = __item;
		_p->eml__ForcePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__ForcePerLengthMeasure * soap_new_set_eml__ForcePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForcePerLengthUom uom)
{
	eml__ForcePerLengthMeasure *_p = soap_new_eml__ForcePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForcePerLengthMeasure::__item = __item;
		_p->eml__ForcePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ForcePerLengthMeasure(struct soap *soap, eml__ForcePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ForcePerLengthMeasure", "eml:ForcePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ForcePerLengthMeasure * SOAP_FMAC4 soap_get_eml__ForcePerLengthMeasure(struct soap*, eml__ForcePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__ForcePerLengthMeasure(struct soap *soap, eml__ForcePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ForcePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressurePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressurePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressurePerTimeMeasure(struct soap*, const char*, int, const eml__PressurePerTimeMeasure *, const char*);
SOAP_FMAC3 eml__PressurePerTimeMeasure * SOAP_FMAC4 soap_in_eml__PressurePerTimeMeasure(struct soap*, const char*, eml__PressurePerTimeMeasure *, const char*);
SOAP_FMAC1 eml__PressurePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__PressurePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PressurePerTimeMeasure * soap_new_eml__PressurePerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PressurePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PressurePerTimeMeasure * soap_new_req_eml__PressurePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressurePerTimeUom uom)
{
	eml__PressurePerTimeMeasure *_p = soap_new_eml__PressurePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressurePerTimeMeasure::__item = __item;
		_p->eml__PressurePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__PressurePerTimeMeasure * soap_new_set_eml__PressurePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressurePerTimeUom uom)
{
	eml__PressurePerTimeMeasure *_p = soap_new_eml__PressurePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressurePerTimeMeasure::__item = __item;
		_p->eml__PressurePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PressurePerTimeMeasure(struct soap *soap, eml__PressurePerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PressurePerTimeMeasure", "eml:PressurePerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PressurePerTimeMeasure * SOAP_FMAC4 soap_get_eml__PressurePerTimeMeasure(struct soap*, eml__PressurePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__PressurePerTimeMeasure(struct soap *soap, eml__PressurePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PressurePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerVolumePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerVolumePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerVolumePerLengthMeasure(struct soap*, const char*, int, const eml__MassPerVolumePerLengthMeasure *, const char*);
SOAP_FMAC3 eml__MassPerVolumePerLengthMeasure * SOAP_FMAC4 soap_in_eml__MassPerVolumePerLengthMeasure(struct soap*, const char*, eml__MassPerVolumePerLengthMeasure *, const char*);
SOAP_FMAC1 eml__MassPerVolumePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__MassPerVolumePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassPerVolumePerLengthMeasure * soap_new_eml__MassPerVolumePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassPerVolumePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassPerVolumePerLengthMeasure * soap_new_req_eml__MassPerVolumePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerVolumePerLengthUom uom)
{
	eml__MassPerVolumePerLengthMeasure *_p = soap_new_eml__MassPerVolumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerVolumePerLengthMeasure::__item = __item;
		_p->eml__MassPerVolumePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassPerVolumePerLengthMeasure * soap_new_set_eml__MassPerVolumePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerVolumePerLengthUom uom)
{
	eml__MassPerVolumePerLengthMeasure *_p = soap_new_eml__MassPerVolumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerVolumePerLengthMeasure::__item = __item;
		_p->eml__MassPerVolumePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassPerVolumePerLengthMeasure(struct soap *soap, eml__MassPerVolumePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassPerVolumePerLengthMeasure", "eml:MassPerVolumePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassPerVolumePerLengthMeasure * SOAP_FMAC4 soap_get_eml__MassPerVolumePerLengthMeasure(struct soap*, eml__MassPerVolumePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__MassPerVolumePerLengthMeasure(struct soap *soap, eml__MassPerVolumePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassPerVolumePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__IsothermalCompressibilityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__IsothermalCompressibilityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__IsothermalCompressibilityMeasure(struct soap*, const char*, int, const eml__IsothermalCompressibilityMeasure *, const char*);
SOAP_FMAC3 eml__IsothermalCompressibilityMeasure * SOAP_FMAC4 soap_in_eml__IsothermalCompressibilityMeasure(struct soap*, const char*, eml__IsothermalCompressibilityMeasure *, const char*);
SOAP_FMAC1 eml__IsothermalCompressibilityMeasure * SOAP_FMAC2 soap_instantiate_eml__IsothermalCompressibilityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__IsothermalCompressibilityMeasure * soap_new_eml__IsothermalCompressibilityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__IsothermalCompressibilityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__IsothermalCompressibilityMeasure * soap_new_req_eml__IsothermalCompressibilityMeasure(
	struct soap *soap,
	double __item,
	enum eml__IsothermalCompressibilityUom uom)
{
	eml__IsothermalCompressibilityMeasure *_p = soap_new_eml__IsothermalCompressibilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__IsothermalCompressibilityMeasure::__item = __item;
		_p->eml__IsothermalCompressibilityMeasure::uom = uom;
	}
	return _p;
}

inline eml__IsothermalCompressibilityMeasure * soap_new_set_eml__IsothermalCompressibilityMeasure(
	struct soap *soap,
	double __item,
	enum eml__IsothermalCompressibilityUom uom)
{
	eml__IsothermalCompressibilityMeasure *_p = soap_new_eml__IsothermalCompressibilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__IsothermalCompressibilityMeasure::__item = __item;
		_p->eml__IsothermalCompressibilityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__IsothermalCompressibilityMeasure(struct soap *soap, eml__IsothermalCompressibilityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:IsothermalCompressibilityMeasure", "eml:IsothermalCompressibilityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__IsothermalCompressibilityMeasure * SOAP_FMAC4 soap_get_eml__IsothermalCompressibilityMeasure(struct soap*, eml__IsothermalCompressibilityMeasure *, const char*, const char*);

inline int soap_read_eml__IsothermalCompressibilityMeasure(struct soap *soap, eml__IsothermalCompressibilityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__IsothermalCompressibilityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricPotentialDifferenceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricPotentialDifferenceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricPotentialDifferenceMeasure(struct soap*, const char*, int, const eml__ElectricPotentialDifferenceMeasure *, const char*);
SOAP_FMAC3 eml__ElectricPotentialDifferenceMeasure * SOAP_FMAC4 soap_in_eml__ElectricPotentialDifferenceMeasure(struct soap*, const char*, eml__ElectricPotentialDifferenceMeasure *, const char*);
SOAP_FMAC1 eml__ElectricPotentialDifferenceMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricPotentialDifferenceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricPotentialDifferenceMeasure * soap_new_eml__ElectricPotentialDifferenceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricPotentialDifferenceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricPotentialDifferenceMeasure * soap_new_req_eml__ElectricPotentialDifferenceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricPotentialDifferenceUom uom)
{
	eml__ElectricPotentialDifferenceMeasure *_p = soap_new_eml__ElectricPotentialDifferenceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricPotentialDifferenceMeasure::__item = __item;
		_p->eml__ElectricPotentialDifferenceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricPotentialDifferenceMeasure * soap_new_set_eml__ElectricPotentialDifferenceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricPotentialDifferenceUom uom)
{
	eml__ElectricPotentialDifferenceMeasure *_p = soap_new_eml__ElectricPotentialDifferenceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricPotentialDifferenceMeasure::__item = __item;
		_p->eml__ElectricPotentialDifferenceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricPotentialDifferenceMeasure(struct soap *soap, eml__ElectricPotentialDifferenceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricPotentialDifferenceMeasure", "eml:ElectricPotentialDifferenceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricPotentialDifferenceMeasure * SOAP_FMAC4 soap_get_eml__ElectricPotentialDifferenceMeasure(struct soap*, eml__ElectricPotentialDifferenceMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricPotentialDifferenceMeasure(struct soap *soap, eml__ElectricPotentialDifferenceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricPotentialDifferenceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DiffusionCoefficientMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DiffusionCoefficientMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DiffusionCoefficientMeasure(struct soap*, const char*, int, const eml__DiffusionCoefficientMeasure *, const char*);
SOAP_FMAC3 eml__DiffusionCoefficientMeasure * SOAP_FMAC4 soap_in_eml__DiffusionCoefficientMeasure(struct soap*, const char*, eml__DiffusionCoefficientMeasure *, const char*);
SOAP_FMAC1 eml__DiffusionCoefficientMeasure * SOAP_FMAC2 soap_instantiate_eml__DiffusionCoefficientMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__DiffusionCoefficientMeasure * soap_new_eml__DiffusionCoefficientMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__DiffusionCoefficientMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__DiffusionCoefficientMeasure * soap_new_req_eml__DiffusionCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml__DiffusionCoefficientUom uom)
{
	eml__DiffusionCoefficientMeasure *_p = soap_new_eml__DiffusionCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DiffusionCoefficientMeasure::__item = __item;
		_p->eml__DiffusionCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline eml__DiffusionCoefficientMeasure * soap_new_set_eml__DiffusionCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml__DiffusionCoefficientUom uom)
{
	eml__DiffusionCoefficientMeasure *_p = soap_new_eml__DiffusionCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DiffusionCoefficientMeasure::__item = __item;
		_p->eml__DiffusionCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__DiffusionCoefficientMeasure(struct soap *soap, eml__DiffusionCoefficientMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:DiffusionCoefficientMeasure", "eml:DiffusionCoefficientMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__DiffusionCoefficientMeasure * SOAP_FMAC4 soap_get_eml__DiffusionCoefficientMeasure(struct soap*, eml__DiffusionCoefficientMeasure *, const char*, const char*);

inline int soap_read_eml__DiffusionCoefficientMeasure(struct soap *soap, eml__DiffusionCoefficientMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__DiffusionCoefficientMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__APIGammaRayMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__APIGammaRayMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__APIGammaRayMeasure(struct soap*, const char*, int, const eml__APIGammaRayMeasure *, const char*);
SOAP_FMAC3 eml__APIGammaRayMeasure * SOAP_FMAC4 soap_in_eml__APIGammaRayMeasure(struct soap*, const char*, eml__APIGammaRayMeasure *, const char*);
SOAP_FMAC1 eml__APIGammaRayMeasure * SOAP_FMAC2 soap_instantiate_eml__APIGammaRayMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__APIGammaRayMeasure * soap_new_eml__APIGammaRayMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__APIGammaRayMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__APIGammaRayMeasure * soap_new_req_eml__APIGammaRayMeasure(
	struct soap *soap,
	double __item,
	enum eml__APIGammaRayUom uom)
{
	eml__APIGammaRayMeasure *_p = soap_new_eml__APIGammaRayMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__APIGammaRayMeasure::__item = __item;
		_p->eml__APIGammaRayMeasure::uom = uom;
	}
	return _p;
}

inline eml__APIGammaRayMeasure * soap_new_set_eml__APIGammaRayMeasure(
	struct soap *soap,
	double __item,
	enum eml__APIGammaRayUom uom)
{
	eml__APIGammaRayMeasure *_p = soap_new_eml__APIGammaRayMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__APIGammaRayMeasure::__item = __item;
		_p->eml__APIGammaRayMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__APIGammaRayMeasure(struct soap *soap, eml__APIGammaRayMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:APIGammaRayMeasure", "eml:APIGammaRayMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__APIGammaRayMeasure * SOAP_FMAC4 soap_get_eml__APIGammaRayMeasure(struct soap*, eml__APIGammaRayMeasure *, const char*, const char*);

inline int soap_read_eml__APIGammaRayMeasure(struct soap *soap, eml__APIGammaRayMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__APIGammaRayMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricChargePerMassMeasure(struct soap*, const char*, int, const eml__ElectricChargePerMassMeasure *, const char*);
SOAP_FMAC3 eml__ElectricChargePerMassMeasure * SOAP_FMAC4 soap_in_eml__ElectricChargePerMassMeasure(struct soap*, const char*, eml__ElectricChargePerMassMeasure *, const char*);
SOAP_FMAC1 eml__ElectricChargePerMassMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricChargePerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricChargePerMassMeasure * soap_new_eml__ElectricChargePerMassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricChargePerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricChargePerMassMeasure * soap_new_req_eml__ElectricChargePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricChargePerMassUom uom)
{
	eml__ElectricChargePerMassMeasure *_p = soap_new_eml__ElectricChargePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricChargePerMassMeasure::__item = __item;
		_p->eml__ElectricChargePerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricChargePerMassMeasure * soap_new_set_eml__ElectricChargePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricChargePerMassUom uom)
{
	eml__ElectricChargePerMassMeasure *_p = soap_new_eml__ElectricChargePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricChargePerMassMeasure::__item = __item;
		_p->eml__ElectricChargePerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricChargePerMassMeasure(struct soap *soap, eml__ElectricChargePerMassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricChargePerMassMeasure", "eml:ElectricChargePerMassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricChargePerMassMeasure * SOAP_FMAC4 soap_get_eml__ElectricChargePerMassMeasure(struct soap*, eml__ElectricChargePerMassMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricChargePerMassMeasure(struct soap *soap, eml__ElectricChargePerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricChargePerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalElectricPotentialDifferenceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalElectricPotentialDifferenceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, const char*, int, const eml__ReciprocalElectricPotentialDifferenceMeasure *, const char*);
SOAP_FMAC3 eml__ReciprocalElectricPotentialDifferenceMeasure * SOAP_FMAC4 soap_in_eml__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, const char*, eml__ReciprocalElectricPotentialDifferenceMeasure *, const char*);
SOAP_FMAC1 eml__ReciprocalElectricPotentialDifferenceMeasure * SOAP_FMAC2 soap_instantiate_eml__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReciprocalElectricPotentialDifferenceMeasure * soap_new_eml__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReciprocalElectricPotentialDifferenceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReciprocalElectricPotentialDifferenceMeasure * soap_new_req_eml__ReciprocalElectricPotentialDifferenceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalElectricPotentialDifferenceUom uom)
{
	eml__ReciprocalElectricPotentialDifferenceMeasure *_p = soap_new_eml__ReciprocalElectricPotentialDifferenceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalElectricPotentialDifferenceMeasure::__item = __item;
		_p->eml__ReciprocalElectricPotentialDifferenceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReciprocalElectricPotentialDifferenceMeasure * soap_new_set_eml__ReciprocalElectricPotentialDifferenceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalElectricPotentialDifferenceUom uom)
{
	eml__ReciprocalElectricPotentialDifferenceMeasure *_p = soap_new_eml__ReciprocalElectricPotentialDifferenceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalElectricPotentialDifferenceMeasure::__item = __item;
		_p->eml__ReciprocalElectricPotentialDifferenceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, eml__ReciprocalElectricPotentialDifferenceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReciprocalElectricPotentialDifferenceMeasure", "eml:ReciprocalElectricPotentialDifferenceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReciprocalElectricPotentialDifferenceMeasure * SOAP_FMAC4 soap_get_eml__ReciprocalElectricPotentialDifferenceMeasure(struct soap*, eml__ReciprocalElectricPotentialDifferenceMeasure *, const char*, const char*);

inline int soap_read_eml__ReciprocalElectricPotentialDifferenceMeasure(struct soap *soap, eml__ReciprocalElectricPotentialDifferenceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReciprocalElectricPotentialDifferenceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DynamicViscosityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DynamicViscosityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DynamicViscosityMeasure(struct soap*, const char*, int, const eml__DynamicViscosityMeasure *, const char*);
SOAP_FMAC3 eml__DynamicViscosityMeasure * SOAP_FMAC4 soap_in_eml__DynamicViscosityMeasure(struct soap*, const char*, eml__DynamicViscosityMeasure *, const char*);
SOAP_FMAC1 eml__DynamicViscosityMeasure * SOAP_FMAC2 soap_instantiate_eml__DynamicViscosityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__DynamicViscosityMeasure * soap_new_eml__DynamicViscosityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__DynamicViscosityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__DynamicViscosityMeasure * soap_new_req_eml__DynamicViscosityMeasure(
	struct soap *soap,
	double __item,
	enum eml__DynamicViscosityUom uom)
{
	eml__DynamicViscosityMeasure *_p = soap_new_eml__DynamicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DynamicViscosityMeasure::__item = __item;
		_p->eml__DynamicViscosityMeasure::uom = uom;
	}
	return _p;
}

inline eml__DynamicViscosityMeasure * soap_new_set_eml__DynamicViscosityMeasure(
	struct soap *soap,
	double __item,
	enum eml__DynamicViscosityUom uom)
{
	eml__DynamicViscosityMeasure *_p = soap_new_eml__DynamicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DynamicViscosityMeasure::__item = __item;
		_p->eml__DynamicViscosityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__DynamicViscosityMeasure(struct soap *soap, eml__DynamicViscosityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:DynamicViscosityMeasure", "eml:DynamicViscosityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__DynamicViscosityMeasure * SOAP_FMAC4 soap_get_eml__DynamicViscosityMeasure(struct soap*, eml__DynamicViscosityMeasure *, const char*, const char*);

inline int soap_read_eml__DynamicViscosityMeasure(struct soap *soap, eml__DynamicViscosityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__DynamicViscosityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalLengthMeasure(struct soap*, const char*, int, const eml__ReciprocalLengthMeasure *, const char*);
SOAP_FMAC3 eml__ReciprocalLengthMeasure * SOAP_FMAC4 soap_in_eml__ReciprocalLengthMeasure(struct soap*, const char*, eml__ReciprocalLengthMeasure *, const char*);
SOAP_FMAC1 eml__ReciprocalLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__ReciprocalLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReciprocalLengthMeasure * soap_new_eml__ReciprocalLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReciprocalLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReciprocalLengthMeasure * soap_new_req_eml__ReciprocalLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalLengthUom uom)
{
	eml__ReciprocalLengthMeasure *_p = soap_new_eml__ReciprocalLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalLengthMeasure::__item = __item;
		_p->eml__ReciprocalLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReciprocalLengthMeasure * soap_new_set_eml__ReciprocalLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalLengthUom uom)
{
	eml__ReciprocalLengthMeasure *_p = soap_new_eml__ReciprocalLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalLengthMeasure::__item = __item;
		_p->eml__ReciprocalLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReciprocalLengthMeasure(struct soap *soap, eml__ReciprocalLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReciprocalLengthMeasure", "eml:ReciprocalLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReciprocalLengthMeasure * SOAP_FMAC4 soap_get_eml__ReciprocalLengthMeasure(struct soap*, eml__ReciprocalLengthMeasure *, const char*, const char*);

inline int soap_read_eml__ReciprocalLengthMeasure(struct soap *soap, eml__ReciprocalLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReciprocalLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimePerMassMeasure(struct soap*, const char*, int, const eml__TimePerMassMeasure *, const char*);
SOAP_FMAC3 eml__TimePerMassMeasure * SOAP_FMAC4 soap_in_eml__TimePerMassMeasure(struct soap*, const char*, eml__TimePerMassMeasure *, const char*);
SOAP_FMAC1 eml__TimePerMassMeasure * SOAP_FMAC2 soap_instantiate_eml__TimePerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__TimePerMassMeasure * soap_new_eml__TimePerMassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__TimePerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__TimePerMassMeasure * soap_new_req_eml__TimePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimePerMassUom uom)
{
	eml__TimePerMassMeasure *_p = soap_new_eml__TimePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimePerMassMeasure::__item = __item;
		_p->eml__TimePerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml__TimePerMassMeasure * soap_new_set_eml__TimePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimePerMassUom uom)
{
	eml__TimePerMassMeasure *_p = soap_new_eml__TimePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimePerMassMeasure::__item = __item;
		_p->eml__TimePerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__TimePerMassMeasure(struct soap *soap, eml__TimePerMassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:TimePerMassMeasure", "eml:TimePerMassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__TimePerMassMeasure * SOAP_FMAC4 soap_get_eml__TimePerMassMeasure(struct soap*, eml__TimePerMassMeasure *, const char*, const char*);

inline int soap_read_eml__TimePerMassMeasure(struct soap *soap, eml__TimePerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__TimePerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressurePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressurePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressurePerVolumeMeasure(struct soap*, const char*, int, const eml__PressurePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__PressurePerVolumeMeasure * SOAP_FMAC4 soap_in_eml__PressurePerVolumeMeasure(struct soap*, const char*, eml__PressurePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__PressurePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__PressurePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PressurePerVolumeMeasure * soap_new_eml__PressurePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PressurePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PressurePerVolumeMeasure * soap_new_req_eml__PressurePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressurePerVolumeUom uom)
{
	eml__PressurePerVolumeMeasure *_p = soap_new_eml__PressurePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressurePerVolumeMeasure::__item = __item;
		_p->eml__PressurePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__PressurePerVolumeMeasure * soap_new_set_eml__PressurePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressurePerVolumeUom uom)
{
	eml__PressurePerVolumeMeasure *_p = soap_new_eml__PressurePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressurePerVolumeMeasure::__item = __item;
		_p->eml__PressurePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PressurePerVolumeMeasure(struct soap *soap, eml__PressurePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PressurePerVolumeMeasure", "eml:PressurePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PressurePerVolumeMeasure * SOAP_FMAC4 soap_get_eml__PressurePerVolumeMeasure(struct soap*, eml__PressurePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__PressurePerVolumeMeasure(struct soap *soap, eml__PressurePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PressurePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumetricHeatTransferCoefficientMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumetricHeatTransferCoefficientMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumetricHeatTransferCoefficientMeasure(struct soap*, const char*, int, const eml__VolumetricHeatTransferCoefficientMeasure *, const char*);
SOAP_FMAC3 eml__VolumetricHeatTransferCoefficientMeasure * SOAP_FMAC4 soap_in_eml__VolumetricHeatTransferCoefficientMeasure(struct soap*, const char*, eml__VolumetricHeatTransferCoefficientMeasure *, const char*);
SOAP_FMAC1 eml__VolumetricHeatTransferCoefficientMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumetricHeatTransferCoefficientMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumetricHeatTransferCoefficientMeasure * soap_new_eml__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumetricHeatTransferCoefficientMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumetricHeatTransferCoefficientMeasure * soap_new_req_eml__VolumetricHeatTransferCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumetricHeatTransferCoefficientUom uom)
{
	eml__VolumetricHeatTransferCoefficientMeasure *_p = soap_new_eml__VolumetricHeatTransferCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumetricHeatTransferCoefficientMeasure::__item = __item;
		_p->eml__VolumetricHeatTransferCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumetricHeatTransferCoefficientMeasure * soap_new_set_eml__VolumetricHeatTransferCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumetricHeatTransferCoefficientUom uom)
{
	eml__VolumetricHeatTransferCoefficientMeasure *_p = soap_new_eml__VolumetricHeatTransferCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumetricHeatTransferCoefficientMeasure::__item = __item;
		_p->eml__VolumetricHeatTransferCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, eml__VolumetricHeatTransferCoefficientMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumetricHeatTransferCoefficientMeasure", "eml:VolumetricHeatTransferCoefficientMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumetricHeatTransferCoefficientMeasure * SOAP_FMAC4 soap_get_eml__VolumetricHeatTransferCoefficientMeasure(struct soap*, eml__VolumetricHeatTransferCoefficientMeasure *, const char*, const char*);

inline int soap_read_eml__VolumetricHeatTransferCoefficientMeasure(struct soap *soap, eml__VolumetricHeatTransferCoefficientMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumetricHeatTransferCoefficientMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricChargePerVolumeMeasure(struct soap*, const char*, int, const eml__ElectricChargePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__ElectricChargePerVolumeMeasure * SOAP_FMAC4 soap_in_eml__ElectricChargePerVolumeMeasure(struct soap*, const char*, eml__ElectricChargePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__ElectricChargePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricChargePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricChargePerVolumeMeasure * soap_new_eml__ElectricChargePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricChargePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricChargePerVolumeMeasure * soap_new_req_eml__ElectricChargePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricChargePerVolumeUom uom)
{
	eml__ElectricChargePerVolumeMeasure *_p = soap_new_eml__ElectricChargePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricChargePerVolumeMeasure::__item = __item;
		_p->eml__ElectricChargePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricChargePerVolumeMeasure * soap_new_set_eml__ElectricChargePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricChargePerVolumeUom uom)
{
	eml__ElectricChargePerVolumeMeasure *_p = soap_new_eml__ElectricChargePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricChargePerVolumeMeasure::__item = __item;
		_p->eml__ElectricChargePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricChargePerVolumeMeasure(struct soap *soap, eml__ElectricChargePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricChargePerVolumeMeasure", "eml:ElectricChargePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricChargePerVolumeMeasure * SOAP_FMAC4 soap_get_eml__ElectricChargePerVolumeMeasure(struct soap*, eml__ElectricChargePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricChargePerVolumeMeasure(struct soap *soap, eml__ElectricChargePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricChargePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerVolumeMeasure(struct soap*, const char*, int, const eml__EnergyPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__EnergyPerVolumeMeasure * SOAP_FMAC4 soap_in_eml__EnergyPerVolumeMeasure(struct soap*, const char*, eml__EnergyPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__EnergyPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__EnergyPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__EnergyPerVolumeMeasure * soap_new_eml__EnergyPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__EnergyPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__EnergyPerVolumeMeasure * soap_new_req_eml__EnergyPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerVolumeUom uom)
{
	eml__EnergyPerVolumeMeasure *_p = soap_new_eml__EnergyPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerVolumeMeasure::__item = __item;
		_p->eml__EnergyPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__EnergyPerVolumeMeasure * soap_new_set_eml__EnergyPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerVolumeUom uom)
{
	eml__EnergyPerVolumeMeasure *_p = soap_new_eml__EnergyPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerVolumeMeasure::__item = __item;
		_p->eml__EnergyPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__EnergyPerVolumeMeasure(struct soap *soap, eml__EnergyPerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:EnergyPerVolumeMeasure", "eml:EnergyPerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__EnergyPerVolumeMeasure * SOAP_FMAC4 soap_get_eml__EnergyPerVolumeMeasure(struct soap*, eml__EnergyPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__EnergyPerVolumeMeasure(struct soap *soap, eml__EnergyPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__EnergyPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectromagneticMomentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectromagneticMomentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectromagneticMomentMeasure(struct soap*, const char*, int, const eml__ElectromagneticMomentMeasure *, const char*);
SOAP_FMAC3 eml__ElectromagneticMomentMeasure * SOAP_FMAC4 soap_in_eml__ElectromagneticMomentMeasure(struct soap*, const char*, eml__ElectromagneticMomentMeasure *, const char*);
SOAP_FMAC1 eml__ElectromagneticMomentMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectromagneticMomentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectromagneticMomentMeasure * soap_new_eml__ElectromagneticMomentMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectromagneticMomentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectromagneticMomentMeasure * soap_new_req_eml__ElectromagneticMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectromagneticMomentUom uom)
{
	eml__ElectromagneticMomentMeasure *_p = soap_new_eml__ElectromagneticMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectromagneticMomentMeasure::__item = __item;
		_p->eml__ElectromagneticMomentMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectromagneticMomentMeasure * soap_new_set_eml__ElectromagneticMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectromagneticMomentUom uom)
{
	eml__ElectromagneticMomentMeasure *_p = soap_new_eml__ElectromagneticMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectromagneticMomentMeasure::__item = __item;
		_p->eml__ElectromagneticMomentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectromagneticMomentMeasure(struct soap *soap, eml__ElectromagneticMomentMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectromagneticMomentMeasure", "eml:ElectromagneticMomentMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectromagneticMomentMeasure * SOAP_FMAC4 soap_get_eml__ElectromagneticMomentMeasure(struct soap*, eml__ElectromagneticMomentMeasure *, const char*, const char*);

inline int soap_read_eml__ElectromagneticMomentMeasure(struct soap *soap, eml__ElectromagneticMomentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectromagneticMomentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimePerVolumeMeasure(struct soap*, const char*, int, const eml__TimePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__TimePerVolumeMeasure * SOAP_FMAC4 soap_in_eml__TimePerVolumeMeasure(struct soap*, const char*, eml__TimePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__TimePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__TimePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__TimePerVolumeMeasure * soap_new_eml__TimePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__TimePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__TimePerVolumeMeasure * soap_new_req_eml__TimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimePerVolumeUom uom)
{
	eml__TimePerVolumeMeasure *_p = soap_new_eml__TimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimePerVolumeMeasure::__item = __item;
		_p->eml__TimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__TimePerVolumeMeasure * soap_new_set_eml__TimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimePerVolumeUom uom)
{
	eml__TimePerVolumeMeasure *_p = soap_new_eml__TimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimePerVolumeMeasure::__item = __item;
		_p->eml__TimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__TimePerVolumeMeasure(struct soap *soap, eml__TimePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:TimePerVolumeMeasure", "eml:TimePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__TimePerVolumeMeasure * SOAP_FMAC4 soap_get_eml__TimePerVolumeMeasure(struct soap*, eml__TimePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__TimePerVolumeMeasure(struct soap *soap, eml__TimePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__TimePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__InductanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__InductanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__InductanceMeasure(struct soap*, const char*, int, const eml__InductanceMeasure *, const char*);
SOAP_FMAC3 eml__InductanceMeasure * SOAP_FMAC4 soap_in_eml__InductanceMeasure(struct soap*, const char*, eml__InductanceMeasure *, const char*);
SOAP_FMAC1 eml__InductanceMeasure * SOAP_FMAC2 soap_instantiate_eml__InductanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__InductanceMeasure * soap_new_eml__InductanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__InductanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__InductanceMeasure * soap_new_req_eml__InductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__InductanceUom uom)
{
	eml__InductanceMeasure *_p = soap_new_eml__InductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__InductanceMeasure::__item = __item;
		_p->eml__InductanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__InductanceMeasure * soap_new_set_eml__InductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__InductanceUom uom)
{
	eml__InductanceMeasure *_p = soap_new_eml__InductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__InductanceMeasure::__item = __item;
		_p->eml__InductanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__InductanceMeasure(struct soap *soap, eml__InductanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:InductanceMeasure", "eml:InductanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__InductanceMeasure * SOAP_FMAC4 soap_get_eml__InductanceMeasure(struct soap*, eml__InductanceMeasure *, const char*, const char*);

inline int soap_read_eml__InductanceMeasure(struct soap *soap, eml__InductanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__InductanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__KinematicViscosityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__KinematicViscosityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__KinematicViscosityMeasure(struct soap*, const char*, int, const eml__KinematicViscosityMeasure *, const char*);
SOAP_FMAC3 eml__KinematicViscosityMeasure * SOAP_FMAC4 soap_in_eml__KinematicViscosityMeasure(struct soap*, const char*, eml__KinematicViscosityMeasure *, const char*);
SOAP_FMAC1 eml__KinematicViscosityMeasure * SOAP_FMAC2 soap_instantiate_eml__KinematicViscosityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__KinematicViscosityMeasure * soap_new_eml__KinematicViscosityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__KinematicViscosityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__KinematicViscosityMeasure * soap_new_req_eml__KinematicViscosityMeasure(
	struct soap *soap,
	double __item,
	enum eml__KinematicViscosityUom uom)
{
	eml__KinematicViscosityMeasure *_p = soap_new_eml__KinematicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__KinematicViscosityMeasure::__item = __item;
		_p->eml__KinematicViscosityMeasure::uom = uom;
	}
	return _p;
}

inline eml__KinematicViscosityMeasure * soap_new_set_eml__KinematicViscosityMeasure(
	struct soap *soap,
	double __item,
	enum eml__KinematicViscosityUom uom)
{
	eml__KinematicViscosityMeasure *_p = soap_new_eml__KinematicViscosityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__KinematicViscosityMeasure::__item = __item;
		_p->eml__KinematicViscosityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__KinematicViscosityMeasure(struct soap *soap, eml__KinematicViscosityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:KinematicViscosityMeasure", "eml:KinematicViscosityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__KinematicViscosityMeasure * SOAP_FMAC4 soap_get_eml__KinematicViscosityMeasure(struct soap*, eml__KinematicViscosityMeasure *, const char*, const char*);

inline int soap_read_eml__KinematicViscosityMeasure(struct soap *soap, eml__KinematicViscosityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__KinematicViscosityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalAreaMeasure(struct soap*, const char*, int, const eml__ReciprocalAreaMeasure *, const char*);
SOAP_FMAC3 eml__ReciprocalAreaMeasure * SOAP_FMAC4 soap_in_eml__ReciprocalAreaMeasure(struct soap*, const char*, eml__ReciprocalAreaMeasure *, const char*);
SOAP_FMAC1 eml__ReciprocalAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__ReciprocalAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReciprocalAreaMeasure * soap_new_eml__ReciprocalAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReciprocalAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReciprocalAreaMeasure * soap_new_req_eml__ReciprocalAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalAreaUom uom)
{
	eml__ReciprocalAreaMeasure *_p = soap_new_eml__ReciprocalAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalAreaMeasure::__item = __item;
		_p->eml__ReciprocalAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReciprocalAreaMeasure * soap_new_set_eml__ReciprocalAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalAreaUom uom)
{
	eml__ReciprocalAreaMeasure *_p = soap_new_eml__ReciprocalAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalAreaMeasure::__item = __item;
		_p->eml__ReciprocalAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReciprocalAreaMeasure(struct soap *soap, eml__ReciprocalAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReciprocalAreaMeasure", "eml:ReciprocalAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReciprocalAreaMeasure * SOAP_FMAC4 soap_get_eml__ReciprocalAreaMeasure(struct soap*, eml__ReciprocalAreaMeasure *, const char*, const char*);

inline int soap_read_eml__ReciprocalAreaMeasure(struct soap *soap, eml__ReciprocalAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReciprocalAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassLengthMeasure(struct soap*, const char*, int, const eml__MassLengthMeasure *, const char*);
SOAP_FMAC3 eml__MassLengthMeasure * SOAP_FMAC4 soap_in_eml__MassLengthMeasure(struct soap*, const char*, eml__MassLengthMeasure *, const char*);
SOAP_FMAC1 eml__MassLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__MassLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassLengthMeasure * soap_new_eml__MassLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassLengthMeasure * soap_new_req_eml__MassLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassLengthUom uom)
{
	eml__MassLengthMeasure *_p = soap_new_eml__MassLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassLengthMeasure::__item = __item;
		_p->eml__MassLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassLengthMeasure * soap_new_set_eml__MassLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassLengthUom uom)
{
	eml__MassLengthMeasure *_p = soap_new_eml__MassLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassLengthMeasure::__item = __item;
		_p->eml__MassLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassLengthMeasure(struct soap *soap, eml__MassLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassLengthMeasure", "eml:MassLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassLengthMeasure * SOAP_FMAC4 soap_get_eml__MassLengthMeasure(struct soap*, eml__MassLengthMeasure *, const char*, const char*);

inline int soap_read_eml__MassLengthMeasure(struct soap *soap, eml__MassLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricalResistivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricalResistivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricalResistivityMeasure(struct soap*, const char*, int, const eml__ElectricalResistivityMeasure *, const char*);
SOAP_FMAC3 eml__ElectricalResistivityMeasure * SOAP_FMAC4 soap_in_eml__ElectricalResistivityMeasure(struct soap*, const char*, eml__ElectricalResistivityMeasure *, const char*);
SOAP_FMAC1 eml__ElectricalResistivityMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricalResistivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricalResistivityMeasure * soap_new_eml__ElectricalResistivityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricalResistivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricalResistivityMeasure * soap_new_req_eml__ElectricalResistivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricalResistivityUom uom)
{
	eml__ElectricalResistivityMeasure *_p = soap_new_eml__ElectricalResistivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricalResistivityMeasure::__item = __item;
		_p->eml__ElectricalResistivityMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricalResistivityMeasure * soap_new_set_eml__ElectricalResistivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricalResistivityUom uom)
{
	eml__ElectricalResistivityMeasure *_p = soap_new_eml__ElectricalResistivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricalResistivityMeasure::__item = __item;
		_p->eml__ElectricalResistivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricalResistivityMeasure(struct soap *soap, eml__ElectricalResistivityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricalResistivityMeasure", "eml:ElectricalResistivityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricalResistivityMeasure * SOAP_FMAC4 soap_get_eml__ElectricalResistivityMeasure(struct soap*, eml__ElectricalResistivityMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricalResistivityMeasure(struct soap *soap, eml__ElectricalResistivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricalResistivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__CapacitanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__CapacitanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__CapacitanceMeasure(struct soap*, const char*, int, const eml__CapacitanceMeasure *, const char*);
SOAP_FMAC3 eml__CapacitanceMeasure * SOAP_FMAC4 soap_in_eml__CapacitanceMeasure(struct soap*, const char*, eml__CapacitanceMeasure *, const char*);
SOAP_FMAC1 eml__CapacitanceMeasure * SOAP_FMAC2 soap_instantiate_eml__CapacitanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__CapacitanceMeasure * soap_new_eml__CapacitanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__CapacitanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__CapacitanceMeasure * soap_new_req_eml__CapacitanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__CapacitanceUom uom)
{
	eml__CapacitanceMeasure *_p = soap_new_eml__CapacitanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__CapacitanceMeasure::__item = __item;
		_p->eml__CapacitanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__CapacitanceMeasure * soap_new_set_eml__CapacitanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__CapacitanceUom uom)
{
	eml__CapacitanceMeasure *_p = soap_new_eml__CapacitanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__CapacitanceMeasure::__item = __item;
		_p->eml__CapacitanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__CapacitanceMeasure(struct soap *soap, eml__CapacitanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:CapacitanceMeasure", "eml:CapacitanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__CapacitanceMeasure * SOAP_FMAC4 soap_get_eml__CapacitanceMeasure(struct soap*, eml__CapacitanceMeasure *, const char*, const char*);

inline int soap_read_eml__CapacitanceMeasure(struct soap *soap, eml__CapacitanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__CapacitanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__FrequencyIntervalMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__FrequencyIntervalMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__FrequencyIntervalMeasure(struct soap*, const char*, int, const eml__FrequencyIntervalMeasure *, const char*);
SOAP_FMAC3 eml__FrequencyIntervalMeasure * SOAP_FMAC4 soap_in_eml__FrequencyIntervalMeasure(struct soap*, const char*, eml__FrequencyIntervalMeasure *, const char*);
SOAP_FMAC1 eml__FrequencyIntervalMeasure * SOAP_FMAC2 soap_instantiate_eml__FrequencyIntervalMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__FrequencyIntervalMeasure * soap_new_eml__FrequencyIntervalMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__FrequencyIntervalMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__FrequencyIntervalMeasure * soap_new_req_eml__FrequencyIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml__FrequencyIntervalUom uom)
{
	eml__FrequencyIntervalMeasure *_p = soap_new_eml__FrequencyIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__FrequencyIntervalMeasure::__item = __item;
		_p->eml__FrequencyIntervalMeasure::uom = uom;
	}
	return _p;
}

inline eml__FrequencyIntervalMeasure * soap_new_set_eml__FrequencyIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml__FrequencyIntervalUom uom)
{
	eml__FrequencyIntervalMeasure *_p = soap_new_eml__FrequencyIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__FrequencyIntervalMeasure::__item = __item;
		_p->eml__FrequencyIntervalMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__FrequencyIntervalMeasure(struct soap *soap, eml__FrequencyIntervalMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:FrequencyIntervalMeasure", "eml:FrequencyIntervalMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__FrequencyIntervalMeasure * SOAP_FMAC4 soap_get_eml__FrequencyIntervalMeasure(struct soap*, eml__FrequencyIntervalMeasure *, const char*, const char*);

inline int soap_read_eml__FrequencyIntervalMeasure(struct soap *soap, eml__FrequencyIntervalMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__FrequencyIntervalMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__FrequencyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__FrequencyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__FrequencyMeasure(struct soap*, const char*, int, const eml__FrequencyMeasure *, const char*);
SOAP_FMAC3 eml__FrequencyMeasure * SOAP_FMAC4 soap_in_eml__FrequencyMeasure(struct soap*, const char*, eml__FrequencyMeasure *, const char*);
SOAP_FMAC1 eml__FrequencyMeasure * SOAP_FMAC2 soap_instantiate_eml__FrequencyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__FrequencyMeasure * soap_new_eml__FrequencyMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__FrequencyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__FrequencyMeasure * soap_new_req_eml__FrequencyMeasure(
	struct soap *soap,
	double __item,
	enum eml__FrequencyUom uom)
{
	eml__FrequencyMeasure *_p = soap_new_eml__FrequencyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__FrequencyMeasure::__item = __item;
		_p->eml__FrequencyMeasure::uom = uom;
	}
	return _p;
}

inline eml__FrequencyMeasure * soap_new_set_eml__FrequencyMeasure(
	struct soap *soap,
	double __item,
	enum eml__FrequencyUom uom)
{
	eml__FrequencyMeasure *_p = soap_new_eml__FrequencyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__FrequencyMeasure::__item = __item;
		_p->eml__FrequencyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__FrequencyMeasure(struct soap *soap, eml__FrequencyMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:FrequencyMeasure", "eml:FrequencyMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__FrequencyMeasure * SOAP_FMAC4 soap_get_eml__FrequencyMeasure(struct soap*, eml__FrequencyMeasure *, const char*, const char*);

inline int soap_read_eml__FrequencyMeasure(struct soap *soap, eml__FrequencyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__FrequencyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__SignalingEventPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__SignalingEventPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__SignalingEventPerTimeMeasure(struct soap*, const char*, int, const eml__SignalingEventPerTimeMeasure *, const char*);
SOAP_FMAC3 eml__SignalingEventPerTimeMeasure * SOAP_FMAC4 soap_in_eml__SignalingEventPerTimeMeasure(struct soap*, const char*, eml__SignalingEventPerTimeMeasure *, const char*);
SOAP_FMAC1 eml__SignalingEventPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__SignalingEventPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__SignalingEventPerTimeMeasure * soap_new_eml__SignalingEventPerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__SignalingEventPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__SignalingEventPerTimeMeasure * soap_new_req_eml__SignalingEventPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__SignalingEventPerTimeUom uom)
{
	eml__SignalingEventPerTimeMeasure *_p = soap_new_eml__SignalingEventPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__SignalingEventPerTimeMeasure::__item = __item;
		_p->eml__SignalingEventPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__SignalingEventPerTimeMeasure * soap_new_set_eml__SignalingEventPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__SignalingEventPerTimeUom uom)
{
	eml__SignalingEventPerTimeMeasure *_p = soap_new_eml__SignalingEventPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__SignalingEventPerTimeMeasure::__item = __item;
		_p->eml__SignalingEventPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__SignalingEventPerTimeMeasure(struct soap *soap, eml__SignalingEventPerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:SignalingEventPerTimeMeasure", "eml:SignalingEventPerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__SignalingEventPerTimeMeasure * SOAP_FMAC4 soap_get_eml__SignalingEventPerTimeMeasure(struct soap*, eml__SignalingEventPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__SignalingEventPerTimeMeasure(struct soap *soap, eml__SignalingEventPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__SignalingEventPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ActivityOfRadioactivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ActivityOfRadioactivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ActivityOfRadioactivityMeasure(struct soap*, const char*, int, const eml__ActivityOfRadioactivityMeasure *, const char*);
SOAP_FMAC3 eml__ActivityOfRadioactivityMeasure * SOAP_FMAC4 soap_in_eml__ActivityOfRadioactivityMeasure(struct soap*, const char*, eml__ActivityOfRadioactivityMeasure *, const char*);
SOAP_FMAC1 eml__ActivityOfRadioactivityMeasure * SOAP_FMAC2 soap_instantiate_eml__ActivityOfRadioactivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ActivityOfRadioactivityMeasure * soap_new_eml__ActivityOfRadioactivityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ActivityOfRadioactivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ActivityOfRadioactivityMeasure * soap_new_req_eml__ActivityOfRadioactivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ActivityOfRadioactivityUom uom)
{
	eml__ActivityOfRadioactivityMeasure *_p = soap_new_eml__ActivityOfRadioactivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ActivityOfRadioactivityMeasure::__item = __item;
		_p->eml__ActivityOfRadioactivityMeasure::uom = uom;
	}
	return _p;
}

inline eml__ActivityOfRadioactivityMeasure * soap_new_set_eml__ActivityOfRadioactivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ActivityOfRadioactivityUom uom)
{
	eml__ActivityOfRadioactivityMeasure *_p = soap_new_eml__ActivityOfRadioactivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ActivityOfRadioactivityMeasure::__item = __item;
		_p->eml__ActivityOfRadioactivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ActivityOfRadioactivityMeasure(struct soap *soap, eml__ActivityOfRadioactivityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ActivityOfRadioactivityMeasure", "eml:ActivityOfRadioactivityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ActivityOfRadioactivityMeasure * SOAP_FMAC4 soap_get_eml__ActivityOfRadioactivityMeasure(struct soap*, eml__ActivityOfRadioactivityMeasure *, const char*, const char*);

inline int soap_read_eml__ActivityOfRadioactivityMeasure(struct soap *soap, eml__ActivityOfRadioactivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ActivityOfRadioactivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MolecularWeightMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MolecularWeightMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MolecularWeightMeasure(struct soap*, const char*, int, const eml__MolecularWeightMeasure *, const char*);
SOAP_FMAC3 eml__MolecularWeightMeasure * SOAP_FMAC4 soap_in_eml__MolecularWeightMeasure(struct soap*, const char*, eml__MolecularWeightMeasure *, const char*);
SOAP_FMAC1 eml__MolecularWeightMeasure * SOAP_FMAC2 soap_instantiate_eml__MolecularWeightMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MolecularWeightMeasure * soap_new_eml__MolecularWeightMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MolecularWeightMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MolecularWeightMeasure * soap_new_req_eml__MolecularWeightMeasure(
	struct soap *soap,
	double __item,
	enum eml__MolecularWeightUom uom)
{
	eml__MolecularWeightMeasure *_p = soap_new_eml__MolecularWeightMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MolecularWeightMeasure::__item = __item;
		_p->eml__MolecularWeightMeasure::uom = uom;
	}
	return _p;
}

inline eml__MolecularWeightMeasure * soap_new_set_eml__MolecularWeightMeasure(
	struct soap *soap,
	double __item,
	enum eml__MolecularWeightUom uom)
{
	eml__MolecularWeightMeasure *_p = soap_new_eml__MolecularWeightMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MolecularWeightMeasure::__item = __item;
		_p->eml__MolecularWeightMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MolecularWeightMeasure(struct soap *soap, eml__MolecularWeightMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MolecularWeightMeasure", "eml:MolecularWeightMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MolecularWeightMeasure * SOAP_FMAC4 soap_get_eml__MolecularWeightMeasure(struct soap*, eml__MolecularWeightMeasure *, const char*, const char*);

inline int soap_read_eml__MolecularWeightMeasure(struct soap *soap, eml__MolecularWeightMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MolecularWeightMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerTimePerLengthMeasure(struct soap*, const char*, int, const eml__MassPerTimePerLengthMeasure *, const char*);
SOAP_FMAC3 eml__MassPerTimePerLengthMeasure * SOAP_FMAC4 soap_in_eml__MassPerTimePerLengthMeasure(struct soap*, const char*, eml__MassPerTimePerLengthMeasure *, const char*);
SOAP_FMAC1 eml__MassPerTimePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__MassPerTimePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassPerTimePerLengthMeasure * soap_new_eml__MassPerTimePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassPerTimePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassPerTimePerLengthMeasure * soap_new_req_eml__MassPerTimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerTimePerLengthUom uom)
{
	eml__MassPerTimePerLengthMeasure *_p = soap_new_eml__MassPerTimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerTimePerLengthMeasure::__item = __item;
		_p->eml__MassPerTimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassPerTimePerLengthMeasure * soap_new_set_eml__MassPerTimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerTimePerLengthUom uom)
{
	eml__MassPerTimePerLengthMeasure *_p = soap_new_eml__MassPerTimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerTimePerLengthMeasure::__item = __item;
		_p->eml__MassPerTimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassPerTimePerLengthMeasure(struct soap *soap, eml__MassPerTimePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassPerTimePerLengthMeasure", "eml:MassPerTimePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassPerTimePerLengthMeasure * SOAP_FMAC4 soap_get_eml__MassPerTimePerLengthMeasure(struct soap*, eml__MassPerTimePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__MassPerTimePerLengthMeasure(struct soap *soap, eml__MassPerTimePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassPerTimePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentOfInertiaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentOfInertiaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MomentOfInertiaMeasure(struct soap*, const char*, int, const eml__MomentOfInertiaMeasure *, const char*);
SOAP_FMAC3 eml__MomentOfInertiaMeasure * SOAP_FMAC4 soap_in_eml__MomentOfInertiaMeasure(struct soap*, const char*, eml__MomentOfInertiaMeasure *, const char*);
SOAP_FMAC1 eml__MomentOfInertiaMeasure * SOAP_FMAC2 soap_instantiate_eml__MomentOfInertiaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MomentOfInertiaMeasure * soap_new_eml__MomentOfInertiaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MomentOfInertiaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MomentOfInertiaMeasure * soap_new_req_eml__MomentOfInertiaMeasure(
	struct soap *soap,
	double __item,
	enum eml__MomentOfInertiaUom uom)
{
	eml__MomentOfInertiaMeasure *_p = soap_new_eml__MomentOfInertiaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MomentOfInertiaMeasure::__item = __item;
		_p->eml__MomentOfInertiaMeasure::uom = uom;
	}
	return _p;
}

inline eml__MomentOfInertiaMeasure * soap_new_set_eml__MomentOfInertiaMeasure(
	struct soap *soap,
	double __item,
	enum eml__MomentOfInertiaUom uom)
{
	eml__MomentOfInertiaMeasure *_p = soap_new_eml__MomentOfInertiaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MomentOfInertiaMeasure::__item = __item;
		_p->eml__MomentOfInertiaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MomentOfInertiaMeasure(struct soap *soap, eml__MomentOfInertiaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MomentOfInertiaMeasure", "eml:MomentOfInertiaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MomentOfInertiaMeasure * SOAP_FMAC4 soap_get_eml__MomentOfInertiaMeasure(struct soap*, eml__MomentOfInertiaMeasure *, const char*, const char*);

inline int soap_read_eml__MomentOfInertiaMeasure(struct soap *soap, eml__MomentOfInertiaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MomentOfInertiaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PotentialDifferencePerPowerDropMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PotentialDifferencePerPowerDropMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PotentialDifferencePerPowerDropMeasure(struct soap*, const char*, int, const eml__PotentialDifferencePerPowerDropMeasure *, const char*);
SOAP_FMAC3 eml__PotentialDifferencePerPowerDropMeasure * SOAP_FMAC4 soap_in_eml__PotentialDifferencePerPowerDropMeasure(struct soap*, const char*, eml__PotentialDifferencePerPowerDropMeasure *, const char*);
SOAP_FMAC1 eml__PotentialDifferencePerPowerDropMeasure * SOAP_FMAC2 soap_instantiate_eml__PotentialDifferencePerPowerDropMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PotentialDifferencePerPowerDropMeasure * soap_new_eml__PotentialDifferencePerPowerDropMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PotentialDifferencePerPowerDropMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PotentialDifferencePerPowerDropMeasure * soap_new_req_eml__PotentialDifferencePerPowerDropMeasure(
	struct soap *soap,
	double __item,
	enum eml__PotentialDifferencePerPowerDropUom uom)
{
	eml__PotentialDifferencePerPowerDropMeasure *_p = soap_new_eml__PotentialDifferencePerPowerDropMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PotentialDifferencePerPowerDropMeasure::__item = __item;
		_p->eml__PotentialDifferencePerPowerDropMeasure::uom = uom;
	}
	return _p;
}

inline eml__PotentialDifferencePerPowerDropMeasure * soap_new_set_eml__PotentialDifferencePerPowerDropMeasure(
	struct soap *soap,
	double __item,
	enum eml__PotentialDifferencePerPowerDropUom uom)
{
	eml__PotentialDifferencePerPowerDropMeasure *_p = soap_new_eml__PotentialDifferencePerPowerDropMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PotentialDifferencePerPowerDropMeasure::__item = __item;
		_p->eml__PotentialDifferencePerPowerDropMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PotentialDifferencePerPowerDropMeasure(struct soap *soap, eml__PotentialDifferencePerPowerDropMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PotentialDifferencePerPowerDropMeasure", "eml:PotentialDifferencePerPowerDropMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PotentialDifferencePerPowerDropMeasure * SOAP_FMAC4 soap_get_eml__PotentialDifferencePerPowerDropMeasure(struct soap*, eml__PotentialDifferencePerPowerDropMeasure *, const char*, const char*);

inline int soap_read_eml__PotentialDifferencePerPowerDropMeasure(struct soap *soap, eml__PotentialDifferencePerPowerDropMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PotentialDifferencePerPowerDropMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__SpecificHeatCapacityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__SpecificHeatCapacityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__SpecificHeatCapacityMeasure(struct soap*, const char*, int, const eml__SpecificHeatCapacityMeasure *, const char*);
SOAP_FMAC3 eml__SpecificHeatCapacityMeasure * SOAP_FMAC4 soap_in_eml__SpecificHeatCapacityMeasure(struct soap*, const char*, eml__SpecificHeatCapacityMeasure *, const char*);
SOAP_FMAC1 eml__SpecificHeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_eml__SpecificHeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__SpecificHeatCapacityMeasure * soap_new_eml__SpecificHeatCapacityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__SpecificHeatCapacityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__SpecificHeatCapacityMeasure * soap_new_req_eml__SpecificHeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml__SpecificHeatCapacityUom uom)
{
	eml__SpecificHeatCapacityMeasure *_p = soap_new_eml__SpecificHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__SpecificHeatCapacityMeasure::__item = __item;
		_p->eml__SpecificHeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline eml__SpecificHeatCapacityMeasure * soap_new_set_eml__SpecificHeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml__SpecificHeatCapacityUom uom)
{
	eml__SpecificHeatCapacityMeasure *_p = soap_new_eml__SpecificHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__SpecificHeatCapacityMeasure::__item = __item;
		_p->eml__SpecificHeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__SpecificHeatCapacityMeasure(struct soap *soap, eml__SpecificHeatCapacityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:SpecificHeatCapacityMeasure", "eml:SpecificHeatCapacityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__SpecificHeatCapacityMeasure * SOAP_FMAC4 soap_get_eml__SpecificHeatCapacityMeasure(struct soap*, eml__SpecificHeatCapacityMeasure *, const char*, const char*);

inline int soap_read_eml__SpecificHeatCapacityMeasure(struct soap *soap, eml__SpecificHeatCapacityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__SpecificHeatCapacityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalTimeMeasure(struct soap*, const char*, int, const eml__ReciprocalTimeMeasure *, const char*);
SOAP_FMAC3 eml__ReciprocalTimeMeasure * SOAP_FMAC4 soap_in_eml__ReciprocalTimeMeasure(struct soap*, const char*, eml__ReciprocalTimeMeasure *, const char*);
SOAP_FMAC1 eml__ReciprocalTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__ReciprocalTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReciprocalTimeMeasure * soap_new_eml__ReciprocalTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReciprocalTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReciprocalTimeMeasure * soap_new_req_eml__ReciprocalTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalTimeUom uom)
{
	eml__ReciprocalTimeMeasure *_p = soap_new_eml__ReciprocalTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalTimeMeasure::__item = __item;
		_p->eml__ReciprocalTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReciprocalTimeMeasure * soap_new_set_eml__ReciprocalTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalTimeUom uom)
{
	eml__ReciprocalTimeMeasure *_p = soap_new_eml__ReciprocalTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalTimeMeasure::__item = __item;
		_p->eml__ReciprocalTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReciprocalTimeMeasure(struct soap *soap, eml__ReciprocalTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReciprocalTimeMeasure", "eml:ReciprocalTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReciprocalTimeMeasure * SOAP_FMAC4 soap_get_eml__ReciprocalTimeMeasure(struct soap*, eml__ReciprocalTimeMeasure *, const char*, const char*);

inline int soap_read_eml__ReciprocalTimeMeasure(struct soap *soap, eml__ReciprocalTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReciprocalTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LogarithmicPowerRatioPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LogarithmicPowerRatioPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LogarithmicPowerRatioPerLengthMeasure(struct soap*, const char*, int, const eml__LogarithmicPowerRatioPerLengthMeasure *, const char*);
SOAP_FMAC3 eml__LogarithmicPowerRatioPerLengthMeasure * SOAP_FMAC4 soap_in_eml__LogarithmicPowerRatioPerLengthMeasure(struct soap*, const char*, eml__LogarithmicPowerRatioPerLengthMeasure *, const char*);
SOAP_FMAC1 eml__LogarithmicPowerRatioPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__LogarithmicPowerRatioPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LogarithmicPowerRatioPerLengthMeasure * soap_new_eml__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LogarithmicPowerRatioPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LogarithmicPowerRatioPerLengthMeasure * soap_new_req_eml__LogarithmicPowerRatioPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__LogarithmicPowerRatioPerLengthUom uom)
{
	eml__LogarithmicPowerRatioPerLengthMeasure *_p = soap_new_eml__LogarithmicPowerRatioPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LogarithmicPowerRatioPerLengthMeasure::__item = __item;
		_p->eml__LogarithmicPowerRatioPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__LogarithmicPowerRatioPerLengthMeasure * soap_new_set_eml__LogarithmicPowerRatioPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__LogarithmicPowerRatioPerLengthUom uom)
{
	eml__LogarithmicPowerRatioPerLengthMeasure *_p = soap_new_eml__LogarithmicPowerRatioPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LogarithmicPowerRatioPerLengthMeasure::__item = __item;
		_p->eml__LogarithmicPowerRatioPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, eml__LogarithmicPowerRatioPerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LogarithmicPowerRatioPerLengthMeasure", "eml:LogarithmicPowerRatioPerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LogarithmicPowerRatioPerLengthMeasure * SOAP_FMAC4 soap_get_eml__LogarithmicPowerRatioPerLengthMeasure(struct soap*, eml__LogarithmicPowerRatioPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__LogarithmicPowerRatioPerLengthMeasure(struct soap *soap, eml__LogarithmicPowerRatioPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LogarithmicPowerRatioPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalDiffusivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalDiffusivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalDiffusivityMeasure(struct soap*, const char*, int, const eml__ThermalDiffusivityMeasure *, const char*);
SOAP_FMAC3 eml__ThermalDiffusivityMeasure * SOAP_FMAC4 soap_in_eml__ThermalDiffusivityMeasure(struct soap*, const char*, eml__ThermalDiffusivityMeasure *, const char*);
SOAP_FMAC1 eml__ThermalDiffusivityMeasure * SOAP_FMAC2 soap_instantiate_eml__ThermalDiffusivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ThermalDiffusivityMeasure * soap_new_eml__ThermalDiffusivityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ThermalDiffusivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ThermalDiffusivityMeasure * soap_new_req_eml__ThermalDiffusivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalDiffusivityUom uom)
{
	eml__ThermalDiffusivityMeasure *_p = soap_new_eml__ThermalDiffusivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalDiffusivityMeasure::__item = __item;
		_p->eml__ThermalDiffusivityMeasure::uom = uom;
	}
	return _p;
}

inline eml__ThermalDiffusivityMeasure * soap_new_set_eml__ThermalDiffusivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalDiffusivityUom uom)
{
	eml__ThermalDiffusivityMeasure *_p = soap_new_eml__ThermalDiffusivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalDiffusivityMeasure::__item = __item;
		_p->eml__ThermalDiffusivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ThermalDiffusivityMeasure(struct soap *soap, eml__ThermalDiffusivityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ThermalDiffusivityMeasure", "eml:ThermalDiffusivityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ThermalDiffusivityMeasure * SOAP_FMAC4 soap_get_eml__ThermalDiffusivityMeasure(struct soap*, eml__ThermalDiffusivityMeasure *, const char*, const char*);

inline int soap_read_eml__ThermalDiffusivityMeasure(struct soap *soap, eml__ThermalDiffusivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ThermalDiffusivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PowerPerVolumeMeasure(struct soap*, const char*, int, const eml__PowerPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__PowerPerVolumeMeasure * SOAP_FMAC4 soap_in_eml__PowerPerVolumeMeasure(struct soap*, const char*, eml__PowerPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__PowerPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__PowerPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PowerPerVolumeMeasure * soap_new_eml__PowerPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PowerPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PowerPerVolumeMeasure * soap_new_req_eml__PowerPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__PowerPerVolumeUom uom)
{
	eml__PowerPerVolumeMeasure *_p = soap_new_eml__PowerPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PowerPerVolumeMeasure::__item = __item;
		_p->eml__PowerPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__PowerPerVolumeMeasure * soap_new_set_eml__PowerPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__PowerPerVolumeUom uom)
{
	eml__PowerPerVolumeMeasure *_p = soap_new_eml__PowerPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PowerPerVolumeMeasure::__item = __item;
		_p->eml__PowerPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PowerPerVolumeMeasure(struct soap *soap, eml__PowerPerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PowerPerVolumeMeasure", "eml:PowerPerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PowerPerVolumeMeasure * SOAP_FMAC4 soap_get_eml__PowerPerVolumeMeasure(struct soap*, eml__PowerPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__PowerPerVolumeMeasure(struct soap *soap, eml__PowerPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PowerPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentumMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentumMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MomentumMeasure(struct soap*, const char*, int, const eml__MomentumMeasure *, const char*);
SOAP_FMAC3 eml__MomentumMeasure * SOAP_FMAC4 soap_in_eml__MomentumMeasure(struct soap*, const char*, eml__MomentumMeasure *, const char*);
SOAP_FMAC1 eml__MomentumMeasure * SOAP_FMAC2 soap_instantiate_eml__MomentumMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MomentumMeasure * soap_new_eml__MomentumMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MomentumMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MomentumMeasure * soap_new_req_eml__MomentumMeasure(
	struct soap *soap,
	double __item,
	enum eml__MomentumUom uom)
{
	eml__MomentumMeasure *_p = soap_new_eml__MomentumMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MomentumMeasure::__item = __item;
		_p->eml__MomentumMeasure::uom = uom;
	}
	return _p;
}

inline eml__MomentumMeasure * soap_new_set_eml__MomentumMeasure(
	struct soap *soap,
	double __item,
	enum eml__MomentumUom uom)
{
	eml__MomentumMeasure *_p = soap_new_eml__MomentumMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MomentumMeasure::__item = __item;
		_p->eml__MomentumMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MomentumMeasure(struct soap *soap, eml__MomentumMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MomentumMeasure", "eml:MomentumMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MomentumMeasure * SOAP_FMAC4 soap_get_eml__MomentumMeasure(struct soap*, eml__MomentumMeasure *, const char*, const char*);

inline int soap_read_eml__MomentumMeasure(struct soap *soap, eml__MomentumMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MomentumMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumeFlowRatePerVolumeFlowRateMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumeFlowRatePerVolumeFlowRateMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, const char*, int, const eml__VolumeFlowRatePerVolumeFlowRateMeasure *, const char*);
SOAP_FMAC3 eml__VolumeFlowRatePerVolumeFlowRateMeasure * SOAP_FMAC4 soap_in_eml__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, const char*, eml__VolumeFlowRatePerVolumeFlowRateMeasure *, const char*);
SOAP_FMAC1 eml__VolumeFlowRatePerVolumeFlowRateMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumeFlowRatePerVolumeFlowRateMeasure * soap_new_eml__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumeFlowRatePerVolumeFlowRateMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumeFlowRatePerVolumeFlowRateMeasure * soap_new_req_eml__VolumeFlowRatePerVolumeFlowRateMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumeFlowRatePerVolumeFlowRateUom uom)
{
	eml__VolumeFlowRatePerVolumeFlowRateMeasure *_p = soap_new_eml__VolumeFlowRatePerVolumeFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumeFlowRatePerVolumeFlowRateMeasure::__item = __item;
		_p->eml__VolumeFlowRatePerVolumeFlowRateMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumeFlowRatePerVolumeFlowRateMeasure * soap_new_set_eml__VolumeFlowRatePerVolumeFlowRateMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumeFlowRatePerVolumeFlowRateUom uom)
{
	eml__VolumeFlowRatePerVolumeFlowRateMeasure *_p = soap_new_eml__VolumeFlowRatePerVolumeFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumeFlowRatePerVolumeFlowRateMeasure::__item = __item;
		_p->eml__VolumeFlowRatePerVolumeFlowRateMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, eml__VolumeFlowRatePerVolumeFlowRateMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumeFlowRatePerVolumeFlowRateMeasure", "eml:VolumeFlowRatePerVolumeFlowRateMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumeFlowRatePerVolumeFlowRateMeasure * SOAP_FMAC4 soap_get_eml__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap*, eml__VolumeFlowRatePerVolumeFlowRateMeasure *, const char*, const char*);

inline int soap_read_eml__VolumeFlowRatePerVolumeFlowRateMeasure(struct soap *soap, eml__VolumeFlowRatePerVolumeFlowRateMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumeFlowRatePerVolumeFlowRateMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerTimeMeasure(struct soap*, const char*, int, const eml__AreaPerTimeMeasure *, const char*);
SOAP_FMAC3 eml__AreaPerTimeMeasure * SOAP_FMAC4 soap_in_eml__AreaPerTimeMeasure(struct soap*, const char*, eml__AreaPerTimeMeasure *, const char*);
SOAP_FMAC1 eml__AreaPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__AreaPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AreaPerTimeMeasure * soap_new_eml__AreaPerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AreaPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AreaPerTimeMeasure * soap_new_req_eml__AreaPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerTimeUom uom)
{
	eml__AreaPerTimeMeasure *_p = soap_new_eml__AreaPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerTimeMeasure::__item = __item;
		_p->eml__AreaPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__AreaPerTimeMeasure * soap_new_set_eml__AreaPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerTimeUom uom)
{
	eml__AreaPerTimeMeasure *_p = soap_new_eml__AreaPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerTimeMeasure::__item = __item;
		_p->eml__AreaPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AreaPerTimeMeasure(struct soap *soap, eml__AreaPerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AreaPerTimeMeasure", "eml:AreaPerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AreaPerTimeMeasure * SOAP_FMAC4 soap_get_eml__AreaPerTimeMeasure(struct soap*, eml__AreaPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__AreaPerTimeMeasure(struct soap *soap, eml__AreaPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AreaPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousEfficacyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousEfficacyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LuminousEfficacyMeasure(struct soap*, const char*, int, const eml__LuminousEfficacyMeasure *, const char*);
SOAP_FMAC3 eml__LuminousEfficacyMeasure * SOAP_FMAC4 soap_in_eml__LuminousEfficacyMeasure(struct soap*, const char*, eml__LuminousEfficacyMeasure *, const char*);
SOAP_FMAC1 eml__LuminousEfficacyMeasure * SOAP_FMAC2 soap_instantiate_eml__LuminousEfficacyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LuminousEfficacyMeasure * soap_new_eml__LuminousEfficacyMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LuminousEfficacyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LuminousEfficacyMeasure * soap_new_req_eml__LuminousEfficacyMeasure(
	struct soap *soap,
	double __item,
	enum eml__LuminousEfficacyUom uom)
{
	eml__LuminousEfficacyMeasure *_p = soap_new_eml__LuminousEfficacyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LuminousEfficacyMeasure::__item = __item;
		_p->eml__LuminousEfficacyMeasure::uom = uom;
	}
	return _p;
}

inline eml__LuminousEfficacyMeasure * soap_new_set_eml__LuminousEfficacyMeasure(
	struct soap *soap,
	double __item,
	enum eml__LuminousEfficacyUom uom)
{
	eml__LuminousEfficacyMeasure *_p = soap_new_eml__LuminousEfficacyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LuminousEfficacyMeasure::__item = __item;
		_p->eml__LuminousEfficacyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LuminousEfficacyMeasure(struct soap *soap, eml__LuminousEfficacyMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LuminousEfficacyMeasure", "eml:LuminousEfficacyMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LuminousEfficacyMeasure * SOAP_FMAC4 soap_get_eml__LuminousEfficacyMeasure(struct soap*, eml__LuminousEfficacyMeasure *, const char*, const char*);

inline int soap_read_eml__LuminousEfficacyMeasure(struct soap *soap, eml__LuminousEfficacyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LuminousEfficacyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__QuantityOfLightMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__QuantityOfLightMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__QuantityOfLightMeasure(struct soap*, const char*, int, const eml__QuantityOfLightMeasure *, const char*);
SOAP_FMAC3 eml__QuantityOfLightMeasure * SOAP_FMAC4 soap_in_eml__QuantityOfLightMeasure(struct soap*, const char*, eml__QuantityOfLightMeasure *, const char*);
SOAP_FMAC1 eml__QuantityOfLightMeasure * SOAP_FMAC2 soap_instantiate_eml__QuantityOfLightMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__QuantityOfLightMeasure * soap_new_eml__QuantityOfLightMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__QuantityOfLightMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__QuantityOfLightMeasure * soap_new_req_eml__QuantityOfLightMeasure(
	struct soap *soap,
	double __item,
	enum eml__QuantityOfLightUom uom)
{
	eml__QuantityOfLightMeasure *_p = soap_new_eml__QuantityOfLightMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__QuantityOfLightMeasure::__item = __item;
		_p->eml__QuantityOfLightMeasure::uom = uom;
	}
	return _p;
}

inline eml__QuantityOfLightMeasure * soap_new_set_eml__QuantityOfLightMeasure(
	struct soap *soap,
	double __item,
	enum eml__QuantityOfLightUom uom)
{
	eml__QuantityOfLightMeasure *_p = soap_new_eml__QuantityOfLightMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__QuantityOfLightMeasure::__item = __item;
		_p->eml__QuantityOfLightMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__QuantityOfLightMeasure(struct soap *soap, eml__QuantityOfLightMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:QuantityOfLightMeasure", "eml:QuantityOfLightMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__QuantityOfLightMeasure * SOAP_FMAC4 soap_get_eml__QuantityOfLightMeasure(struct soap*, eml__QuantityOfLightMeasure *, const char*, const char*);

inline int soap_read_eml__QuantityOfLightMeasure(struct soap *soap, eml__QuantityOfLightMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__QuantityOfLightMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerAreaMeasure(struct soap*, const char*, int, const eml__VolumePerAreaMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerAreaMeasure * SOAP_FMAC4 soap_in_eml__VolumePerAreaMeasure(struct soap*, const char*, eml__VolumePerAreaMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerAreaMeasure * soap_new_eml__VolumePerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerAreaMeasure * soap_new_req_eml__VolumePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerAreaUom uom)
{
	eml__VolumePerAreaMeasure *_p = soap_new_eml__VolumePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerAreaMeasure::__item = __item;
		_p->eml__VolumePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerAreaMeasure * soap_new_set_eml__VolumePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerAreaUom uom)
{
	eml__VolumePerAreaMeasure *_p = soap_new_eml__VolumePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerAreaMeasure::__item = __item;
		_p->eml__VolumePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerAreaMeasure(struct soap *soap, eml__VolumePerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerAreaMeasure", "eml:VolumePerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerAreaMeasure * SOAP_FMAC4 soap_get_eml__VolumePerAreaMeasure(struct soap*, eml__VolumePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerAreaMeasure(struct soap *soap, eml__VolumePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxDensityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxDensityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticFluxDensityMeasure(struct soap*, const char*, int, const eml__MagneticFluxDensityMeasure *, const char*);
SOAP_FMAC3 eml__MagneticFluxDensityMeasure * SOAP_FMAC4 soap_in_eml__MagneticFluxDensityMeasure(struct soap*, const char*, eml__MagneticFluxDensityMeasure *, const char*);
SOAP_FMAC1 eml__MagneticFluxDensityMeasure * SOAP_FMAC2 soap_instantiate_eml__MagneticFluxDensityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MagneticFluxDensityMeasure * soap_new_eml__MagneticFluxDensityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MagneticFluxDensityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MagneticFluxDensityMeasure * soap_new_req_eml__MagneticFluxDensityMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticFluxDensityUom uom)
{
	eml__MagneticFluxDensityMeasure *_p = soap_new_eml__MagneticFluxDensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticFluxDensityMeasure::__item = __item;
		_p->eml__MagneticFluxDensityMeasure::uom = uom;
	}
	return _p;
}

inline eml__MagneticFluxDensityMeasure * soap_new_set_eml__MagneticFluxDensityMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticFluxDensityUom uom)
{
	eml__MagneticFluxDensityMeasure *_p = soap_new_eml__MagneticFluxDensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticFluxDensityMeasure::__item = __item;
		_p->eml__MagneticFluxDensityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MagneticFluxDensityMeasure(struct soap *soap, eml__MagneticFluxDensityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MagneticFluxDensityMeasure", "eml:MagneticFluxDensityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MagneticFluxDensityMeasure * SOAP_FMAC4 soap_get_eml__MagneticFluxDensityMeasure(struct soap*, eml__MagneticFluxDensityMeasure *, const char*, const char*);

inline int soap_read_eml__MagneticFluxDensityMeasure(struct soap *soap, eml__MagneticFluxDensityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MagneticFluxDensityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__SecondMomentOfAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__SecondMomentOfAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__SecondMomentOfAreaMeasure(struct soap*, const char*, int, const eml__SecondMomentOfAreaMeasure *, const char*);
SOAP_FMAC3 eml__SecondMomentOfAreaMeasure * SOAP_FMAC4 soap_in_eml__SecondMomentOfAreaMeasure(struct soap*, const char*, eml__SecondMomentOfAreaMeasure *, const char*);
SOAP_FMAC1 eml__SecondMomentOfAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__SecondMomentOfAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__SecondMomentOfAreaMeasure * soap_new_eml__SecondMomentOfAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__SecondMomentOfAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__SecondMomentOfAreaMeasure * soap_new_req_eml__SecondMomentOfAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__SecondMomentOfAreaUom uom)
{
	eml__SecondMomentOfAreaMeasure *_p = soap_new_eml__SecondMomentOfAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__SecondMomentOfAreaMeasure::__item = __item;
		_p->eml__SecondMomentOfAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__SecondMomentOfAreaMeasure * soap_new_set_eml__SecondMomentOfAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__SecondMomentOfAreaUom uom)
{
	eml__SecondMomentOfAreaMeasure *_p = soap_new_eml__SecondMomentOfAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__SecondMomentOfAreaMeasure::__item = __item;
		_p->eml__SecondMomentOfAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__SecondMomentOfAreaMeasure(struct soap *soap, eml__SecondMomentOfAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:SecondMomentOfAreaMeasure", "eml:SecondMomentOfAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__SecondMomentOfAreaMeasure * SOAP_FMAC4 soap_get_eml__SecondMomentOfAreaMeasure(struct soap*, eml__SecondMomentOfAreaMeasure *, const char*, const char*);

inline int soap_read_eml__SecondMomentOfAreaMeasure(struct soap *soap, eml__SecondMomentOfAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__SecondMomentOfAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerVolumeMeasure(struct soap*, const char*, int, const eml__LengthPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__LengthPerVolumeMeasure * SOAP_FMAC4 soap_in_eml__LengthPerVolumeMeasure(struct soap*, const char*, eml__LengthPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__LengthPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__LengthPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LengthPerVolumeMeasure * soap_new_eml__LengthPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LengthPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LengthPerVolumeMeasure * soap_new_req_eml__LengthPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerVolumeUom uom)
{
	eml__LengthPerVolumeMeasure *_p = soap_new_eml__LengthPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerVolumeMeasure::__item = __item;
		_p->eml__LengthPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__LengthPerVolumeMeasure * soap_new_set_eml__LengthPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerVolumeUom uom)
{
	eml__LengthPerVolumeMeasure *_p = soap_new_eml__LengthPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerVolumeMeasure::__item = __item;
		_p->eml__LengthPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LengthPerVolumeMeasure(struct soap *soap, eml__LengthPerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LengthPerVolumeMeasure", "eml:LengthPerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LengthPerVolumeMeasure * SOAP_FMAC4 soap_get_eml__LengthPerVolumeMeasure(struct soap*, eml__LengthPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__LengthPerVolumeMeasure(struct soap *soap, eml__LengthPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LengthPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarEnergyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarEnergyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MolarEnergyMeasure(struct soap*, const char*, int, const eml__MolarEnergyMeasure *, const char*);
SOAP_FMAC3 eml__MolarEnergyMeasure * SOAP_FMAC4 soap_in_eml__MolarEnergyMeasure(struct soap*, const char*, eml__MolarEnergyMeasure *, const char*);
SOAP_FMAC1 eml__MolarEnergyMeasure * SOAP_FMAC2 soap_instantiate_eml__MolarEnergyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MolarEnergyMeasure * soap_new_eml__MolarEnergyMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MolarEnergyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MolarEnergyMeasure * soap_new_req_eml__MolarEnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml__MolarEnergyUom uom)
{
	eml__MolarEnergyMeasure *_p = soap_new_eml__MolarEnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MolarEnergyMeasure::__item = __item;
		_p->eml__MolarEnergyMeasure::uom = uom;
	}
	return _p;
}

inline eml__MolarEnergyMeasure * soap_new_set_eml__MolarEnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml__MolarEnergyUom uom)
{
	eml__MolarEnergyMeasure *_p = soap_new_eml__MolarEnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MolarEnergyMeasure::__item = __item;
		_p->eml__MolarEnergyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MolarEnergyMeasure(struct soap *soap, eml__MolarEnergyMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MolarEnergyMeasure", "eml:MolarEnergyMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MolarEnergyMeasure * SOAP_FMAC4 soap_get_eml__MolarEnergyMeasure(struct soap*, eml__MolarEnergyMeasure *, const char*, const char*);

inline int soap_read_eml__MolarEnergyMeasure(struct soap *soap, eml__MolarEnergyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MolarEnergyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousIntensityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousIntensityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LuminousIntensityMeasure(struct soap*, const char*, int, const eml__LuminousIntensityMeasure *, const char*);
SOAP_FMAC3 eml__LuminousIntensityMeasure * SOAP_FMAC4 soap_in_eml__LuminousIntensityMeasure(struct soap*, const char*, eml__LuminousIntensityMeasure *, const char*);
SOAP_FMAC1 eml__LuminousIntensityMeasure * SOAP_FMAC2 soap_instantiate_eml__LuminousIntensityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LuminousIntensityMeasure * soap_new_eml__LuminousIntensityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LuminousIntensityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LuminousIntensityMeasure * soap_new_req_eml__LuminousIntensityMeasure(
	struct soap *soap,
	double __item,
	enum eml__LuminousIntensityUom uom)
{
	eml__LuminousIntensityMeasure *_p = soap_new_eml__LuminousIntensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LuminousIntensityMeasure::__item = __item;
		_p->eml__LuminousIntensityMeasure::uom = uom;
	}
	return _p;
}

inline eml__LuminousIntensityMeasure * soap_new_set_eml__LuminousIntensityMeasure(
	struct soap *soap,
	double __item,
	enum eml__LuminousIntensityUom uom)
{
	eml__LuminousIntensityMeasure *_p = soap_new_eml__LuminousIntensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LuminousIntensityMeasure::__item = __item;
		_p->eml__LuminousIntensityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LuminousIntensityMeasure(struct soap *soap, eml__LuminousIntensityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LuminousIntensityMeasure", "eml:LuminousIntensityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LuminousIntensityMeasure * SOAP_FMAC4 soap_get_eml__LuminousIntensityMeasure(struct soap*, eml__LuminousIntensityMeasure *, const char*, const char*);

inline int soap_read_eml__LuminousIntensityMeasure(struct soap *soap, eml__LuminousIntensityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LuminousIntensityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricChargeMeasure(struct soap*, const char*, int, const eml__ElectricChargeMeasure *, const char*);
SOAP_FMAC3 eml__ElectricChargeMeasure * SOAP_FMAC4 soap_in_eml__ElectricChargeMeasure(struct soap*, const char*, eml__ElectricChargeMeasure *, const char*);
SOAP_FMAC1 eml__ElectricChargeMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricChargeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricChargeMeasure * soap_new_eml__ElectricChargeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricChargeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricChargeMeasure * soap_new_req_eml__ElectricChargeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricChargeUom uom)
{
	eml__ElectricChargeMeasure *_p = soap_new_eml__ElectricChargeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricChargeMeasure::__item = __item;
		_p->eml__ElectricChargeMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricChargeMeasure * soap_new_set_eml__ElectricChargeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricChargeUom uom)
{
	eml__ElectricChargeMeasure *_p = soap_new_eml__ElectricChargeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricChargeMeasure::__item = __item;
		_p->eml__ElectricChargeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricChargeMeasure(struct soap *soap, eml__ElectricChargeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricChargeMeasure", "eml:ElectricChargeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricChargeMeasure * SOAP_FMAC4 soap_get_eml__ElectricChargeMeasure(struct soap*, eml__ElectricChargeMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricChargeMeasure(struct soap *soap, eml__ElectricChargeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricChargeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DigitalStorageMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DigitalStorageMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DigitalStorageMeasure(struct soap*, const char*, int, const eml__DigitalStorageMeasure *, const char*);
SOAP_FMAC3 eml__DigitalStorageMeasure * SOAP_FMAC4 soap_in_eml__DigitalStorageMeasure(struct soap*, const char*, eml__DigitalStorageMeasure *, const char*);
SOAP_FMAC1 eml__DigitalStorageMeasure * SOAP_FMAC2 soap_instantiate_eml__DigitalStorageMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__DigitalStorageMeasure * soap_new_eml__DigitalStorageMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__DigitalStorageMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__DigitalStorageMeasure * soap_new_req_eml__DigitalStorageMeasure(
	struct soap *soap,
	double __item,
	enum eml__DigitalStorageUom uom)
{
	eml__DigitalStorageMeasure *_p = soap_new_eml__DigitalStorageMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DigitalStorageMeasure::__item = __item;
		_p->eml__DigitalStorageMeasure::uom = uom;
	}
	return _p;
}

inline eml__DigitalStorageMeasure * soap_new_set_eml__DigitalStorageMeasure(
	struct soap *soap,
	double __item,
	enum eml__DigitalStorageUom uom)
{
	eml__DigitalStorageMeasure *_p = soap_new_eml__DigitalStorageMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DigitalStorageMeasure::__item = __item;
		_p->eml__DigitalStorageMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__DigitalStorageMeasure(struct soap *soap, eml__DigitalStorageMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:DigitalStorageMeasure", "eml:DigitalStorageMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__DigitalStorageMeasure * SOAP_FMAC4 soap_get_eml__DigitalStorageMeasure(struct soap*, eml__DigitalStorageMeasure *, const char*, const char*);

inline int soap_read_eml__DigitalStorageMeasure(struct soap *soap, eml__DigitalStorageMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__DigitalStorageMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarHeatCapacityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarHeatCapacityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MolarHeatCapacityMeasure(struct soap*, const char*, int, const eml__MolarHeatCapacityMeasure *, const char*);
SOAP_FMAC3 eml__MolarHeatCapacityMeasure * SOAP_FMAC4 soap_in_eml__MolarHeatCapacityMeasure(struct soap*, const char*, eml__MolarHeatCapacityMeasure *, const char*);
SOAP_FMAC1 eml__MolarHeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_eml__MolarHeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MolarHeatCapacityMeasure * soap_new_eml__MolarHeatCapacityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MolarHeatCapacityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MolarHeatCapacityMeasure * soap_new_req_eml__MolarHeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml__MolarHeatCapacityUom uom)
{
	eml__MolarHeatCapacityMeasure *_p = soap_new_eml__MolarHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MolarHeatCapacityMeasure::__item = __item;
		_p->eml__MolarHeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline eml__MolarHeatCapacityMeasure * soap_new_set_eml__MolarHeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml__MolarHeatCapacityUom uom)
{
	eml__MolarHeatCapacityMeasure *_p = soap_new_eml__MolarHeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MolarHeatCapacityMeasure::__item = __item;
		_p->eml__MolarHeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MolarHeatCapacityMeasure(struct soap *soap, eml__MolarHeatCapacityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MolarHeatCapacityMeasure", "eml:MolarHeatCapacityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MolarHeatCapacityMeasure * SOAP_FMAC4 soap_get_eml__MolarHeatCapacityMeasure(struct soap*, eml__MolarHeatCapacityMeasure *, const char*, const char*);

inline int soap_read_eml__MolarHeatCapacityMeasure(struct soap *soap, eml__MolarHeatCapacityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MolarHeatCapacityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForcePerVolumeMeasure(struct soap*, const char*, int, const eml__ForcePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__ForcePerVolumeMeasure * SOAP_FMAC4 soap_in_eml__ForcePerVolumeMeasure(struct soap*, const char*, eml__ForcePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__ForcePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__ForcePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ForcePerVolumeMeasure * soap_new_eml__ForcePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ForcePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ForcePerVolumeMeasure * soap_new_req_eml__ForcePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForcePerVolumeUom uom)
{
	eml__ForcePerVolumeMeasure *_p = soap_new_eml__ForcePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForcePerVolumeMeasure::__item = __item;
		_p->eml__ForcePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__ForcePerVolumeMeasure * soap_new_set_eml__ForcePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForcePerVolumeUom uom)
{
	eml__ForcePerVolumeMeasure *_p = soap_new_eml__ForcePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForcePerVolumeMeasure::__item = __item;
		_p->eml__ForcePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ForcePerVolumeMeasure(struct soap *soap, eml__ForcePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ForcePerVolumeMeasure", "eml:ForcePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ForcePerVolumeMeasure * SOAP_FMAC4 soap_get_eml__ForcePerVolumeMeasure(struct soap*, eml__ForcePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__ForcePerVolumeMeasure(struct soap *soap, eml__ForcePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ForcePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LuminanceMeasure(struct soap*, const char*, int, const eml__LuminanceMeasure *, const char*);
SOAP_FMAC3 eml__LuminanceMeasure * SOAP_FMAC4 soap_in_eml__LuminanceMeasure(struct soap*, const char*, eml__LuminanceMeasure *, const char*);
SOAP_FMAC1 eml__LuminanceMeasure * SOAP_FMAC2 soap_instantiate_eml__LuminanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LuminanceMeasure * soap_new_eml__LuminanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LuminanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LuminanceMeasure * soap_new_req_eml__LuminanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__LuminanceUom uom)
{
	eml__LuminanceMeasure *_p = soap_new_eml__LuminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LuminanceMeasure::__item = __item;
		_p->eml__LuminanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__LuminanceMeasure * soap_new_set_eml__LuminanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__LuminanceUom uom)
{
	eml__LuminanceMeasure *_p = soap_new_eml__LuminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LuminanceMeasure::__item = __item;
		_p->eml__LuminanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LuminanceMeasure(struct soap *soap, eml__LuminanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LuminanceMeasure", "eml:LuminanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LuminanceMeasure * SOAP_FMAC4 soap_get_eml__LuminanceMeasure(struct soap*, eml__LuminanceMeasure *, const char*, const char*);

inline int soap_read_eml__LuminanceMeasure(struct soap *soap, eml__LuminanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LuminanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentOfForceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MomentOfForceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MomentOfForceMeasure(struct soap*, const char*, int, const eml__MomentOfForceMeasure *, const char*);
SOAP_FMAC3 eml__MomentOfForceMeasure * SOAP_FMAC4 soap_in_eml__MomentOfForceMeasure(struct soap*, const char*, eml__MomentOfForceMeasure *, const char*);
SOAP_FMAC1 eml__MomentOfForceMeasure * SOAP_FMAC2 soap_instantiate_eml__MomentOfForceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MomentOfForceMeasure * soap_new_eml__MomentOfForceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MomentOfForceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MomentOfForceMeasure * soap_new_req_eml__MomentOfForceMeasure(
	struct soap *soap,
	double __item,
	enum eml__MomentOfForceUom uom)
{
	eml__MomentOfForceMeasure *_p = soap_new_eml__MomentOfForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MomentOfForceMeasure::__item = __item;
		_p->eml__MomentOfForceMeasure::uom = uom;
	}
	return _p;
}

inline eml__MomentOfForceMeasure * soap_new_set_eml__MomentOfForceMeasure(
	struct soap *soap,
	double __item,
	enum eml__MomentOfForceUom uom)
{
	eml__MomentOfForceMeasure *_p = soap_new_eml__MomentOfForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MomentOfForceMeasure::__item = __item;
		_p->eml__MomentOfForceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MomentOfForceMeasure(struct soap *soap, eml__MomentOfForceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MomentOfForceMeasure", "eml:MomentOfForceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MomentOfForceMeasure * SOAP_FMAC4 soap_get_eml__MomentOfForceMeasure(struct soap*, eml__MomentOfForceMeasure *, const char*, const char*);

inline int soap_read_eml__MomentOfForceMeasure(struct soap *soap, eml__MomentOfForceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MomentOfForceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimeMeasure(struct soap*, const char*, int, const eml__TimeMeasure *, const char*);
SOAP_FMAC3 eml__TimeMeasure * SOAP_FMAC4 soap_in_eml__TimeMeasure(struct soap*, const char*, eml__TimeMeasure *, const char*);
SOAP_FMAC1 eml__TimeMeasure * SOAP_FMAC2 soap_instantiate_eml__TimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__TimeMeasure * soap_new_eml__TimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__TimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__TimeMeasure * soap_new_req_eml__TimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimeUom uom)
{
	eml__TimeMeasure *_p = soap_new_eml__TimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimeMeasure::__item = __item;
		_p->eml__TimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__TimeMeasure * soap_new_set_eml__TimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimeUom uom)
{
	eml__TimeMeasure *_p = soap_new_eml__TimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimeMeasure::__item = __item;
		_p->eml__TimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__TimeMeasure(struct soap *soap, eml__TimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:TimeMeasure", "eml:TimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__TimeMeasure * SOAP_FMAC4 soap_get_eml__TimeMeasure(struct soap*, eml__TimeMeasure *, const char*, const char*);

inline int soap_read_eml__TimeMeasure(struct soap *soap, eml__TimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__TimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerPressureMeasure(struct soap*, const char*, int, const eml__VolumePerTimePerPressureMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerTimePerPressureMeasure * SOAP_FMAC4 soap_in_eml__VolumePerTimePerPressureMeasure(struct soap*, const char*, eml__VolumePerTimePerPressureMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerTimePerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerTimePerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerTimePerPressureMeasure * soap_new_eml__VolumePerTimePerPressureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerTimePerPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerTimePerPressureMeasure * soap_new_req_eml__VolumePerTimePerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerPressureUom uom)
{
	eml__VolumePerTimePerPressureMeasure *_p = soap_new_eml__VolumePerTimePerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerPressureMeasure::__item = __item;
		_p->eml__VolumePerTimePerPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerTimePerPressureMeasure * soap_new_set_eml__VolumePerTimePerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerPressureUom uom)
{
	eml__VolumePerTimePerPressureMeasure *_p = soap_new_eml__VolumePerTimePerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerPressureMeasure::__item = __item;
		_p->eml__VolumePerTimePerPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerTimePerPressureMeasure(struct soap *soap, eml__VolumePerTimePerPressureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerTimePerPressureMeasure", "eml:VolumePerTimePerPressureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerTimePerPressureMeasure * SOAP_FMAC4 soap_get_eml__VolumePerTimePerPressureMeasure(struct soap*, eml__VolumePerTimePerPressureMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerPressureMeasure(struct soap *soap, eml__VolumePerTimePerPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerVolumeMeasure(struct soap*, const char*, int, const eml__VolumePerTimePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerTimePerVolumeMeasure * SOAP_FMAC4 soap_in_eml__VolumePerTimePerVolumeMeasure(struct soap*, const char*, eml__VolumePerTimePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerTimePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerTimePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerTimePerVolumeMeasure * soap_new_eml__VolumePerTimePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerTimePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerTimePerVolumeMeasure * soap_new_req_eml__VolumePerTimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerVolumeUom uom)
{
	eml__VolumePerTimePerVolumeMeasure *_p = soap_new_eml__VolumePerTimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerVolumeMeasure::__item = __item;
		_p->eml__VolumePerTimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerTimePerVolumeMeasure * soap_new_set_eml__VolumePerTimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerVolumeUom uom)
{
	eml__VolumePerTimePerVolumeMeasure *_p = soap_new_eml__VolumePerTimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerVolumeMeasure::__item = __item;
		_p->eml__VolumePerTimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerTimePerVolumeMeasure(struct soap *soap, eml__VolumePerTimePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerTimePerVolumeMeasure", "eml:VolumePerTimePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerTimePerVolumeMeasure * SOAP_FMAC4 soap_get_eml__VolumePerTimePerVolumeMeasure(struct soap*, eml__VolumePerTimePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerVolumeMeasure(struct soap *soap, eml__VolumePerTimePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumeMeasure(struct soap*, const char*, int, const eml__VolumeMeasure *, const char*);
SOAP_FMAC3 eml__VolumeMeasure * SOAP_FMAC4 soap_in_eml__VolumeMeasure(struct soap*, const char*, eml__VolumeMeasure *, const char*);
SOAP_FMAC1 eml__VolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumeMeasure * soap_new_eml__VolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumeMeasure * soap_new_req_eml__VolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumeUom uom)
{
	eml__VolumeMeasure *_p = soap_new_eml__VolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumeMeasure::__item = __item;
		_p->eml__VolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumeMeasure * soap_new_set_eml__VolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumeUom uom)
{
	eml__VolumeMeasure *_p = soap_new_eml__VolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumeMeasure::__item = __item;
		_p->eml__VolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumeMeasure(struct soap *soap, eml__VolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumeMeasure", "eml:VolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumeMeasure * SOAP_FMAC4 soap_get_eml__VolumeMeasure(struct soap*, eml__VolumeMeasure *, const char*, const char*);

inline int soap_read_eml__VolumeMeasure(struct soap *soap, eml__VolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerLengthMeasure(struct soap*, const char*, int, const eml__VolumePerLengthMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerLengthMeasure * SOAP_FMAC4 soap_in_eml__VolumePerLengthMeasure(struct soap*, const char*, eml__VolumePerLengthMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerLengthMeasure * soap_new_eml__VolumePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerLengthMeasure * soap_new_req_eml__VolumePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerLengthUom uom)
{
	eml__VolumePerLengthMeasure *_p = soap_new_eml__VolumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerLengthMeasure::__item = __item;
		_p->eml__VolumePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerLengthMeasure * soap_new_set_eml__VolumePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerLengthUom uom)
{
	eml__VolumePerLengthMeasure *_p = soap_new_eml__VolumePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerLengthMeasure::__item = __item;
		_p->eml__VolumePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerLengthMeasure(struct soap *soap, eml__VolumePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerLengthMeasure", "eml:VolumePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerLengthMeasure * SOAP_FMAC4 soap_get_eml__VolumePerLengthMeasure(struct soap*, eml__VolumePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerLengthMeasure(struct soap *soap, eml__VolumePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__APIGravityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__APIGravityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__APIGravityMeasure(struct soap*, const char*, int, const eml__APIGravityMeasure *, const char*);
SOAP_FMAC3 eml__APIGravityMeasure * SOAP_FMAC4 soap_in_eml__APIGravityMeasure(struct soap*, const char*, eml__APIGravityMeasure *, const char*);
SOAP_FMAC1 eml__APIGravityMeasure * SOAP_FMAC2 soap_instantiate_eml__APIGravityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__APIGravityMeasure * soap_new_eml__APIGravityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__APIGravityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__APIGravityMeasure * soap_new_req_eml__APIGravityMeasure(
	struct soap *soap,
	double __item,
	enum eml__APIGravityUom uom)
{
	eml__APIGravityMeasure *_p = soap_new_eml__APIGravityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__APIGravityMeasure::__item = __item;
		_p->eml__APIGravityMeasure::uom = uom;
	}
	return _p;
}

inline eml__APIGravityMeasure * soap_new_set_eml__APIGravityMeasure(
	struct soap *soap,
	double __item,
	enum eml__APIGravityUom uom)
{
	eml__APIGravityMeasure *_p = soap_new_eml__APIGravityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__APIGravityMeasure::__item = __item;
		_p->eml__APIGravityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__APIGravityMeasure(struct soap *soap, eml__APIGravityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:APIGravityMeasure", "eml:APIGravityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__APIGravityMeasure * SOAP_FMAC4 soap_get_eml__APIGravityMeasure(struct soap*, eml__APIGravityMeasure *, const char*, const char*);

inline int soap_read_eml__APIGravityMeasure(struct soap *soap, eml__APIGravityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__APIGravityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticPermeabilityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticPermeabilityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticPermeabilityMeasure(struct soap*, const char*, int, const eml__MagneticPermeabilityMeasure *, const char*);
SOAP_FMAC3 eml__MagneticPermeabilityMeasure * SOAP_FMAC4 soap_in_eml__MagneticPermeabilityMeasure(struct soap*, const char*, eml__MagneticPermeabilityMeasure *, const char*);
SOAP_FMAC1 eml__MagneticPermeabilityMeasure * SOAP_FMAC2 soap_instantiate_eml__MagneticPermeabilityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MagneticPermeabilityMeasure * soap_new_eml__MagneticPermeabilityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MagneticPermeabilityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MagneticPermeabilityMeasure * soap_new_req_eml__MagneticPermeabilityMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticPermeabilityUom uom)
{
	eml__MagneticPermeabilityMeasure *_p = soap_new_eml__MagneticPermeabilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticPermeabilityMeasure::__item = __item;
		_p->eml__MagneticPermeabilityMeasure::uom = uom;
	}
	return _p;
}

inline eml__MagneticPermeabilityMeasure * soap_new_set_eml__MagneticPermeabilityMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticPermeabilityUom uom)
{
	eml__MagneticPermeabilityMeasure *_p = soap_new_eml__MagneticPermeabilityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticPermeabilityMeasure::__item = __item;
		_p->eml__MagneticPermeabilityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MagneticPermeabilityMeasure(struct soap *soap, eml__MagneticPermeabilityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MagneticPermeabilityMeasure", "eml:MagneticPermeabilityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MagneticPermeabilityMeasure * SOAP_FMAC4 soap_get_eml__MagneticPermeabilityMeasure(struct soap*, eml__MagneticPermeabilityMeasure *, const char*, const char*);

inline int soap_read_eml__MagneticPermeabilityMeasure(struct soap *soap, eml__MagneticPermeabilityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MagneticPermeabilityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerEnergyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerEnergyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerEnergyMeasure(struct soap*, const char*, int, const eml__MassPerEnergyMeasure *, const char*);
SOAP_FMAC3 eml__MassPerEnergyMeasure * SOAP_FMAC4 soap_in_eml__MassPerEnergyMeasure(struct soap*, const char*, eml__MassPerEnergyMeasure *, const char*);
SOAP_FMAC1 eml__MassPerEnergyMeasure * SOAP_FMAC2 soap_instantiate_eml__MassPerEnergyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassPerEnergyMeasure * soap_new_eml__MassPerEnergyMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassPerEnergyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassPerEnergyMeasure * soap_new_req_eml__MassPerEnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerEnergyUom uom)
{
	eml__MassPerEnergyMeasure *_p = soap_new_eml__MassPerEnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerEnergyMeasure::__item = __item;
		_p->eml__MassPerEnergyMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassPerEnergyMeasure * soap_new_set_eml__MassPerEnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerEnergyUom uom)
{
	eml__MassPerEnergyMeasure *_p = soap_new_eml__MassPerEnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerEnergyMeasure::__item = __item;
		_p->eml__MassPerEnergyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassPerEnergyMeasure(struct soap *soap, eml__MassPerEnergyMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassPerEnergyMeasure", "eml:MassPerEnergyMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassPerEnergyMeasure * SOAP_FMAC4 soap_get_eml__MassPerEnergyMeasure(struct soap*, eml__MassPerEnergyMeasure *, const char*, const char*);

inline int soap_read_eml__MassPerEnergyMeasure(struct soap *soap, eml__MassPerEnergyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassPerEnergyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticDipoleMomentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticDipoleMomentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticDipoleMomentMeasure(struct soap*, const char*, int, const eml__MagneticDipoleMomentMeasure *, const char*);
SOAP_FMAC3 eml__MagneticDipoleMomentMeasure * SOAP_FMAC4 soap_in_eml__MagneticDipoleMomentMeasure(struct soap*, const char*, eml__MagneticDipoleMomentMeasure *, const char*);
SOAP_FMAC1 eml__MagneticDipoleMomentMeasure * SOAP_FMAC2 soap_instantiate_eml__MagneticDipoleMomentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MagneticDipoleMomentMeasure * soap_new_eml__MagneticDipoleMomentMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MagneticDipoleMomentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MagneticDipoleMomentMeasure * soap_new_req_eml__MagneticDipoleMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticDipoleMomentUom uom)
{
	eml__MagneticDipoleMomentMeasure *_p = soap_new_eml__MagneticDipoleMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticDipoleMomentMeasure::__item = __item;
		_p->eml__MagneticDipoleMomentMeasure::uom = uom;
	}
	return _p;
}

inline eml__MagneticDipoleMomentMeasure * soap_new_set_eml__MagneticDipoleMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticDipoleMomentUom uom)
{
	eml__MagneticDipoleMomentMeasure *_p = soap_new_eml__MagneticDipoleMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticDipoleMomentMeasure::__item = __item;
		_p->eml__MagneticDipoleMomentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MagneticDipoleMomentMeasure(struct soap *soap, eml__MagneticDipoleMomentMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MagneticDipoleMomentMeasure", "eml:MagneticDipoleMomentMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MagneticDipoleMomentMeasure * SOAP_FMAC4 soap_get_eml__MagneticDipoleMomentMeasure(struct soap*, eml__MagneticDipoleMomentMeasure *, const char*, const char*);

inline int soap_read_eml__MagneticDipoleMomentMeasure(struct soap *soap, eml__MagneticDipoleMomentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MagneticDipoleMomentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DataTransferSpeedMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DataTransferSpeedMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DataTransferSpeedMeasure(struct soap*, const char*, int, const eml__DataTransferSpeedMeasure *, const char*);
SOAP_FMAC3 eml__DataTransferSpeedMeasure * SOAP_FMAC4 soap_in_eml__DataTransferSpeedMeasure(struct soap*, const char*, eml__DataTransferSpeedMeasure *, const char*);
SOAP_FMAC1 eml__DataTransferSpeedMeasure * SOAP_FMAC2 soap_instantiate_eml__DataTransferSpeedMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__DataTransferSpeedMeasure * soap_new_eml__DataTransferSpeedMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__DataTransferSpeedMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__DataTransferSpeedMeasure * soap_new_req_eml__DataTransferSpeedMeasure(
	struct soap *soap,
	double __item,
	enum eml__DataTransferSpeedUom uom)
{
	eml__DataTransferSpeedMeasure *_p = soap_new_eml__DataTransferSpeedMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DataTransferSpeedMeasure::__item = __item;
		_p->eml__DataTransferSpeedMeasure::uom = uom;
	}
	return _p;
}

inline eml__DataTransferSpeedMeasure * soap_new_set_eml__DataTransferSpeedMeasure(
	struct soap *soap,
	double __item,
	enum eml__DataTransferSpeedUom uom)
{
	eml__DataTransferSpeedMeasure *_p = soap_new_eml__DataTransferSpeedMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DataTransferSpeedMeasure::__item = __item;
		_p->eml__DataTransferSpeedMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__DataTransferSpeedMeasure(struct soap *soap, eml__DataTransferSpeedMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:DataTransferSpeedMeasure", "eml:DataTransferSpeedMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__DataTransferSpeedMeasure * SOAP_FMAC4 soap_get_eml__DataTransferSpeedMeasure(struct soap*, eml__DataTransferSpeedMeasure *, const char*, const char*);

inline int soap_read_eml__DataTransferSpeedMeasure(struct soap *soap, eml__DataTransferSpeedMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__DataTransferSpeedMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerMassMeasure(struct soap*, const char*, int, const eml__MassPerMassMeasure *, const char*);
SOAP_FMAC3 eml__MassPerMassMeasure * SOAP_FMAC4 soap_in_eml__MassPerMassMeasure(struct soap*, const char*, eml__MassPerMassMeasure *, const char*);
SOAP_FMAC1 eml__MassPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml__MassPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassPerMassMeasure * soap_new_eml__MassPerMassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassPerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassPerMassMeasure * soap_new_req_eml__MassPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerMassUom uom)
{
	eml__MassPerMassMeasure *_p = soap_new_eml__MassPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerMassMeasure::__item = __item;
		_p->eml__MassPerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassPerMassMeasure * soap_new_set_eml__MassPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerMassUom uom)
{
	eml__MassPerMassMeasure *_p = soap_new_eml__MassPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerMassMeasure::__item = __item;
		_p->eml__MassPerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassPerMassMeasure(struct soap *soap, eml__MassPerMassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassPerMassMeasure", "eml:MassPerMassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassPerMassMeasure * SOAP_FMAC4 soap_get_eml__MassPerMassMeasure(struct soap*, eml__MassPerMassMeasure *, const char*, const char*);

inline int soap_read_eml__MassPerMassMeasure(struct soap *soap, eml__MassPerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassPerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricCurrentDensityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricCurrentDensityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricCurrentDensityMeasure(struct soap*, const char*, int, const eml__ElectricCurrentDensityMeasure *, const char*);
SOAP_FMAC3 eml__ElectricCurrentDensityMeasure * SOAP_FMAC4 soap_in_eml__ElectricCurrentDensityMeasure(struct soap*, const char*, eml__ElectricCurrentDensityMeasure *, const char*);
SOAP_FMAC1 eml__ElectricCurrentDensityMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricCurrentDensityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricCurrentDensityMeasure * soap_new_eml__ElectricCurrentDensityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricCurrentDensityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricCurrentDensityMeasure * soap_new_req_eml__ElectricCurrentDensityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricCurrentDensityUom uom)
{
	eml__ElectricCurrentDensityMeasure *_p = soap_new_eml__ElectricCurrentDensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricCurrentDensityMeasure::__item = __item;
		_p->eml__ElectricCurrentDensityMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricCurrentDensityMeasure * soap_new_set_eml__ElectricCurrentDensityMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricCurrentDensityUom uom)
{
	eml__ElectricCurrentDensityMeasure *_p = soap_new_eml__ElectricCurrentDensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricCurrentDensityMeasure::__item = __item;
		_p->eml__ElectricCurrentDensityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricCurrentDensityMeasure(struct soap *soap, eml__ElectricCurrentDensityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricCurrentDensityMeasure", "eml:ElectricCurrentDensityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricCurrentDensityMeasure * SOAP_FMAC4 soap_get_eml__ElectricCurrentDensityMeasure(struct soap*, eml__ElectricCurrentDensityMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricCurrentDensityMeasure(struct soap *soap, eml__ElectricCurrentDensityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricCurrentDensityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerMassPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerMassPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerMassPerTimeMeasure(struct soap*, const char*, int, const eml__EnergyPerMassPerTimeMeasure *, const char*);
SOAP_FMAC3 eml__EnergyPerMassPerTimeMeasure * SOAP_FMAC4 soap_in_eml__EnergyPerMassPerTimeMeasure(struct soap*, const char*, eml__EnergyPerMassPerTimeMeasure *, const char*);
SOAP_FMAC1 eml__EnergyPerMassPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__EnergyPerMassPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__EnergyPerMassPerTimeMeasure * soap_new_eml__EnergyPerMassPerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__EnergyPerMassPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__EnergyPerMassPerTimeMeasure * soap_new_req_eml__EnergyPerMassPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerMassPerTimeUom uom)
{
	eml__EnergyPerMassPerTimeMeasure *_p = soap_new_eml__EnergyPerMassPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerMassPerTimeMeasure::__item = __item;
		_p->eml__EnergyPerMassPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__EnergyPerMassPerTimeMeasure * soap_new_set_eml__EnergyPerMassPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerMassPerTimeUom uom)
{
	eml__EnergyPerMassPerTimeMeasure *_p = soap_new_eml__EnergyPerMassPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerMassPerTimeMeasure::__item = __item;
		_p->eml__EnergyPerMassPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__EnergyPerMassPerTimeMeasure(struct soap *soap, eml__EnergyPerMassPerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:EnergyPerMassPerTimeMeasure", "eml:EnergyPerMassPerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__EnergyPerMassPerTimeMeasure * SOAP_FMAC4 soap_get_eml__EnergyPerMassPerTimeMeasure(struct soap*, eml__EnergyPerMassPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__EnergyPerMassPerTimeMeasure(struct soap *soap, eml__EnergyPerMassPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__EnergyPerMassPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerMassMeasure(struct soap*, const char*, int, const eml__AreaPerMassMeasure *, const char*);
SOAP_FMAC3 eml__AreaPerMassMeasure * SOAP_FMAC4 soap_in_eml__AreaPerMassMeasure(struct soap*, const char*, eml__AreaPerMassMeasure *, const char*);
SOAP_FMAC1 eml__AreaPerMassMeasure * SOAP_FMAC2 soap_instantiate_eml__AreaPerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AreaPerMassMeasure * soap_new_eml__AreaPerMassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AreaPerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AreaPerMassMeasure * soap_new_req_eml__AreaPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerMassUom uom)
{
	eml__AreaPerMassMeasure *_p = soap_new_eml__AreaPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerMassMeasure::__item = __item;
		_p->eml__AreaPerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml__AreaPerMassMeasure * soap_new_set_eml__AreaPerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerMassUom uom)
{
	eml__AreaPerMassMeasure *_p = soap_new_eml__AreaPerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerMassMeasure::__item = __item;
		_p->eml__AreaPerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AreaPerMassMeasure(struct soap *soap, eml__AreaPerMassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AreaPerMassMeasure", "eml:AreaPerMassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AreaPerMassMeasure * SOAP_FMAC4 soap_get_eml__AreaPerMassMeasure(struct soap*, eml__AreaPerMassMeasure *, const char*, const char*);

inline int soap_read_eml__AreaPerMassMeasure(struct soap *soap, eml__AreaPerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AreaPerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__RadianceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__RadianceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__RadianceMeasure(struct soap*, const char*, int, const eml__RadianceMeasure *, const char*);
SOAP_FMAC3 eml__RadianceMeasure * SOAP_FMAC4 soap_in_eml__RadianceMeasure(struct soap*, const char*, eml__RadianceMeasure *, const char*);
SOAP_FMAC1 eml__RadianceMeasure * SOAP_FMAC2 soap_instantiate_eml__RadianceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__RadianceMeasure * soap_new_eml__RadianceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__RadianceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__RadianceMeasure * soap_new_req_eml__RadianceMeasure(
	struct soap *soap,
	double __item,
	enum eml__RadianceUom uom)
{
	eml__RadianceMeasure *_p = soap_new_eml__RadianceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__RadianceMeasure::__item = __item;
		_p->eml__RadianceMeasure::uom = uom;
	}
	return _p;
}

inline eml__RadianceMeasure * soap_new_set_eml__RadianceMeasure(
	struct soap *soap,
	double __item,
	enum eml__RadianceUom uom)
{
	eml__RadianceMeasure *_p = soap_new_eml__RadianceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__RadianceMeasure::__item = __item;
		_p->eml__RadianceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__RadianceMeasure(struct soap *soap, eml__RadianceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:RadianceMeasure", "eml:RadianceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__RadianceMeasure * SOAP_FMAC4 soap_get_eml__RadianceMeasure(struct soap*, eml__RadianceMeasure *, const char*, const char*);

inline int soap_read_eml__RadianceMeasure(struct soap *soap, eml__RadianceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__RadianceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DipoleMomentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DipoleMomentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DipoleMomentMeasure(struct soap*, const char*, int, const eml__DipoleMomentMeasure *, const char*);
SOAP_FMAC3 eml__DipoleMomentMeasure * SOAP_FMAC4 soap_in_eml__DipoleMomentMeasure(struct soap*, const char*, eml__DipoleMomentMeasure *, const char*);
SOAP_FMAC1 eml__DipoleMomentMeasure * SOAP_FMAC2 soap_instantiate_eml__DipoleMomentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__DipoleMomentMeasure * soap_new_eml__DipoleMomentMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__DipoleMomentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__DipoleMomentMeasure * soap_new_req_eml__DipoleMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml__DipoleMomentUom uom)
{
	eml__DipoleMomentMeasure *_p = soap_new_eml__DipoleMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DipoleMomentMeasure::__item = __item;
		_p->eml__DipoleMomentMeasure::uom = uom;
	}
	return _p;
}

inline eml__DipoleMomentMeasure * soap_new_set_eml__DipoleMomentMeasure(
	struct soap *soap,
	double __item,
	enum eml__DipoleMomentUom uom)
{
	eml__DipoleMomentMeasure *_p = soap_new_eml__DipoleMomentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DipoleMomentMeasure::__item = __item;
		_p->eml__DipoleMomentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__DipoleMomentMeasure(struct soap *soap, eml__DipoleMomentMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:DipoleMomentMeasure", "eml:DipoleMomentMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__DipoleMomentMeasure * SOAP_FMAC4 soap_get_eml__DipoleMomentMeasure(struct soap*, eml__DipoleMomentMeasure *, const char*, const char*);

inline int soap_read_eml__DipoleMomentMeasure(struct soap *soap, eml__DipoleMomentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__DipoleMomentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureTimePerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureTimePerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressureTimePerVolumeMeasure(struct soap*, const char*, int, const eml__PressureTimePerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__PressureTimePerVolumeMeasure * SOAP_FMAC4 soap_in_eml__PressureTimePerVolumeMeasure(struct soap*, const char*, eml__PressureTimePerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__PressureTimePerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__PressureTimePerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PressureTimePerVolumeMeasure * soap_new_eml__PressureTimePerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PressureTimePerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PressureTimePerVolumeMeasure * soap_new_req_eml__PressureTimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressureTimePerVolumeUom uom)
{
	eml__PressureTimePerVolumeMeasure *_p = soap_new_eml__PressureTimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressureTimePerVolumeMeasure::__item = __item;
		_p->eml__PressureTimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__PressureTimePerVolumeMeasure * soap_new_set_eml__PressureTimePerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressureTimePerVolumeUom uom)
{
	eml__PressureTimePerVolumeMeasure *_p = soap_new_eml__PressureTimePerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressureTimePerVolumeMeasure::__item = __item;
		_p->eml__PressureTimePerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PressureTimePerVolumeMeasure(struct soap *soap, eml__PressureTimePerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PressureTimePerVolumeMeasure", "eml:PressureTimePerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PressureTimePerVolumeMeasure * SOAP_FMAC4 soap_get_eml__PressureTimePerVolumeMeasure(struct soap*, eml__PressureTimePerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__PressureTimePerVolumeMeasure(struct soap *soap, eml__PressureTimePerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PressureTimePerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PermittivityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PermittivityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PermittivityMeasure(struct soap*, const char*, int, const eml__PermittivityMeasure *, const char*);
SOAP_FMAC3 eml__PermittivityMeasure * SOAP_FMAC4 soap_in_eml__PermittivityMeasure(struct soap*, const char*, eml__PermittivityMeasure *, const char*);
SOAP_FMAC1 eml__PermittivityMeasure * SOAP_FMAC2 soap_instantiate_eml__PermittivityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PermittivityMeasure * soap_new_eml__PermittivityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PermittivityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PermittivityMeasure * soap_new_req_eml__PermittivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__PermittivityUom uom)
{
	eml__PermittivityMeasure *_p = soap_new_eml__PermittivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PermittivityMeasure::__item = __item;
		_p->eml__PermittivityMeasure::uom = uom;
	}
	return _p;
}

inline eml__PermittivityMeasure * soap_new_set_eml__PermittivityMeasure(
	struct soap *soap,
	double __item,
	enum eml__PermittivityUom uom)
{
	eml__PermittivityMeasure *_p = soap_new_eml__PermittivityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PermittivityMeasure::__item = __item;
		_p->eml__PermittivityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PermittivityMeasure(struct soap *soap, eml__PermittivityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PermittivityMeasure", "eml:PermittivityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PermittivityMeasure * SOAP_FMAC4 soap_get_eml__PermittivityMeasure(struct soap*, eml__PermittivityMeasure *, const char*, const char*);

inline int soap_read_eml__PermittivityMeasure(struct soap *soap, eml__PermittivityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PermittivityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermodynamicTemperatureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermodynamicTemperatureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermodynamicTemperatureMeasure(struct soap*, const char*, int, const eml__ThermodynamicTemperatureMeasure *, const char*);
SOAP_FMAC3 eml__ThermodynamicTemperatureMeasure * SOAP_FMAC4 soap_in_eml__ThermodynamicTemperatureMeasure(struct soap*, const char*, eml__ThermodynamicTemperatureMeasure *, const char*);
SOAP_FMAC1 eml__ThermodynamicTemperatureMeasure * SOAP_FMAC2 soap_instantiate_eml__ThermodynamicTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ThermodynamicTemperatureMeasure * soap_new_eml__ThermodynamicTemperatureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ThermodynamicTemperatureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ThermodynamicTemperatureMeasure * soap_new_req_eml__ThermodynamicTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermodynamicTemperatureUom uom)
{
	eml__ThermodynamicTemperatureMeasure *_p = soap_new_eml__ThermodynamicTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermodynamicTemperatureMeasure::__item = __item;
		_p->eml__ThermodynamicTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline eml__ThermodynamicTemperatureMeasure * soap_new_set_eml__ThermodynamicTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermodynamicTemperatureUom uom)
{
	eml__ThermodynamicTemperatureMeasure *_p = soap_new_eml__ThermodynamicTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermodynamicTemperatureMeasure::__item = __item;
		_p->eml__ThermodynamicTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ThermodynamicTemperatureMeasure(struct soap *soap, eml__ThermodynamicTemperatureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ThermodynamicTemperatureMeasure", "eml:ThermodynamicTemperatureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ThermodynamicTemperatureMeasure * SOAP_FMAC4 soap_get_eml__ThermodynamicTemperatureMeasure(struct soap*, eml__ThermodynamicTemperatureMeasure *, const char*, const char*);

inline int soap_read_eml__ThermodynamicTemperatureMeasure(struct soap *soap, eml__ThermodynamicTemperatureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ThermodynamicTemperatureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReluctanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReluctanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReluctanceMeasure(struct soap*, const char*, int, const eml__ReluctanceMeasure *, const char*);
SOAP_FMAC3 eml__ReluctanceMeasure * SOAP_FMAC4 soap_in_eml__ReluctanceMeasure(struct soap*, const char*, eml__ReluctanceMeasure *, const char*);
SOAP_FMAC1 eml__ReluctanceMeasure * SOAP_FMAC2 soap_instantiate_eml__ReluctanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReluctanceMeasure * soap_new_eml__ReluctanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReluctanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReluctanceMeasure * soap_new_req_eml__ReluctanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReluctanceUom uom)
{
	eml__ReluctanceMeasure *_p = soap_new_eml__ReluctanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReluctanceMeasure::__item = __item;
		_p->eml__ReluctanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReluctanceMeasure * soap_new_set_eml__ReluctanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReluctanceUom uom)
{
	eml__ReluctanceMeasure *_p = soap_new_eml__ReluctanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReluctanceMeasure::__item = __item;
		_p->eml__ReluctanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReluctanceMeasure(struct soap *soap, eml__ReluctanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReluctanceMeasure", "eml:ReluctanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReluctanceMeasure * SOAP_FMAC4 soap_get_eml__ReluctanceMeasure(struct soap*, eml__ReluctanceMeasure *, const char*, const char*);

inline int soap_read_eml__ReluctanceMeasure(struct soap *soap, eml__ReluctanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReluctanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerAreaMeasure(struct soap*, const char*, int, const eml__AreaPerAreaMeasure *, const char*);
SOAP_FMAC3 eml__AreaPerAreaMeasure * SOAP_FMAC4 soap_in_eml__AreaPerAreaMeasure(struct soap*, const char*, eml__AreaPerAreaMeasure *, const char*);
SOAP_FMAC1 eml__AreaPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__AreaPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AreaPerAreaMeasure * soap_new_eml__AreaPerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AreaPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AreaPerAreaMeasure * soap_new_req_eml__AreaPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerAreaUom uom)
{
	eml__AreaPerAreaMeasure *_p = soap_new_eml__AreaPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerAreaMeasure::__item = __item;
		_p->eml__AreaPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__AreaPerAreaMeasure * soap_new_set_eml__AreaPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerAreaUom uom)
{
	eml__AreaPerAreaMeasure *_p = soap_new_eml__AreaPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerAreaMeasure::__item = __item;
		_p->eml__AreaPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AreaPerAreaMeasure(struct soap *soap, eml__AreaPerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AreaPerAreaMeasure", "eml:AreaPerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AreaPerAreaMeasure * SOAP_FMAC4 soap_get_eml__AreaPerAreaMeasure(struct soap*, eml__AreaPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__AreaPerAreaMeasure(struct soap *soap, eml__AreaPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AreaPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerAreaMeasure(struct soap*, const char*, int, const eml__EnergyPerAreaMeasure *, const char*);
SOAP_FMAC3 eml__EnergyPerAreaMeasure * SOAP_FMAC4 soap_in_eml__EnergyPerAreaMeasure(struct soap*, const char*, eml__EnergyPerAreaMeasure *, const char*);
SOAP_FMAC1 eml__EnergyPerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__EnergyPerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__EnergyPerAreaMeasure * soap_new_eml__EnergyPerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__EnergyPerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__EnergyPerAreaMeasure * soap_new_req_eml__EnergyPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerAreaUom uom)
{
	eml__EnergyPerAreaMeasure *_p = soap_new_eml__EnergyPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerAreaMeasure::__item = __item;
		_p->eml__EnergyPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__EnergyPerAreaMeasure * soap_new_set_eml__EnergyPerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerAreaUom uom)
{
	eml__EnergyPerAreaMeasure *_p = soap_new_eml__EnergyPerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerAreaMeasure::__item = __item;
		_p->eml__EnergyPerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__EnergyPerAreaMeasure(struct soap *soap, eml__EnergyPerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:EnergyPerAreaMeasure", "eml:EnergyPerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__EnergyPerAreaMeasure * SOAP_FMAC4 soap_get_eml__EnergyPerAreaMeasure(struct soap*, eml__EnergyPerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__EnergyPerAreaMeasure(struct soap *soap, eml__EnergyPerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__EnergyPerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerLengthMeasure(struct soap*, const char*, int, const eml__MassPerLengthMeasure *, const char*);
SOAP_FMAC3 eml__MassPerLengthMeasure * SOAP_FMAC4 soap_in_eml__MassPerLengthMeasure(struct soap*, const char*, eml__MassPerLengthMeasure *, const char*);
SOAP_FMAC1 eml__MassPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__MassPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassPerLengthMeasure * soap_new_eml__MassPerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassPerLengthMeasure * soap_new_req_eml__MassPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerLengthUom uom)
{
	eml__MassPerLengthMeasure *_p = soap_new_eml__MassPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerLengthMeasure::__item = __item;
		_p->eml__MassPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassPerLengthMeasure * soap_new_set_eml__MassPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerLengthUom uom)
{
	eml__MassPerLengthMeasure *_p = soap_new_eml__MassPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerLengthMeasure::__item = __item;
		_p->eml__MassPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassPerLengthMeasure(struct soap *soap, eml__MassPerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassPerLengthMeasure", "eml:MassPerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassPerLengthMeasure * SOAP_FMAC4 soap_get_eml__MassPerLengthMeasure(struct soap*, eml__MassPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__MassPerLengthMeasure(struct soap *soap, eml__MassPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerTimeMeasure(struct soap*, const char*, int, const eml__LengthPerTimeMeasure *, const char*);
SOAP_FMAC3 eml__LengthPerTimeMeasure * SOAP_FMAC4 soap_in_eml__LengthPerTimeMeasure(struct soap*, const char*, eml__LengthPerTimeMeasure *, const char*);
SOAP_FMAC1 eml__LengthPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__LengthPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LengthPerTimeMeasure * soap_new_eml__LengthPerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LengthPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LengthPerTimeMeasure * soap_new_req_eml__LengthPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerTimeUom uom)
{
	eml__LengthPerTimeMeasure *_p = soap_new_eml__LengthPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerTimeMeasure::__item = __item;
		_p->eml__LengthPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__LengthPerTimeMeasure * soap_new_set_eml__LengthPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerTimeUom uom)
{
	eml__LengthPerTimeMeasure *_p = soap_new_eml__LengthPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerTimeMeasure::__item = __item;
		_p->eml__LengthPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LengthPerTimeMeasure(struct soap *soap, eml__LengthPerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LengthPerTimeMeasure", "eml:LengthPerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LengthPerTimeMeasure * SOAP_FMAC4 soap_get_eml__LengthPerTimeMeasure(struct soap*, eml__LengthPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__LengthPerTimeMeasure(struct soap *soap, eml__LengthPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LengthPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AnglePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AnglePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AnglePerLengthMeasure(struct soap*, const char*, int, const eml__AnglePerLengthMeasure *, const char*);
SOAP_FMAC3 eml__AnglePerLengthMeasure * SOAP_FMAC4 soap_in_eml__AnglePerLengthMeasure(struct soap*, const char*, eml__AnglePerLengthMeasure *, const char*);
SOAP_FMAC1 eml__AnglePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__AnglePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AnglePerLengthMeasure * soap_new_eml__AnglePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AnglePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AnglePerLengthMeasure * soap_new_req_eml__AnglePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__AnglePerLengthUom uom)
{
	eml__AnglePerLengthMeasure *_p = soap_new_eml__AnglePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AnglePerLengthMeasure::__item = __item;
		_p->eml__AnglePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__AnglePerLengthMeasure * soap_new_set_eml__AnglePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__AnglePerLengthUom uom)
{
	eml__AnglePerLengthMeasure *_p = soap_new_eml__AnglePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AnglePerLengthMeasure::__item = __item;
		_p->eml__AnglePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AnglePerLengthMeasure(struct soap *soap, eml__AnglePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AnglePerLengthMeasure", "eml:AnglePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AnglePerLengthMeasure * SOAP_FMAC4 soap_get_eml__AnglePerLengthMeasure(struct soap*, eml__AnglePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__AnglePerLengthMeasure(struct soap *soap, eml__AnglePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AnglePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalResistanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalResistanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalResistanceMeasure(struct soap*, const char*, int, const eml__ThermalResistanceMeasure *, const char*);
SOAP_FMAC3 eml__ThermalResistanceMeasure * SOAP_FMAC4 soap_in_eml__ThermalResistanceMeasure(struct soap*, const char*, eml__ThermalResistanceMeasure *, const char*);
SOAP_FMAC1 eml__ThermalResistanceMeasure * SOAP_FMAC2 soap_instantiate_eml__ThermalResistanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ThermalResistanceMeasure * soap_new_eml__ThermalResistanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ThermalResistanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ThermalResistanceMeasure * soap_new_req_eml__ThermalResistanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalResistanceUom uom)
{
	eml__ThermalResistanceMeasure *_p = soap_new_eml__ThermalResistanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalResistanceMeasure::__item = __item;
		_p->eml__ThermalResistanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ThermalResistanceMeasure * soap_new_set_eml__ThermalResistanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalResistanceUom uom)
{
	eml__ThermalResistanceMeasure *_p = soap_new_eml__ThermalResistanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalResistanceMeasure::__item = __item;
		_p->eml__ThermalResistanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ThermalResistanceMeasure(struct soap *soap, eml__ThermalResistanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ThermalResistanceMeasure", "eml:ThermalResistanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ThermalResistanceMeasure * SOAP_FMAC4 soap_get_eml__ThermalResistanceMeasure(struct soap*, eml__ThermalResistanceMeasure *, const char*, const char*);

inline int soap_read_eml__ThermalResistanceMeasure(struct soap *soap, eml__ThermalResistanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ThermalResistanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AttenuationPerFrequencyIntervalMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AttenuationPerFrequencyIntervalMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AttenuationPerFrequencyIntervalMeasure(struct soap*, const char*, int, const eml__AttenuationPerFrequencyIntervalMeasure *, const char*);
SOAP_FMAC3 eml__AttenuationPerFrequencyIntervalMeasure * SOAP_FMAC4 soap_in_eml__AttenuationPerFrequencyIntervalMeasure(struct soap*, const char*, eml__AttenuationPerFrequencyIntervalMeasure *, const char*);
SOAP_FMAC1 eml__AttenuationPerFrequencyIntervalMeasure * SOAP_FMAC2 soap_instantiate_eml__AttenuationPerFrequencyIntervalMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AttenuationPerFrequencyIntervalMeasure * soap_new_eml__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AttenuationPerFrequencyIntervalMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AttenuationPerFrequencyIntervalMeasure * soap_new_req_eml__AttenuationPerFrequencyIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml__AttenuationPerFrequencyIntervalUom uom)
{
	eml__AttenuationPerFrequencyIntervalMeasure *_p = soap_new_eml__AttenuationPerFrequencyIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AttenuationPerFrequencyIntervalMeasure::__item = __item;
		_p->eml__AttenuationPerFrequencyIntervalMeasure::uom = uom;
	}
	return _p;
}

inline eml__AttenuationPerFrequencyIntervalMeasure * soap_new_set_eml__AttenuationPerFrequencyIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml__AttenuationPerFrequencyIntervalUom uom)
{
	eml__AttenuationPerFrequencyIntervalMeasure *_p = soap_new_eml__AttenuationPerFrequencyIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AttenuationPerFrequencyIntervalMeasure::__item = __item;
		_p->eml__AttenuationPerFrequencyIntervalMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, eml__AttenuationPerFrequencyIntervalMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AttenuationPerFrequencyIntervalMeasure", "eml:AttenuationPerFrequencyIntervalMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AttenuationPerFrequencyIntervalMeasure * SOAP_FMAC4 soap_get_eml__AttenuationPerFrequencyIntervalMeasure(struct soap*, eml__AttenuationPerFrequencyIntervalMeasure *, const char*, const char*);

inline int soap_read_eml__AttenuationPerFrequencyIntervalMeasure(struct soap *soap, eml__AttenuationPerFrequencyIntervalMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AttenuationPerFrequencyIntervalMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TemperatureIntervalPerPressureMeasure(struct soap*, const char*, int, const eml__TemperatureIntervalPerPressureMeasure *, const char*);
SOAP_FMAC3 eml__TemperatureIntervalPerPressureMeasure * SOAP_FMAC4 soap_in_eml__TemperatureIntervalPerPressureMeasure(struct soap*, const char*, eml__TemperatureIntervalPerPressureMeasure *, const char*);
SOAP_FMAC1 eml__TemperatureIntervalPerPressureMeasure * SOAP_FMAC2 soap_instantiate_eml__TemperatureIntervalPerPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__TemperatureIntervalPerPressureMeasure * soap_new_eml__TemperatureIntervalPerPressureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__TemperatureIntervalPerPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__TemperatureIntervalPerPressureMeasure * soap_new_req_eml__TemperatureIntervalPerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__TemperatureIntervalPerPressureUom uom)
{
	eml__TemperatureIntervalPerPressureMeasure *_p = soap_new_eml__TemperatureIntervalPerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TemperatureIntervalPerPressureMeasure::__item = __item;
		_p->eml__TemperatureIntervalPerPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml__TemperatureIntervalPerPressureMeasure * soap_new_set_eml__TemperatureIntervalPerPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__TemperatureIntervalPerPressureUom uom)
{
	eml__TemperatureIntervalPerPressureMeasure *_p = soap_new_eml__TemperatureIntervalPerPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TemperatureIntervalPerPressureMeasure::__item = __item;
		_p->eml__TemperatureIntervalPerPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__TemperatureIntervalPerPressureMeasure(struct soap *soap, eml__TemperatureIntervalPerPressureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:TemperatureIntervalPerPressureMeasure", "eml:TemperatureIntervalPerPressureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__TemperatureIntervalPerPressureMeasure * SOAP_FMAC4 soap_get_eml__TemperatureIntervalPerPressureMeasure(struct soap*, eml__TemperatureIntervalPerPressureMeasure *, const char*, const char*);

inline int soap_read_eml__TemperatureIntervalPerPressureMeasure(struct soap *soap, eml__TemperatureIntervalPerPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__TemperatureIntervalPerPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AbsorbedDoseMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AbsorbedDoseMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AbsorbedDoseMeasure(struct soap*, const char*, int, const eml__AbsorbedDoseMeasure *, const char*);
SOAP_FMAC3 eml__AbsorbedDoseMeasure * SOAP_FMAC4 soap_in_eml__AbsorbedDoseMeasure(struct soap*, const char*, eml__AbsorbedDoseMeasure *, const char*);
SOAP_FMAC1 eml__AbsorbedDoseMeasure * SOAP_FMAC2 soap_instantiate_eml__AbsorbedDoseMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AbsorbedDoseMeasure * soap_new_eml__AbsorbedDoseMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AbsorbedDoseMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AbsorbedDoseMeasure * soap_new_req_eml__AbsorbedDoseMeasure(
	struct soap *soap,
	double __item,
	enum eml__AbsorbedDoseUom uom)
{
	eml__AbsorbedDoseMeasure *_p = soap_new_eml__AbsorbedDoseMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbsorbedDoseMeasure::__item = __item;
		_p->eml__AbsorbedDoseMeasure::uom = uom;
	}
	return _p;
}

inline eml__AbsorbedDoseMeasure * soap_new_set_eml__AbsorbedDoseMeasure(
	struct soap *soap,
	double __item,
	enum eml__AbsorbedDoseUom uom)
{
	eml__AbsorbedDoseMeasure *_p = soap_new_eml__AbsorbedDoseMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbsorbedDoseMeasure::__item = __item;
		_p->eml__AbsorbedDoseMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AbsorbedDoseMeasure(struct soap *soap, eml__AbsorbedDoseMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AbsorbedDoseMeasure", "eml:AbsorbedDoseMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AbsorbedDoseMeasure * SOAP_FMAC4 soap_get_eml__AbsorbedDoseMeasure(struct soap*, eml__AbsorbedDoseMeasure *, const char*, const char*);

inline int soap_read_eml__AbsorbedDoseMeasure(struct soap *soap, eml__AbsorbedDoseMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AbsorbedDoseMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricResistancePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricResistancePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricResistancePerLengthMeasure(struct soap*, const char*, int, const eml__ElectricResistancePerLengthMeasure *, const char*);
SOAP_FMAC3 eml__ElectricResistancePerLengthMeasure * SOAP_FMAC4 soap_in_eml__ElectricResistancePerLengthMeasure(struct soap*, const char*, eml__ElectricResistancePerLengthMeasure *, const char*);
SOAP_FMAC1 eml__ElectricResistancePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricResistancePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricResistancePerLengthMeasure * soap_new_eml__ElectricResistancePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricResistancePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricResistancePerLengthMeasure * soap_new_req_eml__ElectricResistancePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricResistancePerLengthUom uom)
{
	eml__ElectricResistancePerLengthMeasure *_p = soap_new_eml__ElectricResistancePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricResistancePerLengthMeasure::__item = __item;
		_p->eml__ElectricResistancePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricResistancePerLengthMeasure * soap_new_set_eml__ElectricResistancePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricResistancePerLengthUom uom)
{
	eml__ElectricResistancePerLengthMeasure *_p = soap_new_eml__ElectricResistancePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricResistancePerLengthMeasure::__item = __item;
		_p->eml__ElectricResistancePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricResistancePerLengthMeasure(struct soap *soap, eml__ElectricResistancePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricResistancePerLengthMeasure", "eml:ElectricResistancePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricResistancePerLengthMeasure * SOAP_FMAC4 soap_get_eml__ElectricResistancePerLengthMeasure(struct soap*, eml__ElectricResistancePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricResistancePerLengthMeasure(struct soap *soap, eml__ElectricResistancePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricResistancePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatCapacityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatCapacityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__HeatCapacityMeasure(struct soap*, const char*, int, const eml__HeatCapacityMeasure *, const char*);
SOAP_FMAC3 eml__HeatCapacityMeasure * SOAP_FMAC4 soap_in_eml__HeatCapacityMeasure(struct soap*, const char*, eml__HeatCapacityMeasure *, const char*);
SOAP_FMAC1 eml__HeatCapacityMeasure * SOAP_FMAC2 soap_instantiate_eml__HeatCapacityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__HeatCapacityMeasure * soap_new_eml__HeatCapacityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__HeatCapacityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__HeatCapacityMeasure * soap_new_req_eml__HeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml__HeatCapacityUom uom)
{
	eml__HeatCapacityMeasure *_p = soap_new_eml__HeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__HeatCapacityMeasure::__item = __item;
		_p->eml__HeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline eml__HeatCapacityMeasure * soap_new_set_eml__HeatCapacityMeasure(
	struct soap *soap,
	double __item,
	enum eml__HeatCapacityUom uom)
{
	eml__HeatCapacityMeasure *_p = soap_new_eml__HeatCapacityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__HeatCapacityMeasure::__item = __item;
		_p->eml__HeatCapacityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__HeatCapacityMeasure(struct soap *soap, eml__HeatCapacityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:HeatCapacityMeasure", "eml:HeatCapacityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__HeatCapacityMeasure * SOAP_FMAC4 soap_get_eml__HeatCapacityMeasure(struct soap*, eml__HeatCapacityMeasure *, const char*, const char*);

inline int soap_read_eml__HeatCapacityMeasure(struct soap *soap, eml__HeatCapacityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__HeatCapacityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousFluxMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LuminousFluxMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LuminousFluxMeasure(struct soap*, const char*, int, const eml__LuminousFluxMeasure *, const char*);
SOAP_FMAC3 eml__LuminousFluxMeasure * SOAP_FMAC4 soap_in_eml__LuminousFluxMeasure(struct soap*, const char*, eml__LuminousFluxMeasure *, const char*);
SOAP_FMAC1 eml__LuminousFluxMeasure * SOAP_FMAC2 soap_instantiate_eml__LuminousFluxMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LuminousFluxMeasure * soap_new_eml__LuminousFluxMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LuminousFluxMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LuminousFluxMeasure * soap_new_req_eml__LuminousFluxMeasure(
	struct soap *soap,
	double __item,
	enum eml__LuminousFluxUom uom)
{
	eml__LuminousFluxMeasure *_p = soap_new_eml__LuminousFluxMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LuminousFluxMeasure::__item = __item;
		_p->eml__LuminousFluxMeasure::uom = uom;
	}
	return _p;
}

inline eml__LuminousFluxMeasure * soap_new_set_eml__LuminousFluxMeasure(
	struct soap *soap,
	double __item,
	enum eml__LuminousFluxUom uom)
{
	eml__LuminousFluxMeasure *_p = soap_new_eml__LuminousFluxMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LuminousFluxMeasure::__item = __item;
		_p->eml__LuminousFluxMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LuminousFluxMeasure(struct soap *soap, eml__LuminousFluxMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LuminousFluxMeasure", "eml:LuminousFluxMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LuminousFluxMeasure * SOAP_FMAC4 soap_get_eml__LuminousFluxMeasure(struct soap*, eml__LuminousFluxMeasure *, const char*, const char*);

inline int soap_read_eml__LuminousFluxMeasure(struct soap *soap, eml__LuminousFluxMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LuminousFluxMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricCurrentMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricCurrentMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricCurrentMeasure(struct soap*, const char*, int, const eml__ElectricCurrentMeasure *, const char*);
SOAP_FMAC3 eml__ElectricCurrentMeasure * SOAP_FMAC4 soap_in_eml__ElectricCurrentMeasure(struct soap*, const char*, eml__ElectricCurrentMeasure *, const char*);
SOAP_FMAC1 eml__ElectricCurrentMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricCurrentMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricCurrentMeasure * soap_new_eml__ElectricCurrentMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricCurrentMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricCurrentMeasure * soap_new_req_eml__ElectricCurrentMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricCurrentUom uom)
{
	eml__ElectricCurrentMeasure *_p = soap_new_eml__ElectricCurrentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricCurrentMeasure::__item = __item;
		_p->eml__ElectricCurrentMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricCurrentMeasure * soap_new_set_eml__ElectricCurrentMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricCurrentUom uom)
{
	eml__ElectricCurrentMeasure *_p = soap_new_eml__ElectricCurrentMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricCurrentMeasure::__item = __item;
		_p->eml__ElectricCurrentMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricCurrentMeasure(struct soap *soap, eml__ElectricCurrentMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricCurrentMeasure", "eml:ElectricCurrentMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricCurrentMeasure * SOAP_FMAC4 soap_get_eml__ElectricCurrentMeasure(struct soap*, eml__ElectricCurrentMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricCurrentMeasure(struct soap *soap, eml__ElectricCurrentMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricCurrentMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LightExposureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LightExposureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LightExposureMeasure(struct soap*, const char*, int, const eml__LightExposureMeasure *, const char*);
SOAP_FMAC3 eml__LightExposureMeasure * SOAP_FMAC4 soap_in_eml__LightExposureMeasure(struct soap*, const char*, eml__LightExposureMeasure *, const char*);
SOAP_FMAC1 eml__LightExposureMeasure * SOAP_FMAC2 soap_instantiate_eml__LightExposureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LightExposureMeasure * soap_new_eml__LightExposureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LightExposureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LightExposureMeasure * soap_new_req_eml__LightExposureMeasure(
	struct soap *soap,
	double __item,
	enum eml__LightExposureUom uom)
{
	eml__LightExposureMeasure *_p = soap_new_eml__LightExposureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LightExposureMeasure::__item = __item;
		_p->eml__LightExposureMeasure::uom = uom;
	}
	return _p;
}

inline eml__LightExposureMeasure * soap_new_set_eml__LightExposureMeasure(
	struct soap *soap,
	double __item,
	enum eml__LightExposureUom uom)
{
	eml__LightExposureMeasure *_p = soap_new_eml__LightExposureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LightExposureMeasure::__item = __item;
		_p->eml__LightExposureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LightExposureMeasure(struct soap *soap, eml__LightExposureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LightExposureMeasure", "eml:LightExposureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LightExposureMeasure * SOAP_FMAC4 soap_get_eml__LightExposureMeasure(struct soap*, eml__LightExposureMeasure *, const char*, const char*);

inline int soap_read_eml__LightExposureMeasure(struct soap *soap, eml__LightExposureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LightExposureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricChargePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricChargePerAreaMeasure(struct soap*, const char*, int, const eml__ElectricChargePerAreaMeasure *, const char*);
SOAP_FMAC3 eml__ElectricChargePerAreaMeasure * SOAP_FMAC4 soap_in_eml__ElectricChargePerAreaMeasure(struct soap*, const char*, eml__ElectricChargePerAreaMeasure *, const char*);
SOAP_FMAC1 eml__ElectricChargePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricChargePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricChargePerAreaMeasure * soap_new_eml__ElectricChargePerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricChargePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricChargePerAreaMeasure * soap_new_req_eml__ElectricChargePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricChargePerAreaUom uom)
{
	eml__ElectricChargePerAreaMeasure *_p = soap_new_eml__ElectricChargePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricChargePerAreaMeasure::__item = __item;
		_p->eml__ElectricChargePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricChargePerAreaMeasure * soap_new_set_eml__ElectricChargePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricChargePerAreaUom uom)
{
	eml__ElectricChargePerAreaMeasure *_p = soap_new_eml__ElectricChargePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricChargePerAreaMeasure::__item = __item;
		_p->eml__ElectricChargePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricChargePerAreaMeasure(struct soap *soap, eml__ElectricChargePerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricChargePerAreaMeasure", "eml:ElectricChargePerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricChargePerAreaMeasure * SOAP_FMAC4 soap_get_eml__ElectricChargePerAreaMeasure(struct soap*, eml__ElectricChargePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricChargePerAreaMeasure(struct soap *soap, eml__ElectricChargePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricChargePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerRotationMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerRotationMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerRotationMeasure(struct soap*, const char*, int, const eml__VolumePerRotationMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerRotationMeasure * SOAP_FMAC4 soap_in_eml__VolumePerRotationMeasure(struct soap*, const char*, eml__VolumePerRotationMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerRotationMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerRotationMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerRotationMeasure * soap_new_eml__VolumePerRotationMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerRotationMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerRotationMeasure * soap_new_req_eml__VolumePerRotationMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerRotationUom uom)
{
	eml__VolumePerRotationMeasure *_p = soap_new_eml__VolumePerRotationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerRotationMeasure::__item = __item;
		_p->eml__VolumePerRotationMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerRotationMeasure * soap_new_set_eml__VolumePerRotationMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerRotationUom uom)
{
	eml__VolumePerRotationMeasure *_p = soap_new_eml__VolumePerRotationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerRotationMeasure::__item = __item;
		_p->eml__VolumePerRotationMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerRotationMeasure(struct soap *soap, eml__VolumePerRotationMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerRotationMeasure", "eml:VolumePerRotationMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerRotationMeasure * SOAP_FMAC4 soap_get_eml__VolumePerRotationMeasure(struct soap*, eml__VolumePerRotationMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerRotationMeasure(struct soap *soap, eml__VolumePerRotationMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerRotationMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PowerMeasure(struct soap*, const char*, int, const eml__PowerMeasure *, const char*);
SOAP_FMAC3 eml__PowerMeasure * SOAP_FMAC4 soap_in_eml__PowerMeasure(struct soap*, const char*, eml__PowerMeasure *, const char*);
SOAP_FMAC1 eml__PowerMeasure * SOAP_FMAC2 soap_instantiate_eml__PowerMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PowerMeasure * soap_new_eml__PowerMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PowerMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PowerMeasure * soap_new_req_eml__PowerMeasure(
	struct soap *soap,
	double __item,
	enum eml__PowerUom uom)
{
	eml__PowerMeasure *_p = soap_new_eml__PowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PowerMeasure::__item = __item;
		_p->eml__PowerMeasure::uom = uom;
	}
	return _p;
}

inline eml__PowerMeasure * soap_new_set_eml__PowerMeasure(
	struct soap *soap,
	double __item,
	enum eml__PowerUom uom)
{
	eml__PowerMeasure *_p = soap_new_eml__PowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PowerMeasure::__item = __item;
		_p->eml__PowerMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PowerMeasure(struct soap *soap, eml__PowerMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PowerMeasure", "eml:PowerMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PowerMeasure * SOAP_FMAC4 soap_get_eml__PowerMeasure(struct soap*, eml__PowerMeasure *, const char*, const char*);

inline int soap_read_eml__PowerMeasure(struct soap *soap, eml__PowerMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PowerMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyLengthPerTimeAreaTemperatureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyLengthPerTimeAreaTemperatureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, const char*, int, const eml__EnergyLengthPerTimeAreaTemperatureMeasure *, const char*);
SOAP_FMAC3 eml__EnergyLengthPerTimeAreaTemperatureMeasure * SOAP_FMAC4 soap_in_eml__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, const char*, eml__EnergyLengthPerTimeAreaTemperatureMeasure *, const char*);
SOAP_FMAC1 eml__EnergyLengthPerTimeAreaTemperatureMeasure * SOAP_FMAC2 soap_instantiate_eml__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__EnergyLengthPerTimeAreaTemperatureMeasure * soap_new_eml__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__EnergyLengthPerTimeAreaTemperatureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__EnergyLengthPerTimeAreaTemperatureMeasure * soap_new_req_eml__EnergyLengthPerTimeAreaTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyLengthPerTimeAreaTemperatureUom uom)
{
	eml__EnergyLengthPerTimeAreaTemperatureMeasure *_p = soap_new_eml__EnergyLengthPerTimeAreaTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyLengthPerTimeAreaTemperatureMeasure::__item = __item;
		_p->eml__EnergyLengthPerTimeAreaTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline eml__EnergyLengthPerTimeAreaTemperatureMeasure * soap_new_set_eml__EnergyLengthPerTimeAreaTemperatureMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyLengthPerTimeAreaTemperatureUom uom)
{
	eml__EnergyLengthPerTimeAreaTemperatureMeasure *_p = soap_new_eml__EnergyLengthPerTimeAreaTemperatureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyLengthPerTimeAreaTemperatureMeasure::__item = __item;
		_p->eml__EnergyLengthPerTimeAreaTemperatureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, eml__EnergyLengthPerTimeAreaTemperatureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:EnergyLengthPerTimeAreaTemperatureMeasure", "eml:EnergyLengthPerTimeAreaTemperatureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__EnergyLengthPerTimeAreaTemperatureMeasure * SOAP_FMAC4 soap_get_eml__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap*, eml__EnergyLengthPerTimeAreaTemperatureMeasure *, const char*, const char*);

inline int soap_read_eml__EnergyLengthPerTimeAreaTemperatureMeasure(struct soap *soap, eml__EnergyLengthPerTimeAreaTemperatureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__EnergyLengthPerTimeAreaTemperatureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__SolidAngleMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__SolidAngleMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__SolidAngleMeasure(struct soap*, const char*, int, const eml__SolidAngleMeasure *, const char*);
SOAP_FMAC3 eml__SolidAngleMeasure * SOAP_FMAC4 soap_in_eml__SolidAngleMeasure(struct soap*, const char*, eml__SolidAngleMeasure *, const char*);
SOAP_FMAC1 eml__SolidAngleMeasure * SOAP_FMAC2 soap_instantiate_eml__SolidAngleMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__SolidAngleMeasure * soap_new_eml__SolidAngleMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__SolidAngleMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__SolidAngleMeasure * soap_new_req_eml__SolidAngleMeasure(
	struct soap *soap,
	double __item,
	enum eml__SolidAngleUom uom)
{
	eml__SolidAngleMeasure *_p = soap_new_eml__SolidAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__SolidAngleMeasure::__item = __item;
		_p->eml__SolidAngleMeasure::uom = uom;
	}
	return _p;
}

inline eml__SolidAngleMeasure * soap_new_set_eml__SolidAngleMeasure(
	struct soap *soap,
	double __item,
	enum eml__SolidAngleUom uom)
{
	eml__SolidAngleMeasure *_p = soap_new_eml__SolidAngleMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__SolidAngleMeasure::__item = __item;
		_p->eml__SolidAngleMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__SolidAngleMeasure(struct soap *soap, eml__SolidAngleMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:SolidAngleMeasure", "eml:SolidAngleMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__SolidAngleMeasure * SOAP_FMAC4 soap_get_eml__SolidAngleMeasure(struct soap*, eml__SolidAngleMeasure *, const char*, const char*);

inline int soap_read_eml__SolidAngleMeasure(struct soap *soap, eml__SolidAngleMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__SolidAngleMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalConductanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalConductanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalConductanceMeasure(struct soap*, const char*, int, const eml__ThermalConductanceMeasure *, const char*);
SOAP_FMAC3 eml__ThermalConductanceMeasure * SOAP_FMAC4 soap_in_eml__ThermalConductanceMeasure(struct soap*, const char*, eml__ThermalConductanceMeasure *, const char*);
SOAP_FMAC1 eml__ThermalConductanceMeasure * SOAP_FMAC2 soap_instantiate_eml__ThermalConductanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ThermalConductanceMeasure * soap_new_eml__ThermalConductanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ThermalConductanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ThermalConductanceMeasure * soap_new_req_eml__ThermalConductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalConductanceUom uom)
{
	eml__ThermalConductanceMeasure *_p = soap_new_eml__ThermalConductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalConductanceMeasure::__item = __item;
		_p->eml__ThermalConductanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ThermalConductanceMeasure * soap_new_set_eml__ThermalConductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalConductanceUom uom)
{
	eml__ThermalConductanceMeasure *_p = soap_new_eml__ThermalConductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalConductanceMeasure::__item = __item;
		_p->eml__ThermalConductanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ThermalConductanceMeasure(struct soap *soap, eml__ThermalConductanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ThermalConductanceMeasure", "eml:ThermalConductanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ThermalConductanceMeasure * SOAP_FMAC4 soap_get_eml__ThermalConductanceMeasure(struct soap*, eml__ThermalConductanceMeasure *, const char*, const char*);

inline int soap_read_eml__ThermalConductanceMeasure(struct soap *soap, eml__ThermalConductanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ThermalConductanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TemperatureIntervalPerTimeMeasure(struct soap*, const char*, int, const eml__TemperatureIntervalPerTimeMeasure *, const char*);
SOAP_FMAC3 eml__TemperatureIntervalPerTimeMeasure * SOAP_FMAC4 soap_in_eml__TemperatureIntervalPerTimeMeasure(struct soap*, const char*, eml__TemperatureIntervalPerTimeMeasure *, const char*);
SOAP_FMAC1 eml__TemperatureIntervalPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__TemperatureIntervalPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__TemperatureIntervalPerTimeMeasure * soap_new_eml__TemperatureIntervalPerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__TemperatureIntervalPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__TemperatureIntervalPerTimeMeasure * soap_new_req_eml__TemperatureIntervalPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__TemperatureIntervalPerTimeUom uom)
{
	eml__TemperatureIntervalPerTimeMeasure *_p = soap_new_eml__TemperatureIntervalPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TemperatureIntervalPerTimeMeasure::__item = __item;
		_p->eml__TemperatureIntervalPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__TemperatureIntervalPerTimeMeasure * soap_new_set_eml__TemperatureIntervalPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__TemperatureIntervalPerTimeUom uom)
{
	eml__TemperatureIntervalPerTimeMeasure *_p = soap_new_eml__TemperatureIntervalPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TemperatureIntervalPerTimeMeasure::__item = __item;
		_p->eml__TemperatureIntervalPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__TemperatureIntervalPerTimeMeasure(struct soap *soap, eml__TemperatureIntervalPerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:TemperatureIntervalPerTimeMeasure", "eml:TemperatureIntervalPerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__TemperatureIntervalPerTimeMeasure * SOAP_FMAC4 soap_get_eml__TemperatureIntervalPerTimeMeasure(struct soap*, eml__TemperatureIntervalPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__TemperatureIntervalPerTimeMeasure(struct soap *soap, eml__TemperatureIntervalPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__TemperatureIntervalPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyPerLengthMeasure(struct soap*, const char*, int, const eml__EnergyPerLengthMeasure *, const char*);
SOAP_FMAC3 eml__EnergyPerLengthMeasure * SOAP_FMAC4 soap_in_eml__EnergyPerLengthMeasure(struct soap*, const char*, eml__EnergyPerLengthMeasure *, const char*);
SOAP_FMAC1 eml__EnergyPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__EnergyPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__EnergyPerLengthMeasure * soap_new_eml__EnergyPerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__EnergyPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__EnergyPerLengthMeasure * soap_new_req_eml__EnergyPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerLengthUom uom)
{
	eml__EnergyPerLengthMeasure *_p = soap_new_eml__EnergyPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerLengthMeasure::__item = __item;
		_p->eml__EnergyPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__EnergyPerLengthMeasure * soap_new_set_eml__EnergyPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyPerLengthUom uom)
{
	eml__EnergyPerLengthMeasure *_p = soap_new_eml__EnergyPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyPerLengthMeasure::__item = __item;
		_p->eml__EnergyPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__EnergyPerLengthMeasure(struct soap *soap, eml__EnergyPerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:EnergyPerLengthMeasure", "eml:EnergyPerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__EnergyPerLengthMeasure * SOAP_FMAC4 soap_get_eml__EnergyPerLengthMeasure(struct soap*, eml__EnergyPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__EnergyPerLengthMeasure(struct soap *soap, eml__EnergyPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__EnergyPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LinearThermalExpansionMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LinearThermalExpansionMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LinearThermalExpansionMeasure(struct soap*, const char*, int, const eml__LinearThermalExpansionMeasure *, const char*);
SOAP_FMAC3 eml__LinearThermalExpansionMeasure * SOAP_FMAC4 soap_in_eml__LinearThermalExpansionMeasure(struct soap*, const char*, eml__LinearThermalExpansionMeasure *, const char*);
SOAP_FMAC1 eml__LinearThermalExpansionMeasure * SOAP_FMAC2 soap_instantiate_eml__LinearThermalExpansionMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LinearThermalExpansionMeasure * soap_new_eml__LinearThermalExpansionMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LinearThermalExpansionMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LinearThermalExpansionMeasure * soap_new_req_eml__LinearThermalExpansionMeasure(
	struct soap *soap,
	double __item,
	enum eml__LinearThermalExpansionUom uom)
{
	eml__LinearThermalExpansionMeasure *_p = soap_new_eml__LinearThermalExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LinearThermalExpansionMeasure::__item = __item;
		_p->eml__LinearThermalExpansionMeasure::uom = uom;
	}
	return _p;
}

inline eml__LinearThermalExpansionMeasure * soap_new_set_eml__LinearThermalExpansionMeasure(
	struct soap *soap,
	double __item,
	enum eml__LinearThermalExpansionUom uom)
{
	eml__LinearThermalExpansionMeasure *_p = soap_new_eml__LinearThermalExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LinearThermalExpansionMeasure::__item = __item;
		_p->eml__LinearThermalExpansionMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LinearThermalExpansionMeasure(struct soap *soap, eml__LinearThermalExpansionMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LinearThermalExpansionMeasure", "eml:LinearThermalExpansionMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LinearThermalExpansionMeasure * SOAP_FMAC4 soap_get_eml__LinearThermalExpansionMeasure(struct soap*, eml__LinearThermalExpansionMeasure *, const char*, const char*);

inline int soap_read_eml__LinearThermalExpansionMeasure(struct soap *soap, eml__LinearThermalExpansionMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LinearThermalExpansionMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerForceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForcePerForceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForcePerForceMeasure(struct soap*, const char*, int, const eml__ForcePerForceMeasure *, const char*);
SOAP_FMAC3 eml__ForcePerForceMeasure * SOAP_FMAC4 soap_in_eml__ForcePerForceMeasure(struct soap*, const char*, eml__ForcePerForceMeasure *, const char*);
SOAP_FMAC1 eml__ForcePerForceMeasure * SOAP_FMAC2 soap_instantiate_eml__ForcePerForceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ForcePerForceMeasure * soap_new_eml__ForcePerForceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ForcePerForceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ForcePerForceMeasure * soap_new_req_eml__ForcePerForceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForcePerForceUom uom)
{
	eml__ForcePerForceMeasure *_p = soap_new_eml__ForcePerForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForcePerForceMeasure::__item = __item;
		_p->eml__ForcePerForceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ForcePerForceMeasure * soap_new_set_eml__ForcePerForceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForcePerForceUom uom)
{
	eml__ForcePerForceMeasure *_p = soap_new_eml__ForcePerForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForcePerForceMeasure::__item = __item;
		_p->eml__ForcePerForceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ForcePerForceMeasure(struct soap *soap, eml__ForcePerForceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ForcePerForceMeasure", "eml:ForcePerForceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ForcePerForceMeasure * SOAP_FMAC4 soap_get_eml__ForcePerForceMeasure(struct soap*, eml__ForcePerForceMeasure *, const char*, const char*);

inline int soap_read_eml__ForcePerForceMeasure(struct soap *soap, eml__ForcePerForceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ForcePerForceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalVolumeMeasure(struct soap*, const char*, int, const eml__ReciprocalVolumeMeasure *, const char*);
SOAP_FMAC3 eml__ReciprocalVolumeMeasure * SOAP_FMAC4 soap_in_eml__ReciprocalVolumeMeasure(struct soap*, const char*, eml__ReciprocalVolumeMeasure *, const char*);
SOAP_FMAC1 eml__ReciprocalVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__ReciprocalVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReciprocalVolumeMeasure * soap_new_eml__ReciprocalVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReciprocalVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReciprocalVolumeMeasure * soap_new_req_eml__ReciprocalVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalVolumeUom uom)
{
	eml__ReciprocalVolumeMeasure *_p = soap_new_eml__ReciprocalVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalVolumeMeasure::__item = __item;
		_p->eml__ReciprocalVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReciprocalVolumeMeasure * soap_new_set_eml__ReciprocalVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalVolumeUom uom)
{
	eml__ReciprocalVolumeMeasure *_p = soap_new_eml__ReciprocalVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalVolumeMeasure::__item = __item;
		_p->eml__ReciprocalVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReciprocalVolumeMeasure(struct soap *soap, eml__ReciprocalVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReciprocalVolumeMeasure", "eml:ReciprocalVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReciprocalVolumeMeasure * SOAP_FMAC4 soap_get_eml__ReciprocalVolumeMeasure(struct soap*, eml__ReciprocalVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__ReciprocalVolumeMeasure(struct soap *soap, eml__ReciprocalVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReciprocalVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalMassTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalMassTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalMassTimeMeasure(struct soap*, const char*, int, const eml__ReciprocalMassTimeMeasure *, const char*);
SOAP_FMAC3 eml__ReciprocalMassTimeMeasure * SOAP_FMAC4 soap_in_eml__ReciprocalMassTimeMeasure(struct soap*, const char*, eml__ReciprocalMassTimeMeasure *, const char*);
SOAP_FMAC1 eml__ReciprocalMassTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__ReciprocalMassTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReciprocalMassTimeMeasure * soap_new_eml__ReciprocalMassTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReciprocalMassTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReciprocalMassTimeMeasure * soap_new_req_eml__ReciprocalMassTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalMassTimeUom uom)
{
	eml__ReciprocalMassTimeMeasure *_p = soap_new_eml__ReciprocalMassTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalMassTimeMeasure::__item = __item;
		_p->eml__ReciprocalMassTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReciprocalMassTimeMeasure * soap_new_set_eml__ReciprocalMassTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalMassTimeUom uom)
{
	eml__ReciprocalMassTimeMeasure *_p = soap_new_eml__ReciprocalMassTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalMassTimeMeasure::__item = __item;
		_p->eml__ReciprocalMassTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReciprocalMassTimeMeasure(struct soap *soap, eml__ReciprocalMassTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReciprocalMassTimeMeasure", "eml:ReciprocalMassTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReciprocalMassTimeMeasure * SOAP_FMAC4 soap_get_eml__ReciprocalMassTimeMeasure(struct soap*, eml__ReciprocalMassTimeMeasure *, const char*, const char*);

inline int soap_read_eml__ReciprocalMassTimeMeasure(struct soap *soap, eml__ReciprocalMassTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReciprocalMassTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TimePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TimePerLengthMeasure(struct soap*, const char*, int, const eml__TimePerLengthMeasure *, const char*);
SOAP_FMAC3 eml__TimePerLengthMeasure * SOAP_FMAC4 soap_in_eml__TimePerLengthMeasure(struct soap*, const char*, eml__TimePerLengthMeasure *, const char*);
SOAP_FMAC1 eml__TimePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__TimePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__TimePerLengthMeasure * soap_new_eml__TimePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__TimePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__TimePerLengthMeasure * soap_new_req_eml__TimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimePerLengthUom uom)
{
	eml__TimePerLengthMeasure *_p = soap_new_eml__TimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimePerLengthMeasure::__item = __item;
		_p->eml__TimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__TimePerLengthMeasure * soap_new_set_eml__TimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__TimePerLengthUom uom)
{
	eml__TimePerLengthMeasure *_p = soap_new_eml__TimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TimePerLengthMeasure::__item = __item;
		_p->eml__TimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__TimePerLengthMeasure(struct soap *soap, eml__TimePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:TimePerLengthMeasure", "eml:TimePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__TimePerLengthMeasure * SOAP_FMAC4 soap_get_eml__TimePerLengthMeasure(struct soap*, eml__TimePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__TimePerLengthMeasure(struct soap *soap, eml__TimePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__TimePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstanceMeasure(struct soap*, const char*, int, const eml__AmountOfSubstanceMeasure *, const char*);
SOAP_FMAC3 eml__AmountOfSubstanceMeasure * SOAP_FMAC4 soap_in_eml__AmountOfSubstanceMeasure(struct soap*, const char*, eml__AmountOfSubstanceMeasure *, const char*);
SOAP_FMAC1 eml__AmountOfSubstanceMeasure * SOAP_FMAC2 soap_instantiate_eml__AmountOfSubstanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AmountOfSubstanceMeasure * soap_new_eml__AmountOfSubstanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AmountOfSubstanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AmountOfSubstanceMeasure * soap_new_req_eml__AmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstanceUom uom)
{
	eml__AmountOfSubstanceMeasure *_p = soap_new_eml__AmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstanceMeasure::__item = __item;
		_p->eml__AmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__AmountOfSubstanceMeasure * soap_new_set_eml__AmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstanceUom uom)
{
	eml__AmountOfSubstanceMeasure *_p = soap_new_eml__AmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstanceMeasure::__item = __item;
		_p->eml__AmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AmountOfSubstanceMeasure(struct soap *soap, eml__AmountOfSubstanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AmountOfSubstanceMeasure", "eml:AmountOfSubstanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AmountOfSubstanceMeasure * SOAP_FMAC4 soap_get_eml__AmountOfSubstanceMeasure(struct soap*, eml__AmountOfSubstanceMeasure *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstanceMeasure(struct soap *soap, eml__AmountOfSubstanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerAreaMeasure(struct soap*, const char*, int, const eml__AmountOfSubstancePerAreaMeasure *, const char*);
SOAP_FMAC3 eml__AmountOfSubstancePerAreaMeasure * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerAreaMeasure(struct soap*, const char*, eml__AmountOfSubstancePerAreaMeasure *, const char*);
SOAP_FMAC1 eml__AmountOfSubstancePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__AmountOfSubstancePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AmountOfSubstancePerAreaMeasure * soap_new_eml__AmountOfSubstancePerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AmountOfSubstancePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AmountOfSubstancePerAreaMeasure * soap_new_req_eml__AmountOfSubstancePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerAreaUom uom)
{
	eml__AmountOfSubstancePerAreaMeasure *_p = soap_new_eml__AmountOfSubstancePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerAreaMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__AmountOfSubstancePerAreaMeasure * soap_new_set_eml__AmountOfSubstancePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerAreaUom uom)
{
	eml__AmountOfSubstancePerAreaMeasure *_p = soap_new_eml__AmountOfSubstancePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerAreaMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AmountOfSubstancePerAreaMeasure(struct soap *soap, eml__AmountOfSubstancePerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AmountOfSubstancePerAreaMeasure", "eml:AmountOfSubstancePerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AmountOfSubstancePerAreaMeasure * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerAreaMeasure(struct soap*, eml__AmountOfSubstancePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerAreaMeasure(struct soap *soap, eml__AmountOfSubstancePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TemperatureIntervalPerLengthMeasure(struct soap*, const char*, int, const eml__TemperatureIntervalPerLengthMeasure *, const char*);
SOAP_FMAC3 eml__TemperatureIntervalPerLengthMeasure * SOAP_FMAC4 soap_in_eml__TemperatureIntervalPerLengthMeasure(struct soap*, const char*, eml__TemperatureIntervalPerLengthMeasure *, const char*);
SOAP_FMAC1 eml__TemperatureIntervalPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__TemperatureIntervalPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__TemperatureIntervalPerLengthMeasure * soap_new_eml__TemperatureIntervalPerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__TemperatureIntervalPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__TemperatureIntervalPerLengthMeasure * soap_new_req_eml__TemperatureIntervalPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__TemperatureIntervalPerLengthUom uom)
{
	eml__TemperatureIntervalPerLengthMeasure *_p = soap_new_eml__TemperatureIntervalPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TemperatureIntervalPerLengthMeasure::__item = __item;
		_p->eml__TemperatureIntervalPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__TemperatureIntervalPerLengthMeasure * soap_new_set_eml__TemperatureIntervalPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__TemperatureIntervalPerLengthUom uom)
{
	eml__TemperatureIntervalPerLengthMeasure *_p = soap_new_eml__TemperatureIntervalPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TemperatureIntervalPerLengthMeasure::__item = __item;
		_p->eml__TemperatureIntervalPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__TemperatureIntervalPerLengthMeasure(struct soap *soap, eml__TemperatureIntervalPerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:TemperatureIntervalPerLengthMeasure", "eml:TemperatureIntervalPerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__TemperatureIntervalPerLengthMeasure * SOAP_FMAC4 soap_get_eml__TemperatureIntervalPerLengthMeasure(struct soap*, eml__TemperatureIntervalPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__TemperatureIntervalPerLengthMeasure(struct soap *soap, eml__TemperatureIntervalPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__TemperatureIntervalPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerVolumeMeasure(struct soap*, const char*, int, const eml__MassPerVolumeMeasure *, const char*);
SOAP_FMAC3 eml__MassPerVolumeMeasure * SOAP_FMAC4 soap_in_eml__MassPerVolumeMeasure(struct soap*, const char*, eml__MassPerVolumeMeasure *, const char*);
SOAP_FMAC1 eml__MassPerVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__MassPerVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassPerVolumeMeasure * soap_new_eml__MassPerVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassPerVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassPerVolumeMeasure * soap_new_req_eml__MassPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerVolumeUom uom)
{
	eml__MassPerVolumeMeasure *_p = soap_new_eml__MassPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerVolumeMeasure::__item = __item;
		_p->eml__MassPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassPerVolumeMeasure * soap_new_set_eml__MassPerVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerVolumeUom uom)
{
	eml__MassPerVolumeMeasure *_p = soap_new_eml__MassPerVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerVolumeMeasure::__item = __item;
		_p->eml__MassPerVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassPerVolumeMeasure(struct soap *soap, eml__MassPerVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassPerVolumeMeasure", "eml:MassPerVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassPerVolumeMeasure * SOAP_FMAC4 soap_get_eml__MassPerVolumeMeasure(struct soap*, eml__MassPerVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__MassPerVolumeMeasure(struct soap *soap, eml__MassPerVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassPerVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthMeasure(struct soap*, const char*, int, const eml__LengthMeasure *, const char*);
SOAP_FMAC3 eml__LengthMeasure * SOAP_FMAC4 soap_in_eml__LengthMeasure(struct soap*, const char*, eml__LengthMeasure *, const char*);
SOAP_FMAC1 eml__LengthMeasure * SOAP_FMAC2 soap_instantiate_eml__LengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LengthMeasure * soap_new_eml__LengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LengthMeasure * soap_new_req_eml__LengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthUom uom)
{
	eml__LengthMeasure *_p = soap_new_eml__LengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthMeasure::__item = __item;
		_p->eml__LengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__LengthMeasure * soap_new_set_eml__LengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthUom uom)
{
	eml__LengthMeasure *_p = soap_new_eml__LengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthMeasure::__item = __item;
		_p->eml__LengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LengthMeasure(struct soap *soap, eml__LengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LengthMeasure", "eml:LengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LengthMeasure * SOAP_FMAC4 soap_get_eml__LengthMeasure(struct soap*, eml__LengthMeasure *, const char*, const char*);

inline int soap_read_eml__LengthMeasure(struct soap *soap, eml__LengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerAmountOfSubstanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AreaPerAmountOfSubstanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AreaPerAmountOfSubstanceMeasure(struct soap*, const char*, int, const eml__AreaPerAmountOfSubstanceMeasure *, const char*);
SOAP_FMAC3 eml__AreaPerAmountOfSubstanceMeasure * SOAP_FMAC4 soap_in_eml__AreaPerAmountOfSubstanceMeasure(struct soap*, const char*, eml__AreaPerAmountOfSubstanceMeasure *, const char*);
SOAP_FMAC1 eml__AreaPerAmountOfSubstanceMeasure * SOAP_FMAC2 soap_instantiate_eml__AreaPerAmountOfSubstanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AreaPerAmountOfSubstanceMeasure * soap_new_eml__AreaPerAmountOfSubstanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AreaPerAmountOfSubstanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AreaPerAmountOfSubstanceMeasure * soap_new_req_eml__AreaPerAmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerAmountOfSubstanceUom uom)
{
	eml__AreaPerAmountOfSubstanceMeasure *_p = soap_new_eml__AreaPerAmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerAmountOfSubstanceMeasure::__item = __item;
		_p->eml__AreaPerAmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__AreaPerAmountOfSubstanceMeasure * soap_new_set_eml__AreaPerAmountOfSubstanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__AreaPerAmountOfSubstanceUom uom)
{
	eml__AreaPerAmountOfSubstanceMeasure *_p = soap_new_eml__AreaPerAmountOfSubstanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AreaPerAmountOfSubstanceMeasure::__item = __item;
		_p->eml__AreaPerAmountOfSubstanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AreaPerAmountOfSubstanceMeasure(struct soap *soap, eml__AreaPerAmountOfSubstanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AreaPerAmountOfSubstanceMeasure", "eml:AreaPerAmountOfSubstanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AreaPerAmountOfSubstanceMeasure * SOAP_FMAC4 soap_get_eml__AreaPerAmountOfSubstanceMeasure(struct soap*, eml__AreaPerAmountOfSubstanceMeasure *, const char*, const char*);

inline int soap_read_eml__AreaPerAmountOfSubstanceMeasure(struct soap *soap, eml__AreaPerAmountOfSubstanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AreaPerAmountOfSubstanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalPressureMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ReciprocalPressureMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ReciprocalPressureMeasure(struct soap*, const char*, int, const eml__ReciprocalPressureMeasure *, const char*);
SOAP_FMAC3 eml__ReciprocalPressureMeasure * SOAP_FMAC4 soap_in_eml__ReciprocalPressureMeasure(struct soap*, const char*, eml__ReciprocalPressureMeasure *, const char*);
SOAP_FMAC1 eml__ReciprocalPressureMeasure * SOAP_FMAC2 soap_instantiate_eml__ReciprocalPressureMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ReciprocalPressureMeasure * soap_new_eml__ReciprocalPressureMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ReciprocalPressureMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ReciprocalPressureMeasure * soap_new_req_eml__ReciprocalPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalPressureUom uom)
{
	eml__ReciprocalPressureMeasure *_p = soap_new_eml__ReciprocalPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalPressureMeasure::__item = __item;
		_p->eml__ReciprocalPressureMeasure::uom = uom;
	}
	return _p;
}

inline eml__ReciprocalPressureMeasure * soap_new_set_eml__ReciprocalPressureMeasure(
	struct soap *soap,
	double __item,
	enum eml__ReciprocalPressureUom uom)
{
	eml__ReciprocalPressureMeasure *_p = soap_new_eml__ReciprocalPressureMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ReciprocalPressureMeasure::__item = __item;
		_p->eml__ReciprocalPressureMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ReciprocalPressureMeasure(struct soap *soap, eml__ReciprocalPressureMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ReciprocalPressureMeasure", "eml:ReciprocalPressureMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ReciprocalPressureMeasure * SOAP_FMAC4 soap_get_eml__ReciprocalPressureMeasure(struct soap*, eml__ReciprocalPressureMeasure *, const char*, const char*);

inline int soap_read_eml__ReciprocalPressureMeasure(struct soap *soap, eml__ReciprocalPressureMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ReciprocalPressureMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricConductanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ElectricConductanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ElectricConductanceMeasure(struct soap*, const char*, int, const eml__ElectricConductanceMeasure *, const char*);
SOAP_FMAC3 eml__ElectricConductanceMeasure * SOAP_FMAC4 soap_in_eml__ElectricConductanceMeasure(struct soap*, const char*, eml__ElectricConductanceMeasure *, const char*);
SOAP_FMAC1 eml__ElectricConductanceMeasure * SOAP_FMAC2 soap_instantiate_eml__ElectricConductanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ElectricConductanceMeasure * soap_new_eml__ElectricConductanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ElectricConductanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ElectricConductanceMeasure * soap_new_req_eml__ElectricConductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricConductanceUom uom)
{
	eml__ElectricConductanceMeasure *_p = soap_new_eml__ElectricConductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricConductanceMeasure::__item = __item;
		_p->eml__ElectricConductanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ElectricConductanceMeasure * soap_new_set_eml__ElectricConductanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ElectricConductanceUom uom)
{
	eml__ElectricConductanceMeasure *_p = soap_new_eml__ElectricConductanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ElectricConductanceMeasure::__item = __item;
		_p->eml__ElectricConductanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ElectricConductanceMeasure(struct soap *soap, eml__ElectricConductanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ElectricConductanceMeasure", "eml:ElectricConductanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ElectricConductanceMeasure * SOAP_FMAC4 soap_get_eml__ElectricConductanceMeasure(struct soap*, eml__ElectricConductanceMeasure *, const char*, const char*);

inline int soap_read_eml__ElectricConductanceMeasure(struct soap *soap, eml__ElectricConductanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ElectricConductanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarVolumeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MolarVolumeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MolarVolumeMeasure(struct soap*, const char*, int, const eml__MolarVolumeMeasure *, const char*);
SOAP_FMAC3 eml__MolarVolumeMeasure * SOAP_FMAC4 soap_in_eml__MolarVolumeMeasure(struct soap*, const char*, eml__MolarVolumeMeasure *, const char*);
SOAP_FMAC1 eml__MolarVolumeMeasure * SOAP_FMAC2 soap_instantiate_eml__MolarVolumeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MolarVolumeMeasure * soap_new_eml__MolarVolumeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MolarVolumeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MolarVolumeMeasure * soap_new_req_eml__MolarVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__MolarVolumeUom uom)
{
	eml__MolarVolumeMeasure *_p = soap_new_eml__MolarVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MolarVolumeMeasure::__item = __item;
		_p->eml__MolarVolumeMeasure::uom = uom;
	}
	return _p;
}

inline eml__MolarVolumeMeasure * soap_new_set_eml__MolarVolumeMeasure(
	struct soap *soap,
	double __item,
	enum eml__MolarVolumeUom uom)
{
	eml__MolarVolumeMeasure *_p = soap_new_eml__MolarVolumeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MolarVolumeMeasure::__item = __item;
		_p->eml__MolarVolumeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MolarVolumeMeasure(struct soap *soap, eml__MolarVolumeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MolarVolumeMeasure", "eml:MolarVolumeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MolarVolumeMeasure * SOAP_FMAC4 soap_get_eml__MolarVolumeMeasure(struct soap*, eml__MolarVolumeMeasure *, const char*, const char*);

inline int soap_read_eml__MolarVolumeMeasure(struct soap *soap, eml__MolarVolumeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MolarVolumeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerMassMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerMassMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerMassMeasure(struct soap*, const char*, int, const eml__VolumePerMassMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerMassMeasure * SOAP_FMAC4 soap_in_eml__VolumePerMassMeasure(struct soap*, const char*, eml__VolumePerMassMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerMassMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerMassMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerMassMeasure * soap_new_eml__VolumePerMassMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerMassMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerMassMeasure * soap_new_req_eml__VolumePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerMassUom uom)
{
	eml__VolumePerMassMeasure *_p = soap_new_eml__VolumePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerMassMeasure::__item = __item;
		_p->eml__VolumePerMassMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerMassMeasure * soap_new_set_eml__VolumePerMassMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerMassUom uom)
{
	eml__VolumePerMassMeasure *_p = soap_new_eml__VolumePerMassMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerMassMeasure::__item = __item;
		_p->eml__VolumePerMassMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerMassMeasure(struct soap *soap, eml__VolumePerMassMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerMassMeasure", "eml:VolumePerMassMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerMassMeasure * SOAP_FMAC4 soap_get_eml__VolumePerMassMeasure(struct soap*, eml__VolumePerMassMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerMassMeasure(struct soap *soap, eml__VolumePerMassMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerMassMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MassPerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MassPerTimeMeasure(struct soap*, const char*, int, const eml__MassPerTimeMeasure *, const char*);
SOAP_FMAC3 eml__MassPerTimeMeasure * SOAP_FMAC4 soap_in_eml__MassPerTimeMeasure(struct soap*, const char*, eml__MassPerTimeMeasure *, const char*);
SOAP_FMAC1 eml__MassPerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__MassPerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MassPerTimeMeasure * soap_new_eml__MassPerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MassPerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MassPerTimeMeasure * soap_new_req_eml__MassPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerTimeUom uom)
{
	eml__MassPerTimeMeasure *_p = soap_new_eml__MassPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerTimeMeasure::__item = __item;
		_p->eml__MassPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__MassPerTimeMeasure * soap_new_set_eml__MassPerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__MassPerTimeUom uom)
{
	eml__MassPerTimeMeasure *_p = soap_new_eml__MassPerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MassPerTimeMeasure::__item = __item;
		_p->eml__MassPerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MassPerTimeMeasure(struct soap *soap, eml__MassPerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MassPerTimeMeasure", "eml:MassPerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MassPerTimeMeasure * SOAP_FMAC4 soap_get_eml__MassPerTimeMeasure(struct soap*, eml__MassPerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__MassPerTimeMeasure(struct soap *soap, eml__MassPerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MassPerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatFlowRateMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatFlowRateMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__HeatFlowRateMeasure(struct soap*, const char*, int, const eml__HeatFlowRateMeasure *, const char*);
SOAP_FMAC3 eml__HeatFlowRateMeasure * SOAP_FMAC4 soap_in_eml__HeatFlowRateMeasure(struct soap*, const char*, eml__HeatFlowRateMeasure *, const char*);
SOAP_FMAC1 eml__HeatFlowRateMeasure * SOAP_FMAC2 soap_instantiate_eml__HeatFlowRateMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__HeatFlowRateMeasure * soap_new_eml__HeatFlowRateMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__HeatFlowRateMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__HeatFlowRateMeasure * soap_new_req_eml__HeatFlowRateMeasure(
	struct soap *soap,
	double __item,
	enum eml__HeatFlowRateUom uom)
{
	eml__HeatFlowRateMeasure *_p = soap_new_eml__HeatFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__HeatFlowRateMeasure::__item = __item;
		_p->eml__HeatFlowRateMeasure::uom = uom;
	}
	return _p;
}

inline eml__HeatFlowRateMeasure * soap_new_set_eml__HeatFlowRateMeasure(
	struct soap *soap,
	double __item,
	enum eml__HeatFlowRateUom uom)
{
	eml__HeatFlowRateMeasure *_p = soap_new_eml__HeatFlowRateMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__HeatFlowRateMeasure::__item = __item;
		_p->eml__HeatFlowRateMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__HeatFlowRateMeasure(struct soap *soap, eml__HeatFlowRateMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:HeatFlowRateMeasure", "eml:HeatFlowRateMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__HeatFlowRateMeasure * SOAP_FMAC4 soap_get_eml__HeatFlowRateMeasure(struct soap*, eml__HeatFlowRateMeasure *, const char*, const char*);

inline int soap_read_eml__HeatFlowRateMeasure(struct soap *soap, eml__HeatFlowRateMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__HeatFlowRateMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumetricThermalExpansionMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumetricThermalExpansionMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumetricThermalExpansionMeasure(struct soap*, const char*, int, const eml__VolumetricThermalExpansionMeasure *, const char*);
SOAP_FMAC3 eml__VolumetricThermalExpansionMeasure * SOAP_FMAC4 soap_in_eml__VolumetricThermalExpansionMeasure(struct soap*, const char*, eml__VolumetricThermalExpansionMeasure *, const char*);
SOAP_FMAC1 eml__VolumetricThermalExpansionMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumetricThermalExpansionMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumetricThermalExpansionMeasure * soap_new_eml__VolumetricThermalExpansionMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumetricThermalExpansionMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumetricThermalExpansionMeasure * soap_new_req_eml__VolumetricThermalExpansionMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumetricThermalExpansionUom uom)
{
	eml__VolumetricThermalExpansionMeasure *_p = soap_new_eml__VolumetricThermalExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumetricThermalExpansionMeasure::__item = __item;
		_p->eml__VolumetricThermalExpansionMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumetricThermalExpansionMeasure * soap_new_set_eml__VolumetricThermalExpansionMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumetricThermalExpansionUom uom)
{
	eml__VolumetricThermalExpansionMeasure *_p = soap_new_eml__VolumetricThermalExpansionMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumetricThermalExpansionMeasure::__item = __item;
		_p->eml__VolumetricThermalExpansionMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumetricThermalExpansionMeasure(struct soap *soap, eml__VolumetricThermalExpansionMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumetricThermalExpansionMeasure", "eml:VolumetricThermalExpansionMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumetricThermalExpansionMeasure * SOAP_FMAC4 soap_get_eml__VolumetricThermalExpansionMeasure(struct soap*, eml__VolumetricThermalExpansionMeasure *, const char*, const char*);

inline int soap_read_eml__VolumetricThermalExpansionMeasure(struct soap *soap, eml__VolumetricThermalExpansionMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumetricThermalExpansionMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticFluxMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticFluxMeasure(struct soap*, const char*, int, const eml__MagneticFluxMeasure *, const char*);
SOAP_FMAC3 eml__MagneticFluxMeasure * SOAP_FMAC4 soap_in_eml__MagneticFluxMeasure(struct soap*, const char*, eml__MagneticFluxMeasure *, const char*);
SOAP_FMAC1 eml__MagneticFluxMeasure * SOAP_FMAC2 soap_instantiate_eml__MagneticFluxMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MagneticFluxMeasure * soap_new_eml__MagneticFluxMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MagneticFluxMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MagneticFluxMeasure * soap_new_req_eml__MagneticFluxMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticFluxUom uom)
{
	eml__MagneticFluxMeasure *_p = soap_new_eml__MagneticFluxMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticFluxMeasure::__item = __item;
		_p->eml__MagneticFluxMeasure::uom = uom;
	}
	return _p;
}

inline eml__MagneticFluxMeasure * soap_new_set_eml__MagneticFluxMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticFluxUom uom)
{
	eml__MagneticFluxMeasure *_p = soap_new_eml__MagneticFluxMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticFluxMeasure::__item = __item;
		_p->eml__MagneticFluxMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MagneticFluxMeasure(struct soap *soap, eml__MagneticFluxMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MagneticFluxMeasure", "eml:MagneticFluxMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MagneticFluxMeasure * SOAP_FMAC4 soap_get_eml__MagneticFluxMeasure(struct soap*, eml__MagneticFluxMeasure *, const char*, const char*);

inline int soap_read_eml__MagneticFluxMeasure(struct soap *soap, eml__MagneticFluxMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MagneticFluxMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimeMeasure(struct soap*, const char*, int, const eml__VolumePerTimeMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerTimeMeasure * SOAP_FMAC4 soap_in_eml__VolumePerTimeMeasure(struct soap*, const char*, eml__VolumePerTimeMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerTimeMeasure * soap_new_eml__VolumePerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerTimeMeasure * soap_new_req_eml__VolumePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimeUom uom)
{
	eml__VolumePerTimeMeasure *_p = soap_new_eml__VolumePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimeMeasure::__item = __item;
		_p->eml__VolumePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerTimeMeasure * soap_new_set_eml__VolumePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimeUom uom)
{
	eml__VolumePerTimeMeasure *_p = soap_new_eml__VolumePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimeMeasure::__item = __item;
		_p->eml__VolumePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerTimeMeasure(struct soap *soap, eml__VolumePerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerTimeMeasure", "eml:VolumePerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerTimeMeasure * SOAP_FMAC4 soap_get_eml__VolumePerTimeMeasure(struct soap*, eml__VolumePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerTimeMeasure(struct soap *soap, eml__VolumePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LinearAccelerationMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LinearAccelerationMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LinearAccelerationMeasure(struct soap*, const char*, int, const eml__LinearAccelerationMeasure *, const char*);
SOAP_FMAC3 eml__LinearAccelerationMeasure * SOAP_FMAC4 soap_in_eml__LinearAccelerationMeasure(struct soap*, const char*, eml__LinearAccelerationMeasure *, const char*);
SOAP_FMAC1 eml__LinearAccelerationMeasure * SOAP_FMAC2 soap_instantiate_eml__LinearAccelerationMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LinearAccelerationMeasure * soap_new_eml__LinearAccelerationMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LinearAccelerationMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LinearAccelerationMeasure * soap_new_req_eml__LinearAccelerationMeasure(
	struct soap *soap,
	double __item,
	enum eml__LinearAccelerationUom uom)
{
	eml__LinearAccelerationMeasure *_p = soap_new_eml__LinearAccelerationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LinearAccelerationMeasure::__item = __item;
		_p->eml__LinearAccelerationMeasure::uom = uom;
	}
	return _p;
}

inline eml__LinearAccelerationMeasure * soap_new_set_eml__LinearAccelerationMeasure(
	struct soap *soap,
	double __item,
	enum eml__LinearAccelerationUom uom)
{
	eml__LinearAccelerationMeasure *_p = soap_new_eml__LinearAccelerationMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LinearAccelerationMeasure::__item = __item;
		_p->eml__LinearAccelerationMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LinearAccelerationMeasure(struct soap *soap, eml__LinearAccelerationMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LinearAccelerationMeasure", "eml:LinearAccelerationMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LinearAccelerationMeasure * SOAP_FMAC4 soap_get_eml__LinearAccelerationMeasure(struct soap*, eml__LinearAccelerationMeasure *, const char*, const char*);

inline int soap_read_eml__LinearAccelerationMeasure(struct soap *soap, eml__LinearAccelerationMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LinearAccelerationMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticVectorPotentialMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__MagneticVectorPotentialMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__MagneticVectorPotentialMeasure(struct soap*, const char*, int, const eml__MagneticVectorPotentialMeasure *, const char*);
SOAP_FMAC3 eml__MagneticVectorPotentialMeasure * SOAP_FMAC4 soap_in_eml__MagneticVectorPotentialMeasure(struct soap*, const char*, eml__MagneticVectorPotentialMeasure *, const char*);
SOAP_FMAC1 eml__MagneticVectorPotentialMeasure * SOAP_FMAC2 soap_instantiate_eml__MagneticVectorPotentialMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__MagneticVectorPotentialMeasure * soap_new_eml__MagneticVectorPotentialMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__MagneticVectorPotentialMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__MagneticVectorPotentialMeasure * soap_new_req_eml__MagneticVectorPotentialMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticVectorPotentialUom uom)
{
	eml__MagneticVectorPotentialMeasure *_p = soap_new_eml__MagneticVectorPotentialMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticVectorPotentialMeasure::__item = __item;
		_p->eml__MagneticVectorPotentialMeasure::uom = uom;
	}
	return _p;
}

inline eml__MagneticVectorPotentialMeasure * soap_new_set_eml__MagneticVectorPotentialMeasure(
	struct soap *soap,
	double __item,
	enum eml__MagneticVectorPotentialUom uom)
{
	eml__MagneticVectorPotentialMeasure *_p = soap_new_eml__MagneticVectorPotentialMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__MagneticVectorPotentialMeasure::__item = __item;
		_p->eml__MagneticVectorPotentialMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__MagneticVectorPotentialMeasure(struct soap *soap, eml__MagneticVectorPotentialMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:MagneticVectorPotentialMeasure", "eml:MagneticVectorPotentialMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__MagneticVectorPotentialMeasure * SOAP_FMAC4 soap_get_eml__MagneticVectorPotentialMeasure(struct soap*, eml__MagneticVectorPotentialMeasure *, const char*, const char*);

inline int soap_read_eml__MagneticVectorPotentialMeasure(struct soap *soap, eml__MagneticVectorPotentialMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__MagneticVectorPotentialMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__APINeutronMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__APINeutronMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__APINeutronMeasure(struct soap*, const char*, int, const eml__APINeutronMeasure *, const char*);
SOAP_FMAC3 eml__APINeutronMeasure * SOAP_FMAC4 soap_in_eml__APINeutronMeasure(struct soap*, const char*, eml__APINeutronMeasure *, const char*);
SOAP_FMAC1 eml__APINeutronMeasure * SOAP_FMAC2 soap_instantiate_eml__APINeutronMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__APINeutronMeasure * soap_new_eml__APINeutronMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__APINeutronMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__APINeutronMeasure * soap_new_req_eml__APINeutronMeasure(
	struct soap *soap,
	double __item,
	enum eml__APINeutronUom uom)
{
	eml__APINeutronMeasure *_p = soap_new_eml__APINeutronMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__APINeutronMeasure::__item = __item;
		_p->eml__APINeutronMeasure::uom = uom;
	}
	return _p;
}

inline eml__APINeutronMeasure * soap_new_set_eml__APINeutronMeasure(
	struct soap *soap,
	double __item,
	enum eml__APINeutronUom uom)
{
	eml__APINeutronMeasure *_p = soap_new_eml__APINeutronMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__APINeutronMeasure::__item = __item;
		_p->eml__APINeutronMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__APINeutronMeasure(struct soap *soap, eml__APINeutronMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:APINeutronMeasure", "eml:APINeutronMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__APINeutronMeasure * SOAP_FMAC4 soap_get_eml__APINeutronMeasure(struct soap*, eml__APINeutronMeasure *, const char*, const char*);

inline int soap_read_eml__APINeutronMeasure(struct soap *soap, eml__APINeutronMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__APINeutronMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatTransferCoefficientMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__HeatTransferCoefficientMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__HeatTransferCoefficientMeasure(struct soap*, const char*, int, const eml__HeatTransferCoefficientMeasure *, const char*);
SOAP_FMAC3 eml__HeatTransferCoefficientMeasure * SOAP_FMAC4 soap_in_eml__HeatTransferCoefficientMeasure(struct soap*, const char*, eml__HeatTransferCoefficientMeasure *, const char*);
SOAP_FMAC1 eml__HeatTransferCoefficientMeasure * SOAP_FMAC2 soap_instantiate_eml__HeatTransferCoefficientMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__HeatTransferCoefficientMeasure * soap_new_eml__HeatTransferCoefficientMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__HeatTransferCoefficientMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__HeatTransferCoefficientMeasure * soap_new_req_eml__HeatTransferCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml__HeatTransferCoefficientUom uom)
{
	eml__HeatTransferCoefficientMeasure *_p = soap_new_eml__HeatTransferCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__HeatTransferCoefficientMeasure::__item = __item;
		_p->eml__HeatTransferCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline eml__HeatTransferCoefficientMeasure * soap_new_set_eml__HeatTransferCoefficientMeasure(
	struct soap *soap,
	double __item,
	enum eml__HeatTransferCoefficientUom uom)
{
	eml__HeatTransferCoefficientMeasure *_p = soap_new_eml__HeatTransferCoefficientMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__HeatTransferCoefficientMeasure::__item = __item;
		_p->eml__HeatTransferCoefficientMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__HeatTransferCoefficientMeasure(struct soap *soap, eml__HeatTransferCoefficientMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:HeatTransferCoefficientMeasure", "eml:HeatTransferCoefficientMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__HeatTransferCoefficientMeasure * SOAP_FMAC4 soap_get_eml__HeatTransferCoefficientMeasure(struct soap*, eml__HeatTransferCoefficientMeasure *, const char*, const char*);

inline int soap_read_eml__HeatTransferCoefficientMeasure(struct soap *soap, eml__HeatTransferCoefficientMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__HeatTransferCoefficientMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DimensionlessMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DimensionlessMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DimensionlessMeasure(struct soap*, const char*, int, const eml__DimensionlessMeasure *, const char*);
SOAP_FMAC3 eml__DimensionlessMeasure * SOAP_FMAC4 soap_in_eml__DimensionlessMeasure(struct soap*, const char*, eml__DimensionlessMeasure *, const char*);
SOAP_FMAC1 eml__DimensionlessMeasure * SOAP_FMAC2 soap_instantiate_eml__DimensionlessMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__DimensionlessMeasure * soap_new_eml__DimensionlessMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__DimensionlessMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__DimensionlessMeasure * soap_new_req_eml__DimensionlessMeasure(
	struct soap *soap,
	double __item,
	enum eml__DimensionlessUom uom)
{
	eml__DimensionlessMeasure *_p = soap_new_eml__DimensionlessMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DimensionlessMeasure::__item = __item;
		_p->eml__DimensionlessMeasure::uom = uom;
	}
	return _p;
}

inline eml__DimensionlessMeasure * soap_new_set_eml__DimensionlessMeasure(
	struct soap *soap,
	double __item,
	enum eml__DimensionlessUom uom)
{
	eml__DimensionlessMeasure *_p = soap_new_eml__DimensionlessMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DimensionlessMeasure::__item = __item;
		_p->eml__DimensionlessMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__DimensionlessMeasure(struct soap *soap, eml__DimensionlessMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:DimensionlessMeasure", "eml:DimensionlessMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__DimensionlessMeasure * SOAP_FMAC4 soap_get_eml__DimensionlessMeasure(struct soap*, eml__DimensionlessMeasure *, const char*, const char*);

inline int soap_read_eml__DimensionlessMeasure(struct soap *soap, eml__DimensionlessMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__DimensionlessMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerPowerMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PowerPerPowerMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PowerPerPowerMeasure(struct soap*, const char*, int, const eml__PowerPerPowerMeasure *, const char*);
SOAP_FMAC3 eml__PowerPerPowerMeasure * SOAP_FMAC4 soap_in_eml__PowerPerPowerMeasure(struct soap*, const char*, eml__PowerPerPowerMeasure *, const char*);
SOAP_FMAC1 eml__PowerPerPowerMeasure * SOAP_FMAC2 soap_instantiate_eml__PowerPerPowerMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PowerPerPowerMeasure * soap_new_eml__PowerPerPowerMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PowerPerPowerMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PowerPerPowerMeasure * soap_new_req_eml__PowerPerPowerMeasure(
	struct soap *soap,
	double __item,
	enum eml__PowerPerPowerUom uom)
{
	eml__PowerPerPowerMeasure *_p = soap_new_eml__PowerPerPowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PowerPerPowerMeasure::__item = __item;
		_p->eml__PowerPerPowerMeasure::uom = uom;
	}
	return _p;
}

inline eml__PowerPerPowerMeasure * soap_new_set_eml__PowerPerPowerMeasure(
	struct soap *soap,
	double __item,
	enum eml__PowerPerPowerUom uom)
{
	eml__PowerPerPowerMeasure *_p = soap_new_eml__PowerPerPowerMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PowerPerPowerMeasure::__item = __item;
		_p->eml__PowerPerPowerMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PowerPerPowerMeasure(struct soap *soap, eml__PowerPerPowerMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PowerPerPowerMeasure", "eml:PowerPerPowerMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PowerPerPowerMeasure * SOAP_FMAC4 soap_get_eml__PowerPerPowerMeasure(struct soap*, eml__PowerPerPowerMeasure *, const char*, const char*);

inline int soap_read_eml__PowerPerPowerMeasure(struct soap *soap, eml__PowerPerPowerMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PowerPerPowerMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__RadiantIntensityMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__RadiantIntensityMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__RadiantIntensityMeasure(struct soap*, const char*, int, const eml__RadiantIntensityMeasure *, const char*);
SOAP_FMAC3 eml__RadiantIntensityMeasure * SOAP_FMAC4 soap_in_eml__RadiantIntensityMeasure(struct soap*, const char*, eml__RadiantIntensityMeasure *, const char*);
SOAP_FMAC1 eml__RadiantIntensityMeasure * SOAP_FMAC2 soap_instantiate_eml__RadiantIntensityMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__RadiantIntensityMeasure * soap_new_eml__RadiantIntensityMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__RadiantIntensityMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__RadiantIntensityMeasure * soap_new_req_eml__RadiantIntensityMeasure(
	struct soap *soap,
	double __item,
	enum eml__RadiantIntensityUom uom)
{
	eml__RadiantIntensityMeasure *_p = soap_new_eml__RadiantIntensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__RadiantIntensityMeasure::__item = __item;
		_p->eml__RadiantIntensityMeasure::uom = uom;
	}
	return _p;
}

inline eml__RadiantIntensityMeasure * soap_new_set_eml__RadiantIntensityMeasure(
	struct soap *soap,
	double __item,
	enum eml__RadiantIntensityUom uom)
{
	eml__RadiantIntensityMeasure *_p = soap_new_eml__RadiantIntensityMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__RadiantIntensityMeasure::__item = __item;
		_p->eml__RadiantIntensityMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__RadiantIntensityMeasure(struct soap *soap, eml__RadiantIntensityMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:RadiantIntensityMeasure", "eml:RadiantIntensityMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__RadiantIntensityMeasure * SOAP_FMAC4 soap_get_eml__RadiantIntensityMeasure(struct soap*, eml__RadiantIntensityMeasure *, const char*, const char*);

inline int soap_read_eml__RadiantIntensityMeasure(struct soap *soap, eml__RadiantIntensityMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__RadiantIntensityMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForceMeasure(struct soap*, const char*, int, const eml__ForceMeasure *, const char*);
SOAP_FMAC3 eml__ForceMeasure * SOAP_FMAC4 soap_in_eml__ForceMeasure(struct soap*, const char*, eml__ForceMeasure *, const char*);
SOAP_FMAC1 eml__ForceMeasure * SOAP_FMAC2 soap_instantiate_eml__ForceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ForceMeasure * soap_new_eml__ForceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ForceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ForceMeasure * soap_new_req_eml__ForceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForceUom uom)
{
	eml__ForceMeasure *_p = soap_new_eml__ForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForceMeasure::__item = __item;
		_p->eml__ForceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ForceMeasure * soap_new_set_eml__ForceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForceUom uom)
{
	eml__ForceMeasure *_p = soap_new_eml__ForceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForceMeasure::__item = __item;
		_p->eml__ForceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ForceMeasure(struct soap *soap, eml__ForceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ForceMeasure", "eml:ForceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ForceMeasure * SOAP_FMAC4 soap_get_eml__ForceMeasure(struct soap*, eml__ForceMeasure *, const char*, const char*);

inline int soap_read_eml__ForceMeasure(struct soap *soap, eml__ForceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ForceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__IlluminanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__IlluminanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__IlluminanceMeasure(struct soap*, const char*, int, const eml__IlluminanceMeasure *, const char*);
SOAP_FMAC3 eml__IlluminanceMeasure * SOAP_FMAC4 soap_in_eml__IlluminanceMeasure(struct soap*, const char*, eml__IlluminanceMeasure *, const char*);
SOAP_FMAC1 eml__IlluminanceMeasure * SOAP_FMAC2 soap_instantiate_eml__IlluminanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__IlluminanceMeasure * soap_new_eml__IlluminanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__IlluminanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__IlluminanceMeasure * soap_new_req_eml__IlluminanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__IlluminanceUom uom)
{
	eml__IlluminanceMeasure *_p = soap_new_eml__IlluminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__IlluminanceMeasure::__item = __item;
		_p->eml__IlluminanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__IlluminanceMeasure * soap_new_set_eml__IlluminanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__IlluminanceUom uom)
{
	eml__IlluminanceMeasure *_p = soap_new_eml__IlluminanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__IlluminanceMeasure::__item = __item;
		_p->eml__IlluminanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__IlluminanceMeasure(struct soap *soap, eml__IlluminanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:IlluminanceMeasure", "eml:IlluminanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__IlluminanceMeasure * SOAP_FMAC4 soap_get_eml__IlluminanceMeasure(struct soap*, eml__IlluminanceMeasure *, const char*, const char*);

inline int soap_read_eml__IlluminanceMeasure(struct soap *soap, eml__IlluminanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__IlluminanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__EnergyMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__EnergyMeasure(struct soap*, const char*, int, const eml__EnergyMeasure *, const char*);
SOAP_FMAC3 eml__EnergyMeasure * SOAP_FMAC4 soap_in_eml__EnergyMeasure(struct soap*, const char*, eml__EnergyMeasure *, const char*);
SOAP_FMAC1 eml__EnergyMeasure * SOAP_FMAC2 soap_instantiate_eml__EnergyMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__EnergyMeasure * soap_new_eml__EnergyMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__EnergyMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__EnergyMeasure * soap_new_req_eml__EnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyUom uom)
{
	eml__EnergyMeasure *_p = soap_new_eml__EnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyMeasure::__item = __item;
		_p->eml__EnergyMeasure::uom = uom;
	}
	return _p;
}

inline eml__EnergyMeasure * soap_new_set_eml__EnergyMeasure(
	struct soap *soap,
	double __item,
	enum eml__EnergyUom uom)
{
	eml__EnergyMeasure *_p = soap_new_eml__EnergyMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__EnergyMeasure::__item = __item;
		_p->eml__EnergyMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__EnergyMeasure(struct soap *soap, eml__EnergyMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:EnergyMeasure", "eml:EnergyMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__EnergyMeasure * SOAP_FMAC4 soap_get_eml__EnergyMeasure(struct soap*, eml__EnergyMeasure *, const char*, const char*);

inline int soap_read_eml__EnergyMeasure(struct soap *soap, eml__EnergyMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__EnergyMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForceAreaMeasure(struct soap*, const char*, int, const eml__ForceAreaMeasure *, const char*);
SOAP_FMAC3 eml__ForceAreaMeasure * SOAP_FMAC4 soap_in_eml__ForceAreaMeasure(struct soap*, const char*, eml__ForceAreaMeasure *, const char*);
SOAP_FMAC1 eml__ForceAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__ForceAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ForceAreaMeasure * soap_new_eml__ForceAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ForceAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ForceAreaMeasure * soap_new_req_eml__ForceAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForceAreaUom uom)
{
	eml__ForceAreaMeasure *_p = soap_new_eml__ForceAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForceAreaMeasure::__item = __item;
		_p->eml__ForceAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__ForceAreaMeasure * soap_new_set_eml__ForceAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForceAreaUom uom)
{
	eml__ForceAreaMeasure *_p = soap_new_eml__ForceAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForceAreaMeasure::__item = __item;
		_p->eml__ForceAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ForceAreaMeasure(struct soap *soap, eml__ForceAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ForceAreaMeasure", "eml:ForceAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ForceAreaMeasure * SOAP_FMAC4 soap_get_eml__ForceAreaMeasure(struct soap*, eml__ForceAreaMeasure *, const char*, const char*);

inline int soap_read_eml__ForceAreaMeasure(struct soap *soap, eml__ForceAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ForceAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalInsulanceMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ThermalInsulanceMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ThermalInsulanceMeasure(struct soap*, const char*, int, const eml__ThermalInsulanceMeasure *, const char*);
SOAP_FMAC3 eml__ThermalInsulanceMeasure * SOAP_FMAC4 soap_in_eml__ThermalInsulanceMeasure(struct soap*, const char*, eml__ThermalInsulanceMeasure *, const char*);
SOAP_FMAC1 eml__ThermalInsulanceMeasure * SOAP_FMAC2 soap_instantiate_eml__ThermalInsulanceMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ThermalInsulanceMeasure * soap_new_eml__ThermalInsulanceMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ThermalInsulanceMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ThermalInsulanceMeasure * soap_new_req_eml__ThermalInsulanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalInsulanceUom uom)
{
	eml__ThermalInsulanceMeasure *_p = soap_new_eml__ThermalInsulanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalInsulanceMeasure::__item = __item;
		_p->eml__ThermalInsulanceMeasure::uom = uom;
	}
	return _p;
}

inline eml__ThermalInsulanceMeasure * soap_new_set_eml__ThermalInsulanceMeasure(
	struct soap *soap,
	double __item,
	enum eml__ThermalInsulanceUom uom)
{
	eml__ThermalInsulanceMeasure *_p = soap_new_eml__ThermalInsulanceMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ThermalInsulanceMeasure::__item = __item;
		_p->eml__ThermalInsulanceMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ThermalInsulanceMeasure(struct soap *soap, eml__ThermalInsulanceMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ThermalInsulanceMeasure", "eml:ThermalInsulanceMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ThermalInsulanceMeasure * SOAP_FMAC4 soap_get_eml__ThermalInsulanceMeasure(struct soap*, eml__ThermalInsulanceMeasure *, const char*, const char*);

inline int soap_read_eml__ThermalInsulanceMeasure(struct soap *soap, eml__ThermalInsulanceMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ThermalInsulanceMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PermeabilityLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PermeabilityLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PermeabilityLengthMeasure(struct soap*, const char*, int, const eml__PermeabilityLengthMeasure *, const char*);
SOAP_FMAC3 eml__PermeabilityLengthMeasure * SOAP_FMAC4 soap_in_eml__PermeabilityLengthMeasure(struct soap*, const char*, eml__PermeabilityLengthMeasure *, const char*);
SOAP_FMAC1 eml__PermeabilityLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__PermeabilityLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PermeabilityLengthMeasure * soap_new_eml__PermeabilityLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PermeabilityLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PermeabilityLengthMeasure * soap_new_req_eml__PermeabilityLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__PermeabilityLengthUom uom)
{
	eml__PermeabilityLengthMeasure *_p = soap_new_eml__PermeabilityLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PermeabilityLengthMeasure::__item = __item;
		_p->eml__PermeabilityLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__PermeabilityLengthMeasure * soap_new_set_eml__PermeabilityLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__PermeabilityLengthUom uom)
{
	eml__PermeabilityLengthMeasure *_p = soap_new_eml__PermeabilityLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PermeabilityLengthMeasure::__item = __item;
		_p->eml__PermeabilityLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PermeabilityLengthMeasure(struct soap *soap, eml__PermeabilityLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PermeabilityLengthMeasure", "eml:PermeabilityLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PermeabilityLengthMeasure * SOAP_FMAC4 soap_get_eml__PermeabilityLengthMeasure(struct soap*, eml__PermeabilityLengthMeasure *, const char*, const char*);

inline int soap_read_eml__PermeabilityLengthMeasure(struct soap *soap, eml__PermeabilityLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PermeabilityLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerTimeMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerTimeMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerTimeMeasure(struct soap*, const char*, int, const eml__VolumePerTimePerTimeMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerTimePerTimeMeasure * SOAP_FMAC4 soap_in_eml__VolumePerTimePerTimeMeasure(struct soap*, const char*, eml__VolumePerTimePerTimeMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerTimePerTimeMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerTimePerTimeMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerTimePerTimeMeasure * soap_new_eml__VolumePerTimePerTimeMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerTimePerTimeMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerTimePerTimeMeasure * soap_new_req_eml__VolumePerTimePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerTimeUom uom)
{
	eml__VolumePerTimePerTimeMeasure *_p = soap_new_eml__VolumePerTimePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerTimeMeasure::__item = __item;
		_p->eml__VolumePerTimePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerTimePerTimeMeasure * soap_new_set_eml__VolumePerTimePerTimeMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerTimeUom uom)
{
	eml__VolumePerTimePerTimeMeasure *_p = soap_new_eml__VolumePerTimePerTimeMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerTimeMeasure::__item = __item;
		_p->eml__VolumePerTimePerTimeMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerTimePerTimeMeasure(struct soap *soap, eml__VolumePerTimePerTimeMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerTimePerTimeMeasure", "eml:VolumePerTimePerTimeMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerTimePerTimeMeasure * SOAP_FMAC4 soap_get_eml__VolumePerTimePerTimeMeasure(struct soap*, eml__VolumePerTimePerTimeMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerTimeMeasure(struct soap *soap, eml__VolumePerTimePerTimeMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerTimeMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerLengthMeasure(struct soap*, const char*, int, const eml__VolumePerTimePerLengthMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerTimePerLengthMeasure * SOAP_FMAC4 soap_in_eml__VolumePerTimePerLengthMeasure(struct soap*, const char*, eml__VolumePerTimePerLengthMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerTimePerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerTimePerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerTimePerLengthMeasure * soap_new_eml__VolumePerTimePerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerTimePerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerTimePerLengthMeasure * soap_new_req_eml__VolumePerTimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerLengthUom uom)
{
	eml__VolumePerTimePerLengthMeasure *_p = soap_new_eml__VolumePerTimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerLengthMeasure::__item = __item;
		_p->eml__VolumePerTimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerTimePerLengthMeasure * soap_new_set_eml__VolumePerTimePerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerLengthUom uom)
{
	eml__VolumePerTimePerLengthMeasure *_p = soap_new_eml__VolumePerTimePerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerLengthMeasure::__item = __item;
		_p->eml__VolumePerTimePerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerTimePerLengthMeasure(struct soap *soap, eml__VolumePerTimePerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerTimePerLengthMeasure", "eml:VolumePerTimePerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerTimePerLengthMeasure * SOAP_FMAC4 soap_get_eml__VolumePerTimePerLengthMeasure(struct soap*, eml__VolumePerTimePerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerLengthMeasure(struct soap *soap, eml__VolumePerTimePerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__TemperatureIntervalMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__TemperatureIntervalMeasure(struct soap*, const char*, int, const eml__TemperatureIntervalMeasure *, const char*);
SOAP_FMAC3 eml__TemperatureIntervalMeasure * SOAP_FMAC4 soap_in_eml__TemperatureIntervalMeasure(struct soap*, const char*, eml__TemperatureIntervalMeasure *, const char*);
SOAP_FMAC1 eml__TemperatureIntervalMeasure * SOAP_FMAC2 soap_instantiate_eml__TemperatureIntervalMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__TemperatureIntervalMeasure * soap_new_eml__TemperatureIntervalMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__TemperatureIntervalMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__TemperatureIntervalMeasure * soap_new_req_eml__TemperatureIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml__TemperatureIntervalUom uom)
{
	eml__TemperatureIntervalMeasure *_p = soap_new_eml__TemperatureIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TemperatureIntervalMeasure::__item = __item;
		_p->eml__TemperatureIntervalMeasure::uom = uom;
	}
	return _p;
}

inline eml__TemperatureIntervalMeasure * soap_new_set_eml__TemperatureIntervalMeasure(
	struct soap *soap,
	double __item,
	enum eml__TemperatureIntervalUom uom)
{
	eml__TemperatureIntervalMeasure *_p = soap_new_eml__TemperatureIntervalMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__TemperatureIntervalMeasure::__item = __item;
		_p->eml__TemperatureIntervalMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__TemperatureIntervalMeasure(struct soap *soap, eml__TemperatureIntervalMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:TemperatureIntervalMeasure", "eml:TemperatureIntervalMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__TemperatureIntervalMeasure * SOAP_FMAC4 soap_get_eml__TemperatureIntervalMeasure(struct soap*, eml__TemperatureIntervalMeasure *, const char*, const char*);

inline int soap_read_eml__TemperatureIntervalMeasure(struct soap *soap, eml__TemperatureIntervalMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__TemperatureIntervalMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__LengthPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__LengthPerLengthMeasure(struct soap*, const char*, int, const eml__LengthPerLengthMeasure *, const char*);
SOAP_FMAC3 eml__LengthPerLengthMeasure * SOAP_FMAC4 soap_in_eml__LengthPerLengthMeasure(struct soap*, const char*, eml__LengthPerLengthMeasure *, const char*);
SOAP_FMAC1 eml__LengthPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__LengthPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__LengthPerLengthMeasure * soap_new_eml__LengthPerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__LengthPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__LengthPerLengthMeasure * soap_new_req_eml__LengthPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerLengthUom uom)
{
	eml__LengthPerLengthMeasure *_p = soap_new_eml__LengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerLengthMeasure::__item = __item;
		_p->eml__LengthPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__LengthPerLengthMeasure * soap_new_set_eml__LengthPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__LengthPerLengthUom uom)
{
	eml__LengthPerLengthMeasure *_p = soap_new_eml__LengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__LengthPerLengthMeasure::__item = __item;
		_p->eml__LengthPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__LengthPerLengthMeasure(struct soap *soap, eml__LengthPerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:LengthPerLengthMeasure", "eml:LengthPerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__LengthPerLengthMeasure * SOAP_FMAC4 soap_get_eml__LengthPerLengthMeasure(struct soap*, eml__LengthPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__LengthPerLengthMeasure(struct soap *soap, eml__LengthPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__LengthPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VolumePerTimePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VolumePerTimePerAreaMeasure(struct soap*, const char*, int, const eml__VolumePerTimePerAreaMeasure *, const char*);
SOAP_FMAC3 eml__VolumePerTimePerAreaMeasure * SOAP_FMAC4 soap_in_eml__VolumePerTimePerAreaMeasure(struct soap*, const char*, eml__VolumePerTimePerAreaMeasure *, const char*);
SOAP_FMAC1 eml__VolumePerTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__VolumePerTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__VolumePerTimePerAreaMeasure * soap_new_eml__VolumePerTimePerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VolumePerTimePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__VolumePerTimePerAreaMeasure * soap_new_req_eml__VolumePerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerAreaUom uom)
{
	eml__VolumePerTimePerAreaMeasure *_p = soap_new_eml__VolumePerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerAreaMeasure::__item = __item;
		_p->eml__VolumePerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__VolumePerTimePerAreaMeasure * soap_new_set_eml__VolumePerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__VolumePerTimePerAreaUom uom)
{
	eml__VolumePerTimePerAreaMeasure *_p = soap_new_eml__VolumePerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VolumePerTimePerAreaMeasure::__item = __item;
		_p->eml__VolumePerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__VolumePerTimePerAreaMeasure(struct soap *soap, eml__VolumePerTimePerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VolumePerTimePerAreaMeasure", "eml:VolumePerTimePerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VolumePerTimePerAreaMeasure * SOAP_FMAC4 soap_get_eml__VolumePerTimePerAreaMeasure(struct soap*, eml__VolumePerTimePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__VolumePerTimePerAreaMeasure(struct soap *soap, eml__VolumePerTimePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VolumePerTimePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerTimePerAreaMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AmountOfSubstancePerTimePerAreaMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, const char*, int, const eml__AmountOfSubstancePerTimePerAreaMeasure *, const char*);
SOAP_FMAC3 eml__AmountOfSubstancePerTimePerAreaMeasure * SOAP_FMAC4 soap_in_eml__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, const char*, eml__AmountOfSubstancePerTimePerAreaMeasure *, const char*);
SOAP_FMAC1 eml__AmountOfSubstancePerTimePerAreaMeasure * SOAP_FMAC2 soap_instantiate_eml__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__AmountOfSubstancePerTimePerAreaMeasure * soap_new_eml__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AmountOfSubstancePerTimePerAreaMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__AmountOfSubstancePerTimePerAreaMeasure * soap_new_req_eml__AmountOfSubstancePerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerTimePerAreaUom uom)
{
	eml__AmountOfSubstancePerTimePerAreaMeasure *_p = soap_new_eml__AmountOfSubstancePerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerTimePerAreaMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline eml__AmountOfSubstancePerTimePerAreaMeasure * soap_new_set_eml__AmountOfSubstancePerTimePerAreaMeasure(
	struct soap *soap,
	double __item,
	enum eml__AmountOfSubstancePerTimePerAreaUom uom)
{
	eml__AmountOfSubstancePerTimePerAreaMeasure *_p = soap_new_eml__AmountOfSubstancePerTimePerAreaMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AmountOfSubstancePerTimePerAreaMeasure::__item = __item;
		_p->eml__AmountOfSubstancePerTimePerAreaMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, eml__AmountOfSubstancePerTimePerAreaMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AmountOfSubstancePerTimePerAreaMeasure", "eml:AmountOfSubstancePerTimePerAreaMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AmountOfSubstancePerTimePerAreaMeasure * SOAP_FMAC4 soap_get_eml__AmountOfSubstancePerTimePerAreaMeasure(struct soap*, eml__AmountOfSubstancePerTimePerAreaMeasure *, const char*, const char*);

inline int soap_read_eml__AmountOfSubstancePerTimePerAreaMeasure(struct soap *soap, eml__AmountOfSubstancePerTimePerAreaMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AmountOfSubstancePerTimePerAreaMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceLengthPerLengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ForceLengthPerLengthMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ForceLengthPerLengthMeasure(struct soap*, const char*, int, const eml__ForceLengthPerLengthMeasure *, const char*);
SOAP_FMAC3 eml__ForceLengthPerLengthMeasure * SOAP_FMAC4 soap_in_eml__ForceLengthPerLengthMeasure(struct soap*, const char*, eml__ForceLengthPerLengthMeasure *, const char*);
SOAP_FMAC1 eml__ForceLengthPerLengthMeasure * SOAP_FMAC2 soap_instantiate_eml__ForceLengthPerLengthMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__ForceLengthPerLengthMeasure * soap_new_eml__ForceLengthPerLengthMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ForceLengthPerLengthMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__ForceLengthPerLengthMeasure * soap_new_req_eml__ForceLengthPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForceLengthPerLengthUom uom)
{
	eml__ForceLengthPerLengthMeasure *_p = soap_new_eml__ForceLengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForceLengthPerLengthMeasure::__item = __item;
		_p->eml__ForceLengthPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline eml__ForceLengthPerLengthMeasure * soap_new_set_eml__ForceLengthPerLengthMeasure(
	struct soap *soap,
	double __item,
	enum eml__ForceLengthPerLengthUom uom)
{
	eml__ForceLengthPerLengthMeasure *_p = soap_new_eml__ForceLengthPerLengthMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ForceLengthPerLengthMeasure::__item = __item;
		_p->eml__ForceLengthPerLengthMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__ForceLengthPerLengthMeasure(struct soap *soap, eml__ForceLengthPerLengthMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ForceLengthPerLengthMeasure", "eml:ForceLengthPerLengthMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ForceLengthPerLengthMeasure * SOAP_FMAC4 soap_get_eml__ForceLengthPerLengthMeasure(struct soap*, eml__ForceLengthPerLengthMeasure *, const char*, const char*);

inline int soap_read_eml__ForceLengthPerLengthMeasure(struct soap *soap, eml__ForceLengthPerLengthMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ForceLengthPerLengthMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureSquaredMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__PressureSquaredMeasure_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__PressureSquaredMeasure(struct soap*, const char*, int, const eml__PressureSquaredMeasure *, const char*);
SOAP_FMAC3 eml__PressureSquaredMeasure * SOAP_FMAC4 soap_in_eml__PressureSquaredMeasure(struct soap*, const char*, eml__PressureSquaredMeasure *, const char*);
SOAP_FMAC1 eml__PressureSquaredMeasure * SOAP_FMAC2 soap_instantiate_eml__PressureSquaredMeasure(struct soap*, int, const char*, const char*, size_t*);

inline eml__PressureSquaredMeasure * soap_new_eml__PressureSquaredMeasure(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__PressureSquaredMeasure(soap, n, NULL, NULL, NULL);
}

inline eml__PressureSquaredMeasure * soap_new_req_eml__PressureSquaredMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressureSquaredUom uom)
{
	eml__PressureSquaredMeasure *_p = soap_new_eml__PressureSquaredMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressureSquaredMeasure::__item = __item;
		_p->eml__PressureSquaredMeasure::uom = uom;
	}
	return _p;
}

inline eml__PressureSquaredMeasure * soap_new_set_eml__PressureSquaredMeasure(
	struct soap *soap,
	double __item,
	enum eml__PressureSquaredUom uom)
{
	eml__PressureSquaredMeasure *_p = soap_new_eml__PressureSquaredMeasure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__PressureSquaredMeasure::__item = __item;
		_p->eml__PressureSquaredMeasure::uom = uom;
	}
	return _p;
}

inline int soap_write_eml__PressureSquaredMeasure(struct soap *soap, eml__PressureSquaredMeasure const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:PressureSquaredMeasure", "eml:PressureSquaredMeasure") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__PressureSquaredMeasure * SOAP_FMAC4 soap_get_eml__PressureSquaredMeasure(struct soap*, eml__PressureSquaredMeasure *, const char*, const char*);

inline int soap_read_eml__PressureSquaredMeasure(struct soap *soap, eml__PressureSquaredMeasure *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__PressureSquaredMeasure(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__DataObjectReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__DataObjectReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__DataObjectReference(struct soap*, const char*, int, const eml__DataObjectReference *, const char*);
SOAP_FMAC3 eml__DataObjectReference * SOAP_FMAC4 soap_in_eml__DataObjectReference(struct soap*, const char*, eml__DataObjectReference *, const char*);
SOAP_FMAC1 eml__DataObjectReference * SOAP_FMAC2 soap_instantiate_eml__DataObjectReference(struct soap*, int, const char*, const char*, size_t*);

inline eml__DataObjectReference * soap_new_eml__DataObjectReference(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__DataObjectReference(soap, n, NULL, NULL, NULL);
}

inline eml__DataObjectReference * soap_new_req_eml__DataObjectReference(
	struct soap *soap,
	const std::string& ContentType,
	const std::string& Title,
	const std::string& UUID)
{
	eml__DataObjectReference *_p = soap_new_eml__DataObjectReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DataObjectReference::ContentType = ContentType;
		_p->eml__DataObjectReference::Title = Title;
		_p->eml__DataObjectReference::UUID = UUID;
	}
	return _p;
}

inline eml__DataObjectReference * soap_new_set_eml__DataObjectReference(
	struct soap *soap,
	const std::string& ContentType,
	const std::string& Title,
	const std::string& UUID,
	std::string *UuidAuthority,
	std::string *VersionString)
{
	eml__DataObjectReference *_p = soap_new_eml__DataObjectReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DataObjectReference::ContentType = ContentType;
		_p->eml__DataObjectReference::Title = Title;
		_p->eml__DataObjectReference::UUID = UUID;
		_p->eml__DataObjectReference::UuidAuthority = UuidAuthority;
		_p->eml__DataObjectReference::VersionString = VersionString;
	}
	return _p;
}

inline int soap_write_eml__DataObjectReference(struct soap *soap, eml__DataObjectReference const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:DataObjectReference", "eml:DataObjectReference") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__DataObjectReference * SOAP_FMAC4 soap_get_eml__DataObjectReference(struct soap*, eml__DataObjectReference *, const char*, const char*);

inline int soap_read_eml__DataObjectReference(struct soap *soap, eml__DataObjectReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__DataObjectReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__obj_USCOREEpcExternalPartReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__obj_USCOREEpcExternalPartReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__obj_USCOREEpcExternalPartReference(struct soap*, const char*, int, const eml__obj_USCOREEpcExternalPartReference *, const char*);
SOAP_FMAC3 eml__obj_USCOREEpcExternalPartReference * SOAP_FMAC4 soap_in_eml__obj_USCOREEpcExternalPartReference(struct soap*, const char*, eml__obj_USCOREEpcExternalPartReference *, const char*);
SOAP_FMAC1 eml__obj_USCOREEpcExternalPartReference * SOAP_FMAC2 soap_instantiate_eml__obj_USCOREEpcExternalPartReference(struct soap*, int, const char*, const char*, size_t*);

inline eml__obj_USCOREEpcExternalPartReference * soap_new_eml__obj_USCOREEpcExternalPartReference(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__obj_USCOREEpcExternalPartReference(soap, n, NULL, NULL, NULL);
}

inline eml__obj_USCOREEpcExternalPartReference * soap_new_req_eml__obj_USCOREEpcExternalPartReference(
	struct soap *soap,
	const std::string& MimeType,
	eml__Citation *Citation1,
	const std::string& schemaVersion1,
	const std::string& uuid1)
{
	eml__obj_USCOREEpcExternalPartReference *_p = soap_new_eml__obj_USCOREEpcExternalPartReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__obj_USCOREEpcExternalPartReference::MimeType = MimeType;
		_p->eml__AbstractCitedDataObject::Citation = Citation1;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion1;
		_p->eml__AbstractCitedDataObject::uuid = uuid1;
	}
	return _p;
}

inline eml__obj_USCOREEpcExternalPartReference * soap_new_set_eml__obj_USCOREEpcExternalPartReference(
	struct soap *soap,
	const std::string& MimeType,
	eml__Citation *Citation1,
	const std::vector<eml__ObjectAlias *> & Aliases1,
	eml__CustomData *CustomData1,
	const std::string& schemaVersion1,
	const std::string& uuid1)
{
	eml__obj_USCOREEpcExternalPartReference *_p = soap_new_eml__obj_USCOREEpcExternalPartReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__obj_USCOREEpcExternalPartReference::MimeType = MimeType;
		_p->eml__AbstractCitedDataObject::Citation = Citation1;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases1;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData1;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion1;
		_p->eml__AbstractCitedDataObject::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_eml__obj_USCOREEpcExternalPartReference(struct soap *soap, eml__obj_USCOREEpcExternalPartReference const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:obj_EpcExternalPartReference", "eml:obj_EpcExternalPartReference") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__obj_USCOREEpcExternalPartReference * SOAP_FMAC4 soap_get_eml__obj_USCOREEpcExternalPartReference(struct soap*, eml__obj_USCOREEpcExternalPartReference *, const char*, const char*);

inline int soap_read_eml__obj_USCOREEpcExternalPartReference(struct soap *soap, eml__obj_USCOREEpcExternalPartReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__obj_USCOREEpcExternalPartReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__Hdf5Dataset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__Hdf5Dataset_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__Hdf5Dataset(struct soap*, const char*, int, const eml__Hdf5Dataset *, const char*);
SOAP_FMAC3 eml__Hdf5Dataset * SOAP_FMAC4 soap_in_eml__Hdf5Dataset(struct soap*, const char*, eml__Hdf5Dataset *, const char*);
SOAP_FMAC1 eml__Hdf5Dataset * SOAP_FMAC2 soap_instantiate_eml__Hdf5Dataset(struct soap*, int, const char*, const char*, size_t*);

inline eml__Hdf5Dataset * soap_new_eml__Hdf5Dataset(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__Hdf5Dataset(soap, n, NULL, NULL, NULL);
}

inline eml__Hdf5Dataset * soap_new_req_eml__Hdf5Dataset(
	struct soap *soap,
	const std::string& PathInHdfFile,
	eml__DataObjectReference *HdfProxy)
{
	eml__Hdf5Dataset *_p = soap_new_eml__Hdf5Dataset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__Hdf5Dataset::PathInHdfFile = PathInHdfFile;
		_p->eml__Hdf5Dataset::HdfProxy = HdfProxy;
	}
	return _p;
}

inline eml__Hdf5Dataset * soap_new_set_eml__Hdf5Dataset(
	struct soap *soap,
	const std::string& PathInHdfFile,
	eml__DataObjectReference *HdfProxy)
{
	eml__Hdf5Dataset *_p = soap_new_eml__Hdf5Dataset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__Hdf5Dataset::PathInHdfFile = PathInHdfFile;
		_p->eml__Hdf5Dataset::HdfProxy = HdfProxy;
	}
	return _p;
}

inline int soap_write_eml__Hdf5Dataset(struct soap *soap, eml__Hdf5Dataset const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:Hdf5Dataset", "eml:Hdf5Dataset") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__Hdf5Dataset * SOAP_FMAC4 soap_get_eml__Hdf5Dataset(struct soap*, eml__Hdf5Dataset *, const char*, const char*);

inline int soap_read_eml__Hdf5Dataset(struct soap *soap, eml__Hdf5Dataset *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__Hdf5Dataset(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ProjectedUnknownCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ProjectedUnknownCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ProjectedUnknownCrs(struct soap*, const char*, int, const eml__ProjectedUnknownCrs *, const char*);
SOAP_FMAC3 eml__ProjectedUnknownCrs * SOAP_FMAC4 soap_in_eml__ProjectedUnknownCrs(struct soap*, const char*, eml__ProjectedUnknownCrs *, const char*);
SOAP_FMAC1 eml__ProjectedUnknownCrs * SOAP_FMAC2 soap_instantiate_eml__ProjectedUnknownCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml__ProjectedUnknownCrs * soap_new_eml__ProjectedUnknownCrs(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ProjectedUnknownCrs(soap, n, NULL, NULL, NULL);
}

inline eml__ProjectedUnknownCrs * soap_new_req_eml__ProjectedUnknownCrs(
	struct soap *soap,
	const std::string& Unknown)
{
	eml__ProjectedUnknownCrs *_p = soap_new_eml__ProjectedUnknownCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ProjectedUnknownCrs::Unknown = Unknown;
	}
	return _p;
}

inline eml__ProjectedUnknownCrs * soap_new_set_eml__ProjectedUnknownCrs(
	struct soap *soap,
	const std::string& Unknown)
{
	eml__ProjectedUnknownCrs *_p = soap_new_eml__ProjectedUnknownCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ProjectedUnknownCrs::Unknown = Unknown;
	}
	return _p;
}

inline int soap_write_eml__ProjectedUnknownCrs(struct soap *soap, eml__ProjectedUnknownCrs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ProjectedUnknownCrs", "eml:ProjectedUnknownCrs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ProjectedUnknownCrs * SOAP_FMAC4 soap_get_eml__ProjectedUnknownCrs(struct soap*, eml__ProjectedUnknownCrs *, const char*, const char*);

inline int soap_read_eml__ProjectedUnknownCrs(struct soap *soap, eml__ProjectedUnknownCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ProjectedUnknownCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__GmlProjectedCrsDefinition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__GmlProjectedCrsDefinition_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__GmlProjectedCrsDefinition(struct soap*, const char*, int, const eml__GmlProjectedCrsDefinition *, const char*);
SOAP_FMAC3 eml__GmlProjectedCrsDefinition * SOAP_FMAC4 soap_in_eml__GmlProjectedCrsDefinition(struct soap*, const char*, eml__GmlProjectedCrsDefinition *, const char*);
SOAP_FMAC1 eml__GmlProjectedCrsDefinition * SOAP_FMAC2 soap_instantiate_eml__GmlProjectedCrsDefinition(struct soap*, int, const char*, const char*, size_t*);

inline eml__GmlProjectedCrsDefinition * soap_new_eml__GmlProjectedCrsDefinition(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__GmlProjectedCrsDefinition(soap, n, NULL, NULL, NULL);
}

inline eml__GmlProjectedCrsDefinition * soap_new_req_eml__GmlProjectedCrsDefinition(
	struct soap *soap,
	gml__ProjectedCRSType *GmlProjectedCrsDefinition)
{
	eml__GmlProjectedCrsDefinition *_p = soap_new_eml__GmlProjectedCrsDefinition(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__GmlProjectedCrsDefinition::GmlProjectedCrsDefinition = GmlProjectedCrsDefinition;
	}
	return _p;
}

inline eml__GmlProjectedCrsDefinition * soap_new_set_eml__GmlProjectedCrsDefinition(
	struct soap *soap,
	gml__ProjectedCRSType *GmlProjectedCrsDefinition)
{
	eml__GmlProjectedCrsDefinition *_p = soap_new_eml__GmlProjectedCrsDefinition(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__GmlProjectedCrsDefinition::GmlProjectedCrsDefinition = GmlProjectedCrsDefinition;
	}
	return _p;
}

inline int soap_write_eml__GmlProjectedCrsDefinition(struct soap *soap, eml__GmlProjectedCrsDefinition const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:GmlProjectedCrsDefinition", "eml:GmlProjectedCrsDefinition") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__GmlProjectedCrsDefinition * SOAP_FMAC4 soap_get_eml__GmlProjectedCrsDefinition(struct soap*, eml__GmlProjectedCrsDefinition *, const char*, const char*);

inline int soap_read_eml__GmlProjectedCrsDefinition(struct soap *soap, eml__GmlProjectedCrsDefinition *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__GmlProjectedCrsDefinition(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ProjectedCrsEpsgCode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ProjectedCrsEpsgCode_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ProjectedCrsEpsgCode(struct soap*, const char*, int, const eml__ProjectedCrsEpsgCode *, const char*);
SOAP_FMAC3 eml__ProjectedCrsEpsgCode * SOAP_FMAC4 soap_in_eml__ProjectedCrsEpsgCode(struct soap*, const char*, eml__ProjectedCrsEpsgCode *, const char*);
SOAP_FMAC1 eml__ProjectedCrsEpsgCode * SOAP_FMAC2 soap_instantiate_eml__ProjectedCrsEpsgCode(struct soap*, int, const char*, const char*, size_t*);

inline eml__ProjectedCrsEpsgCode * soap_new_eml__ProjectedCrsEpsgCode(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ProjectedCrsEpsgCode(soap, n, NULL, NULL, NULL);
}

inline eml__ProjectedCrsEpsgCode * soap_new_req_eml__ProjectedCrsEpsgCode(
	struct soap *soap,
	ULONG64 EpsgCode)
{
	eml__ProjectedCrsEpsgCode *_p = soap_new_eml__ProjectedCrsEpsgCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ProjectedCrsEpsgCode::EpsgCode = EpsgCode;
	}
	return _p;
}

inline eml__ProjectedCrsEpsgCode * soap_new_set_eml__ProjectedCrsEpsgCode(
	struct soap *soap,
	ULONG64 EpsgCode)
{
	eml__ProjectedCrsEpsgCode *_p = soap_new_eml__ProjectedCrsEpsgCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ProjectedCrsEpsgCode::EpsgCode = EpsgCode;
	}
	return _p;
}

inline int soap_write_eml__ProjectedCrsEpsgCode(struct soap *soap, eml__ProjectedCrsEpsgCode const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ProjectedCrsEpsgCode", "eml:ProjectedCrsEpsgCode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ProjectedCrsEpsgCode * SOAP_FMAC4 soap_get_eml__ProjectedCrsEpsgCode(struct soap*, eml__ProjectedCrsEpsgCode *, const char*, const char*);

inline int soap_read_eml__ProjectedCrsEpsgCode(struct soap *soap, eml__ProjectedCrsEpsgCode *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ProjectedCrsEpsgCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AbstractProjectedCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AbstractProjectedCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AbstractProjectedCrs(struct soap*, const char*, int, const eml__AbstractProjectedCrs *, const char*);
SOAP_FMAC3 eml__AbstractProjectedCrs * SOAP_FMAC4 soap_in_eml__AbstractProjectedCrs(struct soap*, const char*, eml__AbstractProjectedCrs *, const char*);
SOAP_FMAC1 eml__AbstractProjectedCrs * SOAP_FMAC2 soap_instantiate_eml__AbstractProjectedCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml__AbstractProjectedCrs * soap_new_eml__AbstractProjectedCrs(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AbstractProjectedCrs(soap, n, NULL, NULL, NULL);
}

inline eml__AbstractProjectedCrs * soap_new_req_eml__AbstractProjectedCrs(
	struct soap *soap)
{
	eml__AbstractProjectedCrs *_p = soap_new_eml__AbstractProjectedCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eml__AbstractProjectedCrs * soap_new_set_eml__AbstractProjectedCrs(
	struct soap *soap)
{
	eml__AbstractProjectedCrs *_p = soap_new_eml__AbstractProjectedCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_eml__AbstractProjectedCrs(struct soap *soap, eml__AbstractProjectedCrs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AbstractProjectedCrs", "eml:AbstractProjectedCrs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AbstractProjectedCrs * SOAP_FMAC4 soap_get_eml__AbstractProjectedCrs(struct soap*, eml__AbstractProjectedCrs *, const char*, const char*);

inline int soap_read_eml__AbstractProjectedCrs(struct soap *soap, eml__AbstractProjectedCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AbstractProjectedCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AbstractVerticalCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AbstractVerticalCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AbstractVerticalCrs(struct soap*, const char*, int, const eml__AbstractVerticalCrs *, const char*);
SOAP_FMAC3 eml__AbstractVerticalCrs * SOAP_FMAC4 soap_in_eml__AbstractVerticalCrs(struct soap*, const char*, eml__AbstractVerticalCrs *, const char*);
SOAP_FMAC1 eml__AbstractVerticalCrs * SOAP_FMAC2 soap_instantiate_eml__AbstractVerticalCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml__AbstractVerticalCrs * soap_new_eml__AbstractVerticalCrs(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AbstractVerticalCrs(soap, n, NULL, NULL, NULL);
}

inline eml__AbstractVerticalCrs * soap_new_req_eml__AbstractVerticalCrs(
	struct soap *soap)
{
	eml__AbstractVerticalCrs *_p = soap_new_eml__AbstractVerticalCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eml__AbstractVerticalCrs * soap_new_set_eml__AbstractVerticalCrs(
	struct soap *soap)
{
	eml__AbstractVerticalCrs *_p = soap_new_eml__AbstractVerticalCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_eml__AbstractVerticalCrs(struct soap *soap, eml__AbstractVerticalCrs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AbstractVerticalCrs", "eml:AbstractVerticalCrs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AbstractVerticalCrs * SOAP_FMAC4 soap_get_eml__AbstractVerticalCrs(struct soap*, eml__AbstractVerticalCrs *, const char*, const char*);

inline int soap_read_eml__AbstractVerticalCrs(struct soap *soap, eml__AbstractVerticalCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AbstractVerticalCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VerticalCrs(struct soap*, const char*, int, const eml__VerticalCrs *, const char*);
SOAP_FMAC3 eml__VerticalCrs * SOAP_FMAC4 soap_in_eml__VerticalCrs(struct soap*, const char*, eml__VerticalCrs *, const char*);
SOAP_FMAC1 eml__VerticalCrs * SOAP_FMAC2 soap_instantiate_eml__VerticalCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml__VerticalCrs * soap_new_eml__VerticalCrs(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VerticalCrs(soap, n, NULL, NULL, NULL);
}

inline eml__VerticalCrs * soap_new_req_eml__VerticalCrs(
	struct soap *soap,
	enum eml__VerticalDirection Direction,
	eml__AbstractVerticalCrs *AbstractVerticalCrs,
	enum eml__LengthUom uom,
	eml__Citation *Citation1,
	const std::string& schemaVersion1,
	const std::string& uuid1)
{
	eml__VerticalCrs *_p = soap_new_eml__VerticalCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VerticalCrs::Direction = Direction;
		_p->eml__VerticalCrs::AbstractVerticalCrs = AbstractVerticalCrs;
		_p->eml__VerticalCrs::uom = uom;
		_p->eml__AbstractCitedDataObject::Citation = Citation1;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion1;
		_p->eml__AbstractCitedDataObject::uuid = uuid1;
	}
	return _p;
}

inline eml__VerticalCrs * soap_new_set_eml__VerticalCrs(
	struct soap *soap,
	enum eml__VerticalDirection Direction,
	eml__AbstractVerticalCrs *AbstractVerticalCrs,
	enum eml__LengthUom uom,
	eml__Citation *Citation1,
	const std::vector<eml__ObjectAlias *> & Aliases1,
	eml__CustomData *CustomData1,
	const std::string& schemaVersion1,
	const std::string& uuid1)
{
	eml__VerticalCrs *_p = soap_new_eml__VerticalCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VerticalCrs::Direction = Direction;
		_p->eml__VerticalCrs::AbstractVerticalCrs = AbstractVerticalCrs;
		_p->eml__VerticalCrs::uom = uom;
		_p->eml__AbstractCitedDataObject::Citation = Citation1;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases1;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData1;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion1;
		_p->eml__AbstractCitedDataObject::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_eml__VerticalCrs(struct soap *soap, eml__VerticalCrs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VerticalCrs", "eml:VerticalCrs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VerticalCrs * SOAP_FMAC4 soap_get_eml__VerticalCrs(struct soap*, eml__VerticalCrs *, const char*, const char*);

inline int soap_read_eml__VerticalCrs(struct soap *soap, eml__VerticalCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VerticalCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ProjectedCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ProjectedCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ProjectedCrs(struct soap*, const char*, int, const eml__ProjectedCrs *, const char*);
SOAP_FMAC3 eml__ProjectedCrs * SOAP_FMAC4 soap_in_eml__ProjectedCrs(struct soap*, const char*, eml__ProjectedCrs *, const char*);
SOAP_FMAC1 eml__ProjectedCrs * SOAP_FMAC2 soap_instantiate_eml__ProjectedCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml__ProjectedCrs * soap_new_eml__ProjectedCrs(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ProjectedCrs(soap, n, NULL, NULL, NULL);
}

inline eml__ProjectedCrs * soap_new_req_eml__ProjectedCrs(
	struct soap *soap,
	enum eml__AxisOrder2d AxisOrder,
	eml__AbstractProjectedCrs *AbstractProjectedCrs,
	eml__Citation *Citation1,
	const std::string& schemaVersion1,
	const std::string& uuid1)
{
	eml__ProjectedCrs *_p = soap_new_eml__ProjectedCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ProjectedCrs::AxisOrder = AxisOrder;
		_p->eml__ProjectedCrs::AbstractProjectedCrs = AbstractProjectedCrs;
		_p->eml__AbstractCitedDataObject::Citation = Citation1;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion1;
		_p->eml__AbstractCitedDataObject::uuid = uuid1;
	}
	return _p;
}

inline eml__ProjectedCrs * soap_new_set_eml__ProjectedCrs(
	struct soap *soap,
	enum eml__AxisOrder2d AxisOrder,
	eml__AbstractProjectedCrs *AbstractProjectedCrs,
	enum eml__LengthUom *uom,
	eml__Citation *Citation1,
	const std::vector<eml__ObjectAlias *> & Aliases1,
	eml__CustomData *CustomData1,
	const std::string& schemaVersion1,
	const std::string& uuid1)
{
	eml__ProjectedCrs *_p = soap_new_eml__ProjectedCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ProjectedCrs::AxisOrder = AxisOrder;
		_p->eml__ProjectedCrs::AbstractProjectedCrs = AbstractProjectedCrs;
		_p->eml__ProjectedCrs::uom = uom;
		_p->eml__AbstractCitedDataObject::Citation = Citation1;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases1;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData1;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion1;
		_p->eml__AbstractCitedDataObject::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_eml__ProjectedCrs(struct soap *soap, eml__ProjectedCrs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ProjectedCrs", "eml:ProjectedCrs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ProjectedCrs * SOAP_FMAC4 soap_get_eml__ProjectedCrs(struct soap*, eml__ProjectedCrs *, const char*, const char*);

inline int soap_read_eml__ProjectedCrs(struct soap *soap, eml__ProjectedCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ProjectedCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalUnknownCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalUnknownCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VerticalUnknownCrs(struct soap*, const char*, int, const eml__VerticalUnknownCrs *, const char*);
SOAP_FMAC3 eml__VerticalUnknownCrs * SOAP_FMAC4 soap_in_eml__VerticalUnknownCrs(struct soap*, const char*, eml__VerticalUnknownCrs *, const char*);
SOAP_FMAC1 eml__VerticalUnknownCrs * SOAP_FMAC2 soap_instantiate_eml__VerticalUnknownCrs(struct soap*, int, const char*, const char*, size_t*);

inline eml__VerticalUnknownCrs * soap_new_eml__VerticalUnknownCrs(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VerticalUnknownCrs(soap, n, NULL, NULL, NULL);
}

inline eml__VerticalUnknownCrs * soap_new_req_eml__VerticalUnknownCrs(
	struct soap *soap,
	const std::string& Unknown)
{
	eml__VerticalUnknownCrs *_p = soap_new_eml__VerticalUnknownCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VerticalUnknownCrs::Unknown = Unknown;
	}
	return _p;
}

inline eml__VerticalUnknownCrs * soap_new_set_eml__VerticalUnknownCrs(
	struct soap *soap,
	const std::string& Unknown)
{
	eml__VerticalUnknownCrs *_p = soap_new_eml__VerticalUnknownCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VerticalUnknownCrs::Unknown = Unknown;
	}
	return _p;
}

inline int soap_write_eml__VerticalUnknownCrs(struct soap *soap, eml__VerticalUnknownCrs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VerticalUnknownCrs", "eml:VerticalUnknownCrs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VerticalUnknownCrs * SOAP_FMAC4 soap_get_eml__VerticalUnknownCrs(struct soap*, eml__VerticalUnknownCrs *, const char*, const char*);

inline int soap_read_eml__VerticalUnknownCrs(struct soap *soap, eml__VerticalUnknownCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VerticalUnknownCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__GmlVerticalCrsDefinition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__GmlVerticalCrsDefinition_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__GmlVerticalCrsDefinition(struct soap*, const char*, int, const eml__GmlVerticalCrsDefinition *, const char*);
SOAP_FMAC3 eml__GmlVerticalCrsDefinition * SOAP_FMAC4 soap_in_eml__GmlVerticalCrsDefinition(struct soap*, const char*, eml__GmlVerticalCrsDefinition *, const char*);
SOAP_FMAC1 eml__GmlVerticalCrsDefinition * SOAP_FMAC2 soap_instantiate_eml__GmlVerticalCrsDefinition(struct soap*, int, const char*, const char*, size_t*);

inline eml__GmlVerticalCrsDefinition * soap_new_eml__GmlVerticalCrsDefinition(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__GmlVerticalCrsDefinition(soap, n, NULL, NULL, NULL);
}

inline eml__GmlVerticalCrsDefinition * soap_new_req_eml__GmlVerticalCrsDefinition(
	struct soap *soap,
	gml__VerticalCRSType *GmlVerticalCrsDefinition)
{
	eml__GmlVerticalCrsDefinition *_p = soap_new_eml__GmlVerticalCrsDefinition(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__GmlVerticalCrsDefinition::GmlVerticalCrsDefinition = GmlVerticalCrsDefinition;
	}
	return _p;
}

inline eml__GmlVerticalCrsDefinition * soap_new_set_eml__GmlVerticalCrsDefinition(
	struct soap *soap,
	gml__VerticalCRSType *GmlVerticalCrsDefinition)
{
	eml__GmlVerticalCrsDefinition *_p = soap_new_eml__GmlVerticalCrsDefinition(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__GmlVerticalCrsDefinition::GmlVerticalCrsDefinition = GmlVerticalCrsDefinition;
	}
	return _p;
}

inline int soap_write_eml__GmlVerticalCrsDefinition(struct soap *soap, eml__GmlVerticalCrsDefinition const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:GmlVerticalCrsDefinition", "eml:GmlVerticalCrsDefinition") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__GmlVerticalCrsDefinition * SOAP_FMAC4 soap_get_eml__GmlVerticalCrsDefinition(struct soap*, eml__GmlVerticalCrsDefinition *, const char*, const char*);

inline int soap_read_eml__GmlVerticalCrsDefinition(struct soap *soap, eml__GmlVerticalCrsDefinition *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__GmlVerticalCrsDefinition(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalCrsEpsgCode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__VerticalCrsEpsgCode_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__VerticalCrsEpsgCode(struct soap*, const char*, int, const eml__VerticalCrsEpsgCode *, const char*);
SOAP_FMAC3 eml__VerticalCrsEpsgCode * SOAP_FMAC4 soap_in_eml__VerticalCrsEpsgCode(struct soap*, const char*, eml__VerticalCrsEpsgCode *, const char*);
SOAP_FMAC1 eml__VerticalCrsEpsgCode * SOAP_FMAC2 soap_instantiate_eml__VerticalCrsEpsgCode(struct soap*, int, const char*, const char*, size_t*);

inline eml__VerticalCrsEpsgCode * soap_new_eml__VerticalCrsEpsgCode(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__VerticalCrsEpsgCode(soap, n, NULL, NULL, NULL);
}

inline eml__VerticalCrsEpsgCode * soap_new_req_eml__VerticalCrsEpsgCode(
	struct soap *soap,
	ULONG64 EpsgCode)
{
	eml__VerticalCrsEpsgCode *_p = soap_new_eml__VerticalCrsEpsgCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VerticalCrsEpsgCode::EpsgCode = EpsgCode;
	}
	return _p;
}

inline eml__VerticalCrsEpsgCode * soap_new_set_eml__VerticalCrsEpsgCode(
	struct soap *soap,
	ULONG64 EpsgCode)
{
	eml__VerticalCrsEpsgCode *_p = soap_new_eml__VerticalCrsEpsgCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__VerticalCrsEpsgCode::EpsgCode = EpsgCode;
	}
	return _p;
}

inline int soap_write_eml__VerticalCrsEpsgCode(struct soap *soap, eml__VerticalCrsEpsgCode const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:VerticalCrsEpsgCode", "eml:VerticalCrsEpsgCode") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__VerticalCrsEpsgCode * SOAP_FMAC4 soap_get_eml__VerticalCrsEpsgCode(struct soap*, eml__VerticalCrsEpsgCode *, const char*, const char*);

inline int soap_read_eml__VerticalCrsEpsgCode(struct soap *soap, eml__VerticalCrsEpsgCode *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__VerticalCrsEpsgCode(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__ObjectAlias_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__ObjectAlias_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__ObjectAlias(struct soap*, const char*, int, const eml__ObjectAlias *, const char*);
SOAP_FMAC3 eml__ObjectAlias * SOAP_FMAC4 soap_in_eml__ObjectAlias(struct soap*, const char*, eml__ObjectAlias *, const char*);
SOAP_FMAC1 eml__ObjectAlias * SOAP_FMAC2 soap_instantiate_eml__ObjectAlias(struct soap*, int, const char*, const char*, size_t*);

inline eml__ObjectAlias * soap_new_eml__ObjectAlias(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__ObjectAlias(soap, n, NULL, NULL, NULL);
}

inline eml__ObjectAlias * soap_new_req_eml__ObjectAlias(
	struct soap *soap,
	const std::string& Identifier)
{
	eml__ObjectAlias *_p = soap_new_eml__ObjectAlias(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ObjectAlias::Identifier = Identifier;
	}
	return _p;
}

inline eml__ObjectAlias * soap_new_set_eml__ObjectAlias(
	struct soap *soap,
	const std::string& Identifier,
	std::string *Description,
	std::string *authority)
{
	eml__ObjectAlias *_p = soap_new_eml__ObjectAlias(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__ObjectAlias::Identifier = Identifier;
		_p->eml__ObjectAlias::Description = Description;
		_p->eml__ObjectAlias::authority = authority;
	}
	return _p;
}

inline int soap_write_eml__ObjectAlias(struct soap *soap, eml__ObjectAlias const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:ObjectAlias", "eml:ObjectAlias") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__ObjectAlias * SOAP_FMAC4 soap_get_eml__ObjectAlias(struct soap*, eml__ObjectAlias *, const char*, const char*);

inline int soap_read_eml__ObjectAlias(struct soap *soap, eml__ObjectAlias *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__ObjectAlias(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AbstractObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AbstractObject_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AbstractObject(struct soap*, const char*, int, const eml__AbstractObject *, const char*);
SOAP_FMAC3 eml__AbstractObject * SOAP_FMAC4 soap_in_eml__AbstractObject(struct soap*, const char*, eml__AbstractObject *, const char*);
SOAP_FMAC1 eml__AbstractObject * SOAP_FMAC2 soap_instantiate_eml__AbstractObject(struct soap*, int, const char*, const char*, size_t*);

inline eml__AbstractObject * soap_new_eml__AbstractObject(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AbstractObject(soap, n, NULL, NULL, NULL);
}

inline eml__AbstractObject * soap_new_req_eml__AbstractObject(
	struct soap *soap,
	const std::string& schemaVersion,
	const std::string& uuid)
{
	eml__AbstractObject *_p = soap_new_eml__AbstractObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractObject::schemaVersion = schemaVersion;
		_p->eml__AbstractObject::uuid = uuid;
	}
	return _p;
}

inline eml__AbstractObject * soap_new_set_eml__AbstractObject(
	struct soap *soap,
	eml__Citation *Citation,
	const std::vector<eml__ObjectAlias *> & Aliases,
	eml__CustomData *CustomData,
	const std::string& schemaVersion,
	const std::string& uuid,
	std::string *objectVersion)
{
	eml__AbstractObject *_p = soap_new_eml__AbstractObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractObject::Citation = Citation;
		_p->eml__AbstractObject::Aliases = Aliases;
		_p->eml__AbstractObject::CustomData = CustomData;
		_p->eml__AbstractObject::schemaVersion = schemaVersion;
		_p->eml__AbstractObject::uuid = uuid;
		_p->eml__AbstractObject::objectVersion = objectVersion;
	}
	return _p;
}

inline int soap_write_eml__AbstractObject(struct soap *soap, eml__AbstractObject const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AbstractObject", "eml:AbstractObject") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AbstractObject * SOAP_FMAC4 soap_get_eml__AbstractObject(struct soap*, eml__AbstractObject *, const char*, const char*);

inline int soap_read_eml__AbstractObject(struct soap *soap, eml__AbstractObject *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AbstractObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__Citation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__Citation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__Citation(struct soap*, const char*, int, const eml__Citation *, const char*);
SOAP_FMAC3 eml__Citation * SOAP_FMAC4 soap_in_eml__Citation(struct soap*, const char*, eml__Citation *, const char*);
SOAP_FMAC1 eml__Citation * SOAP_FMAC2 soap_instantiate_eml__Citation(struct soap*, int, const char*, const char*, size_t*);

inline eml__Citation * soap_new_eml__Citation(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__Citation(soap, n, NULL, NULL, NULL);
}

inline eml__Citation * soap_new_req_eml__Citation(
	struct soap *soap,
	const std::string& Title,
	const std::string& Originator,
	time_t Creation,
	const std::string& Format)
{
	eml__Citation *_p = soap_new_eml__Citation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__Citation::Title = Title;
		_p->eml__Citation::Originator = Originator;
		_p->eml__Citation::Creation = Creation;
		_p->eml__Citation::Format = Format;
	}
	return _p;
}

inline eml__Citation * soap_new_set_eml__Citation(
	struct soap *soap,
	const std::string& Title,
	const std::string& Originator,
	time_t Creation,
	const std::string& Format,
	std::string *Editor,
	time_t *LastUpdate,
	std::string *VersionString,
	std::string *Description,
	std::string *DescriptiveKeywords)
{
	eml__Citation *_p = soap_new_eml__Citation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__Citation::Title = Title;
		_p->eml__Citation::Originator = Originator;
		_p->eml__Citation::Creation = Creation;
		_p->eml__Citation::Format = Format;
		_p->eml__Citation::Editor = Editor;
		_p->eml__Citation::LastUpdate = LastUpdate;
		_p->eml__Citation::VersionString = VersionString;
		_p->eml__Citation::Description = Description;
		_p->eml__Citation::DescriptiveKeywords = DescriptiveKeywords;
	}
	return _p;
}

inline int soap_write_eml__Citation(struct soap *soap, eml__Citation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:Citation", "eml:Citation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__Citation * SOAP_FMAC4 soap_get_eml__Citation(struct soap*, eml__Citation *, const char*, const char*);

inline int soap_read_eml__Citation(struct soap *soap, eml__Citation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__Citation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__CustomData_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__CustomData_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__CustomData(struct soap*, const char*, int, const eml__CustomData *, const char*);
SOAP_FMAC3 eml__CustomData * SOAP_FMAC4 soap_in_eml__CustomData(struct soap*, const char*, eml__CustomData *, const char*);
SOAP_FMAC1 eml__CustomData * SOAP_FMAC2 soap_instantiate_eml__CustomData(struct soap*, int, const char*, const char*, size_t*);

inline eml__CustomData * soap_new_eml__CustomData(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__CustomData(soap, n, NULL, NULL, NULL);
}

inline eml__CustomData * soap_new_req_eml__CustomData(
	struct soap *soap)
{
	eml__CustomData *_p = soap_new_eml__CustomData(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline eml__CustomData * soap_new_set_eml__CustomData(
	struct soap *soap,
	const std::vector<char *> & __any)
{
	eml__CustomData *_p = soap_new_eml__CustomData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__CustomData::__any = __any;
	}
	return _p;
}

inline int soap_write_eml__CustomData(struct soap *soap, eml__CustomData const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:CustomData", "eml:CustomData") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__CustomData * SOAP_FMAC4 soap_get_eml__CustomData(struct soap*, eml__CustomData *, const char*, const char*);

inline int soap_read_eml__CustomData(struct soap *soap, eml__CustomData *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__CustomData(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_eml__AbstractCitedDataObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_eml__AbstractCitedDataObject_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_eml__AbstractCitedDataObject(struct soap*, const char*, int, const eml__AbstractCitedDataObject *, const char*);
SOAP_FMAC3 eml__AbstractCitedDataObject * SOAP_FMAC4 soap_in_eml__AbstractCitedDataObject(struct soap*, const char*, eml__AbstractCitedDataObject *, const char*);
SOAP_FMAC1 eml__AbstractCitedDataObject * SOAP_FMAC2 soap_instantiate_eml__AbstractCitedDataObject(struct soap*, int, const char*, const char*, size_t*);

inline eml__AbstractCitedDataObject * soap_new_eml__AbstractCitedDataObject(struct soap *soap, int n = -1)
{
	return soap_instantiate_eml__AbstractCitedDataObject(soap, n, NULL, NULL, NULL);
}

inline eml__AbstractCitedDataObject * soap_new_req_eml__AbstractCitedDataObject(
	struct soap *soap,
	eml__Citation *Citation,
	const std::string& schemaVersion,
	const std::string& uuid)
{
	eml__AbstractCitedDataObject *_p = soap_new_eml__AbstractCitedDataObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion;
		_p->eml__AbstractCitedDataObject::uuid = uuid;
	}
	return _p;
}

inline eml__AbstractCitedDataObject * soap_new_set_eml__AbstractCitedDataObject(
	struct soap *soap,
	eml__Citation *Citation,
	const std::vector<eml__ObjectAlias *> & Aliases,
	eml__CustomData *CustomData,
	const std::string& schemaVersion,
	const std::string& uuid)
{
	eml__AbstractCitedDataObject *_p = soap_new_eml__AbstractCitedDataObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion;
		_p->eml__AbstractCitedDataObject::uuid = uuid;
	}
	return _p;
}

inline int soap_write_eml__AbstractCitedDataObject(struct soap *soap, eml__AbstractCitedDataObject const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "eml:AbstractCitedDataObject", "eml:AbstractCitedDataObject") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 eml__AbstractCitedDataObject * SOAP_FMAC4 soap_get_eml__AbstractCitedDataObject(struct soap*, eml__AbstractCitedDataObject *, const char*, const char*);

inline int soap_read_eml__AbstractCitedDataObject(struct soap *soap, eml__AbstractCitedDataObject *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_eml__AbstractCitedDataObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREDiscretePropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREDiscretePropertySeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREDiscretePropertySeries(struct soap*, const char*, int, const resqml2__obj_USCOREDiscretePropertySeries *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREDiscretePropertySeries * SOAP_FMAC4 soap_in_resqml2__obj_USCOREDiscretePropertySeries(struct soap*, const char*, resqml2__obj_USCOREDiscretePropertySeries *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREDiscretePropertySeries * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREDiscretePropertySeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREDiscretePropertySeries * soap_new_resqml2__obj_USCOREDiscretePropertySeries(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREDiscretePropertySeries(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREDiscretePropertySeries * soap_new_req_resqml2__obj_USCOREDiscretePropertySeries(
	struct soap *soap,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues2,
	ULONG64 Count3,
	enum resqml2__IndexableElements IndexableElement3,
	eml__DataObjectReference *SupportingRepresentation3,
	resqml2__AbstractPropertyKind *PropertyKind3,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREDiscretePropertySeries *_p = soap_new_resqml2__obj_USCOREDiscretePropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues2;
		_p->resqml2__AbstractProperty::Count = Count3;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement3;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation3;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind3;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREDiscretePropertySeries * soap_new_set_resqml2__obj_USCOREDiscretePropertySeries(
	struct soap *soap,
	resqml2__AbstractIntegerArray *RealizationIndices,
	resqml2__TimeIndices *SeriesTimeIndices,
	const std::vector<LONG64> & MinimumValue1,
	const std::vector<LONG64> & MaximumValue1,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues2,
	const std::vector<resqml2__PropertyKindFacet *> & Facet2,
	ULONG64 Count3,
	enum resqml2__IndexableElements IndexableElement3,
	ULONG64 *RealizationIndex3,
	ULONG64 *TimeStep3,
	resqml2__TimeIndex *TimeIndex3,
	eml__DataObjectReference *SupportingRepresentation3,
	eml__DataObjectReference *LocalCrs3,
	resqml2__AbstractPropertyKind *PropertyKind3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREDiscretePropertySeries *_p = soap_new_resqml2__obj_USCOREDiscretePropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREDiscretePropertySeries::RealizationIndices = RealizationIndices;
		_p->resqml2__obj_USCOREDiscretePropertySeries::SeriesTimeIndices = SeriesTimeIndices;
		_p->resqml2__obj_USCOREDiscreteProperty::MinimumValue = MinimumValue1;
		_p->resqml2__obj_USCOREDiscreteProperty::MaximumValue = MaximumValue1;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues2;
		_p->resqml2__AbstractValuesProperty::Facet = Facet2;
		_p->resqml2__AbstractProperty::Count = Count3;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement3;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex3;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep3;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex3;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation3;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs3;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREDiscretePropertySeries(struct soap *soap, resqml2__obj_USCOREDiscretePropertySeries const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_DiscretePropertySeries", "resqml2:obj_DiscretePropertySeries") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREDiscretePropertySeries * SOAP_FMAC4 soap_get_resqml2__obj_USCOREDiscretePropertySeries(struct soap*, resqml2__obj_USCOREDiscretePropertySeries *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREDiscretePropertySeries(struct soap *soap, resqml2__obj_USCOREDiscretePropertySeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREDiscretePropertySeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORECommentPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORECommentPropertySeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORECommentPropertySeries(struct soap*, const char*, int, const resqml2__obj_USCORECommentPropertySeries *, const char*);
SOAP_FMAC3 resqml2__obj_USCORECommentPropertySeries * SOAP_FMAC4 soap_in_resqml2__obj_USCORECommentPropertySeries(struct soap*, const char*, resqml2__obj_USCORECommentPropertySeries *, const char*);
SOAP_FMAC1 resqml2__obj_USCORECommentPropertySeries * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORECommentPropertySeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORECommentPropertySeries * soap_new_resqml2__obj_USCORECommentPropertySeries(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORECommentPropertySeries(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORECommentPropertySeries * soap_new_req_resqml2__obj_USCORECommentPropertySeries(
	struct soap *soap,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues2,
	ULONG64 Count3,
	enum resqml2__IndexableElements IndexableElement3,
	eml__DataObjectReference *SupportingRepresentation3,
	resqml2__AbstractPropertyKind *PropertyKind3,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORECommentPropertySeries *_p = soap_new_resqml2__obj_USCORECommentPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues2;
		_p->resqml2__AbstractProperty::Count = Count3;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement3;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation3;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind3;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORECommentPropertySeries * soap_new_set_resqml2__obj_USCORECommentPropertySeries(
	struct soap *soap,
	resqml2__AbstractIntegerArray *RealizationIndices,
	resqml2__TimeIndices *SeriesTimeIndices,
	std::string *Language1,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues2,
	const std::vector<resqml2__PropertyKindFacet *> & Facet2,
	ULONG64 Count3,
	enum resqml2__IndexableElements IndexableElement3,
	ULONG64 *RealizationIndex3,
	ULONG64 *TimeStep3,
	resqml2__TimeIndex *TimeIndex3,
	eml__DataObjectReference *SupportingRepresentation3,
	eml__DataObjectReference *LocalCrs3,
	resqml2__AbstractPropertyKind *PropertyKind3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORECommentPropertySeries *_p = soap_new_resqml2__obj_USCORECommentPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORECommentPropertySeries::RealizationIndices = RealizationIndices;
		_p->resqml2__obj_USCORECommentPropertySeries::SeriesTimeIndices = SeriesTimeIndices;
		_p->resqml2__obj_USCORECommentProperty::Language = Language1;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues2;
		_p->resqml2__AbstractValuesProperty::Facet = Facet2;
		_p->resqml2__AbstractProperty::Count = Count3;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement3;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex3;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep3;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex3;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation3;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs3;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORECommentPropertySeries(struct soap *soap, resqml2__obj_USCORECommentPropertySeries const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_CommentPropertySeries", "resqml2:obj_CommentPropertySeries") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORECommentPropertySeries * SOAP_FMAC4 soap_get_resqml2__obj_USCORECommentPropertySeries(struct soap*, resqml2__obj_USCORECommentPropertySeries *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORECommentPropertySeries(struct soap *soap, resqml2__obj_USCORECommentPropertySeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORECommentPropertySeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORECategoricalPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORECategoricalPropertySeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORECategoricalPropertySeries(struct soap*, const char*, int, const resqml2__obj_USCORECategoricalPropertySeries *, const char*);
SOAP_FMAC3 resqml2__obj_USCORECategoricalPropertySeries * SOAP_FMAC4 soap_in_resqml2__obj_USCORECategoricalPropertySeries(struct soap*, const char*, resqml2__obj_USCORECategoricalPropertySeries *, const char*);
SOAP_FMAC1 resqml2__obj_USCORECategoricalPropertySeries * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORECategoricalPropertySeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORECategoricalPropertySeries * soap_new_resqml2__obj_USCORECategoricalPropertySeries(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORECategoricalPropertySeries(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORECategoricalPropertySeries * soap_new_req_resqml2__obj_USCORECategoricalPropertySeries(
	struct soap *soap,
	eml__DataObjectReference *Lookup1,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues2,
	ULONG64 Count3,
	enum resqml2__IndexableElements IndexableElement3,
	eml__DataObjectReference *SupportingRepresentation3,
	resqml2__AbstractPropertyKind *PropertyKind3,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORECategoricalPropertySeries *_p = soap_new_resqml2__obj_USCORECategoricalPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORECategoricalProperty::Lookup = Lookup1;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues2;
		_p->resqml2__AbstractProperty::Count = Count3;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement3;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation3;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind3;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORECategoricalPropertySeries * soap_new_set_resqml2__obj_USCORECategoricalPropertySeries(
	struct soap *soap,
	resqml2__AbstractIntegerArray *RealizationIndices,
	resqml2__TimeIndices *SeriesTimeIndices,
	eml__DataObjectReference *Lookup1,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues2,
	const std::vector<resqml2__PropertyKindFacet *> & Facet2,
	ULONG64 Count3,
	enum resqml2__IndexableElements IndexableElement3,
	ULONG64 *RealizationIndex3,
	ULONG64 *TimeStep3,
	resqml2__TimeIndex *TimeIndex3,
	eml__DataObjectReference *SupportingRepresentation3,
	eml__DataObjectReference *LocalCrs3,
	resqml2__AbstractPropertyKind *PropertyKind3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORECategoricalPropertySeries *_p = soap_new_resqml2__obj_USCORECategoricalPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORECategoricalPropertySeries::RealizationIndices = RealizationIndices;
		_p->resqml2__obj_USCORECategoricalPropertySeries::SeriesTimeIndices = SeriesTimeIndices;
		_p->resqml2__obj_USCORECategoricalProperty::Lookup = Lookup1;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues2;
		_p->resqml2__AbstractValuesProperty::Facet = Facet2;
		_p->resqml2__AbstractProperty::Count = Count3;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement3;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex3;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep3;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex3;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation3;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs3;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORECategoricalPropertySeries(struct soap *soap, resqml2__obj_USCORECategoricalPropertySeries const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_CategoricalPropertySeries", "resqml2:obj_CategoricalPropertySeries") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORECategoricalPropertySeries * SOAP_FMAC4 soap_get_resqml2__obj_USCORECategoricalPropertySeries(struct soap*, resqml2__obj_USCORECategoricalPropertySeries *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORECategoricalPropertySeries(struct soap *soap, resqml2__obj_USCORECategoricalPropertySeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORECategoricalPropertySeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREContinuousPropertySeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREContinuousPropertySeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREContinuousPropertySeries(struct soap*, const char*, int, const resqml2__obj_USCOREContinuousPropertySeries *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREContinuousPropertySeries * SOAP_FMAC4 soap_in_resqml2__obj_USCOREContinuousPropertySeries(struct soap*, const char*, resqml2__obj_USCOREContinuousPropertySeries *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREContinuousPropertySeries * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREContinuousPropertySeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREContinuousPropertySeries * soap_new_resqml2__obj_USCOREContinuousPropertySeries(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREContinuousPropertySeries(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREContinuousPropertySeries * soap_new_req_resqml2__obj_USCOREContinuousPropertySeries(
	struct soap *soap,
	enum resqml2__ResqmlUom UOM1,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues2,
	ULONG64 Count3,
	enum resqml2__IndexableElements IndexableElement3,
	eml__DataObjectReference *SupportingRepresentation3,
	resqml2__AbstractPropertyKind *PropertyKind3,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREContinuousPropertySeries *_p = soap_new_resqml2__obj_USCOREContinuousPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREContinuousProperty::UOM = UOM1;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues2;
		_p->resqml2__AbstractProperty::Count = Count3;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement3;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation3;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind3;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREContinuousPropertySeries * soap_new_set_resqml2__obj_USCOREContinuousPropertySeries(
	struct soap *soap,
	resqml2__AbstractIntegerArray *RealizationIndices,
	resqml2__TimeIndices *SeriesTimeIndices,
	const std::vector<double> & MinimumValue1,
	const std::vector<double> & MaximumValue1,
	enum resqml2__ResqmlUom UOM1,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues2,
	const std::vector<resqml2__PropertyKindFacet *> & Facet2,
	ULONG64 Count3,
	enum resqml2__IndexableElements IndexableElement3,
	ULONG64 *RealizationIndex3,
	ULONG64 *TimeStep3,
	resqml2__TimeIndex *TimeIndex3,
	eml__DataObjectReference *SupportingRepresentation3,
	eml__DataObjectReference *LocalCrs3,
	resqml2__AbstractPropertyKind *PropertyKind3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREContinuousPropertySeries *_p = soap_new_resqml2__obj_USCOREContinuousPropertySeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREContinuousPropertySeries::RealizationIndices = RealizationIndices;
		_p->resqml2__obj_USCOREContinuousPropertySeries::SeriesTimeIndices = SeriesTimeIndices;
		_p->resqml2__obj_USCOREContinuousProperty::MinimumValue = MinimumValue1;
		_p->resqml2__obj_USCOREContinuousProperty::MaximumValue = MaximumValue1;
		_p->resqml2__obj_USCOREContinuousProperty::UOM = UOM1;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues2;
		_p->resqml2__AbstractValuesProperty::Facet = Facet2;
		_p->resqml2__AbstractProperty::Count = Count3;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement3;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex3;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep3;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex3;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation3;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs3;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREContinuousPropertySeries(struct soap *soap, resqml2__obj_USCOREContinuousPropertySeries const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_ContinuousPropertySeries", "resqml2:obj_ContinuousPropertySeries") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREContinuousPropertySeries * SOAP_FMAC4 soap_get_resqml2__obj_USCOREContinuousPropertySeries(struct soap*, resqml2__obj_USCOREContinuousPropertySeries *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREContinuousPropertySeries(struct soap *soap, resqml2__obj_USCOREContinuousPropertySeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREContinuousPropertySeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeIndices_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TimeIndices(struct soap*, const char*, int, const resqml2__TimeIndices *, const char*);
SOAP_FMAC3 resqml2__TimeIndices * SOAP_FMAC4 soap_in_resqml2__TimeIndices(struct soap*, const char*, resqml2__TimeIndices *, const char*);
SOAP_FMAC1 resqml2__TimeIndices * SOAP_FMAC2 soap_instantiate_resqml2__TimeIndices(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__TimeIndices * soap_new_resqml2__TimeIndices(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__TimeIndices(soap, n, NULL, NULL, NULL);
}

inline resqml2__TimeIndices * soap_new_req_resqml2__TimeIndices(
	struct soap *soap,
	ULONG64 TimeIndexCount,
	bool UseInterval,
	eml__DataObjectReference *TimeSeries)
{
	resqml2__TimeIndices *_p = soap_new_resqml2__TimeIndices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeIndices::TimeIndexCount = TimeIndexCount;
		_p->resqml2__TimeIndices::UseInterval = UseInterval;
		_p->resqml2__TimeIndices::TimeSeries = TimeSeries;
	}
	return _p;
}

inline resqml2__TimeIndices * soap_new_set_resqml2__TimeIndices(
	struct soap *soap,
	ULONG64 TimeIndexCount,
	ULONG64 *TimeIndexStart,
	resqml2__AbstractIntegerArray *SimulatorTimeStep,
	bool UseInterval,
	eml__DataObjectReference *TimeSeries)
{
	resqml2__TimeIndices *_p = soap_new_resqml2__TimeIndices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeIndices::TimeIndexCount = TimeIndexCount;
		_p->resqml2__TimeIndices::TimeIndexStart = TimeIndexStart;
		_p->resqml2__TimeIndices::SimulatorTimeStep = SimulatorTimeStep;
		_p->resqml2__TimeIndices::UseInterval = UseInterval;
		_p->resqml2__TimeIndices::TimeSeries = TimeSeries;
	}
	return _p;
}

inline int soap_write_resqml2__TimeIndices(struct soap *soap, resqml2__TimeIndices const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:TimeIndices", "resqml2:TimeIndices") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__TimeIndices * SOAP_FMAC4 soap_get_resqml2__TimeIndices(struct soap*, resqml2__TimeIndices *, const char*, const char*);

inline int soap_read_resqml2__TimeIndices(struct soap *soap, resqml2__TimeIndices *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__TimeIndices(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntervalGridCells_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntervalGridCells_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IntervalGridCells(struct soap*, const char*, int, const resqml2__IntervalGridCells *, const char*);
SOAP_FMAC3 resqml2__IntervalGridCells * SOAP_FMAC4 soap_in_resqml2__IntervalGridCells(struct soap*, const char*, resqml2__IntervalGridCells *, const char*);
SOAP_FMAC1 resqml2__IntervalGridCells * SOAP_FMAC2 soap_instantiate_resqml2__IntervalGridCells(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IntervalGridCells * soap_new_resqml2__IntervalGridCells(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IntervalGridCells(soap, n, NULL, NULL, NULL);
}

inline resqml2__IntervalGridCells * soap_new_req_resqml2__IntervalGridCells(
	struct soap *soap,
	ULONG64 CellCount,
	resqml2__AbstractIntegerArray *GridIndices,
	resqml2__AbstractIntegerArray *CellIndices,
	resqml2__AbstractIntegerArray *LocalFacePairPerCellIndices,
	const std::vector<eml__DataObjectReference *> & Grids)
{
	resqml2__IntervalGridCells *_p = soap_new_resqml2__IntervalGridCells(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntervalGridCells::CellCount = CellCount;
		_p->resqml2__IntervalGridCells::GridIndices = GridIndices;
		_p->resqml2__IntervalGridCells::CellIndices = CellIndices;
		_p->resqml2__IntervalGridCells::LocalFacePairPerCellIndices = LocalFacePairPerCellIndices;
		_p->resqml2__IntervalGridCells::Grids = Grids;
	}
	return _p;
}

inline resqml2__IntervalGridCells * soap_new_set_resqml2__IntervalGridCells(
	struct soap *soap,
	ULONG64 CellCount,
	resqml2__AbstractIntegerArray *GridIndices,
	resqml2__AbstractIntegerArray *CellIndices,
	resqml2__AbstractIntegerArray *LocalFacePairPerCellIndices,
	const std::vector<eml__DataObjectReference *> & Grids)
{
	resqml2__IntervalGridCells *_p = soap_new_resqml2__IntervalGridCells(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntervalGridCells::CellCount = CellCount;
		_p->resqml2__IntervalGridCells::GridIndices = GridIndices;
		_p->resqml2__IntervalGridCells::CellIndices = CellIndices;
		_p->resqml2__IntervalGridCells::LocalFacePairPerCellIndices = LocalFacePairPerCellIndices;
		_p->resqml2__IntervalGridCells::Grids = Grids;
	}
	return _p;
}

inline int soap_write_resqml2__IntervalGridCells(struct soap *soap, resqml2__IntervalGridCells const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IntervalGridCells", "resqml2:IntervalGridCells") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IntervalGridCells * SOAP_FMAC4 soap_get_resqml2__IntervalGridCells(struct soap*, resqml2__IntervalGridCells *, const char*, const char*);

inline int soap_read_resqml2__IntervalGridCells(struct soap *soap, resqml2__IntervalGridCells *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IntervalGridCells(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StreamlineWellbores_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StreamlineWellbores_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__StreamlineWellbores(struct soap*, const char*, int, const resqml2__StreamlineWellbores *, const char*);
SOAP_FMAC3 resqml2__StreamlineWellbores * SOAP_FMAC4 soap_in_resqml2__StreamlineWellbores(struct soap*, const char*, resqml2__StreamlineWellbores *, const char*);
SOAP_FMAC1 resqml2__StreamlineWellbores * SOAP_FMAC2 soap_instantiate_resqml2__StreamlineWellbores(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__StreamlineWellbores * soap_new_resqml2__StreamlineWellbores(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__StreamlineWellbores(soap, n, NULL, NULL, NULL);
}

inline resqml2__StreamlineWellbores * soap_new_req_resqml2__StreamlineWellbores(
	struct soap *soap,
	resqml2__AbstractIntegerArray *InjectorPerLine,
	resqml2__AbstractIntegerArray *ProducerPerLine,
	const std::vector<eml__DataObjectReference *> & WellboreTrajectoryRepresentation)
{
	resqml2__StreamlineWellbores *_p = soap_new_resqml2__StreamlineWellbores(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StreamlineWellbores::InjectorPerLine = InjectorPerLine;
		_p->resqml2__StreamlineWellbores::ProducerPerLine = ProducerPerLine;
		_p->resqml2__StreamlineWellbores::WellboreTrajectoryRepresentation = WellboreTrajectoryRepresentation;
	}
	return _p;
}

inline resqml2__StreamlineWellbores * soap_new_set_resqml2__StreamlineWellbores(
	struct soap *soap,
	resqml2__AbstractIntegerArray *InjectorPerLine,
	resqml2__AbstractIntegerArray *ProducerPerLine,
	const std::vector<eml__DataObjectReference *> & WellboreTrajectoryRepresentation)
{
	resqml2__StreamlineWellbores *_p = soap_new_resqml2__StreamlineWellbores(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StreamlineWellbores::InjectorPerLine = InjectorPerLine;
		_p->resqml2__StreamlineWellbores::ProducerPerLine = ProducerPerLine;
		_p->resqml2__StreamlineWellbores::WellboreTrajectoryRepresentation = WellboreTrajectoryRepresentation;
	}
	return _p;
}

inline int soap_write_resqml2__StreamlineWellbores(struct soap *soap, resqml2__StreamlineWellbores const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:StreamlineWellbores", "resqml2:StreamlineWellbores") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__StreamlineWellbores * SOAP_FMAC4 soap_get_resqml2__StreamlineWellbores(struct soap*, resqml2__StreamlineWellbores *, const char*, const char*);

inline int soap_read_resqml2__StreamlineWellbores(struct soap *soap, resqml2__StreamlineWellbores *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__StreamlineWellbores(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStreamlinesRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStreamlinesRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREStreamlinesRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREStreamlinesRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREStreamlinesRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREStreamlinesRepresentation(struct soap*, const char*, resqml2__obj_USCOREStreamlinesRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREStreamlinesRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREStreamlinesRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREStreamlinesRepresentation * soap_new_resqml2__obj_USCOREStreamlinesRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREStreamlinesRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREStreamlinesRepresentation * soap_new_req_resqml2__obj_USCOREStreamlinesRepresentation(
	struct soap *soap,
	ULONG64 LineCount,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREStreamlinesRepresentation *_p = soap_new_resqml2__obj_USCOREStreamlinesRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStreamlinesRepresentation::LineCount = LineCount;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREStreamlinesRepresentation * soap_new_set_resqml2__obj_USCOREStreamlinesRepresentation(
	struct soap *soap,
	ULONG64 LineCount,
	resqml2__StreamlineWellbores *StreamlineWellbores,
	resqml2__StreamlinePolylineSetPatch *Geometry,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREStreamlinesRepresentation *_p = soap_new_resqml2__obj_USCOREStreamlinesRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStreamlinesRepresentation::LineCount = LineCount;
		_p->resqml2__obj_USCOREStreamlinesRepresentation::StreamlineWellbores = StreamlineWellbores;
		_p->resqml2__obj_USCOREStreamlinesRepresentation::Geometry = Geometry;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREStreamlinesRepresentation(struct soap *soap, resqml2__obj_USCOREStreamlinesRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_StreamlinesRepresentation", "resqml2:obj_StreamlinesRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREStreamlinesRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREStreamlinesRepresentation(struct soap*, resqml2__obj_USCOREStreamlinesRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREStreamlinesRepresentation(struct soap *soap, resqml2__obj_USCOREStreamlinesRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREStreamlinesRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStreamlinesFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStreamlinesFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREStreamlinesFeature(struct soap*, const char*, int, const resqml2__obj_USCOREStreamlinesFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREStreamlinesFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREStreamlinesFeature(struct soap*, const char*, resqml2__obj_USCOREStreamlinesFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREStreamlinesFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREStreamlinesFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREStreamlinesFeature * soap_new_resqml2__obj_USCOREStreamlinesFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREStreamlinesFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREStreamlinesFeature * soap_new_req_resqml2__obj_USCOREStreamlinesFeature(
	struct soap *soap,
	enum resqml2__StreamlineFlux Flux,
	resqml2__TimeIndex *TimeIndex,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREStreamlinesFeature *_p = soap_new_resqml2__obj_USCOREStreamlinesFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStreamlinesFeature::Flux = Flux;
		_p->resqml2__obj_USCOREStreamlinesFeature::TimeIndex = TimeIndex;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREStreamlinesFeature * soap_new_set_resqml2__obj_USCOREStreamlinesFeature(
	struct soap *soap,
	enum resqml2__StreamlineFlux Flux,
	std::string *OtherFlux,
	resqml2__TimeIndex *TimeIndex,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREStreamlinesFeature *_p = soap_new_resqml2__obj_USCOREStreamlinesFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStreamlinesFeature::Flux = Flux;
		_p->resqml2__obj_USCOREStreamlinesFeature::OtherFlux = OtherFlux;
		_p->resqml2__obj_USCOREStreamlinesFeature::TimeIndex = TimeIndex;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREStreamlinesFeature(struct soap *soap, resqml2__obj_USCOREStreamlinesFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_StreamlinesFeature", "resqml2:obj_StreamlinesFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREStreamlinesFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREStreamlinesFeature(struct soap*, resqml2__obj_USCOREStreamlinesFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREStreamlinesFeature(struct soap *soap, resqml2__obj_USCOREStreamlinesFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREStreamlinesFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StreamlinePolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StreamlinePolylineSetPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__StreamlinePolylineSetPatch(struct soap*, const char*, int, const resqml2__StreamlinePolylineSetPatch *, const char*);
SOAP_FMAC3 resqml2__StreamlinePolylineSetPatch * SOAP_FMAC4 soap_in_resqml2__StreamlinePolylineSetPatch(struct soap*, const char*, resqml2__StreamlinePolylineSetPatch *, const char*);
SOAP_FMAC1 resqml2__StreamlinePolylineSetPatch * SOAP_FMAC2 soap_instantiate_resqml2__StreamlinePolylineSetPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__StreamlinePolylineSetPatch * soap_new_resqml2__StreamlinePolylineSetPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__StreamlinePolylineSetPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__StreamlinePolylineSetPatch * soap_new_req_resqml2__StreamlinePolylineSetPatch(
	struct soap *soap,
	ULONG64 NodeCount,
	ULONG64 IntervalCount,
	resqml2__AbstractBooleanArray *ClosedPolylines,
	resqml2__AbstractIntegerArray *NodeCountPerPolyline,
	ULONG64 PatchIndex1)
{
	resqml2__StreamlinePolylineSetPatch *_p = soap_new_resqml2__StreamlinePolylineSetPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StreamlinePolylineSetPatch::NodeCount = NodeCount;
		_p->resqml2__StreamlinePolylineSetPatch::IntervalCount = IntervalCount;
		_p->resqml2__StreamlinePolylineSetPatch::ClosedPolylines = ClosedPolylines;
		_p->resqml2__StreamlinePolylineSetPatch::NodeCountPerPolyline = NodeCountPerPolyline;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__StreamlinePolylineSetPatch * soap_new_set_resqml2__StreamlinePolylineSetPatch(
	struct soap *soap,
	ULONG64 NodeCount,
	ULONG64 IntervalCount,
	resqml2__AbstractBooleanArray *ClosedPolylines,
	resqml2__AbstractIntegerArray *NodeCountPerPolyline,
	resqml2__IntervalGridCells *IntervalGridCells,
	ULONG64 PatchIndex1)
{
	resqml2__StreamlinePolylineSetPatch *_p = soap_new_resqml2__StreamlinePolylineSetPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StreamlinePolylineSetPatch::NodeCount = NodeCount;
		_p->resqml2__StreamlinePolylineSetPatch::IntervalCount = IntervalCount;
		_p->resqml2__StreamlinePolylineSetPatch::ClosedPolylines = ClosedPolylines;
		_p->resqml2__StreamlinePolylineSetPatch::NodeCountPerPolyline = NodeCountPerPolyline;
		_p->resqml2__StreamlinePolylineSetPatch::IntervalGridCells = IntervalGridCells;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__StreamlinePolylineSetPatch(struct soap *soap, resqml2__StreamlinePolylineSetPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:StreamlinePolylineSetPatch", "resqml2:StreamlinePolylineSetPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__StreamlinePolylineSetPatch * SOAP_FMAC4 soap_get_resqml2__StreamlinePolylineSetPatch(struct soap*, resqml2__StreamlinePolylineSetPatch *, const char*, const char*);

inline int soap_read_resqml2__StreamlinePolylineSetPatch(struct soap *soap, resqml2__StreamlinePolylineSetPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__StreamlinePolylineSetPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREActivityTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREActivityTemplate_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREActivityTemplate(struct soap*, const char*, int, const resqml2__obj_USCOREActivityTemplate *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREActivityTemplate * SOAP_FMAC4 soap_in_resqml2__obj_USCOREActivityTemplate(struct soap*, const char*, resqml2__obj_USCOREActivityTemplate *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREActivityTemplate * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREActivityTemplate(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREActivityTemplate * soap_new_resqml2__obj_USCOREActivityTemplate(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREActivityTemplate(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREActivityTemplate * soap_new_req_resqml2__obj_USCOREActivityTemplate(
	struct soap *soap,
	const std::vector<resqml2__ParameterTemplate *> & Parameter,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREActivityTemplate *_p = soap_new_resqml2__obj_USCOREActivityTemplate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREActivityTemplate::Parameter = Parameter;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCOREActivityTemplate * soap_new_set_resqml2__obj_USCOREActivityTemplate(
	struct soap *soap,
	const std::vector<resqml2__ParameterTemplate *> & Parameter,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREActivityTemplate *_p = soap_new_resqml2__obj_USCOREActivityTemplate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREActivityTemplate::Parameter = Parameter;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREActivityTemplate(struct soap *soap, resqml2__obj_USCOREActivityTemplate const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_ActivityTemplate", "resqml2:obj_ActivityTemplate") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREActivityTemplate * SOAP_FMAC4 soap_get_resqml2__obj_USCOREActivityTemplate(struct soap*, resqml2__obj_USCOREActivityTemplate *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREActivityTemplate(struct soap *soap, resqml2__obj_USCOREActivityTemplate *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREActivityTemplate(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractActivityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractActivityParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractActivityParameter(struct soap*, const char*, int, const resqml2__AbstractActivityParameter *, const char*);
SOAP_FMAC3 resqml2__AbstractActivityParameter * SOAP_FMAC4 soap_in_resqml2__AbstractActivityParameter(struct soap*, const char*, resqml2__AbstractActivityParameter *, const char*);
SOAP_FMAC1 resqml2__AbstractActivityParameter * SOAP_FMAC2 soap_instantiate_resqml2__AbstractActivityParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractActivityParameter * soap_new_resqml2__AbstractActivityParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractActivityParameter(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractActivityParameter * soap_new_req_resqml2__AbstractActivityParameter(
	struct soap *soap,
	const std::string& Title)
{
	resqml2__AbstractActivityParameter *_p = soap_new_resqml2__AbstractActivityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractActivityParameter::Title = Title;
	}
	return _p;
}

inline resqml2__AbstractActivityParameter * soap_new_set_resqml2__AbstractActivityParameter(
	struct soap *soap,
	const std::string& Title,
	LONG64 *Index,
	std::string *Selection,
	const std::vector<resqml2__AbstractParameterKey *> & Key)
{
	resqml2__AbstractActivityParameter *_p = soap_new_resqml2__AbstractActivityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractActivityParameter::Title = Title;
		_p->resqml2__AbstractActivityParameter::Index = Index;
		_p->resqml2__AbstractActivityParameter::Selection = Selection;
		_p->resqml2__AbstractActivityParameter::Key = Key;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractActivityParameter(struct soap *soap, resqml2__AbstractActivityParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractActivityParameter", "resqml2:AbstractActivityParameter") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractActivityParameter * SOAP_FMAC4 soap_get_resqml2__AbstractActivityParameter(struct soap*, resqml2__AbstractActivityParameter *, const char*, const char*);

inline int soap_read_resqml2__AbstractActivityParameter(struct soap *soap, resqml2__AbstractActivityParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractActivityParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeIndexParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeIndexParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TimeIndexParameter(struct soap*, const char*, int, const resqml2__TimeIndexParameter *, const char*);
SOAP_FMAC3 resqml2__TimeIndexParameter * SOAP_FMAC4 soap_in_resqml2__TimeIndexParameter(struct soap*, const char*, resqml2__TimeIndexParameter *, const char*);
SOAP_FMAC1 resqml2__TimeIndexParameter * SOAP_FMAC2 soap_instantiate_resqml2__TimeIndexParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__TimeIndexParameter * soap_new_resqml2__TimeIndexParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__TimeIndexParameter(soap, n, NULL, NULL, NULL);
}

inline resqml2__TimeIndexParameter * soap_new_req_resqml2__TimeIndexParameter(
	struct soap *soap,
	resqml2__TimeIndex *TimeIndex,
	const std::string& Title1)
{
	resqml2__TimeIndexParameter *_p = soap_new_resqml2__TimeIndexParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeIndexParameter::TimeIndex = TimeIndex;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
	}
	return _p;
}

inline resqml2__TimeIndexParameter * soap_new_set_resqml2__TimeIndexParameter(
	struct soap *soap,
	resqml2__TimeIndex *TimeIndex,
	const std::string& Title1,
	LONG64 *Index1,
	std::string *Selection1,
	const std::vector<resqml2__AbstractParameterKey *> & Key1)
{
	resqml2__TimeIndexParameter *_p = soap_new_resqml2__TimeIndexParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeIndexParameter::TimeIndex = TimeIndex;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
		_p->resqml2__AbstractActivityParameter::Index = Index1;
		_p->resqml2__AbstractActivityParameter::Selection = Selection1;
		_p->resqml2__AbstractActivityParameter::Key = Key1;
	}
	return _p;
}

inline int soap_write_resqml2__TimeIndexParameter(struct soap *soap, resqml2__TimeIndexParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:TimeIndexParameter", "resqml2:TimeIndexParameter") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__TimeIndexParameter * SOAP_FMAC4 soap_get_resqml2__TimeIndexParameter(struct soap*, resqml2__TimeIndexParameter *, const char*, const char*);

inline int soap_read_resqml2__TimeIndexParameter(struct soap *soap, resqml2__TimeIndexParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__TimeIndexParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractParameterKey_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractParameterKey(struct soap*, const char*, int, const resqml2__AbstractParameterKey *, const char*);
SOAP_FMAC3 resqml2__AbstractParameterKey * SOAP_FMAC4 soap_in_resqml2__AbstractParameterKey(struct soap*, const char*, resqml2__AbstractParameterKey *, const char*);
SOAP_FMAC1 resqml2__AbstractParameterKey * SOAP_FMAC2 soap_instantiate_resqml2__AbstractParameterKey(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractParameterKey * soap_new_resqml2__AbstractParameterKey(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractParameterKey(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractParameterKey * soap_new_req_resqml2__AbstractParameterKey(
	struct soap *soap)
{
	resqml2__AbstractParameterKey *_p = soap_new_resqml2__AbstractParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AbstractParameterKey * soap_new_set_resqml2__AbstractParameterKey(
	struct soap *soap)
{
	resqml2__AbstractParameterKey *_p = soap_new_resqml2__AbstractParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml2__AbstractParameterKey(struct soap *soap, resqml2__AbstractParameterKey const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractParameterKey", "resqml2:AbstractParameterKey") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractParameterKey * SOAP_FMAC4 soap_get_resqml2__AbstractParameterKey(struct soap*, resqml2__AbstractParameterKey *, const char*, const char*);

inline int soap_read_resqml2__AbstractParameterKey(struct soap *soap, resqml2__AbstractParameterKey *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractParameterKey(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__FloatingPointQuantityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__FloatingPointQuantityParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__FloatingPointQuantityParameter(struct soap*, const char*, int, const resqml2__FloatingPointQuantityParameter *, const char*);
SOAP_FMAC3 resqml2__FloatingPointQuantityParameter * SOAP_FMAC4 soap_in_resqml2__FloatingPointQuantityParameter(struct soap*, const char*, resqml2__FloatingPointQuantityParameter *, const char*);
SOAP_FMAC1 resqml2__FloatingPointQuantityParameter * SOAP_FMAC2 soap_instantiate_resqml2__FloatingPointQuantityParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__FloatingPointQuantityParameter * soap_new_resqml2__FloatingPointQuantityParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__FloatingPointQuantityParameter(soap, n, NULL, NULL, NULL);
}

inline resqml2__FloatingPointQuantityParameter * soap_new_req_resqml2__FloatingPointQuantityParameter(
	struct soap *soap,
	double Value,
	enum resqml2__ResqmlUom Uom,
	const std::string& Title1)
{
	resqml2__FloatingPointQuantityParameter *_p = soap_new_resqml2__FloatingPointQuantityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__FloatingPointQuantityParameter::Value = Value;
		_p->resqml2__FloatingPointQuantityParameter::Uom = Uom;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
	}
	return _p;
}

inline resqml2__FloatingPointQuantityParameter * soap_new_set_resqml2__FloatingPointQuantityParameter(
	struct soap *soap,
	double Value,
	enum resqml2__ResqmlUom Uom,
	const std::string& Title1,
	LONG64 *Index1,
	std::string *Selection1,
	const std::vector<resqml2__AbstractParameterKey *> & Key1)
{
	resqml2__FloatingPointQuantityParameter *_p = soap_new_resqml2__FloatingPointQuantityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__FloatingPointQuantityParameter::Value = Value;
		_p->resqml2__FloatingPointQuantityParameter::Uom = Uom;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
		_p->resqml2__AbstractActivityParameter::Index = Index1;
		_p->resqml2__AbstractActivityParameter::Selection = Selection1;
		_p->resqml2__AbstractActivityParameter::Key = Key1;
	}
	return _p;
}

inline int soap_write_resqml2__FloatingPointQuantityParameter(struct soap *soap, resqml2__FloatingPointQuantityParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:FloatingPointQuantityParameter", "resqml2:FloatingPointQuantityParameter") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__FloatingPointQuantityParameter * SOAP_FMAC4 soap_get_resqml2__FloatingPointQuantityParameter(struct soap*, resqml2__FloatingPointQuantityParameter *, const char*, const char*);

inline int soap_read_resqml2__FloatingPointQuantityParameter(struct soap *soap, resqml2__FloatingPointQuantityParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__FloatingPointQuantityParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeIndexParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeIndexParameterKey_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TimeIndexParameterKey(struct soap*, const char*, int, const resqml2__TimeIndexParameterKey *, const char*);
SOAP_FMAC3 resqml2__TimeIndexParameterKey * SOAP_FMAC4 soap_in_resqml2__TimeIndexParameterKey(struct soap*, const char*, resqml2__TimeIndexParameterKey *, const char*);
SOAP_FMAC1 resqml2__TimeIndexParameterKey * SOAP_FMAC2 soap_instantiate_resqml2__TimeIndexParameterKey(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__TimeIndexParameterKey * soap_new_resqml2__TimeIndexParameterKey(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__TimeIndexParameterKey(soap, n, NULL, NULL, NULL);
}

inline resqml2__TimeIndexParameterKey * soap_new_req_resqml2__TimeIndexParameterKey(
	struct soap *soap,
	resqml2__TimeIndex *TimeIndex)
{
	resqml2__TimeIndexParameterKey *_p = soap_new_resqml2__TimeIndexParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeIndexParameterKey::TimeIndex = TimeIndex;
	}
	return _p;
}

inline resqml2__TimeIndexParameterKey * soap_new_set_resqml2__TimeIndexParameterKey(
	struct soap *soap,
	resqml2__TimeIndex *TimeIndex)
{
	resqml2__TimeIndexParameterKey *_p = soap_new_resqml2__TimeIndexParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeIndexParameterKey::TimeIndex = TimeIndex;
	}
	return _p;
}

inline int soap_write_resqml2__TimeIndexParameterKey(struct soap *soap, resqml2__TimeIndexParameterKey const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:TimeIndexParameterKey", "resqml2:TimeIndexParameterKey") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__TimeIndexParameterKey * SOAP_FMAC4 soap_get_resqml2__TimeIndexParameterKey(struct soap*, resqml2__TimeIndexParameterKey *, const char*, const char*);

inline int soap_read_resqml2__TimeIndexParameterKey(struct soap *soap, resqml2__TimeIndexParameterKey *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__TimeIndexParameterKey(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerQuantityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerQuantityParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IntegerQuantityParameter(struct soap*, const char*, int, const resqml2__IntegerQuantityParameter *, const char*);
SOAP_FMAC3 resqml2__IntegerQuantityParameter * SOAP_FMAC4 soap_in_resqml2__IntegerQuantityParameter(struct soap*, const char*, resqml2__IntegerQuantityParameter *, const char*);
SOAP_FMAC1 resqml2__IntegerQuantityParameter * SOAP_FMAC2 soap_instantiate_resqml2__IntegerQuantityParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IntegerQuantityParameter * soap_new_resqml2__IntegerQuantityParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IntegerQuantityParameter(soap, n, NULL, NULL, NULL);
}

inline resqml2__IntegerQuantityParameter * soap_new_req_resqml2__IntegerQuantityParameter(
	struct soap *soap,
	LONG64 Value,
	const std::string& Title1)
{
	resqml2__IntegerQuantityParameter *_p = soap_new_resqml2__IntegerQuantityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerQuantityParameter::Value = Value;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
	}
	return _p;
}

inline resqml2__IntegerQuantityParameter * soap_new_set_resqml2__IntegerQuantityParameter(
	struct soap *soap,
	LONG64 Value,
	const std::string& Title1,
	LONG64 *Index1,
	std::string *Selection1,
	const std::vector<resqml2__AbstractParameterKey *> & Key1)
{
	resqml2__IntegerQuantityParameter *_p = soap_new_resqml2__IntegerQuantityParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerQuantityParameter::Value = Value;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
		_p->resqml2__AbstractActivityParameter::Index = Index1;
		_p->resqml2__AbstractActivityParameter::Selection = Selection1;
		_p->resqml2__AbstractActivityParameter::Key = Key1;
	}
	return _p;
}

inline int soap_write_resqml2__IntegerQuantityParameter(struct soap *soap, resqml2__IntegerQuantityParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IntegerQuantityParameter", "resqml2:IntegerQuantityParameter") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IntegerQuantityParameter * SOAP_FMAC4 soap_get_resqml2__IntegerQuantityParameter(struct soap*, resqml2__IntegerQuantityParameter *, const char*, const char*);

inline int soap_read_resqml2__IntegerQuantityParameter(struct soap *soap, resqml2__IntegerQuantityParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IntegerQuantityParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParameterTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParameterTemplate_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ParameterTemplate(struct soap*, const char*, int, const resqml2__ParameterTemplate *, const char*);
SOAP_FMAC3 resqml2__ParameterTemplate * SOAP_FMAC4 soap_in_resqml2__ParameterTemplate(struct soap*, const char*, resqml2__ParameterTemplate *, const char*);
SOAP_FMAC1 resqml2__ParameterTemplate * SOAP_FMAC2 soap_instantiate_resqml2__ParameterTemplate(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ParameterTemplate * soap_new_resqml2__ParameterTemplate(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ParameterTemplate(soap, n, NULL, NULL, NULL);
}

inline resqml2__ParameterTemplate * soap_new_req_resqml2__ParameterTemplate(
	struct soap *soap,
	bool IsInput,
	bool IsOutput,
	const std::string& Title,
	LONG64 MaxOccurs,
	LONG64 MinOccurs)
{
	resqml2__ParameterTemplate *_p = soap_new_resqml2__ParameterTemplate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParameterTemplate::IsInput = IsInput;
		_p->resqml2__ParameterTemplate::IsOutput = IsOutput;
		_p->resqml2__ParameterTemplate::Title = Title;
		_p->resqml2__ParameterTemplate::MaxOccurs = MaxOccurs;
		_p->resqml2__ParameterTemplate::MinOccurs = MinOccurs;
	}
	return _p;
}

inline resqml2__ParameterTemplate * soap_new_set_resqml2__ParameterTemplate(
	struct soap *soap,
	const std::vector<std::string> & KeyConstraint,
	bool IsInput,
	const std::vector<enum resqml2__ParameterKind> & AllowedKind,
	bool IsOutput,
	const std::string& Title,
	std::string *DataObjectContentType,
	LONG64 MaxOccurs,
	LONG64 MinOccurs,
	std::string *Constraint,
	const std::vector<resqml2__AbstractActivityParameter *> & DefaultValue)
{
	resqml2__ParameterTemplate *_p = soap_new_resqml2__ParameterTemplate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParameterTemplate::KeyConstraint = KeyConstraint;
		_p->resqml2__ParameterTemplate::IsInput = IsInput;
		_p->resqml2__ParameterTemplate::AllowedKind = AllowedKind;
		_p->resqml2__ParameterTemplate::IsOutput = IsOutput;
		_p->resqml2__ParameterTemplate::Title = Title;
		_p->resqml2__ParameterTemplate::DataObjectContentType = DataObjectContentType;
		_p->resqml2__ParameterTemplate::MaxOccurs = MaxOccurs;
		_p->resqml2__ParameterTemplate::MinOccurs = MinOccurs;
		_p->resqml2__ParameterTemplate::Constraint = Constraint;
		_p->resqml2__ParameterTemplate::DefaultValue = DefaultValue;
	}
	return _p;
}

inline int soap_write_resqml2__ParameterTemplate(struct soap *soap, resqml2__ParameterTemplate const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ParameterTemplate", "resqml2:ParameterTemplate") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ParameterTemplate * SOAP_FMAC4 soap_get_resqml2__ParameterTemplate(struct soap*, resqml2__ParameterTemplate *, const char*, const char*);

inline int soap_read_resqml2__ParameterTemplate(struct soap *soap, resqml2__ParameterTemplate *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ParameterTemplate(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StringParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StringParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__StringParameter(struct soap*, const char*, int, const resqml2__StringParameter *, const char*);
SOAP_FMAC3 resqml2__StringParameter * SOAP_FMAC4 soap_in_resqml2__StringParameter(struct soap*, const char*, resqml2__StringParameter *, const char*);
SOAP_FMAC1 resqml2__StringParameter * SOAP_FMAC2 soap_instantiate_resqml2__StringParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__StringParameter * soap_new_resqml2__StringParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__StringParameter(soap, n, NULL, NULL, NULL);
}

inline resqml2__StringParameter * soap_new_req_resqml2__StringParameter(
	struct soap *soap,
	const std::string& Value,
	const std::string& Title1)
{
	resqml2__StringParameter *_p = soap_new_resqml2__StringParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StringParameter::Value = Value;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
	}
	return _p;
}

inline resqml2__StringParameter * soap_new_set_resqml2__StringParameter(
	struct soap *soap,
	const std::string& Value,
	const std::string& Title1,
	LONG64 *Index1,
	std::string *Selection1,
	const std::vector<resqml2__AbstractParameterKey *> & Key1)
{
	resqml2__StringParameter *_p = soap_new_resqml2__StringParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StringParameter::Value = Value;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
		_p->resqml2__AbstractActivityParameter::Index = Index1;
		_p->resqml2__AbstractActivityParameter::Selection = Selection1;
		_p->resqml2__AbstractActivityParameter::Key = Key1;
	}
	return _p;
}

inline int soap_write_resqml2__StringParameter(struct soap *soap, resqml2__StringParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:StringParameter", "resqml2:StringParameter") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__StringParameter * SOAP_FMAC4 soap_get_resqml2__StringParameter(struct soap*, resqml2__StringParameter *, const char*, const char*);

inline int soap_read_resqml2__StringParameter(struct soap *soap, resqml2__StringParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__StringParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREActivity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREActivity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREActivity(struct soap*, const char*, int, const resqml2__obj_USCOREActivity *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREActivity * SOAP_FMAC4 soap_in_resqml2__obj_USCOREActivity(struct soap*, const char*, resqml2__obj_USCOREActivity *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREActivity * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREActivity(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREActivity * soap_new_resqml2__obj_USCOREActivity(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREActivity(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREActivity * soap_new_req_resqml2__obj_USCOREActivity(
	struct soap *soap,
	eml__DataObjectReference *ActivityDescriptor,
	const std::vector<resqml2__AbstractActivityParameter *> & Parameter,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREActivity *_p = soap_new_resqml2__obj_USCOREActivity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREActivity::ActivityDescriptor = ActivityDescriptor;
		_p->resqml2__obj_USCOREActivity::Parameter = Parameter;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCOREActivity * soap_new_set_resqml2__obj_USCOREActivity(
	struct soap *soap,
	eml__DataObjectReference *Parent,
	eml__DataObjectReference *ActivityDescriptor,
	const std::vector<resqml2__AbstractActivityParameter *> & Parameter,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREActivity *_p = soap_new_resqml2__obj_USCOREActivity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREActivity::Parent = Parent;
		_p->resqml2__obj_USCOREActivity::ActivityDescriptor = ActivityDescriptor;
		_p->resqml2__obj_USCOREActivity::Parameter = Parameter;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREActivity(struct soap *soap, resqml2__obj_USCOREActivity const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_Activity", "resqml2:obj_Activity") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREActivity * SOAP_FMAC4 soap_get_resqml2__obj_USCOREActivity(struct soap*, resqml2__obj_USCOREActivity *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREActivity(struct soap *soap, resqml2__obj_USCOREActivity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREActivity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ObjectParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ObjectParameterKey_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ObjectParameterKey(struct soap*, const char*, int, const resqml2__ObjectParameterKey *, const char*);
SOAP_FMAC3 resqml2__ObjectParameterKey * SOAP_FMAC4 soap_in_resqml2__ObjectParameterKey(struct soap*, const char*, resqml2__ObjectParameterKey *, const char*);
SOAP_FMAC1 resqml2__ObjectParameterKey * SOAP_FMAC2 soap_instantiate_resqml2__ObjectParameterKey(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ObjectParameterKey * soap_new_resqml2__ObjectParameterKey(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ObjectParameterKey(soap, n, NULL, NULL, NULL);
}

inline resqml2__ObjectParameterKey * soap_new_req_resqml2__ObjectParameterKey(
	struct soap *soap,
	eml__DataObjectReference *DataObject)
{
	resqml2__ObjectParameterKey *_p = soap_new_resqml2__ObjectParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ObjectParameterKey::DataObject = DataObject;
	}
	return _p;
}

inline resqml2__ObjectParameterKey * soap_new_set_resqml2__ObjectParameterKey(
	struct soap *soap,
	eml__DataObjectReference *DataObject)
{
	resqml2__ObjectParameterKey *_p = soap_new_resqml2__ObjectParameterKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ObjectParameterKey::DataObject = DataObject;
	}
	return _p;
}

inline int soap_write_resqml2__ObjectParameterKey(struct soap *soap, resqml2__ObjectParameterKey const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ObjectParameterKey", "resqml2:ObjectParameterKey") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ObjectParameterKey * SOAP_FMAC4 soap_get_resqml2__ObjectParameterKey(struct soap*, resqml2__ObjectParameterKey *, const char*, const char*);

inline int soap_read_resqml2__ObjectParameterKey(struct soap *soap, resqml2__ObjectParameterKey *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ObjectParameterKey(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DataObjectParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DataObjectParameter_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__DataObjectParameter(struct soap*, const char*, int, const resqml2__DataObjectParameter *, const char*);
SOAP_FMAC3 resqml2__DataObjectParameter * SOAP_FMAC4 soap_in_resqml2__DataObjectParameter(struct soap*, const char*, resqml2__DataObjectParameter *, const char*);
SOAP_FMAC1 resqml2__DataObjectParameter * SOAP_FMAC2 soap_instantiate_resqml2__DataObjectParameter(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__DataObjectParameter * soap_new_resqml2__DataObjectParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__DataObjectParameter(soap, n, NULL, NULL, NULL);
}

inline resqml2__DataObjectParameter * soap_new_req_resqml2__DataObjectParameter(
	struct soap *soap,
	eml__DataObjectReference *DataObject,
	const std::string& Title1)
{
	resqml2__DataObjectParameter *_p = soap_new_resqml2__DataObjectParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DataObjectParameter::DataObject = DataObject;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
	}
	return _p;
}

inline resqml2__DataObjectParameter * soap_new_set_resqml2__DataObjectParameter(
	struct soap *soap,
	eml__DataObjectReference *DataObject,
	const std::string& Title1,
	LONG64 *Index1,
	std::string *Selection1,
	const std::vector<resqml2__AbstractParameterKey *> & Key1)
{
	resqml2__DataObjectParameter *_p = soap_new_resqml2__DataObjectParameter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DataObjectParameter::DataObject = DataObject;
		_p->resqml2__AbstractActivityParameter::Title = Title1;
		_p->resqml2__AbstractActivityParameter::Index = Index1;
		_p->resqml2__AbstractActivityParameter::Selection = Selection1;
		_p->resqml2__AbstractActivityParameter::Key = Key1;
	}
	return _p;
}

inline int soap_write_resqml2__DataObjectParameter(struct soap *soap, resqml2__DataObjectParameter const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:DataObjectParameter", "resqml2:DataObjectParameter") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__DataObjectParameter * SOAP_FMAC4 soap_get_resqml2__DataObjectParameter(struct soap*, resqml2__DataObjectParameter *, const char*, const char*);

inline int soap_read_resqml2__DataObjectParameter(struct soap *soap, resqml2__DataObjectParameter *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__DataObjectParameter(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__WitsmlWellboreReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__WitsmlWellboreReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__WitsmlWellboreReference(struct soap*, const char*, int, const resqml2__WitsmlWellboreReference *, const char*);
SOAP_FMAC3 resqml2__WitsmlWellboreReference * SOAP_FMAC4 soap_in_resqml2__WitsmlWellboreReference(struct soap*, const char*, resqml2__WitsmlWellboreReference *, const char*);
SOAP_FMAC1 resqml2__WitsmlWellboreReference * SOAP_FMAC2 soap_instantiate_resqml2__WitsmlWellboreReference(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__WitsmlWellboreReference * soap_new_resqml2__WitsmlWellboreReference(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__WitsmlWellboreReference(soap, n, NULL, NULL, NULL);
}

inline resqml2__WitsmlWellboreReference * soap_new_req_resqml2__WitsmlWellboreReference(
	struct soap *soap,
	eml__DataObjectReference *WitsmlWell,
	eml__DataObjectReference *WitsmlWellbore)
{
	resqml2__WitsmlWellboreReference *_p = soap_new_resqml2__WitsmlWellboreReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__WitsmlWellboreReference::WitsmlWell = WitsmlWell;
		_p->resqml2__WitsmlWellboreReference::WitsmlWellbore = WitsmlWellbore;
	}
	return _p;
}

inline resqml2__WitsmlWellboreReference * soap_new_set_resqml2__WitsmlWellboreReference(
	struct soap *soap,
	eml__DataObjectReference *WitsmlWell,
	eml__DataObjectReference *WitsmlWellbore)
{
	resqml2__WitsmlWellboreReference *_p = soap_new_resqml2__WitsmlWellboreReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__WitsmlWellboreReference::WitsmlWell = WitsmlWell;
		_p->resqml2__WitsmlWellboreReference::WitsmlWellbore = WitsmlWellbore;
	}
	return _p;
}

inline int soap_write_resqml2__WitsmlWellboreReference(struct soap *soap, resqml2__WitsmlWellboreReference const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:WitsmlWellboreReference", "resqml2:WitsmlWellboreReference") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__WitsmlWellboreReference * SOAP_FMAC4 soap_get_resqml2__WitsmlWellboreReference(struct soap*, resqml2__WitsmlWellboreReference *, const char*, const char*);

inline int soap_read_resqml2__WitsmlWellboreReference(struct soap *soap, resqml2__WitsmlWellboreReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__WitsmlWellboreReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractSeismicSurveyFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractSeismicSurveyFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractSeismicSurveyFeature(struct soap*, const char*, int, const resqml2__AbstractSeismicSurveyFeature *, const char*);
SOAP_FMAC3 resqml2__AbstractSeismicSurveyFeature * SOAP_FMAC4 soap_in_resqml2__AbstractSeismicSurveyFeature(struct soap*, const char*, resqml2__AbstractSeismicSurveyFeature *, const char*);
SOAP_FMAC1 resqml2__AbstractSeismicSurveyFeature * SOAP_FMAC2 soap_instantiate_resqml2__AbstractSeismicSurveyFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractSeismicSurveyFeature * soap_new_resqml2__AbstractSeismicSurveyFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractSeismicSurveyFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractSeismicSurveyFeature * soap_new_req_resqml2__AbstractSeismicSurveyFeature(
	struct soap *soap,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractSeismicSurveyFeature *_p = soap_new_resqml2__AbstractSeismicSurveyFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__AbstractSeismicSurveyFeature * soap_new_set_resqml2__AbstractSeismicSurveyFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractSeismicSurveyFeature *_p = soap_new_resqml2__AbstractSeismicSurveyFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractSeismicSurveyFeature(struct soap *soap, resqml2__AbstractSeismicSurveyFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractSeismicSurveyFeature", "resqml2:AbstractSeismicSurveyFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractSeismicSurveyFeature * SOAP_FMAC4 soap_get_resqml2__AbstractSeismicSurveyFeature(struct soap*, resqml2__AbstractSeismicSurveyFeature *, const char*, const char*);

inline int soap_read_resqml2__AbstractSeismicSurveyFeature(struct soap *soap, resqml2__AbstractSeismicSurveyFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractSeismicSurveyFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESeismicLatticeFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESeismicLatticeFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORESeismicLatticeFeature(struct soap*, const char*, int, const resqml2__obj_USCORESeismicLatticeFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCORESeismicLatticeFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCORESeismicLatticeFeature(struct soap*, const char*, resqml2__obj_USCORESeismicLatticeFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCORESeismicLatticeFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORESeismicLatticeFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORESeismicLatticeFeature * soap_new_resqml2__obj_USCORESeismicLatticeFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORESeismicLatticeFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORESeismicLatticeFeature * soap_new_req_resqml2__obj_USCORESeismicLatticeFeature(
	struct soap *soap,
	ULONG64 CrosslineCount,
	LONG64 CrosslineIndexIncrement,
	LONG64 FirstCrosslineIndex,
	LONG64 FirstInlineIndex,
	ULONG64 InlineCount,
	LONG64 InlineIndexIncrement,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORESeismicLatticeFeature *_p = soap_new_resqml2__obj_USCORESeismicLatticeFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORESeismicLatticeFeature::CrosslineCount = CrosslineCount;
		_p->resqml2__obj_USCORESeismicLatticeFeature::CrosslineIndexIncrement = CrosslineIndexIncrement;
		_p->resqml2__obj_USCORESeismicLatticeFeature::FirstCrosslineIndex = FirstCrosslineIndex;
		_p->resqml2__obj_USCORESeismicLatticeFeature::FirstInlineIndex = FirstInlineIndex;
		_p->resqml2__obj_USCORESeismicLatticeFeature::InlineCount = InlineCount;
		_p->resqml2__obj_USCORESeismicLatticeFeature::InlineIndexIncrement = InlineIndexIncrement;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORESeismicLatticeFeature * soap_new_set_resqml2__obj_USCORESeismicLatticeFeature(
	struct soap *soap,
	ULONG64 CrosslineCount,
	LONG64 CrosslineIndexIncrement,
	LONG64 FirstCrosslineIndex,
	LONG64 FirstInlineIndex,
	ULONG64 InlineCount,
	LONG64 InlineIndexIncrement,
	resqml2__SeismicLatticeSetFeature *IsPartOf,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORESeismicLatticeFeature *_p = soap_new_resqml2__obj_USCORESeismicLatticeFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORESeismicLatticeFeature::CrosslineCount = CrosslineCount;
		_p->resqml2__obj_USCORESeismicLatticeFeature::CrosslineIndexIncrement = CrosslineIndexIncrement;
		_p->resqml2__obj_USCORESeismicLatticeFeature::FirstCrosslineIndex = FirstCrosslineIndex;
		_p->resqml2__obj_USCORESeismicLatticeFeature::FirstInlineIndex = FirstInlineIndex;
		_p->resqml2__obj_USCORESeismicLatticeFeature::InlineCount = InlineCount;
		_p->resqml2__obj_USCORESeismicLatticeFeature::InlineIndexIncrement = InlineIndexIncrement;
		_p->resqml2__obj_USCORESeismicLatticeFeature::IsPartOf = IsPartOf;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORESeismicLatticeFeature(struct soap *soap, resqml2__obj_USCORESeismicLatticeFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_SeismicLatticeFeature", "resqml2:obj_SeismicLatticeFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORESeismicLatticeFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCORESeismicLatticeFeature(struct soap*, resqml2__obj_USCORESeismicLatticeFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORESeismicLatticeFeature(struct soap *soap, resqml2__obj_USCORESeismicLatticeFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORESeismicLatticeFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESeismicLineFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESeismicLineFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORESeismicLineFeature(struct soap*, const char*, int, const resqml2__obj_USCORESeismicLineFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCORESeismicLineFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCORESeismicLineFeature(struct soap*, const char*, resqml2__obj_USCORESeismicLineFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCORESeismicLineFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORESeismicLineFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORESeismicLineFeature * soap_new_resqml2__obj_USCORESeismicLineFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORESeismicLineFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORESeismicLineFeature * soap_new_req_resqml2__obj_USCORESeismicLineFeature(
	struct soap *soap,
	LONG64 FirstTraceIndex,
	ULONG64 TraceCount,
	LONG64 TraceIndexIncrement,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORESeismicLineFeature *_p = soap_new_resqml2__obj_USCORESeismicLineFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORESeismicLineFeature::FirstTraceIndex = FirstTraceIndex;
		_p->resqml2__obj_USCORESeismicLineFeature::TraceCount = TraceCount;
		_p->resqml2__obj_USCORESeismicLineFeature::TraceIndexIncrement = TraceIndexIncrement;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORESeismicLineFeature * soap_new_set_resqml2__obj_USCORESeismicLineFeature(
	struct soap *soap,
	LONG64 FirstTraceIndex,
	ULONG64 TraceCount,
	LONG64 TraceIndexIncrement,
	eml__DataObjectReference *IsPartOf,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORESeismicLineFeature *_p = soap_new_resqml2__obj_USCORESeismicLineFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORESeismicLineFeature::FirstTraceIndex = FirstTraceIndex;
		_p->resqml2__obj_USCORESeismicLineFeature::TraceCount = TraceCount;
		_p->resqml2__obj_USCORESeismicLineFeature::TraceIndexIncrement = TraceIndexIncrement;
		_p->resqml2__obj_USCORESeismicLineFeature::IsPartOf = IsPartOf;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORESeismicLineFeature(struct soap *soap, resqml2__obj_USCORESeismicLineFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_SeismicLineFeature", "resqml2:obj_SeismicLineFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORESeismicLineFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCORESeismicLineFeature(struct soap*, resqml2__obj_USCORESeismicLineFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORESeismicLineFeature(struct soap *soap, resqml2__obj_USCORESeismicLineFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORESeismicLineFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREWellboreFeature(struct soap*, const char*, int, const resqml2__obj_USCOREWellboreFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREWellboreFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREWellboreFeature(struct soap*, const char*, resqml2__obj_USCOREWellboreFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREWellboreFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREWellboreFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREWellboreFeature * soap_new_resqml2__obj_USCOREWellboreFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREWellboreFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREWellboreFeature * soap_new_req_resqml2__obj_USCOREWellboreFeature(
	struct soap *soap,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREWellboreFeature *_p = soap_new_resqml2__obj_USCOREWellboreFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREWellboreFeature * soap_new_set_resqml2__obj_USCOREWellboreFeature(
	struct soap *soap,
	resqml2__WitsmlWellboreReference *WitsmlWellbore,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREWellboreFeature *_p = soap_new_resqml2__obj_USCOREWellboreFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREWellboreFeature::WitsmlWellbore = WitsmlWellbore;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREWellboreFeature(struct soap *soap, resqml2__obj_USCOREWellboreFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_WellboreFeature", "resqml2:obj_WellboreFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREWellboreFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREWellboreFeature(struct soap*, resqml2__obj_USCOREWellboreFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREWellboreFeature(struct soap *soap, resqml2__obj_USCOREWellboreFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREWellboreFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESeismicLineSetFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESeismicLineSetFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORESeismicLineSetFeature(struct soap*, const char*, int, const resqml2__obj_USCORESeismicLineSetFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCORESeismicLineSetFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCORESeismicLineSetFeature(struct soap*, const char*, resqml2__obj_USCORESeismicLineSetFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCORESeismicLineSetFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORESeismicLineSetFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORESeismicLineSetFeature * soap_new_resqml2__obj_USCORESeismicLineSetFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORESeismicLineSetFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORESeismicLineSetFeature * soap_new_req_resqml2__obj_USCORESeismicLineSetFeature(
	struct soap *soap,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORESeismicLineSetFeature *_p = soap_new_resqml2__obj_USCORESeismicLineSetFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORESeismicLineSetFeature * soap_new_set_resqml2__obj_USCORESeismicLineSetFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORESeismicLineSetFeature *_p = soap_new_resqml2__obj_USCORESeismicLineSetFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORESeismicLineSetFeature(struct soap *soap, resqml2__obj_USCORESeismicLineSetFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_SeismicLineSetFeature", "resqml2:obj_SeismicLineSetFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORESeismicLineSetFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCORESeismicLineSetFeature(struct soap*, resqml2__obj_USCORESeismicLineSetFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORESeismicLineSetFeature(struct soap *soap, resqml2__obj_USCORESeismicLineSetFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORESeismicLineSetFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SeismicLatticeSetFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SeismicLatticeSetFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SeismicLatticeSetFeature(struct soap*, const char*, int, const resqml2__SeismicLatticeSetFeature *, const char*);
SOAP_FMAC3 resqml2__SeismicLatticeSetFeature * SOAP_FMAC4 soap_in_resqml2__SeismicLatticeSetFeature(struct soap*, const char*, resqml2__SeismicLatticeSetFeature *, const char*);
SOAP_FMAC1 resqml2__SeismicLatticeSetFeature * SOAP_FMAC2 soap_instantiate_resqml2__SeismicLatticeSetFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__SeismicLatticeSetFeature * soap_new_resqml2__SeismicLatticeSetFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__SeismicLatticeSetFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__SeismicLatticeSetFeature * soap_new_req_resqml2__SeismicLatticeSetFeature(
	struct soap *soap,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__SeismicLatticeSetFeature *_p = soap_new_resqml2__SeismicLatticeSetFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__SeismicLatticeSetFeature * soap_new_set_resqml2__SeismicLatticeSetFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__SeismicLatticeSetFeature *_p = soap_new_resqml2__SeismicLatticeSetFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__SeismicLatticeSetFeature(struct soap *soap, resqml2__SeismicLatticeSetFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:SeismicLatticeSetFeature", "resqml2:SeismicLatticeSetFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__SeismicLatticeSetFeature * SOAP_FMAC4 soap_get_resqml2__SeismicLatticeSetFeature(struct soap*, resqml2__SeismicLatticeSetFeature *, const char*, const char*);

inline int soap_read_resqml2__SeismicLatticeSetFeature(struct soap *soap, resqml2__SeismicLatticeSetFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__SeismicLatticeSetFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREFrontierFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREFrontierFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREFrontierFeature(struct soap*, const char*, int, const resqml2__obj_USCOREFrontierFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREFrontierFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREFrontierFeature(struct soap*, const char*, resqml2__obj_USCOREFrontierFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREFrontierFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREFrontierFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREFrontierFeature * soap_new_resqml2__obj_USCOREFrontierFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREFrontierFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREFrontierFeature * soap_new_req_resqml2__obj_USCOREFrontierFeature(
	struct soap *soap,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREFrontierFeature *_p = soap_new_resqml2__obj_USCOREFrontierFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREFrontierFeature * soap_new_set_resqml2__obj_USCOREFrontierFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREFrontierFeature *_p = soap_new_resqml2__obj_USCOREFrontierFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREFrontierFeature(struct soap *soap, resqml2__obj_USCOREFrontierFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_FrontierFeature", "resqml2:obj_FrontierFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREFrontierFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREFrontierFeature(struct soap*, resqml2__obj_USCOREFrontierFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREFrontierFeature(struct soap *soap, resqml2__obj_USCOREFrontierFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREFrontierFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractTechnicalFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractTechnicalFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractTechnicalFeature(struct soap*, const char*, int, const resqml2__AbstractTechnicalFeature *, const char*);
SOAP_FMAC3 resqml2__AbstractTechnicalFeature * SOAP_FMAC4 soap_in_resqml2__AbstractTechnicalFeature(struct soap*, const char*, resqml2__AbstractTechnicalFeature *, const char*);
SOAP_FMAC1 resqml2__AbstractTechnicalFeature * SOAP_FMAC2 soap_instantiate_resqml2__AbstractTechnicalFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractTechnicalFeature * soap_new_resqml2__AbstractTechnicalFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractTechnicalFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractTechnicalFeature * soap_new_req_resqml2__AbstractTechnicalFeature(
	struct soap *soap,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractTechnicalFeature *_p = soap_new_resqml2__AbstractTechnicalFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__AbstractTechnicalFeature * soap_new_set_resqml2__AbstractTechnicalFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractTechnicalFeature *_p = soap_new_resqml2__AbstractTechnicalFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractTechnicalFeature(struct soap *soap, resqml2__AbstractTechnicalFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractTechnicalFeature", "resqml2:AbstractTechnicalFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractTechnicalFeature * SOAP_FMAC4 soap_get_resqml2__AbstractTechnicalFeature(struct soap*, resqml2__AbstractTechnicalFeature *, const char*, const char*);

inline int soap_read_resqml2__AbstractTechnicalFeature(struct soap *soap, resqml2__AbstractTechnicalFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractTechnicalFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactRepresentationReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactRepresentationReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ContactRepresentationReference(struct soap*, const char*, int, const resqml2__ContactRepresentationReference *, const char*);
SOAP_FMAC3 resqml2__ContactRepresentationReference * SOAP_FMAC4 soap_in_resqml2__ContactRepresentationReference(struct soap*, const char*, resqml2__ContactRepresentationReference *, const char*);
SOAP_FMAC1 resqml2__ContactRepresentationReference * SOAP_FMAC2 soap_instantiate_resqml2__ContactRepresentationReference(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ContactRepresentationReference * soap_new_resqml2__ContactRepresentationReference(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ContactRepresentationReference(soap, n, NULL, NULL, NULL);
}

inline resqml2__ContactRepresentationReference * soap_new_req_resqml2__ContactRepresentationReference(
	struct soap *soap,
	eml__DataObjectReference *Representation,
	ULONG64 Index1)
{
	resqml2__ContactRepresentationReference *_p = soap_new_resqml2__ContactRepresentationReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ContactRepresentationReference::Representation = Representation;
		_p->resqml2__AbstractContactRepresentationPart::Index = Index1;
	}
	return _p;
}

inline resqml2__ContactRepresentationReference * soap_new_set_resqml2__ContactRepresentationReference(
	struct soap *soap,
	eml__DataObjectReference *Representation,
	ULONG64 Index1)
{
	resqml2__ContactRepresentationReference *_p = soap_new_resqml2__ContactRepresentationReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ContactRepresentationReference::Representation = Representation;
		_p->resqml2__AbstractContactRepresentationPart::Index = Index1;
	}
	return _p;
}

inline int soap_write_resqml2__ContactRepresentationReference(struct soap *soap, resqml2__ContactRepresentationReference const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ContactRepresentationReference", "resqml2:ContactRepresentationReference") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ContactRepresentationReference * SOAP_FMAC4 soap_get_resqml2__ContactRepresentationReference(struct soap*, resqml2__ContactRepresentationReference *, const char*, const char*);

inline int soap_read_resqml2__ContactRepresentationReference(struct soap *soap, resqml2__ContactRepresentationReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ContactRepresentationReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactIdentity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ContactIdentity(struct soap*, const char*, int, const resqml2__ContactIdentity *, const char*);
SOAP_FMAC3 resqml2__ContactIdentity * SOAP_FMAC4 soap_in_resqml2__ContactIdentity(struct soap*, const char*, resqml2__ContactIdentity *, const char*);
SOAP_FMAC1 resqml2__ContactIdentity * SOAP_FMAC2 soap_instantiate_resqml2__ContactIdentity(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ContactIdentity * soap_new_resqml2__ContactIdentity(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ContactIdentity(soap, n, NULL, NULL, NULL);
}

inline resqml2__ContactIdentity * soap_new_req_resqml2__ContactIdentity(
	struct soap *soap,
	enum resqml2__IdentityKind IdentityKind,
	resqml2__AbstractIntegerArray *ListOfContactRepresentations)
{
	resqml2__ContactIdentity *_p = soap_new_resqml2__ContactIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ContactIdentity::IdentityKind = IdentityKind;
		_p->resqml2__ContactIdentity::ListOfContactRepresentations = ListOfContactRepresentations;
	}
	return _p;
}

inline resqml2__ContactIdentity * soap_new_set_resqml2__ContactIdentity(
	struct soap *soap,
	enum resqml2__IdentityKind IdentityKind,
	resqml2__AbstractIntegerArray *ListOfContactRepresentations,
	resqml2__AbstractIntegerArray *ListOfIdenticalNodes)
{
	resqml2__ContactIdentity *_p = soap_new_resqml2__ContactIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ContactIdentity::IdentityKind = IdentityKind;
		_p->resqml2__ContactIdentity::ListOfContactRepresentations = ListOfContactRepresentations;
		_p->resqml2__ContactIdentity::ListOfIdenticalNodes = ListOfIdenticalNodes;
	}
	return _p;
}

inline int soap_write_resqml2__ContactIdentity(struct soap *soap, resqml2__ContactIdentity const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ContactIdentity", "resqml2:ContactIdentity") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ContactIdentity * SOAP_FMAC4 soap_get_resqml2__ContactIdentity(struct soap*, resqml2__ContactIdentity *, const char*, const char*);

inline int soap_read_resqml2__ContactIdentity(struct soap *soap, resqml2__ContactIdentity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ContactIdentity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__OrientedMacroFace_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__OrientedMacroFace_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__OrientedMacroFace(struct soap*, const char*, int, const resqml2__OrientedMacroFace *, const char*);
SOAP_FMAC3 resqml2__OrientedMacroFace * SOAP_FMAC4 soap_in_resqml2__OrientedMacroFace(struct soap*, const char*, resqml2__OrientedMacroFace *, const char*);
SOAP_FMAC1 resqml2__OrientedMacroFace * SOAP_FMAC2 soap_instantiate_resqml2__OrientedMacroFace(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__OrientedMacroFace * soap_new_resqml2__OrientedMacroFace(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__OrientedMacroFace(soap, n, NULL, NULL, NULL);
}

inline resqml2__OrientedMacroFace * soap_new_req_resqml2__OrientedMacroFace(
	struct soap *soap,
	ULONG64 PatchIndexOfRepresentation,
	ULONG64 RepresentationIndex,
	bool SideIsPlus)
{
	resqml2__OrientedMacroFace *_p = soap_new_resqml2__OrientedMacroFace(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__OrientedMacroFace::PatchIndexOfRepresentation = PatchIndexOfRepresentation;
		_p->resqml2__OrientedMacroFace::RepresentationIndex = RepresentationIndex;
		_p->resqml2__OrientedMacroFace::SideIsPlus = SideIsPlus;
	}
	return _p;
}

inline resqml2__OrientedMacroFace * soap_new_set_resqml2__OrientedMacroFace(
	struct soap *soap,
	ULONG64 PatchIndexOfRepresentation,
	ULONG64 RepresentationIndex,
	bool SideIsPlus)
{
	resqml2__OrientedMacroFace *_p = soap_new_resqml2__OrientedMacroFace(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__OrientedMacroFace::PatchIndexOfRepresentation = PatchIndexOfRepresentation;
		_p->resqml2__OrientedMacroFace::RepresentationIndex = RepresentationIndex;
		_p->resqml2__OrientedMacroFace::SideIsPlus = SideIsPlus;
	}
	return _p;
}

inline int soap_write_resqml2__OrientedMacroFace(struct soap *soap, resqml2__OrientedMacroFace const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:OrientedMacroFace", "resqml2:OrientedMacroFace") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__OrientedMacroFace * SOAP_FMAC4 soap_get_resqml2__OrientedMacroFace(struct soap*, resqml2__OrientedMacroFace *, const char*, const char*);

inline int soap_read_resqml2__OrientedMacroFace(struct soap *soap, resqml2__OrientedMacroFace *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__OrientedMacroFace(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PolylineSetPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__PolylineSetPatch(struct soap*, const char*, int, const resqml2__PolylineSetPatch *, const char*);
SOAP_FMAC3 resqml2__PolylineSetPatch * SOAP_FMAC4 soap_in_resqml2__PolylineSetPatch(struct soap*, const char*, resqml2__PolylineSetPatch *, const char*);
SOAP_FMAC1 resqml2__PolylineSetPatch * SOAP_FMAC2 soap_instantiate_resqml2__PolylineSetPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__PolylineSetPatch * soap_new_resqml2__PolylineSetPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__PolylineSetPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__PolylineSetPatch * soap_new_req_resqml2__PolylineSetPatch(
	struct soap *soap,
	resqml2__AbstractBooleanArray *ClosedPolylines,
	resqml2__AbstractIntegerArray *NodeCountPerPolyline,
	resqml2__PointGeometry *Geometry,
	ULONG64 PatchIndex1)
{
	resqml2__PolylineSetPatch *_p = soap_new_resqml2__PolylineSetPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PolylineSetPatch::ClosedPolylines = ClosedPolylines;
		_p->resqml2__PolylineSetPatch::NodeCountPerPolyline = NodeCountPerPolyline;
		_p->resqml2__PolylineSetPatch::Geometry = Geometry;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__PolylineSetPatch * soap_new_set_resqml2__PolylineSetPatch(
	struct soap *soap,
	resqml2__AbstractBooleanArray *ClosedPolylines,
	resqml2__AbstractIntegerArray *NodeCountPerPolyline,
	resqml2__PointGeometry *Geometry,
	ULONG64 PatchIndex1)
{
	resqml2__PolylineSetPatch *_p = soap_new_resqml2__PolylineSetPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PolylineSetPatch::ClosedPolylines = ClosedPolylines;
		_p->resqml2__PolylineSetPatch::NodeCountPerPolyline = NodeCountPerPolyline;
		_p->resqml2__PolylineSetPatch::Geometry = Geometry;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__PolylineSetPatch(struct soap *soap, resqml2__PolylineSetPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:PolylineSetPatch", "resqml2:PolylineSetPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__PolylineSetPatch * SOAP_FMAC4 soap_get_resqml2__PolylineSetPatch(struct soap*, resqml2__PolylineSetPatch *, const char*, const char*);

inline int soap_read_resqml2__PolylineSetPatch(struct soap *soap, resqml2__PolylineSetPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__PolylineSetPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGrid2dSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGrid2dSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGrid2dSetRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREGrid2dSetRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGrid2dSetRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGrid2dSetRepresentation(struct soap*, const char*, resqml2__obj_USCOREGrid2dSetRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGrid2dSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGrid2dSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGrid2dSetRepresentation * soap_new_resqml2__obj_USCOREGrid2dSetRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGrid2dSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGrid2dSetRepresentation * soap_new_req_resqml2__obj_USCOREGrid2dSetRepresentation(
	struct soap *soap,
	const std::vector<resqml2__Grid2dPatch *> & Grid2dPatch,
	enum resqml2__SurfaceRole SurfaceRole1,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGrid2dSetRepresentation *_p = soap_new_resqml2__obj_USCOREGrid2dSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGrid2dSetRepresentation::Grid2dPatch = Grid2dPatch;
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole1;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREGrid2dSetRepresentation * soap_new_set_resqml2__obj_USCOREGrid2dSetRepresentation(
	struct soap *soap,
	const std::vector<resqml2__Grid2dPatch *> & Grid2dPatch,
	enum resqml2__SurfaceRole SurfaceRole1,
	const std::vector<resqml2__PatchBoundaries *> & Boundaries1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGrid2dSetRepresentation *_p = soap_new_resqml2__obj_USCOREGrid2dSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGrid2dSetRepresentation::Grid2dPatch = Grid2dPatch;
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole1;
		_p->resqml2__AbstractSurfaceRepresentation::Boundaries = Boundaries1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGrid2dSetRepresentation(struct soap *soap, resqml2__obj_USCOREGrid2dSetRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_Grid2dSetRepresentation", "resqml2:obj_Grid2dSetRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGrid2dSetRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGrid2dSetRepresentation(struct soap*, resqml2__obj_USCOREGrid2dSetRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGrid2dSetRepresentation(struct soap *soap, resqml2__obj_USCOREGrid2dSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGrid2dSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Grid2dPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Grid2dPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Grid2dPatch(struct soap*, const char*, int, const resqml2__Grid2dPatch *, const char*);
SOAP_FMAC3 resqml2__Grid2dPatch * SOAP_FMAC4 soap_in_resqml2__Grid2dPatch(struct soap*, const char*, resqml2__Grid2dPatch *, const char*);
SOAP_FMAC1 resqml2__Grid2dPatch * SOAP_FMAC2 soap_instantiate_resqml2__Grid2dPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Grid2dPatch * soap_new_resqml2__Grid2dPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Grid2dPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__Grid2dPatch * soap_new_req_resqml2__Grid2dPatch(
	struct soap *soap,
	ULONG64 FastestAxisCount,
	ULONG64 SlowestAxisCount,
	resqml2__PointGeometry *Geometry,
	ULONG64 PatchIndex1)
{
	resqml2__Grid2dPatch *_p = soap_new_resqml2__Grid2dPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Grid2dPatch::FastestAxisCount = FastestAxisCount;
		_p->resqml2__Grid2dPatch::SlowestAxisCount = SlowestAxisCount;
		_p->resqml2__Grid2dPatch::Geometry = Geometry;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__Grid2dPatch * soap_new_set_resqml2__Grid2dPatch(
	struct soap *soap,
	ULONG64 FastestAxisCount,
	ULONG64 SlowestAxisCount,
	resqml2__PointGeometry *Geometry,
	ULONG64 PatchIndex1)
{
	resqml2__Grid2dPatch *_p = soap_new_resqml2__Grid2dPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Grid2dPatch::FastestAxisCount = FastestAxisCount;
		_p->resqml2__Grid2dPatch::SlowestAxisCount = SlowestAxisCount;
		_p->resqml2__Grid2dPatch::Geometry = Geometry;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__Grid2dPatch(struct soap *soap, resqml2__Grid2dPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Grid2dPatch", "resqml2:Grid2dPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Grid2dPatch * SOAP_FMAC4 soap_get_resqml2__Grid2dPatch(struct soap*, resqml2__Grid2dPatch *, const char*, const char*);

inline int soap_read_resqml2__Grid2dPatch(struct soap *soap, resqml2__Grid2dPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Grid2dPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractSurfaceRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractSurfaceRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractSurfaceRepresentation(struct soap*, const char*, int, const resqml2__AbstractSurfaceRepresentation *, const char*);
SOAP_FMAC3 resqml2__AbstractSurfaceRepresentation * SOAP_FMAC4 soap_in_resqml2__AbstractSurfaceRepresentation(struct soap*, const char*, resqml2__AbstractSurfaceRepresentation *, const char*);
SOAP_FMAC1 resqml2__AbstractSurfaceRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__AbstractSurfaceRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractSurfaceRepresentation * soap_new_resqml2__AbstractSurfaceRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractSurfaceRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractSurfaceRepresentation * soap_new_req_resqml2__AbstractSurfaceRepresentation(
	struct soap *soap,
	enum resqml2__SurfaceRole SurfaceRole,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractSurfaceRepresentation *_p = soap_new_resqml2__AbstractSurfaceRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__AbstractSurfaceRepresentation * soap_new_set_resqml2__AbstractSurfaceRepresentation(
	struct soap *soap,
	enum resqml2__SurfaceRole SurfaceRole,
	const std::vector<resqml2__PatchBoundaries *> & Boundaries,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractSurfaceRepresentation *_p = soap_new_resqml2__AbstractSurfaceRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole;
		_p->resqml2__AbstractSurfaceRepresentation::Boundaries = Boundaries;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractSurfaceRepresentation(struct soap *soap, resqml2__AbstractSurfaceRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractSurfaceRepresentation", "resqml2:AbstractSurfaceRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractSurfaceRepresentation * SOAP_FMAC4 soap_get_resqml2__AbstractSurfaceRepresentation(struct soap*, resqml2__AbstractSurfaceRepresentation *, const char*, const char*);

inline int soap_read_resqml2__AbstractSurfaceRepresentation(struct soap *soap, resqml2__AbstractSurfaceRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractSurfaceRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PatchBoundaries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PatchBoundaries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__PatchBoundaries(struct soap*, const char*, int, const resqml2__PatchBoundaries *, const char*);
SOAP_FMAC3 resqml2__PatchBoundaries * SOAP_FMAC4 soap_in_resqml2__PatchBoundaries(struct soap*, const char*, resqml2__PatchBoundaries *, const char*);
SOAP_FMAC1 resqml2__PatchBoundaries * SOAP_FMAC2 soap_instantiate_resqml2__PatchBoundaries(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__PatchBoundaries * soap_new_resqml2__PatchBoundaries(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__PatchBoundaries(soap, n, NULL, NULL, NULL);
}

inline resqml2__PatchBoundaries * soap_new_req_resqml2__PatchBoundaries(
	struct soap *soap,
	ULONG64 ReferencedPatch)
{
	resqml2__PatchBoundaries *_p = soap_new_resqml2__PatchBoundaries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PatchBoundaries::ReferencedPatch = ReferencedPatch;
	}
	return _p;
}

inline resqml2__PatchBoundaries * soap_new_set_resqml2__PatchBoundaries(
	struct soap *soap,
	const std::vector<eml__DataObjectReference *> & InnerRing,
	eml__DataObjectReference *OuterRing,
	ULONG64 ReferencedPatch)
{
	resqml2__PatchBoundaries *_p = soap_new_resqml2__PatchBoundaries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PatchBoundaries::InnerRing = InnerRing;
		_p->resqml2__PatchBoundaries::OuterRing = OuterRing;
		_p->resqml2__PatchBoundaries::ReferencedPatch = ReferencedPatch;
	}
	return _p;
}

inline int soap_write_resqml2__PatchBoundaries(struct soap *soap, resqml2__PatchBoundaries const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:PatchBoundaries", "resqml2:PatchBoundaries") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__PatchBoundaries * SOAP_FMAC4 soap_get_resqml2__PatchBoundaries(struct soap*, resqml2__PatchBoundaries *, const char*, const char*);

inline int soap_read_resqml2__PatchBoundaries(struct soap *soap, resqml2__PatchBoundaries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__PatchBoundaries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGrid2dRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGrid2dRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGrid2dRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREGrid2dRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGrid2dRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGrid2dRepresentation(struct soap*, const char*, resqml2__obj_USCOREGrid2dRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGrid2dRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGrid2dRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGrid2dRepresentation * soap_new_resqml2__obj_USCOREGrid2dRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGrid2dRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGrid2dRepresentation * soap_new_req_resqml2__obj_USCOREGrid2dRepresentation(
	struct soap *soap,
	resqml2__Grid2dPatch *Grid2dPatch,
	enum resqml2__SurfaceRole SurfaceRole1,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGrid2dRepresentation *_p = soap_new_resqml2__obj_USCOREGrid2dRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGrid2dRepresentation::Grid2dPatch = Grid2dPatch;
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole1;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREGrid2dRepresentation * soap_new_set_resqml2__obj_USCOREGrid2dRepresentation(
	struct soap *soap,
	resqml2__Grid2dPatch *Grid2dPatch,
	enum resqml2__SurfaceRole SurfaceRole1,
	const std::vector<resqml2__PatchBoundaries *> & Boundaries1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGrid2dRepresentation *_p = soap_new_resqml2__obj_USCOREGrid2dRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGrid2dRepresentation::Grid2dPatch = Grid2dPatch;
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole1;
		_p->resqml2__AbstractSurfaceRepresentation::Boundaries = Boundaries1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGrid2dRepresentation(struct soap *soap, resqml2__obj_USCOREGrid2dRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_Grid2dRepresentation", "resqml2:obj_Grid2dRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGrid2dRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGrid2dRepresentation(struct soap*, resqml2__obj_USCOREGrid2dRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGrid2dRepresentation(struct soap *soap, resqml2__obj_USCOREGrid2dRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGrid2dRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPolylineRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPolylineRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREPolylineRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREPolylineRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREPolylineRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREPolylineRepresentation(struct soap*, const char*, resqml2__obj_USCOREPolylineRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREPolylineRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREPolylineRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREPolylineRepresentation * soap_new_resqml2__obj_USCOREPolylineRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREPolylineRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREPolylineRepresentation * soap_new_req_resqml2__obj_USCOREPolylineRepresentation(
	struct soap *soap,
	bool IsClosed,
	resqml2__NodePatch *NodePatch,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREPolylineRepresentation *_p = soap_new_resqml2__obj_USCOREPolylineRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPolylineRepresentation::IsClosed = IsClosed;
		_p->resqml2__obj_USCOREPolylineRepresentation::NodePatch = NodePatch;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREPolylineRepresentation * soap_new_set_resqml2__obj_USCOREPolylineRepresentation(
	struct soap *soap,
	enum resqml2__LineRole *LineRole,
	bool IsClosed,
	resqml2__NodePatch *NodePatch,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREPolylineRepresentation *_p = soap_new_resqml2__obj_USCOREPolylineRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPolylineRepresentation::LineRole = LineRole;
		_p->resqml2__obj_USCOREPolylineRepresentation::IsClosed = IsClosed;
		_p->resqml2__obj_USCOREPolylineRepresentation::NodePatch = NodePatch;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREPolylineRepresentation(struct soap *soap, resqml2__obj_USCOREPolylineRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_PolylineRepresentation", "resqml2:obj_PolylineRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREPolylineRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREPolylineRepresentation(struct soap*, resqml2__obj_USCOREPolylineRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREPolylineRepresentation(struct soap *soap, resqml2__obj_USCOREPolylineRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREPolylineRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TrianglePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TrianglePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TrianglePatch(struct soap*, const char*, int, const resqml2__TrianglePatch *, const char*);
SOAP_FMAC3 resqml2__TrianglePatch * SOAP_FMAC4 soap_in_resqml2__TrianglePatch(struct soap*, const char*, resqml2__TrianglePatch *, const char*);
SOAP_FMAC1 resqml2__TrianglePatch * SOAP_FMAC2 soap_instantiate_resqml2__TrianglePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__TrianglePatch * soap_new_resqml2__TrianglePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__TrianglePatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__TrianglePatch * soap_new_req_resqml2__TrianglePatch(
	struct soap *soap,
	ULONG64 NodeCount,
	resqml2__AbstractIntegerArray *Triangles,
	resqml2__PointGeometry *Geometry,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__TrianglePatch *_p = soap_new_resqml2__TrianglePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TrianglePatch::NodeCount = NodeCount;
		_p->resqml2__TrianglePatch::Triangles = Triangles;
		_p->resqml2__TrianglePatch::Geometry = Geometry;
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline resqml2__TrianglePatch * soap_new_set_resqml2__TrianglePatch(
	struct soap *soap,
	ULONG64 NodeCount,
	resqml2__AbstractIntegerArray *Triangles,
	resqml2__PointGeometry *Geometry,
	const std::vector<resqml2__EdgePatch *> & SplitEdgePatch,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__TrianglePatch *_p = soap_new_resqml2__TrianglePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TrianglePatch::NodeCount = NodeCount;
		_p->resqml2__TrianglePatch::Triangles = Triangles;
		_p->resqml2__TrianglePatch::Geometry = Geometry;
		_p->resqml2__TrianglePatch::SplitEdgePatch = SplitEdgePatch;
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline int soap_write_resqml2__TrianglePatch(struct soap *soap, resqml2__TrianglePatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:TrianglePatch", "resqml2:TrianglePatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__TrianglePatch * SOAP_FMAC4 soap_get_resqml2__TrianglePatch(struct soap*, resqml2__TrianglePatch *, const char*, const char*);

inline int soap_read_resqml2__TrianglePatch(struct soap *soap, resqml2__TrianglePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__TrianglePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, const char*, int, const resqml2__obj_USCORESealedSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORESealedSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, const char*, resqml2__obj_USCORESealedSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORESealedSurfaceFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORESealedSurfaceFrameworkRepresentation * soap_new_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORESealedSurfaceFrameworkRepresentation * soap_new_req_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(
	struct soap *soap,
	bool IsHomogeneous2,
	const std::vector<eml__DataObjectReference *> & Representation2,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORESealedSurfaceFrameworkRepresentation *_p = soap_new_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous2;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation2;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORESealedSurfaceFrameworkRepresentation * soap_new_set_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(
	struct soap *soap,
	const std::vector<resqml2__SealedContactRepresentationPart *> & SealedContactRepresentation,
	const std::vector<resqml2__ContactIdentity *> & ContactIdentity1,
	bool IsHomogeneous2,
	const std::vector<eml__DataObjectReference *> & Representation2,
	eml__DataObjectReference *RepresentedInterpretation3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORESealedSurfaceFrameworkRepresentation *_p = soap_new_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORESealedSurfaceFrameworkRepresentation::SealedContactRepresentation = SealedContactRepresentation;
		_p->resqml2__AbstractSurfaceFrameworkRepresentation::ContactIdentity = ContactIdentity1;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous2;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation2;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, resqml2__obj_USCORESealedSurfaceFrameworkRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_SealedSurfaceFrameworkRepresentation", "resqml2:obj_SealedSurfaceFrameworkRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORESealedSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap*, resqml2__obj_USCORESealedSurfaceFrameworkRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(struct soap *soap, resqml2__obj_USCORESealedSurfaceFrameworkRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORESealedSurfaceFrameworkRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__NodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__NodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__NodePatch(struct soap*, const char*, int, const resqml2__NodePatch *, const char*);
SOAP_FMAC3 resqml2__NodePatch * SOAP_FMAC4 soap_in_resqml2__NodePatch(struct soap*, const char*, resqml2__NodePatch *, const char*);
SOAP_FMAC1 resqml2__NodePatch * SOAP_FMAC2 soap_instantiate_resqml2__NodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__NodePatch * soap_new_resqml2__NodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__NodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__NodePatch * soap_new_req_resqml2__NodePatch(
	struct soap *soap,
	resqml2__PointGeometry *Geometry,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__NodePatch *_p = soap_new_resqml2__NodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__NodePatch::Geometry = Geometry;
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline resqml2__NodePatch * soap_new_set_resqml2__NodePatch(
	struct soap *soap,
	resqml2__PointGeometry *Geometry,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__NodePatch *_p = soap_new_resqml2__NodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__NodePatch::Geometry = Geometry;
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline int soap_write_resqml2__NodePatch(struct soap *soap, resqml2__NodePatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:NodePatch", "resqml2:NodePatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__NodePatch * SOAP_FMAC4 soap_get_resqml2__NodePatch(struct soap*, resqml2__NodePatch *, const char*, const char*);

inline int soap_read_resqml2__NodePatch(struct soap *soap, resqml2__NodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__NodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPolylineSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPolylineSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREPolylineSetRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREPolylineSetRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREPolylineSetRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREPolylineSetRepresentation(struct soap*, const char*, resqml2__obj_USCOREPolylineSetRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREPolylineSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREPolylineSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREPolylineSetRepresentation * soap_new_resqml2__obj_USCOREPolylineSetRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREPolylineSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREPolylineSetRepresentation * soap_new_req_resqml2__obj_USCOREPolylineSetRepresentation(
	struct soap *soap,
	const std::vector<resqml2__PolylineSetPatch *> & LinePatch,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREPolylineSetRepresentation *_p = soap_new_resqml2__obj_USCOREPolylineSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPolylineSetRepresentation::LinePatch = LinePatch;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREPolylineSetRepresentation * soap_new_set_resqml2__obj_USCOREPolylineSetRepresentation(
	struct soap *soap,
	enum resqml2__LineRole *LineRole,
	const std::vector<resqml2__PolylineSetPatch *> & LinePatch,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREPolylineSetRepresentation *_p = soap_new_resqml2__obj_USCOREPolylineSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPolylineSetRepresentation::LineRole = LineRole;
		_p->resqml2__obj_USCOREPolylineSetRepresentation::LinePatch = LinePatch;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREPolylineSetRepresentation(struct soap *soap, resqml2__obj_USCOREPolylineSetRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_PolylineSetRepresentation", "resqml2:obj_PolylineSetRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREPolylineSetRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREPolylineSetRepresentation(struct soap*, resqml2__obj_USCOREPolylineSetRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREPolylineSetRepresentation(struct soap *soap, resqml2__obj_USCOREPolylineSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREPolylineSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__VolumeShell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__VolumeShell_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__VolumeShell(struct soap*, const char*, int, const resqml2__VolumeShell *, const char*);
SOAP_FMAC3 resqml2__VolumeShell * SOAP_FMAC4 soap_in_resqml2__VolumeShell(struct soap*, const char*, resqml2__VolumeShell *, const char*);
SOAP_FMAC1 resqml2__VolumeShell * SOAP_FMAC2 soap_instantiate_resqml2__VolumeShell(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__VolumeShell * soap_new_resqml2__VolumeShell(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__VolumeShell(soap, n, NULL, NULL, NULL);
}

inline resqml2__VolumeShell * soap_new_req_resqml2__VolumeShell(
	struct soap *soap,
	const std::string& ShellUid,
	const std::vector<resqml2__OrientedMacroFace *> & MacroFaces)
{
	resqml2__VolumeShell *_p = soap_new_resqml2__VolumeShell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__VolumeShell::ShellUid = ShellUid;
		_p->resqml2__VolumeShell::MacroFaces = MacroFaces;
	}
	return _p;
}

inline resqml2__VolumeShell * soap_new_set_resqml2__VolumeShell(
	struct soap *soap,
	const std::string& ShellUid,
	const std::vector<resqml2__OrientedMacroFace *> & MacroFaces)
{
	resqml2__VolumeShell *_p = soap_new_resqml2__VolumeShell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__VolumeShell::ShellUid = ShellUid;
		_p->resqml2__VolumeShell::MacroFaces = MacroFaces;
	}
	return _p;
}

inline int soap_write_resqml2__VolumeShell(struct soap *soap, resqml2__VolumeShell const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:VolumeShell", "resqml2:VolumeShell") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__VolumeShell * SOAP_FMAC4 soap_get_resqml2__VolumeShell(struct soap*, resqml2__VolumeShell *, const char*, const char*);

inline int soap_read_resqml2__VolumeShell(struct soap *soap, resqml2__VolumeShell *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__VolumeShell(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__VolumeRegion_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__VolumeRegion_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__VolumeRegion(struct soap*, const char*, int, const resqml2__VolumeRegion *, const char*);
SOAP_FMAC3 resqml2__VolumeRegion * SOAP_FMAC4 soap_in_resqml2__VolumeRegion(struct soap*, const char*, resqml2__VolumeRegion *, const char*);
SOAP_FMAC1 resqml2__VolumeRegion * SOAP_FMAC2 soap_instantiate_resqml2__VolumeRegion(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__VolumeRegion * soap_new_resqml2__VolumeRegion(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__VolumeRegion(soap, n, NULL, NULL, NULL);
}

inline resqml2__VolumeRegion * soap_new_req_resqml2__VolumeRegion(
	struct soap *soap,
	ULONG64 PatchIndex,
	eml__DataObjectReference *Represents,
	resqml2__VolumeShell *ExternalShell)
{
	resqml2__VolumeRegion *_p = soap_new_resqml2__VolumeRegion(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__VolumeRegion::PatchIndex = PatchIndex;
		_p->resqml2__VolumeRegion::Represents = Represents;
		_p->resqml2__VolumeRegion::ExternalShell = ExternalShell;
	}
	return _p;
}

inline resqml2__VolumeRegion * soap_new_set_resqml2__VolumeRegion(
	struct soap *soap,
	ULONG64 PatchIndex,
	const std::vector<resqml2__VolumeShell *> & InternalShells,
	eml__DataObjectReference *Represents,
	resqml2__VolumeShell *ExternalShell)
{
	resqml2__VolumeRegion *_p = soap_new_resqml2__VolumeRegion(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__VolumeRegion::PatchIndex = PatchIndex;
		_p->resqml2__VolumeRegion::InternalShells = InternalShells;
		_p->resqml2__VolumeRegion::Represents = Represents;
		_p->resqml2__VolumeRegion::ExternalShell = ExternalShell;
	}
	return _p;
}

inline int soap_write_resqml2__VolumeRegion(struct soap *soap, resqml2__VolumeRegion const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:VolumeRegion", "resqml2:VolumeRegion") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__VolumeRegion * SOAP_FMAC4 soap_get_resqml2__VolumeRegion(struct soap*, resqml2__VolumeRegion *, const char*, const char*);

inline int soap_read_resqml2__VolumeRegion(struct soap *soap, resqml2__VolumeRegion *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__VolumeRegion(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__EdgePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__EdgePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__EdgePatch(struct soap*, const char*, int, const resqml2__EdgePatch *, const char*);
SOAP_FMAC3 resqml2__EdgePatch * SOAP_FMAC4 soap_in_resqml2__EdgePatch(struct soap*, const char*, resqml2__EdgePatch *, const char*);
SOAP_FMAC1 resqml2__EdgePatch * SOAP_FMAC2 soap_instantiate_resqml2__EdgePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__EdgePatch * soap_new_resqml2__EdgePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__EdgePatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__EdgePatch * soap_new_req_resqml2__EdgePatch(
	struct soap *soap,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__EdgePatch *_p = soap_new_resqml2__EdgePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline resqml2__EdgePatch * soap_new_set_resqml2__EdgePatch(
	struct soap *soap,
	resqml2__AbstractIntegerArray *SplitEdges,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__EdgePatch *_p = soap_new_resqml2__EdgePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__EdgePatch::SplitEdges = SplitEdges;
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline int soap_write_resqml2__EdgePatch(struct soap *soap, resqml2__EdgePatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:EdgePatch", "resqml2:EdgePatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__EdgePatch * SOAP_FMAC4 soap_get_resqml2__EdgePatch(struct soap*, resqml2__EdgePatch *, const char*, const char*);

inline int soap_read_resqml2__EdgePatch(struct soap *soap, resqml2__EdgePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__EdgePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESealedVolumeFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESealedVolumeFrameworkRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, const char*, int, const resqml2__obj_USCORESealedVolumeFrameworkRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORESealedVolumeFrameworkRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, const char*, resqml2__obj_USCORESealedVolumeFrameworkRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORESealedVolumeFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORESealedVolumeFrameworkRepresentation * soap_new_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORESealedVolumeFrameworkRepresentation * soap_new_req_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(
	struct soap *soap,
	eml__DataObjectReference *BasedOn,
	const std::vector<resqml2__VolumeShell *> & Shells,
	const std::vector<resqml2__VolumeRegion *> & Regions,
	bool IsHomogeneous1,
	const std::vector<eml__DataObjectReference *> & Representation1,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORESealedVolumeFrameworkRepresentation *_p = soap_new_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORESealedVolumeFrameworkRepresentation::BasedOn = BasedOn;
		_p->resqml2__obj_USCORESealedVolumeFrameworkRepresentation::Shells = Shells;
		_p->resqml2__obj_USCORESealedVolumeFrameworkRepresentation::Regions = Regions;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous1;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation1;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCORESealedVolumeFrameworkRepresentation * soap_new_set_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(
	struct soap *soap,
	eml__DataObjectReference *BasedOn,
	const std::vector<resqml2__VolumeShell *> & Shells,
	const std::vector<resqml2__VolumeRegion *> & Regions,
	bool IsHomogeneous1,
	const std::vector<eml__DataObjectReference *> & Representation1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORESealedVolumeFrameworkRepresentation *_p = soap_new_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORESealedVolumeFrameworkRepresentation::BasedOn = BasedOn;
		_p->resqml2__obj_USCORESealedVolumeFrameworkRepresentation::Shells = Shells;
		_p->resqml2__obj_USCORESealedVolumeFrameworkRepresentation::Regions = Regions;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous1;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, resqml2__obj_USCORESealedVolumeFrameworkRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_SealedVolumeFrameworkRepresentation", "resqml2:obj_SealedVolumeFrameworkRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORESealedVolumeFrameworkRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(struct soap*, resqml2__obj_USCORESealedVolumeFrameworkRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(struct soap *soap, resqml2__obj_USCORESealedVolumeFrameworkRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORESealedVolumeFrameworkRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPointSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPointSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREPointSetRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREPointSetRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREPointSetRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREPointSetRepresentation(struct soap*, const char*, resqml2__obj_USCOREPointSetRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREPointSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREPointSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREPointSetRepresentation * soap_new_resqml2__obj_USCOREPointSetRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREPointSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREPointSetRepresentation * soap_new_req_resqml2__obj_USCOREPointSetRepresentation(
	struct soap *soap,
	const std::vector<resqml2__NodePatch *> & NodePatch,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREPointSetRepresentation *_p = soap_new_resqml2__obj_USCOREPointSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPointSetRepresentation::NodePatch = NodePatch;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREPointSetRepresentation * soap_new_set_resqml2__obj_USCOREPointSetRepresentation(
	struct soap *soap,
	const std::vector<resqml2__NodePatch *> & NodePatch,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREPointSetRepresentation *_p = soap_new_resqml2__obj_USCOREPointSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPointSetRepresentation::NodePatch = NodePatch;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREPointSetRepresentation(struct soap *soap, resqml2__obj_USCOREPointSetRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_PointSetRepresentation", "resqml2:obj_PointSetRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREPointSetRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREPointSetRepresentation(struct soap*, resqml2__obj_USCOREPointSetRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREPointSetRepresentation(struct soap *soap, resqml2__obj_USCOREPointSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREPointSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractSurfaceFrameworkRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractSurfaceFrameworkRepresentation(struct soap*, const char*, int, const resqml2__AbstractSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC3 resqml2__AbstractSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_in_resqml2__AbstractSurfaceFrameworkRepresentation(struct soap*, const char*, resqml2__AbstractSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC1 resqml2__AbstractSurfaceFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__AbstractSurfaceFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractSurfaceFrameworkRepresentation * soap_new_resqml2__AbstractSurfaceFrameworkRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractSurfaceFrameworkRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractSurfaceFrameworkRepresentation * soap_new_req_resqml2__AbstractSurfaceFrameworkRepresentation(
	struct soap *soap,
	bool IsHomogeneous1,
	const std::vector<eml__DataObjectReference *> & Representation1,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractSurfaceFrameworkRepresentation *_p = soap_new_resqml2__AbstractSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous1;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation1;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__AbstractSurfaceFrameworkRepresentation * soap_new_set_resqml2__AbstractSurfaceFrameworkRepresentation(
	struct soap *soap,
	const std::vector<resqml2__ContactIdentity *> & ContactIdentity,
	bool IsHomogeneous1,
	const std::vector<eml__DataObjectReference *> & Representation1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractSurfaceFrameworkRepresentation *_p = soap_new_resqml2__AbstractSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractSurfaceFrameworkRepresentation::ContactIdentity = ContactIdentity;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous1;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractSurfaceFrameworkRepresentation(struct soap *soap, resqml2__AbstractSurfaceFrameworkRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractSurfaceFrameworkRepresentation", "resqml2:AbstractSurfaceFrameworkRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_get_resqml2__AbstractSurfaceFrameworkRepresentation(struct soap*, resqml2__AbstractSurfaceFrameworkRepresentation *, const char*, const char*);

inline int soap_read_resqml2__AbstractSurfaceFrameworkRepresentation(struct soap *soap, resqml2__AbstractSurfaceFrameworkRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractSurfaceFrameworkRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractContactRepresentationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractContactRepresentationPart(struct soap*, const char*, int, const resqml2__AbstractContactRepresentationPart *, const char*);
SOAP_FMAC3 resqml2__AbstractContactRepresentationPart * SOAP_FMAC4 soap_in_resqml2__AbstractContactRepresentationPart(struct soap*, const char*, resqml2__AbstractContactRepresentationPart *, const char*);
SOAP_FMAC1 resqml2__AbstractContactRepresentationPart * SOAP_FMAC2 soap_instantiate_resqml2__AbstractContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractContactRepresentationPart * soap_new_resqml2__AbstractContactRepresentationPart(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractContactRepresentationPart(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractContactRepresentationPart * soap_new_req_resqml2__AbstractContactRepresentationPart(
	struct soap *soap,
	ULONG64 Index)
{
	resqml2__AbstractContactRepresentationPart *_p = soap_new_resqml2__AbstractContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractContactRepresentationPart::Index = Index;
	}
	return _p;
}

inline resqml2__AbstractContactRepresentationPart * soap_new_set_resqml2__AbstractContactRepresentationPart(
	struct soap *soap,
	ULONG64 Index)
{
	resqml2__AbstractContactRepresentationPart *_p = soap_new_resqml2__AbstractContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractContactRepresentationPart::Index = Index;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractContactRepresentationPart(struct soap *soap, resqml2__AbstractContactRepresentationPart const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractContactRepresentationPart", "resqml2:AbstractContactRepresentationPart") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractContactRepresentationPart * SOAP_FMAC4 soap_get_resqml2__AbstractContactRepresentationPart(struct soap*, resqml2__AbstractContactRepresentationPart *, const char*, const char*);

inline int soap_read_resqml2__AbstractContactRepresentationPart(struct soap *soap, resqml2__AbstractContactRepresentationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractContactRepresentationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPlaneSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPlaneSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREPlaneSetRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREPlaneSetRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREPlaneSetRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREPlaneSetRepresentation(struct soap*, const char*, resqml2__obj_USCOREPlaneSetRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREPlaneSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREPlaneSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREPlaneSetRepresentation * soap_new_resqml2__obj_USCOREPlaneSetRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREPlaneSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREPlaneSetRepresentation * soap_new_req_resqml2__obj_USCOREPlaneSetRepresentation(
	struct soap *soap,
	const std::vector<resqml2__AbstractPlaneGeometry *> & Planes,
	enum resqml2__SurfaceRole SurfaceRole1,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREPlaneSetRepresentation *_p = soap_new_resqml2__obj_USCOREPlaneSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPlaneSetRepresentation::Planes = Planes;
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole1;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREPlaneSetRepresentation * soap_new_set_resqml2__obj_USCOREPlaneSetRepresentation(
	struct soap *soap,
	const std::vector<resqml2__AbstractPlaneGeometry *> & Planes,
	enum resqml2__SurfaceRole SurfaceRole1,
	const std::vector<resqml2__PatchBoundaries *> & Boundaries1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREPlaneSetRepresentation *_p = soap_new_resqml2__obj_USCOREPlaneSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPlaneSetRepresentation::Planes = Planes;
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole1;
		_p->resqml2__AbstractSurfaceRepresentation::Boundaries = Boundaries1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREPlaneSetRepresentation(struct soap *soap, resqml2__obj_USCOREPlaneSetRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_PlaneSetRepresentation", "resqml2:obj_PlaneSetRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREPlaneSetRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREPlaneSetRepresentation(struct soap*, resqml2__obj_USCOREPlaneSetRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREPlaneSetRepresentation(struct soap *soap, resqml2__obj_USCOREPlaneSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREPlaneSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ContactPatch(struct soap*, const char*, int, const resqml2__ContactPatch *, const char*);
SOAP_FMAC3 resqml2__ContactPatch * SOAP_FMAC4 soap_in_resqml2__ContactPatch(struct soap*, const char*, resqml2__ContactPatch *, const char*);
SOAP_FMAC1 resqml2__ContactPatch * SOAP_FMAC2 soap_instantiate_resqml2__ContactPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ContactPatch * soap_new_resqml2__ContactPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ContactPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__ContactPatch * soap_new_req_resqml2__ContactPatch(
	struct soap *soap,
	ULONG64 RepresentationIndex,
	resqml2__AbstractIntegerArray *SupportingRepresentationNodes,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__ContactPatch *_p = soap_new_resqml2__ContactPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ContactPatch::RepresentationIndex = RepresentationIndex;
		_p->resqml2__ContactPatch::SupportingRepresentationNodes = SupportingRepresentationNodes;
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline resqml2__ContactPatch * soap_new_set_resqml2__ContactPatch(
	struct soap *soap,
	ULONG64 RepresentationIndex,
	resqml2__AbstractIntegerArray *SupportingRepresentationNodes,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__ContactPatch *_p = soap_new_resqml2__ContactPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ContactPatch::RepresentationIndex = RepresentationIndex;
		_p->resqml2__ContactPatch::SupportingRepresentationNodes = SupportingRepresentationNodes;
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline int soap_write_resqml2__ContactPatch(struct soap *soap, resqml2__ContactPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ContactPatch", "resqml2:ContactPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ContactPatch * SOAP_FMAC4 soap_get_resqml2__ContactPatch(struct soap*, resqml2__ContactPatch *, const char*, const char*);

inline int soap_read_resqml2__ContactPatch(struct soap *soap, resqml2__ContactPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ContactPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SealedContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SealedContactRepresentationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SealedContactRepresentationPart(struct soap*, const char*, int, const resqml2__SealedContactRepresentationPart *, const char*);
SOAP_FMAC3 resqml2__SealedContactRepresentationPart * SOAP_FMAC4 soap_in_resqml2__SealedContactRepresentationPart(struct soap*, const char*, resqml2__SealedContactRepresentationPart *, const char*);
SOAP_FMAC1 resqml2__SealedContactRepresentationPart * SOAP_FMAC2 soap_instantiate_resqml2__SealedContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__SealedContactRepresentationPart * soap_new_resqml2__SealedContactRepresentationPart(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__SealedContactRepresentationPart(soap, n, NULL, NULL, NULL);
}

inline resqml2__SealedContactRepresentationPart * soap_new_req_resqml2__SealedContactRepresentationPart(
	struct soap *soap,
	enum resqml2__IdentityKind IdentityKind,
	const std::vector<resqml2__ContactPatch *> & Contact,
	ULONG64 Index1)
{
	resqml2__SealedContactRepresentationPart *_p = soap_new_resqml2__SealedContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SealedContactRepresentationPart::IdentityKind = IdentityKind;
		_p->resqml2__SealedContactRepresentationPart::Contact = Contact;
		_p->resqml2__AbstractContactRepresentationPart::Index = Index1;
	}
	return _p;
}

inline resqml2__SealedContactRepresentationPart * soap_new_set_resqml2__SealedContactRepresentationPart(
	struct soap *soap,
	resqml2__AbstractIntegerArray *IdenticalNodeIndices,
	enum resqml2__IdentityKind IdentityKind,
	const std::vector<resqml2__ContactPatch *> & Contact,
	ULONG64 Index1)
{
	resqml2__SealedContactRepresentationPart *_p = soap_new_resqml2__SealedContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SealedContactRepresentationPart::IdenticalNodeIndices = IdenticalNodeIndices;
		_p->resqml2__SealedContactRepresentationPart::IdentityKind = IdentityKind;
		_p->resqml2__SealedContactRepresentationPart::Contact = Contact;
		_p->resqml2__AbstractContactRepresentationPart::Index = Index1;
	}
	return _p;
}

inline int soap_write_resqml2__SealedContactRepresentationPart(struct soap *soap, resqml2__SealedContactRepresentationPart const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:SealedContactRepresentationPart", "resqml2:SealedContactRepresentationPart") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__SealedContactRepresentationPart * SOAP_FMAC4 soap_get_resqml2__SealedContactRepresentationPart(struct soap*, resqml2__SealedContactRepresentationPart *, const char*, const char*);

inline int soap_read_resqml2__SealedContactRepresentationPart(struct soap *soap, resqml2__SealedContactRepresentationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__SealedContactRepresentationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__NonSealedContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__NonSealedContactRepresentationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__NonSealedContactRepresentationPart(struct soap*, const char*, int, const resqml2__NonSealedContactRepresentationPart *, const char*);
SOAP_FMAC3 resqml2__NonSealedContactRepresentationPart * SOAP_FMAC4 soap_in_resqml2__NonSealedContactRepresentationPart(struct soap*, const char*, resqml2__NonSealedContactRepresentationPart *, const char*);
SOAP_FMAC1 resqml2__NonSealedContactRepresentationPart * SOAP_FMAC2 soap_instantiate_resqml2__NonSealedContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__NonSealedContactRepresentationPart * soap_new_resqml2__NonSealedContactRepresentationPart(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__NonSealedContactRepresentationPart(soap, n, NULL, NULL, NULL);
}

inline resqml2__NonSealedContactRepresentationPart * soap_new_req_resqml2__NonSealedContactRepresentationPart(
	struct soap *soap,
	resqml2__AbstractGeometry *Geometry,
	ULONG64 Index1)
{
	resqml2__NonSealedContactRepresentationPart *_p = soap_new_resqml2__NonSealedContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__NonSealedContactRepresentationPart::Geometry = Geometry;
		_p->resqml2__AbstractContactRepresentationPart::Index = Index1;
	}
	return _p;
}

inline resqml2__NonSealedContactRepresentationPart * soap_new_set_resqml2__NonSealedContactRepresentationPart(
	struct soap *soap,
	const std::vector<resqml2__ContactPatch *> & Contact,
	resqml2__AbstractGeometry *Geometry,
	ULONG64 Index1)
{
	resqml2__NonSealedContactRepresentationPart *_p = soap_new_resqml2__NonSealedContactRepresentationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__NonSealedContactRepresentationPart::Contact = Contact;
		_p->resqml2__NonSealedContactRepresentationPart::Geometry = Geometry;
		_p->resqml2__AbstractContactRepresentationPart::Index = Index1;
	}
	return _p;
}

inline int soap_write_resqml2__NonSealedContactRepresentationPart(struct soap *soap, resqml2__NonSealedContactRepresentationPart const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:NonSealedContactRepresentationPart", "resqml2:NonSealedContactRepresentationPart") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__NonSealedContactRepresentationPart * SOAP_FMAC4 soap_get_resqml2__NonSealedContactRepresentationPart(struct soap*, resqml2__NonSealedContactRepresentationPart *, const char*, const char*);

inline int soap_read_resqml2__NonSealedContactRepresentationPart(struct soap *soap, resqml2__NonSealedContactRepresentationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__NonSealedContactRepresentationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETriangulatedSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETriangulatedSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORETriangulatedSetRepresentation(struct soap*, const char*, int, const resqml2__obj_USCORETriangulatedSetRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORETriangulatedSetRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCORETriangulatedSetRepresentation(struct soap*, const char*, resqml2__obj_USCORETriangulatedSetRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORETriangulatedSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORETriangulatedSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORETriangulatedSetRepresentation * soap_new_resqml2__obj_USCORETriangulatedSetRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORETriangulatedSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORETriangulatedSetRepresentation * soap_new_req_resqml2__obj_USCORETriangulatedSetRepresentation(
	struct soap *soap,
	const std::vector<resqml2__TrianglePatch *> & TrianglePatch,
	enum resqml2__SurfaceRole SurfaceRole1,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORETriangulatedSetRepresentation *_p = soap_new_resqml2__obj_USCORETriangulatedSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETriangulatedSetRepresentation::TrianglePatch = TrianglePatch;
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole1;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCORETriangulatedSetRepresentation * soap_new_set_resqml2__obj_USCORETriangulatedSetRepresentation(
	struct soap *soap,
	const std::vector<resqml2__TrianglePatch *> & TrianglePatch,
	enum resqml2__SurfaceRole SurfaceRole1,
	const std::vector<resqml2__PatchBoundaries *> & Boundaries1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORETriangulatedSetRepresentation *_p = soap_new_resqml2__obj_USCORETriangulatedSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETriangulatedSetRepresentation::TrianglePatch = TrianglePatch;
		_p->resqml2__AbstractSurfaceRepresentation::SurfaceRole = SurfaceRole1;
		_p->resqml2__AbstractSurfaceRepresentation::Boundaries = Boundaries1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORETriangulatedSetRepresentation(struct soap *soap, resqml2__obj_USCORETriangulatedSetRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_TriangulatedSetRepresentation", "resqml2:obj_TriangulatedSetRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORETriangulatedSetRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCORETriangulatedSetRepresentation(struct soap*, resqml2__obj_USCORETriangulatedSetRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORETriangulatedSetRepresentation(struct soap *soap, resqml2__obj_USCORETriangulatedSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORETriangulatedSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, const char*, int, const resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, const char*, resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation * soap_new_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation * soap_new_req_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(
	struct soap *soap,
	bool IsHomogeneous2,
	const std::vector<eml__DataObjectReference *> & Representation2,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation *_p = soap_new_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous2;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation2;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation * soap_new_set_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(
	struct soap *soap,
	const std::vector<resqml2__AbstractContactRepresentationPart *> & NonSealedContactRepresentation,
	const std::vector<resqml2__ContactIdentity *> & ContactIdentity1,
	bool IsHomogeneous2,
	const std::vector<eml__DataObjectReference *> & Representation2,
	eml__DataObjectReference *RepresentedInterpretation3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation *_p = soap_new_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation::NonSealedContactRepresentation = NonSealedContactRepresentation;
		_p->resqml2__AbstractSurfaceFrameworkRepresentation::ContactIdentity = ContactIdentity1;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous2;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation2;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_NonSealedSurfaceFrameworkRepresentation", "resqml2:obj_NonSealedSurfaceFrameworkRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap*, resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(struct soap *soap, resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORENonSealedSurfaceFrameworkRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreMarkerFrameRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreMarkerFrameRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREWellboreMarkerFrameRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREWellboreMarkerFrameRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, const char*, resqml2__obj_USCOREWellboreMarkerFrameRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREWellboreMarkerFrameRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREWellboreMarkerFrameRepresentation * soap_new_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREWellboreMarkerFrameRepresentation * soap_new_req_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(
	struct soap *soap,
	const std::vector<resqml2__WellboreMarker *> & WellboreMarker,
	ULONG64 NodeCount1,
	resqml2__AbstractDoubleArray *NodeMd1,
	eml__DataObjectReference *Trajectory1,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREWellboreMarkerFrameRepresentation *_p = soap_new_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREWellboreMarkerFrameRepresentation::WellboreMarker = WellboreMarker;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory1;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREWellboreMarkerFrameRepresentation * soap_new_set_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(
	struct soap *soap,
	const std::vector<resqml2__WellboreMarker *> & WellboreMarker,
	ULONG64 NodeCount1,
	resqml2__AbstractDoubleArray *NodeMd1,
	eml__DataObjectReference *WitsmlLogReference1,
	resqml2__IntervalStratigraphicUnits *IntervalStratigraphiUnits1,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits1,
	eml__DataObjectReference *Trajectory1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREWellboreMarkerFrameRepresentation *_p = soap_new_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREWellboreMarkerFrameRepresentation::WellboreMarker = WellboreMarker;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::WitsmlLogReference = WitsmlLogReference1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::IntervalStratigraphiUnits = IntervalStratigraphiUnits1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, resqml2__obj_USCOREWellboreMarkerFrameRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_WellboreMarkerFrameRepresentation", "resqml2:obj_WellboreMarkerFrameRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREWellboreMarkerFrameRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(struct soap*, resqml2__obj_USCOREWellboreMarkerFrameRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(struct soap *soap, resqml2__obj_USCOREWellboreMarkerFrameRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREWellboreMarkerFrameRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__WellboreMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__WellboreMarker_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__WellboreMarker(struct soap*, const char*, int, const resqml2__WellboreMarker *, const char*);
SOAP_FMAC3 resqml2__WellboreMarker * SOAP_FMAC4 soap_in_resqml2__WellboreMarker(struct soap*, const char*, resqml2__WellboreMarker *, const char*);
SOAP_FMAC1 resqml2__WellboreMarker * SOAP_FMAC2 soap_instantiate_resqml2__WellboreMarker(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__WellboreMarker * soap_new_resqml2__WellboreMarker(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__WellboreMarker(soap, n, NULL, NULL, NULL);
}

inline resqml2__WellboreMarker * soap_new_req_resqml2__WellboreMarker(
	struct soap *soap,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__WellboreMarker *_p = soap_new_resqml2__WellboreMarker(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__WellboreMarker * soap_new_set_resqml2__WellboreMarker(
	struct soap *soap,
	enum resqml2__FluidContact *FluidContact,
	enum resqml2__FluidMarker *FluidMarker,
	enum resqml2__GeologicBoundaryKind *GeologicBoundaryKind,
	eml__DataObjectReference *WitsmlFormationMarker,
	eml__DataObjectReference *Interpretation,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__WellboreMarker *_p = soap_new_resqml2__WellboreMarker(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__WellboreMarker::FluidContact = FluidContact;
		_p->resqml2__WellboreMarker::FluidMarker = FluidMarker;
		_p->resqml2__WellboreMarker::GeologicBoundaryKind = GeologicBoundaryKind;
		_p->resqml2__WellboreMarker::WitsmlFormationMarker = WitsmlFormationMarker;
		_p->resqml2__WellboreMarker::Interpretation = Interpretation;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__WellboreMarker(struct soap *soap, resqml2__WellboreMarker const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:WellboreMarker", "resqml2:WellboreMarker") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__WellboreMarker * SOAP_FMAC4 soap_get_resqml2__WellboreMarker(struct soap*, resqml2__WellboreMarker *, const char*, const char*);

inline int soap_read_resqml2__WellboreMarker(struct soap *soap, resqml2__WellboreMarker *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__WellboreMarker(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREMdDatum_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREMdDatum_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREMdDatum(struct soap*, const char*, int, const resqml2__obj_USCOREMdDatum *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREMdDatum * SOAP_FMAC4 soap_in_resqml2__obj_USCOREMdDatum(struct soap*, const char*, resqml2__obj_USCOREMdDatum *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREMdDatum * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREMdDatum(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREMdDatum * soap_new_resqml2__obj_USCOREMdDatum(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREMdDatum(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREMdDatum * soap_new_req_resqml2__obj_USCOREMdDatum(
	struct soap *soap,
	resqml2__Point3d *Location,
	enum resqml2__MdReference MdReference,
	eml__DataObjectReference *LocalCrs,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREMdDatum *_p = soap_new_resqml2__obj_USCOREMdDatum(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREMdDatum::Location = Location;
		_p->resqml2__obj_USCOREMdDatum::MdReference = MdReference;
		_p->resqml2__obj_USCOREMdDatum::LocalCrs = LocalCrs;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCOREMdDatum * soap_new_set_resqml2__obj_USCOREMdDatum(
	struct soap *soap,
	resqml2__Point3d *Location,
	enum resqml2__MdReference MdReference,
	eml__DataObjectReference *LocalCrs,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREMdDatum *_p = soap_new_resqml2__obj_USCOREMdDatum(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREMdDatum::Location = Location;
		_p->resqml2__obj_USCOREMdDatum::MdReference = MdReference;
		_p->resqml2__obj_USCOREMdDatum::LocalCrs = LocalCrs;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREMdDatum(struct soap *soap, resqml2__obj_USCOREMdDatum const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_MdDatum", "resqml2:obj_MdDatum") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREMdDatum * SOAP_FMAC4 soap_get_resqml2__obj_USCOREMdDatum(struct soap*, resqml2__obj_USCOREMdDatum *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREMdDatum(struct soap *soap, resqml2__obj_USCOREMdDatum *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREMdDatum(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreTrajectoryRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreTrajectoryRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREWellboreTrajectoryRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREWellboreTrajectoryRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, const char*, resqml2__obj_USCOREWellboreTrajectoryRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREWellboreTrajectoryRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREWellboreTrajectoryRepresentation * soap_new_resqml2__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREWellboreTrajectoryRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREWellboreTrajectoryRepresentation * soap_new_req_resqml2__obj_USCOREWellboreTrajectoryRepresentation(
	struct soap *soap,
	double StartMd,
	double FinishMd,
	enum eml__LengthUom MdUom,
	eml__DataObjectReference *MdDatum,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREWellboreTrajectoryRepresentation *_p = soap_new_resqml2__obj_USCOREWellboreTrajectoryRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::StartMd = StartMd;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::FinishMd = FinishMd;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::MdUom = MdUom;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::MdDatum = MdDatum;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREWellboreTrajectoryRepresentation * soap_new_set_resqml2__obj_USCOREWellboreTrajectoryRepresentation(
	struct soap *soap,
	double StartMd,
	double FinishMd,
	enum eml__LengthUom MdUom,
	enum resqml2__MdDomain *MdDomain,
	eml__DataObjectReference *WitsmlTrajectory,
	resqml2__AbstractParametricLineGeometry *Geometry,
	eml__DataObjectReference *MdDatum,
	eml__DataObjectReference *DeviationSurvey,
	resqml2__WellboreTrajectoryParentIntersection *ParentIntersection,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREWellboreTrajectoryRepresentation *_p = soap_new_resqml2__obj_USCOREWellboreTrajectoryRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::StartMd = StartMd;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::FinishMd = FinishMd;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::MdUom = MdUom;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::MdDomain = MdDomain;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::WitsmlTrajectory = WitsmlTrajectory;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::Geometry = Geometry;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::MdDatum = MdDatum;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::DeviationSurvey = DeviationSurvey;
		_p->resqml2__obj_USCOREWellboreTrajectoryRepresentation::ParentIntersection = ParentIntersection;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, resqml2__obj_USCOREWellboreTrajectoryRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_WellboreTrajectoryRepresentation", "resqml2:obj_WellboreTrajectoryRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREWellboreTrajectoryRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREWellboreTrajectoryRepresentation(struct soap*, resqml2__obj_USCOREWellboreTrajectoryRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREWellboreTrajectoryRepresentation(struct soap *soap, resqml2__obj_USCOREWellboreTrajectoryRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREWellboreTrajectoryRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreFrameRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreFrameRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREWellboreFrameRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREWellboreFrameRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREWellboreFrameRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREWellboreFrameRepresentation(struct soap*, const char*, resqml2__obj_USCOREWellboreFrameRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREWellboreFrameRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREWellboreFrameRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREWellboreFrameRepresentation * soap_new_resqml2__obj_USCOREWellboreFrameRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREWellboreFrameRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREWellboreFrameRepresentation * soap_new_req_resqml2__obj_USCOREWellboreFrameRepresentation(
	struct soap *soap,
	ULONG64 NodeCount,
	resqml2__AbstractDoubleArray *NodeMd,
	eml__DataObjectReference *Trajectory,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREWellboreFrameRepresentation *_p = soap_new_resqml2__obj_USCOREWellboreFrameRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREWellboreFrameRepresentation * soap_new_set_resqml2__obj_USCOREWellboreFrameRepresentation(
	struct soap *soap,
	ULONG64 NodeCount,
	resqml2__AbstractDoubleArray *NodeMd,
	eml__DataObjectReference *WitsmlLogReference,
	resqml2__IntervalStratigraphicUnits *IntervalStratigraphiUnits,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits,
	eml__DataObjectReference *Trajectory,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREWellboreFrameRepresentation *_p = soap_new_resqml2__obj_USCOREWellboreFrameRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::WitsmlLogReference = WitsmlLogReference;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::IntervalStratigraphiUnits = IntervalStratigraphiUnits;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREWellboreFrameRepresentation(struct soap *soap, resqml2__obj_USCOREWellboreFrameRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_WellboreFrameRepresentation", "resqml2:obj_WellboreFrameRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREWellboreFrameRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREWellboreFrameRepresentation(struct soap*, resqml2__obj_USCOREWellboreFrameRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREWellboreFrameRepresentation(struct soap *soap, resqml2__obj_USCOREWellboreFrameRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREWellboreFrameRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREDeviationSurveyRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREDeviationSurveyRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREDeviationSurveyRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREDeviationSurveyRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREDeviationSurveyRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREDeviationSurveyRepresentation(struct soap*, const char*, resqml2__obj_USCOREDeviationSurveyRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREDeviationSurveyRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREDeviationSurveyRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREDeviationSurveyRepresentation * soap_new_resqml2__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREDeviationSurveyRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREDeviationSurveyRepresentation * soap_new_req_resqml2__obj_USCOREDeviationSurveyRepresentation(
	struct soap *soap,
	bool IsFinal,
	ULONG64 StationCount,
	enum eml__LengthUom MdUom,
	resqml2__AbstractDoubleArray *Mds,
	resqml2__Point3d *FirstStationLocation,
	enum eml__PlaneAngleUom AngleUom,
	resqml2__AbstractDoubleArray *Azimuths,
	resqml2__AbstractDoubleArray *Inclinations,
	eml__DataObjectReference *MdDatum,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREDeviationSurveyRepresentation *_p = soap_new_resqml2__obj_USCOREDeviationSurveyRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::IsFinal = IsFinal;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::StationCount = StationCount;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::MdUom = MdUom;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::Mds = Mds;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::FirstStationLocation = FirstStationLocation;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::AngleUom = AngleUom;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::Azimuths = Azimuths;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::Inclinations = Inclinations;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::MdDatum = MdDatum;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREDeviationSurveyRepresentation * soap_new_set_resqml2__obj_USCOREDeviationSurveyRepresentation(
	struct soap *soap,
	eml__DataObjectReference *WitsmlDeviationSurvey,
	bool IsFinal,
	ULONG64 StationCount,
	enum eml__LengthUom MdUom,
	resqml2__AbstractDoubleArray *Mds,
	resqml2__Point3d *FirstStationLocation,
	enum eml__PlaneAngleUom AngleUom,
	resqml2__AbstractDoubleArray *Azimuths,
	resqml2__AbstractDoubleArray *Inclinations,
	eml__DataObjectReference *MdDatum,
	resqml2__TimeIndex *TimeIndex,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREDeviationSurveyRepresentation *_p = soap_new_resqml2__obj_USCOREDeviationSurveyRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::WitsmlDeviationSurvey = WitsmlDeviationSurvey;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::IsFinal = IsFinal;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::StationCount = StationCount;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::MdUom = MdUom;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::Mds = Mds;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::FirstStationLocation = FirstStationLocation;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::AngleUom = AngleUom;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::Azimuths = Azimuths;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::Inclinations = Inclinations;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::MdDatum = MdDatum;
		_p->resqml2__obj_USCOREDeviationSurveyRepresentation::TimeIndex = TimeIndex;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, resqml2__obj_USCOREDeviationSurveyRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_DeviationSurveyRepresentation", "resqml2:obj_DeviationSurveyRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREDeviationSurveyRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREDeviationSurveyRepresentation(struct soap*, resqml2__obj_USCOREDeviationSurveyRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREDeviationSurveyRepresentation(struct soap *soap, resqml2__obj_USCOREDeviationSurveyRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREDeviationSurveyRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__WellboreTrajectoryParentIntersection_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__WellboreTrajectoryParentIntersection_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__WellboreTrajectoryParentIntersection(struct soap*, const char*, int, const resqml2__WellboreTrajectoryParentIntersection *, const char*);
SOAP_FMAC3 resqml2__WellboreTrajectoryParentIntersection * SOAP_FMAC4 soap_in_resqml2__WellboreTrajectoryParentIntersection(struct soap*, const char*, resqml2__WellboreTrajectoryParentIntersection *, const char*);
SOAP_FMAC1 resqml2__WellboreTrajectoryParentIntersection * SOAP_FMAC2 soap_instantiate_resqml2__WellboreTrajectoryParentIntersection(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__WellboreTrajectoryParentIntersection * soap_new_resqml2__WellboreTrajectoryParentIntersection(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__WellboreTrajectoryParentIntersection(soap, n, NULL, NULL, NULL);
}

inline resqml2__WellboreTrajectoryParentIntersection * soap_new_req_resqml2__WellboreTrajectoryParentIntersection(
	struct soap *soap,
	double KickoffMd,
	double ParentMd,
	eml__DataObjectReference *ParentTrajectory)
{
	resqml2__WellboreTrajectoryParentIntersection *_p = soap_new_resqml2__WellboreTrajectoryParentIntersection(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__WellboreTrajectoryParentIntersection::KickoffMd = KickoffMd;
		_p->resqml2__WellboreTrajectoryParentIntersection::ParentMd = ParentMd;
		_p->resqml2__WellboreTrajectoryParentIntersection::ParentTrajectory = ParentTrajectory;
	}
	return _p;
}

inline resqml2__WellboreTrajectoryParentIntersection * soap_new_set_resqml2__WellboreTrajectoryParentIntersection(
	struct soap *soap,
	double KickoffMd,
	double ParentMd,
	eml__DataObjectReference *ParentTrajectory)
{
	resqml2__WellboreTrajectoryParentIntersection *_p = soap_new_resqml2__WellboreTrajectoryParentIntersection(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__WellboreTrajectoryParentIntersection::KickoffMd = KickoffMd;
		_p->resqml2__WellboreTrajectoryParentIntersection::ParentMd = ParentMd;
		_p->resqml2__WellboreTrajectoryParentIntersection::ParentTrajectory = ParentTrajectory;
	}
	return _p;
}

inline int soap_write_resqml2__WellboreTrajectoryParentIntersection(struct soap *soap, resqml2__WellboreTrajectoryParentIntersection const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:WellboreTrajectoryParentIntersection", "resqml2:WellboreTrajectoryParentIntersection") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__WellboreTrajectoryParentIntersection * SOAP_FMAC4 soap_get_resqml2__WellboreTrajectoryParentIntersection(struct soap*, resqml2__WellboreTrajectoryParentIntersection *, const char*, const char*);

inline int soap_read_resqml2__WellboreTrajectoryParentIntersection(struct soap *soap, resqml2__WellboreTrajectoryParentIntersection *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__WellboreTrajectoryParentIntersection(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREBlockedWellboreRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREBlockedWellboreRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREBlockedWellboreRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREBlockedWellboreRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREBlockedWellboreRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREBlockedWellboreRepresentation(struct soap*, const char*, resqml2__obj_USCOREBlockedWellboreRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREBlockedWellboreRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREBlockedWellboreRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREBlockedWellboreRepresentation * soap_new_resqml2__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREBlockedWellboreRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREBlockedWellboreRepresentation * soap_new_req_resqml2__obj_USCOREBlockedWellboreRepresentation(
	struct soap *soap,
	ULONG64 CellCount,
	resqml2__AbstractIntegerArray *CellIndices,
	resqml2__AbstractIntegerArray *GridIndices,
	resqml2__AbstractIntegerArray *LocalFacePairPerCellIndices,
	const std::vector<eml__DataObjectReference *> & Grid,
	ULONG64 NodeCount1,
	resqml2__AbstractDoubleArray *NodeMd1,
	eml__DataObjectReference *Trajectory1,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREBlockedWellboreRepresentation *_p = soap_new_resqml2__obj_USCOREBlockedWellboreRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::CellCount = CellCount;
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::CellIndices = CellIndices;
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::GridIndices = GridIndices;
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::LocalFacePairPerCellIndices = LocalFacePairPerCellIndices;
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::Grid = Grid;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory1;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREBlockedWellboreRepresentation * soap_new_set_resqml2__obj_USCOREBlockedWellboreRepresentation(
	struct soap *soap,
	ULONG64 CellCount,
	resqml2__AbstractIntegerArray *CellIndices,
	resqml2__AbstractIntegerArray *GridIndices,
	resqml2__AbstractIntegerArray *LocalFacePairPerCellIndices,
	const std::vector<eml__DataObjectReference *> & Grid,
	ULONG64 NodeCount1,
	resqml2__AbstractDoubleArray *NodeMd1,
	eml__DataObjectReference *WitsmlLogReference1,
	resqml2__IntervalStratigraphicUnits *IntervalStratigraphiUnits1,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits1,
	eml__DataObjectReference *Trajectory1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREBlockedWellboreRepresentation *_p = soap_new_resqml2__obj_USCOREBlockedWellboreRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::CellCount = CellCount;
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::CellIndices = CellIndices;
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::GridIndices = GridIndices;
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::LocalFacePairPerCellIndices = LocalFacePairPerCellIndices;
		_p->resqml2__obj_USCOREBlockedWellboreRepresentation::Grid = Grid;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeCount = NodeCount1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::NodeMd = NodeMd1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::WitsmlLogReference = WitsmlLogReference1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::IntervalStratigraphiUnits = IntervalStratigraphiUnits1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits1;
		_p->resqml2__obj_USCOREWellboreFrameRepresentation::Trajectory = Trajectory1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, resqml2__obj_USCOREBlockedWellboreRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_BlockedWellboreRepresentation", "resqml2:obj_BlockedWellboreRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREBlockedWellboreRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREBlockedWellboreRepresentation(struct soap*, resqml2__obj_USCOREBlockedWellboreRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREBlockedWellboreRepresentation(struct soap *soap, resqml2__obj_USCOREBlockedWellboreRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREBlockedWellboreRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractResqmlDataObject_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractResqmlDataObject_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractResqmlDataObject(struct soap*, const char*, int, const resqml2__AbstractResqmlDataObject *, const char*);
SOAP_FMAC3 resqml2__AbstractResqmlDataObject * SOAP_FMAC4 soap_in_resqml2__AbstractResqmlDataObject(struct soap*, const char*, resqml2__AbstractResqmlDataObject *, const char*);
SOAP_FMAC1 resqml2__AbstractResqmlDataObject * SOAP_FMAC2 soap_instantiate_resqml2__AbstractResqmlDataObject(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractResqmlDataObject * soap_new_resqml2__AbstractResqmlDataObject(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractResqmlDataObject(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractResqmlDataObject * soap_new_req_resqml2__AbstractResqmlDataObject(
	struct soap *soap,
	eml__Citation *Citation1,
	const std::string& schemaVersion1,
	const std::string& uuid1)
{
	resqml2__AbstractResqmlDataObject *_p = soap_new_resqml2__AbstractResqmlDataObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation1;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion1;
		_p->eml__AbstractCitedDataObject::uuid = uuid1;
	}
	return _p;
}

inline resqml2__AbstractResqmlDataObject * soap_new_set_resqml2__AbstractResqmlDataObject(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata,
	eml__Citation *Citation1,
	const std::vector<eml__ObjectAlias *> & Aliases1,
	eml__CustomData *CustomData1,
	const std::string& schemaVersion1,
	const std::string& uuid1)
{
	resqml2__AbstractResqmlDataObject *_p = soap_new_resqml2__AbstractResqmlDataObject(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata;
		_p->eml__AbstractCitedDataObject::Citation = Citation1;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases1;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData1;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion1;
		_p->eml__AbstractCitedDataObject::uuid = uuid1;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractResqmlDataObject(struct soap *soap, resqml2__AbstractResqmlDataObject const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractResqmlDataObject", "resqml2:AbstractResqmlDataObject") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractResqmlDataObject * SOAP_FMAC4 soap_get_resqml2__AbstractResqmlDataObject(struct soap*, resqml2__AbstractResqmlDataObject *, const char*, const char*);

inline int soap_read_resqml2__AbstractResqmlDataObject(struct soap *soap, resqml2__AbstractResqmlDataObject *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractResqmlDataObject(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETimeSeries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETimeSeries_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORETimeSeries(struct soap*, const char*, int, const resqml2__obj_USCORETimeSeries *, const char*);
SOAP_FMAC3 resqml2__obj_USCORETimeSeries * SOAP_FMAC4 soap_in_resqml2__obj_USCORETimeSeries(struct soap*, const char*, resqml2__obj_USCORETimeSeries *, const char*);
SOAP_FMAC1 resqml2__obj_USCORETimeSeries * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORETimeSeries(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORETimeSeries * soap_new_resqml2__obj_USCORETimeSeries(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORETimeSeries(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORETimeSeries * soap_new_req_resqml2__obj_USCORETimeSeries(
	struct soap *soap,
	const std::vector<resqml2__Timestamp *> & Time,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCORETimeSeries *_p = soap_new_resqml2__obj_USCORETimeSeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETimeSeries::Time = Time;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCORETimeSeries * soap_new_set_resqml2__obj_USCORETimeSeries(
	struct soap *soap,
	const std::vector<resqml2__Timestamp *> & Time,
	resqml2__TimeSeriesParentage *TimeSeriesParentage,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCORETimeSeries *_p = soap_new_resqml2__obj_USCORETimeSeries(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETimeSeries::Time = Time;
		_p->resqml2__obj_USCORETimeSeries::TimeSeriesParentage = TimeSeriesParentage;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORETimeSeries(struct soap *soap, resqml2__obj_USCORETimeSeries const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_TimeSeries", "resqml2:obj_TimeSeries") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORETimeSeries * SOAP_FMAC4 soap_get_resqml2__obj_USCORETimeSeries(struct soap*, resqml2__obj_USCORETimeSeries *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORETimeSeries(struct soap *soap, resqml2__obj_USCORETimeSeries *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORETimeSeries(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORELocalDepth3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORELocalDepth3dCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORELocalDepth3dCrs(struct soap*, const char*, int, const resqml2__obj_USCORELocalDepth3dCrs *, const char*);
SOAP_FMAC3 resqml2__obj_USCORELocalDepth3dCrs * SOAP_FMAC4 soap_in_resqml2__obj_USCORELocalDepth3dCrs(struct soap*, const char*, resqml2__obj_USCORELocalDepth3dCrs *, const char*);
SOAP_FMAC1 resqml2__obj_USCORELocalDepth3dCrs * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORELocalDepth3dCrs(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORELocalDepth3dCrs * soap_new_resqml2__obj_USCORELocalDepth3dCrs(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORELocalDepth3dCrs(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORELocalDepth3dCrs * soap_new_req_resqml2__obj_USCORELocalDepth3dCrs(
	struct soap *soap,
	double YOffset1,
	double ZOffset1,
	eml__PlaneAngleMeasure *ArealRotation1,
	enum eml__AxisOrder2d ProjectedAxisOrder1,
	enum eml__LengthUom ProjectedUom1,
	enum eml__LengthUom VerticalUom1,
	double XOffset1,
	bool ZIncreasingDownward1,
	eml__AbstractVerticalCrs *VerticalCrs1,
	eml__AbstractProjectedCrs *ProjectedCrs1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORELocalDepth3dCrs *_p = soap_new_resqml2__obj_USCORELocalDepth3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractLocal3dCrs::YOffset = YOffset1;
		_p->resqml2__AbstractLocal3dCrs::ZOffset = ZOffset1;
		_p->resqml2__AbstractLocal3dCrs::ArealRotation = ArealRotation1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedUom = ProjectedUom1;
		_p->resqml2__AbstractLocal3dCrs::VerticalUom = VerticalUom1;
		_p->resqml2__AbstractLocal3dCrs::XOffset = XOffset1;
		_p->resqml2__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward1;
		_p->resqml2__AbstractLocal3dCrs::VerticalCrs = VerticalCrs1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCORELocalDepth3dCrs * soap_new_set_resqml2__obj_USCORELocalDepth3dCrs(
	struct soap *soap,
	double YOffset1,
	double ZOffset1,
	eml__PlaneAngleMeasure *ArealRotation1,
	enum eml__AxisOrder2d ProjectedAxisOrder1,
	enum eml__LengthUom ProjectedUom1,
	enum eml__LengthUom VerticalUom1,
	double XOffset1,
	bool ZIncreasingDownward1,
	eml__AbstractVerticalCrs *VerticalCrs1,
	eml__AbstractProjectedCrs *ProjectedCrs1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORELocalDepth3dCrs *_p = soap_new_resqml2__obj_USCORELocalDepth3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractLocal3dCrs::YOffset = YOffset1;
		_p->resqml2__AbstractLocal3dCrs::ZOffset = ZOffset1;
		_p->resqml2__AbstractLocal3dCrs::ArealRotation = ArealRotation1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedUom = ProjectedUom1;
		_p->resqml2__AbstractLocal3dCrs::VerticalUom = VerticalUom1;
		_p->resqml2__AbstractLocal3dCrs::XOffset = XOffset1;
		_p->resqml2__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward1;
		_p->resqml2__AbstractLocal3dCrs::VerticalCrs = VerticalCrs1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORELocalDepth3dCrs(struct soap *soap, resqml2__obj_USCORELocalDepth3dCrs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_LocalDepth3dCrs", "resqml2:obj_LocalDepth3dCrs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORELocalDepth3dCrs * SOAP_FMAC4 soap_get_resqml2__obj_USCORELocalDepth3dCrs(struct soap*, resqml2__obj_USCORELocalDepth3dCrs *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORELocalDepth3dCrs(struct soap *soap, resqml2__obj_USCORELocalDepth3dCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORELocalDepth3dCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__NameValuePair_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__NameValuePair_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__NameValuePair(struct soap*, const char*, int, const resqml2__NameValuePair *, const char*);
SOAP_FMAC3 resqml2__NameValuePair * SOAP_FMAC4 soap_in_resqml2__NameValuePair(struct soap*, const char*, resqml2__NameValuePair *, const char*);
SOAP_FMAC1 resqml2__NameValuePair * SOAP_FMAC2 soap_instantiate_resqml2__NameValuePair(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__NameValuePair * soap_new_resqml2__NameValuePair(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__NameValuePair(soap, n, NULL, NULL, NULL);
}

inline resqml2__NameValuePair * soap_new_req_resqml2__NameValuePair(
	struct soap *soap,
	const std::string& Name,
	const std::string& Value)
{
	resqml2__NameValuePair *_p = soap_new_resqml2__NameValuePair(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__NameValuePair::Name = Name;
		_p->resqml2__NameValuePair::Value = Value;
	}
	return _p;
}

inline resqml2__NameValuePair * soap_new_set_resqml2__NameValuePair(
	struct soap *soap,
	const std::string& Name,
	const std::string& Value)
{
	resqml2__NameValuePair *_p = soap_new_resqml2__NameValuePair(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__NameValuePair::Name = Name;
		_p->resqml2__NameValuePair::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml2__NameValuePair(struct soap *soap, resqml2__NameValuePair const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:NameValuePair", "resqml2:NameValuePair") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__NameValuePair * SOAP_FMAC4 soap_get_resqml2__NameValuePair(struct soap*, resqml2__NameValuePair *, const char*, const char*);

inline int soap_read_resqml2__NameValuePair(struct soap *soap, resqml2__NameValuePair *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__NameValuePair(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ResqmlJaggedArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ResqmlJaggedArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ResqmlJaggedArray(struct soap*, const char*, int, const resqml2__ResqmlJaggedArray *, const char*);
SOAP_FMAC3 resqml2__ResqmlJaggedArray * SOAP_FMAC4 soap_in_resqml2__ResqmlJaggedArray(struct soap*, const char*, resqml2__ResqmlJaggedArray *, const char*);
SOAP_FMAC1 resqml2__ResqmlJaggedArray * SOAP_FMAC2 soap_instantiate_resqml2__ResqmlJaggedArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ResqmlJaggedArray * soap_new_resqml2__ResqmlJaggedArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ResqmlJaggedArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__ResqmlJaggedArray * soap_new_req_resqml2__ResqmlJaggedArray(
	struct soap *soap,
	resqml2__AbstractValueArray *Elements,
	resqml2__AbstractIntegerArray *CumulativeLength)
{
	resqml2__ResqmlJaggedArray *_p = soap_new_resqml2__ResqmlJaggedArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ResqmlJaggedArray::Elements = Elements;
		_p->resqml2__ResqmlJaggedArray::CumulativeLength = CumulativeLength;
	}
	return _p;
}

inline resqml2__ResqmlJaggedArray * soap_new_set_resqml2__ResqmlJaggedArray(
	struct soap *soap,
	resqml2__AbstractValueArray *Elements,
	resqml2__AbstractIntegerArray *CumulativeLength)
{
	resqml2__ResqmlJaggedArray *_p = soap_new_resqml2__ResqmlJaggedArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ResqmlJaggedArray::Elements = Elements;
		_p->resqml2__ResqmlJaggedArray::CumulativeLength = CumulativeLength;
	}
	return _p;
}

inline int soap_write_resqml2__ResqmlJaggedArray(struct soap *soap, resqml2__ResqmlJaggedArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ResqmlJaggedArray", "resqml2:ResqmlJaggedArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ResqmlJaggedArray * SOAP_FMAC4 soap_get_resqml2__ResqmlJaggedArray(struct soap*, resqml2__ResqmlJaggedArray *, const char*, const char*);

inline int soap_read_resqml2__ResqmlJaggedArray(struct soap *soap, resqml2__ResqmlJaggedArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ResqmlJaggedArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractLocal3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractLocal3dCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractLocal3dCrs(struct soap*, const char*, int, const resqml2__AbstractLocal3dCrs *, const char*);
SOAP_FMAC3 resqml2__AbstractLocal3dCrs * SOAP_FMAC4 soap_in_resqml2__AbstractLocal3dCrs(struct soap*, const char*, resqml2__AbstractLocal3dCrs *, const char*);
SOAP_FMAC1 resqml2__AbstractLocal3dCrs * SOAP_FMAC2 soap_instantiate_resqml2__AbstractLocal3dCrs(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractLocal3dCrs * soap_new_resqml2__AbstractLocal3dCrs(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractLocal3dCrs(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractLocal3dCrs * soap_new_req_resqml2__AbstractLocal3dCrs(
	struct soap *soap,
	double YOffset,
	double ZOffset,
	eml__PlaneAngleMeasure *ArealRotation,
	enum eml__AxisOrder2d ProjectedAxisOrder,
	enum eml__LengthUom ProjectedUom,
	enum eml__LengthUom VerticalUom,
	double XOffset,
	bool ZIncreasingDownward,
	eml__AbstractVerticalCrs *VerticalCrs,
	eml__AbstractProjectedCrs *ProjectedCrs,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractLocal3dCrs *_p = soap_new_resqml2__AbstractLocal3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractLocal3dCrs::YOffset = YOffset;
		_p->resqml2__AbstractLocal3dCrs::ZOffset = ZOffset;
		_p->resqml2__AbstractLocal3dCrs::ArealRotation = ArealRotation;
		_p->resqml2__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder;
		_p->resqml2__AbstractLocal3dCrs::ProjectedUom = ProjectedUom;
		_p->resqml2__AbstractLocal3dCrs::VerticalUom = VerticalUom;
		_p->resqml2__AbstractLocal3dCrs::XOffset = XOffset;
		_p->resqml2__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward;
		_p->resqml2__AbstractLocal3dCrs::VerticalCrs = VerticalCrs;
		_p->resqml2__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__AbstractLocal3dCrs * soap_new_set_resqml2__AbstractLocal3dCrs(
	struct soap *soap,
	double YOffset,
	double ZOffset,
	eml__PlaneAngleMeasure *ArealRotation,
	enum eml__AxisOrder2d ProjectedAxisOrder,
	enum eml__LengthUom ProjectedUom,
	enum eml__LengthUom VerticalUom,
	double XOffset,
	bool ZIncreasingDownward,
	eml__AbstractVerticalCrs *VerticalCrs,
	eml__AbstractProjectedCrs *ProjectedCrs,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractLocal3dCrs *_p = soap_new_resqml2__AbstractLocal3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractLocal3dCrs::YOffset = YOffset;
		_p->resqml2__AbstractLocal3dCrs::ZOffset = ZOffset;
		_p->resqml2__AbstractLocal3dCrs::ArealRotation = ArealRotation;
		_p->resqml2__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder;
		_p->resqml2__AbstractLocal3dCrs::ProjectedUom = ProjectedUom;
		_p->resqml2__AbstractLocal3dCrs::VerticalUom = VerticalUom;
		_p->resqml2__AbstractLocal3dCrs::XOffset = XOffset;
		_p->resqml2__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward;
		_p->resqml2__AbstractLocal3dCrs::VerticalCrs = VerticalCrs;
		_p->resqml2__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractLocal3dCrs(struct soap *soap, resqml2__AbstractLocal3dCrs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractLocal3dCrs", "resqml2:AbstractLocal3dCrs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractLocal3dCrs * SOAP_FMAC4 soap_get_resqml2__AbstractLocal3dCrs(struct soap*, resqml2__AbstractLocal3dCrs *, const char*, const char*);

inline int soap_read_resqml2__AbstractLocal3dCrs(struct soap *soap, resqml2__AbstractLocal3dCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractLocal3dCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Timestamp_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Timestamp_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Timestamp(struct soap*, const char*, int, const resqml2__Timestamp *, const char*);
SOAP_FMAC3 resqml2__Timestamp * SOAP_FMAC4 soap_in_resqml2__Timestamp(struct soap*, const char*, resqml2__Timestamp *, const char*);
SOAP_FMAC1 resqml2__Timestamp * SOAP_FMAC2 soap_instantiate_resqml2__Timestamp(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Timestamp * soap_new_resqml2__Timestamp(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Timestamp(soap, n, NULL, NULL, NULL);
}

inline resqml2__Timestamp * soap_new_req_resqml2__Timestamp(
	struct soap *soap,
	time_t DateTime)
{
	resqml2__Timestamp *_p = soap_new_resqml2__Timestamp(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Timestamp::DateTime = DateTime;
	}
	return _p;
}

inline resqml2__Timestamp * soap_new_set_resqml2__Timestamp(
	struct soap *soap,
	time_t DateTime,
	LONG64 *YearOffset)
{
	resqml2__Timestamp *_p = soap_new_resqml2__Timestamp(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Timestamp::DateTime = DateTime;
		_p->resqml2__Timestamp::YearOffset = YearOffset;
	}
	return _p;
}

inline int soap_write_resqml2__Timestamp(struct soap *soap, resqml2__Timestamp const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Timestamp", "resqml2:Timestamp") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Timestamp * SOAP_FMAC4 soap_get_resqml2__Timestamp(struct soap*, resqml2__Timestamp *, const char*, const char*);

inline int soap_read_resqml2__Timestamp(struct soap *soap, resqml2__Timestamp *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Timestamp(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TimeIndex(struct soap*, const char*, int, const resqml2__TimeIndex *, const char*);
SOAP_FMAC3 resqml2__TimeIndex * SOAP_FMAC4 soap_in_resqml2__TimeIndex(struct soap*, const char*, resqml2__TimeIndex *, const char*);
SOAP_FMAC1 resqml2__TimeIndex * SOAP_FMAC2 soap_instantiate_resqml2__TimeIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__TimeIndex * soap_new_resqml2__TimeIndex(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__TimeIndex(soap, n, NULL, NULL, NULL);
}

inline resqml2__TimeIndex * soap_new_req_resqml2__TimeIndex(
	struct soap *soap,
	ULONG64 Index,
	eml__DataObjectReference *TimeSeries)
{
	resqml2__TimeIndex *_p = soap_new_resqml2__TimeIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeIndex::Index = Index;
		_p->resqml2__TimeIndex::TimeSeries = TimeSeries;
	}
	return _p;
}

inline resqml2__TimeIndex * soap_new_set_resqml2__TimeIndex(
	struct soap *soap,
	ULONG64 Index,
	eml__DataObjectReference *TimeSeries)
{
	resqml2__TimeIndex *_p = soap_new_resqml2__TimeIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeIndex::Index = Index;
		_p->resqml2__TimeIndex::TimeSeries = TimeSeries;
	}
	return _p;
}

inline int soap_write_resqml2__TimeIndex(struct soap *soap, resqml2__TimeIndex const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:TimeIndex", "resqml2:TimeIndex") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__TimeIndex * SOAP_FMAC4 soap_get_resqml2__TimeIndex(struct soap*, resqml2__TimeIndex *, const char*, const char*);

inline int soap_read_resqml2__TimeIndex(struct soap *soap, resqml2__TimeIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__TimeIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORELocalTime3dCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORELocalTime3dCrs_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORELocalTime3dCrs(struct soap*, const char*, int, const resqml2__obj_USCORELocalTime3dCrs *, const char*);
SOAP_FMAC3 resqml2__obj_USCORELocalTime3dCrs * SOAP_FMAC4 soap_in_resqml2__obj_USCORELocalTime3dCrs(struct soap*, const char*, resqml2__obj_USCORELocalTime3dCrs *, const char*);
SOAP_FMAC1 resqml2__obj_USCORELocalTime3dCrs * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORELocalTime3dCrs(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORELocalTime3dCrs * soap_new_resqml2__obj_USCORELocalTime3dCrs(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORELocalTime3dCrs(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORELocalTime3dCrs * soap_new_req_resqml2__obj_USCORELocalTime3dCrs(
	struct soap *soap,
	enum eml__TimeUom TimeUom,
	double YOffset1,
	double ZOffset1,
	eml__PlaneAngleMeasure *ArealRotation1,
	enum eml__AxisOrder2d ProjectedAxisOrder1,
	enum eml__LengthUom ProjectedUom1,
	enum eml__LengthUom VerticalUom1,
	double XOffset1,
	bool ZIncreasingDownward1,
	eml__AbstractVerticalCrs *VerticalCrs1,
	eml__AbstractProjectedCrs *ProjectedCrs1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORELocalTime3dCrs *_p = soap_new_resqml2__obj_USCORELocalTime3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORELocalTime3dCrs::TimeUom = TimeUom;
		_p->resqml2__AbstractLocal3dCrs::YOffset = YOffset1;
		_p->resqml2__AbstractLocal3dCrs::ZOffset = ZOffset1;
		_p->resqml2__AbstractLocal3dCrs::ArealRotation = ArealRotation1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedUom = ProjectedUom1;
		_p->resqml2__AbstractLocal3dCrs::VerticalUom = VerticalUom1;
		_p->resqml2__AbstractLocal3dCrs::XOffset = XOffset1;
		_p->resqml2__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward1;
		_p->resqml2__AbstractLocal3dCrs::VerticalCrs = VerticalCrs1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCORELocalTime3dCrs * soap_new_set_resqml2__obj_USCORELocalTime3dCrs(
	struct soap *soap,
	enum eml__TimeUom TimeUom,
	double YOffset1,
	double ZOffset1,
	eml__PlaneAngleMeasure *ArealRotation1,
	enum eml__AxisOrder2d ProjectedAxisOrder1,
	enum eml__LengthUom ProjectedUom1,
	enum eml__LengthUom VerticalUom1,
	double XOffset1,
	bool ZIncreasingDownward1,
	eml__AbstractVerticalCrs *VerticalCrs1,
	eml__AbstractProjectedCrs *ProjectedCrs1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORELocalTime3dCrs *_p = soap_new_resqml2__obj_USCORELocalTime3dCrs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORELocalTime3dCrs::TimeUom = TimeUom;
		_p->resqml2__AbstractLocal3dCrs::YOffset = YOffset1;
		_p->resqml2__AbstractLocal3dCrs::ZOffset = ZOffset1;
		_p->resqml2__AbstractLocal3dCrs::ArealRotation = ArealRotation1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedAxisOrder = ProjectedAxisOrder1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedUom = ProjectedUom1;
		_p->resqml2__AbstractLocal3dCrs::VerticalUom = VerticalUom1;
		_p->resqml2__AbstractLocal3dCrs::XOffset = XOffset1;
		_p->resqml2__AbstractLocal3dCrs::ZIncreasingDownward = ZIncreasingDownward1;
		_p->resqml2__AbstractLocal3dCrs::VerticalCrs = VerticalCrs1;
		_p->resqml2__AbstractLocal3dCrs::ProjectedCrs = ProjectedCrs1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORELocalTime3dCrs(struct soap *soap, resqml2__obj_USCORELocalTime3dCrs const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_LocalTime3dCrs", "resqml2:obj_LocalTime3dCrs") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORELocalTime3dCrs * SOAP_FMAC4 soap_get_resqml2__obj_USCORELocalTime3dCrs(struct soap*, resqml2__obj_USCORELocalTime3dCrs *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORELocalTime3dCrs(struct soap *soap, resqml2__obj_USCORELocalTime3dCrs *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORELocalTime3dCrs(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeSeriesParentage_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeSeriesParentage_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TimeSeriesParentage(struct soap*, const char*, int, const resqml2__TimeSeriesParentage *, const char*);
SOAP_FMAC3 resqml2__TimeSeriesParentage * SOAP_FMAC4 soap_in_resqml2__TimeSeriesParentage(struct soap*, const char*, resqml2__TimeSeriesParentage *, const char*);
SOAP_FMAC1 resqml2__TimeSeriesParentage * SOAP_FMAC2 soap_instantiate_resqml2__TimeSeriesParentage(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__TimeSeriesParentage * soap_new_resqml2__TimeSeriesParentage(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__TimeSeriesParentage(soap, n, NULL, NULL, NULL);
}

inline resqml2__TimeSeriesParentage * soap_new_req_resqml2__TimeSeriesParentage(
	struct soap *soap,
	bool HasOverlap,
	resqml2__TimeIndex *ParentTimeIndex)
{
	resqml2__TimeSeriesParentage *_p = soap_new_resqml2__TimeSeriesParentage(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeSeriesParentage::HasOverlap = HasOverlap;
		_p->resqml2__TimeSeriesParentage::ParentTimeIndex = ParentTimeIndex;
	}
	return _p;
}

inline resqml2__TimeSeriesParentage * soap_new_set_resqml2__TimeSeriesParentage(
	struct soap *soap,
	bool HasOverlap,
	resqml2__TimeIndex *ParentTimeIndex)
{
	resqml2__TimeSeriesParentage *_p = soap_new_resqml2__TimeSeriesParentage(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeSeriesParentage::HasOverlap = HasOverlap;
		_p->resqml2__TimeSeriesParentage::ParentTimeIndex = ParentTimeIndex;
	}
	return _p;
}

inline int soap_write_resqml2__TimeSeriesParentage(struct soap *soap, resqml2__TimeSeriesParentage const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:TimeSeriesParentage", "resqml2:TimeSeriesParentage") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__TimeSeriesParentage * SOAP_FMAC4 soap_get_resqml2__TimeSeriesParentage(struct soap*, resqml2__TimeSeriesParentage *, const char*, const char*);

inline int soap_read_resqml2__TimeSeriesParentage(struct soap *soap, resqml2__TimeSeriesParentage *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__TimeSeriesParentage(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3d_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Point3d(struct soap*, const char*, int, const resqml2__Point3d *, const char*);
SOAP_FMAC3 resqml2__Point3d * SOAP_FMAC4 soap_in_resqml2__Point3d(struct soap*, const char*, resqml2__Point3d *, const char*);
SOAP_FMAC1 resqml2__Point3d * SOAP_FMAC2 soap_instantiate_resqml2__Point3d(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Point3d * soap_new_resqml2__Point3d(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Point3d(soap, n, NULL, NULL, NULL);
}

inline resqml2__Point3d * soap_new_req_resqml2__Point3d(
	struct soap *soap,
	double Coordinate1,
	double Coordinate2,
	double Coordinate3)
{
	resqml2__Point3d *_p = soap_new_resqml2__Point3d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3d::Coordinate1 = Coordinate1;
		_p->resqml2__Point3d::Coordinate2 = Coordinate2;
		_p->resqml2__Point3d::Coordinate3 = Coordinate3;
	}
	return _p;
}

inline resqml2__Point3d * soap_new_set_resqml2__Point3d(
	struct soap *soap,
	double Coordinate1,
	double Coordinate2,
	double Coordinate3)
{
	resqml2__Point3d *_p = soap_new_resqml2__Point3d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3d::Coordinate1 = Coordinate1;
		_p->resqml2__Point3d::Coordinate2 = Coordinate2;
		_p->resqml2__Point3d::Coordinate3 = Coordinate3;
	}
	return _p;
}

inline int soap_write_resqml2__Point3d(struct soap *soap, resqml2__Point3d const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Point3d", "resqml2:Point3d") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Point3d * SOAP_FMAC4 soap_get_resqml2__Point3d(struct soap*, resqml2__Point3d *, const char*, const char*);

inline int soap_read_resqml2__Point3d(struct soap *soap, resqml2__Point3d *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Point3d(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractFeature(struct soap*, const char*, int, const resqml2__AbstractFeature *, const char*);
SOAP_FMAC3 resqml2__AbstractFeature * SOAP_FMAC4 soap_in_resqml2__AbstractFeature(struct soap*, const char*, resqml2__AbstractFeature *, const char*);
SOAP_FMAC1 resqml2__AbstractFeature * SOAP_FMAC2 soap_instantiate_resqml2__AbstractFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractFeature * soap_new_resqml2__AbstractFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractFeature * soap_new_req_resqml2__AbstractFeature(
	struct soap *soap,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractFeature *_p = soap_new_resqml2__AbstractFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__AbstractFeature * soap_new_set_resqml2__AbstractFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractFeature *_p = soap_new_resqml2__AbstractFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractFeature(struct soap *soap, resqml2__AbstractFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractFeature", "resqml2:AbstractFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractFeature * SOAP_FMAC4 soap_get_resqml2__AbstractFeature(struct soap*, resqml2__AbstractFeature *, const char*, const char*);

inline int soap_read_resqml2__AbstractFeature(struct soap *soap, resqml2__AbstractFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETectonicBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETectonicBoundaryFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORETectonicBoundaryFeature(struct soap*, const char*, int, const resqml2__obj_USCORETectonicBoundaryFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCORETectonicBoundaryFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCORETectonicBoundaryFeature(struct soap*, const char*, resqml2__obj_USCORETectonicBoundaryFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCORETectonicBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORETectonicBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORETectonicBoundaryFeature * soap_new_resqml2__obj_USCORETectonicBoundaryFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORETectonicBoundaryFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORETectonicBoundaryFeature * soap_new_req_resqml2__obj_USCORETectonicBoundaryFeature(
	struct soap *soap,
	enum resqml2__TectonicBoundaryKind TectonicBoundaryKind,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORETectonicBoundaryFeature *_p = soap_new_resqml2__obj_USCORETectonicBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETectonicBoundaryFeature::TectonicBoundaryKind = TectonicBoundaryKind;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORETectonicBoundaryFeature * soap_new_set_resqml2__obj_USCORETectonicBoundaryFeature(
	struct soap *soap,
	enum resqml2__TectonicBoundaryKind TectonicBoundaryKind,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORETectonicBoundaryFeature *_p = soap_new_resqml2__obj_USCORETectonicBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETectonicBoundaryFeature::TectonicBoundaryKind = TectonicBoundaryKind;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORETectonicBoundaryFeature(struct soap *soap, resqml2__obj_USCORETectonicBoundaryFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_TectonicBoundaryFeature", "resqml2:obj_TectonicBoundaryFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORETectonicBoundaryFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCORETectonicBoundaryFeature(struct soap*, resqml2__obj_USCORETectonicBoundaryFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORETectonicBoundaryFeature(struct soap *soap, resqml2__obj_USCORETectonicBoundaryFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORETectonicBoundaryFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREOrganizationFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREOrganizationFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREOrganizationFeature(struct soap*, const char*, int, const resqml2__obj_USCOREOrganizationFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREOrganizationFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREOrganizationFeature(struct soap*, const char*, resqml2__obj_USCOREOrganizationFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREOrganizationFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREOrganizationFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREOrganizationFeature * soap_new_resqml2__obj_USCOREOrganizationFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREOrganizationFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREOrganizationFeature * soap_new_req_resqml2__obj_USCOREOrganizationFeature(
	struct soap *soap,
	enum resqml2__OrganizationKind OrganizationKind,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREOrganizationFeature *_p = soap_new_resqml2__obj_USCOREOrganizationFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREOrganizationFeature::OrganizationKind = OrganizationKind;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREOrganizationFeature * soap_new_set_resqml2__obj_USCOREOrganizationFeature(
	struct soap *soap,
	enum resqml2__OrganizationKind OrganizationKind,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREOrganizationFeature *_p = soap_new_resqml2__obj_USCOREOrganizationFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREOrganizationFeature::OrganizationKind = OrganizationKind;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREOrganizationFeature(struct soap *soap, resqml2__obj_USCOREOrganizationFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_OrganizationFeature", "resqml2:obj_OrganizationFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREOrganizationFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREOrganizationFeature(struct soap*, resqml2__obj_USCOREOrganizationFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREOrganizationFeature(struct soap *soap, resqml2__obj_USCOREOrganizationFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREOrganizationFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeobodyFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeobodyFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGeobodyFeature(struct soap*, const char*, int, const resqml2__obj_USCOREGeobodyFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGeobodyFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGeobodyFeature(struct soap*, const char*, resqml2__obj_USCOREGeobodyFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGeobodyFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGeobodyFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGeobodyFeature * soap_new_resqml2__obj_USCOREGeobodyFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGeobodyFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGeobodyFeature * soap_new_req_resqml2__obj_USCOREGeobodyFeature(
	struct soap *soap,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREGeobodyFeature *_p = soap_new_resqml2__obj_USCOREGeobodyFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREGeobodyFeature * soap_new_set_resqml2__obj_USCOREGeobodyFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREGeobodyFeature *_p = soap_new_resqml2__obj_USCOREGeobodyFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGeobodyFeature(struct soap *soap, resqml2__obj_USCOREGeobodyFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GeobodyFeature", "resqml2:obj_GeobodyFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGeobodyFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGeobodyFeature(struct soap*, resqml2__obj_USCOREGeobodyFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGeobodyFeature(struct soap *soap, resqml2__obj_USCOREGeobodyFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGeobodyFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeneticBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeneticBoundaryFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGeneticBoundaryFeature(struct soap*, const char*, int, const resqml2__obj_USCOREGeneticBoundaryFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGeneticBoundaryFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGeneticBoundaryFeature(struct soap*, const char*, resqml2__obj_USCOREGeneticBoundaryFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGeneticBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGeneticBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGeneticBoundaryFeature * soap_new_resqml2__obj_USCOREGeneticBoundaryFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGeneticBoundaryFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGeneticBoundaryFeature * soap_new_req_resqml2__obj_USCOREGeneticBoundaryFeature(
	struct soap *soap,
	enum resqml2__GeneticBoundaryKind GeneticBoundaryKind,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREGeneticBoundaryFeature *_p = soap_new_resqml2__obj_USCOREGeneticBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGeneticBoundaryFeature::GeneticBoundaryKind = GeneticBoundaryKind;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREGeneticBoundaryFeature * soap_new_set_resqml2__obj_USCOREGeneticBoundaryFeature(
	struct soap *soap,
	enum resqml2__GeneticBoundaryKind GeneticBoundaryKind,
	resqml2__Timestamp *AbsoluteAge,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREGeneticBoundaryFeature *_p = soap_new_resqml2__obj_USCOREGeneticBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGeneticBoundaryFeature::GeneticBoundaryKind = GeneticBoundaryKind;
		_p->resqml2__obj_USCOREGeneticBoundaryFeature::AbsoluteAge = AbsoluteAge;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGeneticBoundaryFeature(struct soap *soap, resqml2__obj_USCOREGeneticBoundaryFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GeneticBoundaryFeature", "resqml2:obj_GeneticBoundaryFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGeneticBoundaryFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGeneticBoundaryFeature(struct soap*, resqml2__obj_USCOREGeneticBoundaryFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGeneticBoundaryFeature(struct soap *soap, resqml2__obj_USCOREGeneticBoundaryFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGeneticBoundaryFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractGeologicFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractGeologicFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractGeologicFeature(struct soap*, const char*, int, const resqml2__AbstractGeologicFeature *, const char*);
SOAP_FMAC3 resqml2__AbstractGeologicFeature * SOAP_FMAC4 soap_in_resqml2__AbstractGeologicFeature(struct soap*, const char*, resqml2__AbstractGeologicFeature *, const char*);
SOAP_FMAC1 resqml2__AbstractGeologicFeature * SOAP_FMAC2 soap_instantiate_resqml2__AbstractGeologicFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractGeologicFeature * soap_new_resqml2__AbstractGeologicFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractGeologicFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractGeologicFeature * soap_new_req_resqml2__AbstractGeologicFeature(
	struct soap *soap,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractGeologicFeature *_p = soap_new_resqml2__AbstractGeologicFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__AbstractGeologicFeature * soap_new_set_resqml2__AbstractGeologicFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractGeologicFeature *_p = soap_new_resqml2__AbstractGeologicFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractGeologicFeature(struct soap *soap, resqml2__AbstractGeologicFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractGeologicFeature", "resqml2:AbstractGeologicFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractGeologicFeature * SOAP_FMAC4 soap_get_resqml2__AbstractGeologicFeature(struct soap*, resqml2__AbstractGeologicFeature *, const char*, const char*);

inline int soap_read_resqml2__AbstractGeologicFeature(struct soap *soap, resqml2__AbstractGeologicFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractGeologicFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicUnitFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREStratigraphicUnitFeature(struct soap*, const char*, int, const resqml2__obj_USCOREStratigraphicUnitFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicUnitFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREStratigraphicUnitFeature(struct soap*, const char*, resqml2__obj_USCOREStratigraphicUnitFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREStratigraphicUnitFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREStratigraphicUnitFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREStratigraphicUnitFeature * soap_new_resqml2__obj_USCOREStratigraphicUnitFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREStratigraphicUnitFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREStratigraphicUnitFeature * soap_new_req_resqml2__obj_USCOREStratigraphicUnitFeature(
	struct soap *soap,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREStratigraphicUnitFeature *_p = soap_new_resqml2__obj_USCOREStratigraphicUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREStratigraphicUnitFeature * soap_new_set_resqml2__obj_USCOREStratigraphicUnitFeature(
	struct soap *soap,
	eml__DataObjectReference *ChronostratigraphicBottom,
	eml__DataObjectReference *ChronostratigraphicTop,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREStratigraphicUnitFeature *_p = soap_new_resqml2__obj_USCOREStratigraphicUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStratigraphicUnitFeature::ChronostratigraphicBottom = ChronostratigraphicBottom;
		_p->resqml2__obj_USCOREStratigraphicUnitFeature::ChronostratigraphicTop = ChronostratigraphicTop;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREStratigraphicUnitFeature(struct soap *soap, resqml2__obj_USCOREStratigraphicUnitFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_StratigraphicUnitFeature", "resqml2:obj_StratigraphicUnitFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicUnitFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREStratigraphicUnitFeature(struct soap*, resqml2__obj_USCOREStratigraphicUnitFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREStratigraphicUnitFeature(struct soap *soap, resqml2__obj_USCOREStratigraphicUnitFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREStratigraphicUnitFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGlobalChronostratigraphicColumn_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGlobalChronostratigraphicColumn_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, const char*, int, const resqml2__obj_USCOREGlobalChronostratigraphicColumn *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGlobalChronostratigraphicColumn * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, const char*, resqml2__obj_USCOREGlobalChronostratigraphicColumn *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGlobalChronostratigraphicColumn * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGlobalChronostratigraphicColumn * soap_new_resqml2__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGlobalChronostratigraphicColumn(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGlobalChronostratigraphicColumn * soap_new_req_resqml2__obj_USCOREGlobalChronostratigraphicColumn(
	struct soap *soap,
	const std::vector<resqml2__ChronostratigraphicRank *> & ChronostratigraphicColumnComponent,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREGlobalChronostratigraphicColumn *_p = soap_new_resqml2__obj_USCOREGlobalChronostratigraphicColumn(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGlobalChronostratigraphicColumn::ChronostratigraphicColumnComponent = ChronostratigraphicColumnComponent;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCOREGlobalChronostratigraphicColumn * soap_new_set_resqml2__obj_USCOREGlobalChronostratigraphicColumn(
	struct soap *soap,
	const std::vector<resqml2__ChronostratigraphicRank *> & ChronostratigraphicColumnComponent,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREGlobalChronostratigraphicColumn *_p = soap_new_resqml2__obj_USCOREGlobalChronostratigraphicColumn(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGlobalChronostratigraphicColumn::ChronostratigraphicColumnComponent = ChronostratigraphicColumnComponent;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, resqml2__obj_USCOREGlobalChronostratigraphicColumn const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GlobalChronostratigraphicColumn", "resqml2:obj_GlobalChronostratigraphicColumn") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGlobalChronostratigraphicColumn * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGlobalChronostratigraphicColumn(struct soap*, resqml2__obj_USCOREGlobalChronostratigraphicColumn *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGlobalChronostratigraphicColumn(struct soap *soap, resqml2__obj_USCOREGlobalChronostratigraphicColumn *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGlobalChronostratigraphicColumn(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ChronostratigraphicRank_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ChronostratigraphicRank_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ChronostratigraphicRank(struct soap*, const char*, int, const resqml2__ChronostratigraphicRank *, const char*);
SOAP_FMAC3 resqml2__ChronostratigraphicRank * SOAP_FMAC4 soap_in_resqml2__ChronostratigraphicRank(struct soap*, const char*, resqml2__ChronostratigraphicRank *, const char*);
SOAP_FMAC1 resqml2__ChronostratigraphicRank * SOAP_FMAC2 soap_instantiate_resqml2__ChronostratigraphicRank(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ChronostratigraphicRank * soap_new_resqml2__ChronostratigraphicRank(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ChronostratigraphicRank(soap, n, NULL, NULL, NULL);
}

inline resqml2__ChronostratigraphicRank * soap_new_req_resqml2__ChronostratigraphicRank(
	struct soap *soap,
	const std::string& Name,
	const std::vector<eml__DataObjectReference *> & Contains)
{
	resqml2__ChronostratigraphicRank *_p = soap_new_resqml2__ChronostratigraphicRank(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ChronostratigraphicRank::Name = Name;
		_p->resqml2__ChronostratigraphicRank::Contains = Contains;
	}
	return _p;
}

inline resqml2__ChronostratigraphicRank * soap_new_set_resqml2__ChronostratigraphicRank(
	struct soap *soap,
	const std::string& Name,
	const std::vector<eml__DataObjectReference *> & Contains)
{
	resqml2__ChronostratigraphicRank *_p = soap_new_resqml2__ChronostratigraphicRank(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ChronostratigraphicRank::Name = Name;
		_p->resqml2__ChronostratigraphicRank::Contains = Contains;
	}
	return _p;
}

inline int soap_write_resqml2__ChronostratigraphicRank(struct soap *soap, resqml2__ChronostratigraphicRank const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ChronostratigraphicRank", "resqml2:ChronostratigraphicRank") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ChronostratigraphicRank * SOAP_FMAC4 soap_get_resqml2__ChronostratigraphicRank(struct soap*, resqml2__ChronostratigraphicRank *, const char*, const char*);

inline int soap_read_resqml2__ChronostratigraphicRank(struct soap *soap, resqml2__ChronostratigraphicRank *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ChronostratigraphicRank(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREBoundaryFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREBoundaryFeature(struct soap*, const char*, int, const resqml2__obj_USCOREBoundaryFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREBoundaryFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREBoundaryFeature(struct soap*, const char*, resqml2__obj_USCOREBoundaryFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREBoundaryFeature * soap_new_resqml2__obj_USCOREBoundaryFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREBoundaryFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREBoundaryFeature * soap_new_req_resqml2__obj_USCOREBoundaryFeature(
	struct soap *soap,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREBoundaryFeature *_p = soap_new_resqml2__obj_USCOREBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREBoundaryFeature * soap_new_set_resqml2__obj_USCOREBoundaryFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREBoundaryFeature *_p = soap_new_resqml2__obj_USCOREBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREBoundaryFeature(struct soap *soap, resqml2__obj_USCOREBoundaryFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_BoundaryFeature", "resqml2:obj_BoundaryFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREBoundaryFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREBoundaryFeature(struct soap*, resqml2__obj_USCOREBoundaryFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREBoundaryFeature(struct soap *soap, resqml2__obj_USCOREBoundaryFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREBoundaryFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERockFluidUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERockFluidUnitFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORERockFluidUnitFeature(struct soap*, const char*, int, const resqml2__obj_USCORERockFluidUnitFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCORERockFluidUnitFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCORERockFluidUnitFeature(struct soap*, const char*, resqml2__obj_USCORERockFluidUnitFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCORERockFluidUnitFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORERockFluidUnitFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORERockFluidUnitFeature * soap_new_resqml2__obj_USCORERockFluidUnitFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORERockFluidUnitFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORERockFluidUnitFeature * soap_new_req_resqml2__obj_USCORERockFluidUnitFeature(
	struct soap *soap,
	enum resqml2__Phase Phase,
	eml__DataObjectReference *FluidBoundaryBottom,
	eml__DataObjectReference *FluidBoundaryTop,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORERockFluidUnitFeature *_p = soap_new_resqml2__obj_USCORERockFluidUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERockFluidUnitFeature::Phase = Phase;
		_p->resqml2__obj_USCORERockFluidUnitFeature::FluidBoundaryBottom = FluidBoundaryBottom;
		_p->resqml2__obj_USCORERockFluidUnitFeature::FluidBoundaryTop = FluidBoundaryTop;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORERockFluidUnitFeature * soap_new_set_resqml2__obj_USCORERockFluidUnitFeature(
	struct soap *soap,
	enum resqml2__Phase Phase,
	eml__DataObjectReference *FluidBoundaryBottom,
	eml__DataObjectReference *FluidBoundaryTop,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORERockFluidUnitFeature *_p = soap_new_resqml2__obj_USCORERockFluidUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERockFluidUnitFeature::Phase = Phase;
		_p->resqml2__obj_USCORERockFluidUnitFeature::FluidBoundaryBottom = FluidBoundaryBottom;
		_p->resqml2__obj_USCORERockFluidUnitFeature::FluidBoundaryTop = FluidBoundaryTop;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORERockFluidUnitFeature(struct soap *soap, resqml2__obj_USCORERockFluidUnitFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_RockFluidUnitFeature", "resqml2:obj_RockFluidUnitFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORERockFluidUnitFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCORERockFluidUnitFeature(struct soap*, resqml2__obj_USCORERockFluidUnitFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORERockFluidUnitFeature(struct soap *soap, resqml2__obj_USCORERockFluidUnitFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORERockFluidUnitFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeologicUnitFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeologicUnitFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGeologicUnitFeature(struct soap*, const char*, int, const resqml2__obj_USCOREGeologicUnitFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGeologicUnitFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGeologicUnitFeature(struct soap*, const char*, resqml2__obj_USCOREGeologicUnitFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGeologicUnitFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGeologicUnitFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGeologicUnitFeature * soap_new_resqml2__obj_USCOREGeologicUnitFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGeologicUnitFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGeologicUnitFeature * soap_new_req_resqml2__obj_USCOREGeologicUnitFeature(
	struct soap *soap,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGeologicUnitFeature *_p = soap_new_resqml2__obj_USCOREGeologicUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREGeologicUnitFeature * soap_new_set_resqml2__obj_USCOREGeologicUnitFeature(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGeologicUnitFeature *_p = soap_new_resqml2__obj_USCOREGeologicUnitFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGeologicUnitFeature(struct soap *soap, resqml2__obj_USCOREGeologicUnitFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GeologicUnitFeature", "resqml2:obj_GeologicUnitFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGeologicUnitFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGeologicUnitFeature(struct soap*, resqml2__obj_USCOREGeologicUnitFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGeologicUnitFeature(struct soap *soap, resqml2__obj_USCOREGeologicUnitFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGeologicUnitFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREFluidBoundaryFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREFluidBoundaryFeature_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREFluidBoundaryFeature(struct soap*, const char*, int, const resqml2__obj_USCOREFluidBoundaryFeature *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREFluidBoundaryFeature * SOAP_FMAC4 soap_in_resqml2__obj_USCOREFluidBoundaryFeature(struct soap*, const char*, resqml2__obj_USCOREFluidBoundaryFeature *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREFluidBoundaryFeature * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREFluidBoundaryFeature(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREFluidBoundaryFeature * soap_new_resqml2__obj_USCOREFluidBoundaryFeature(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREFluidBoundaryFeature(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREFluidBoundaryFeature * soap_new_req_resqml2__obj_USCOREFluidBoundaryFeature(
	struct soap *soap,
	enum resqml2__FluidContact FluidContact,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREFluidBoundaryFeature *_p = soap_new_resqml2__obj_USCOREFluidBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREFluidBoundaryFeature::FluidContact = FluidContact;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREFluidBoundaryFeature * soap_new_set_resqml2__obj_USCOREFluidBoundaryFeature(
	struct soap *soap,
	enum resqml2__FluidContact FluidContact,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREFluidBoundaryFeature *_p = soap_new_resqml2__obj_USCOREFluidBoundaryFeature(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREFluidBoundaryFeature::FluidContact = FluidContact;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREFluidBoundaryFeature(struct soap *soap, resqml2__obj_USCOREFluidBoundaryFeature const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_FluidBoundaryFeature", "resqml2:obj_FluidBoundaryFeature") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREFluidBoundaryFeature * SOAP_FMAC4 soap_get_resqml2__obj_USCOREFluidBoundaryFeature(struct soap*, resqml2__obj_USCOREFluidBoundaryFeature *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREFluidBoundaryFeature(struct soap *soap, resqml2__obj_USCOREFluidBoundaryFeature *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREFluidBoundaryFeature(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREStratigraphicOccurrenceInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicOccurrenceInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, const char*, resqml2__obj_USCOREStratigraphicOccurrenceInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREStratigraphicOccurrenceInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREStratigraphicOccurrenceInterpretation * soap_new_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREStratigraphicOccurrenceInterpretation * soap_new_req_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(
	struct soap *soap,
	enum resqml2__OrderingCriteria OrderingCriteria1,
	enum resqml2__Domain Domain3,
	eml__DataObjectReference *InterpretedFeature3,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREStratigraphicOccurrenceInterpretation *_p = soap_new_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria1;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain3;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature3;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREStratigraphicOccurrenceInterpretation * soap_new_set_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(
	struct soap *soap,
	eml__DataObjectReference *IsOccurrenceOf,
	const std::vector<resqml2__GeologicUnitInterpretationIndex *> & GeologicUnitIndex,
	enum resqml2__OrderingCriteria OrderingCriteria1,
	const std::vector<resqml2__AbstractContactInterpretationPart *> & ContactInterpretation2,
	enum resqml2__Domain Domain3,
	eml__DataObjectReference *InterpretedFeature3,
	resqml2__TimeInterval *HasOccuredDuring3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREStratigraphicOccurrenceInterpretation *_p = soap_new_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStratigraphicOccurrenceInterpretation::IsOccurrenceOf = IsOccurrenceOf;
		_p->resqml2__obj_USCOREStratigraphicOccurrenceInterpretation::GeologicUnitIndex = GeologicUnitIndex;
		_p->resqml2__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria1;
		_p->resqml2__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation2;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain3;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature3;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, resqml2__obj_USCOREStratigraphicOccurrenceInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_StratigraphicOccurrenceInterpretation", "resqml2:obj_StratigraphicOccurrenceInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicOccurrenceInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap*, resqml2__obj_USCOREStratigraphicOccurrenceInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(struct soap *soap, resqml2__obj_USCOREStratigraphicOccurrenceInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREStratigraphicOccurrenceInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicUnitInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREStratigraphicUnitInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREStratigraphicUnitInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicUnitInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREStratigraphicUnitInterpretation(struct soap*, const char*, resqml2__obj_USCOREStratigraphicUnitInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREStratigraphicUnitInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREStratigraphicUnitInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREStratigraphicUnitInterpretation * soap_new_resqml2__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREStratigraphicUnitInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREStratigraphicUnitInterpretation * soap_new_req_resqml2__obj_USCOREStratigraphicUnitInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREStratigraphicUnitInterpretation *_p = soap_new_resqml2__obj_USCOREStratigraphicUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREStratigraphicUnitInterpretation * soap_new_set_resqml2__obj_USCOREStratigraphicUnitInterpretation(
	struct soap *soap,
	enum resqml2__DepositionMode *DepositionMode,
	eml__LengthMeasure *MaxThickness,
	eml__LengthMeasure *MinThickness,
	enum resqml2__GeologicUnitComposition *GeologicUnitComposition1,
	enum resqml2__GeologicUnitMaterialImplacement *GeologicUnitMaterialImplacement1,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	resqml2__TimeInterval *HasOccuredDuring2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREStratigraphicUnitInterpretation *_p = soap_new_resqml2__obj_USCOREStratigraphicUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStratigraphicUnitInterpretation::DepositionMode = DepositionMode;
		_p->resqml2__obj_USCOREStratigraphicUnitInterpretation::MaxThickness = MaxThickness;
		_p->resqml2__obj_USCOREStratigraphicUnitInterpretation::MinThickness = MinThickness;
		_p->resqml2__obj_USCOREGeologicUnitInterpretation::GeologicUnitComposition = GeologicUnitComposition1;
		_p->resqml2__obj_USCOREGeologicUnitInterpretation::GeologicUnitMaterialImplacement = GeologicUnitMaterialImplacement1;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, resqml2__obj_USCOREStratigraphicUnitInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_StratigraphicUnitInterpretation", "resqml2:obj_StratigraphicUnitInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicUnitInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREStratigraphicUnitInterpretation(struct soap*, resqml2__obj_USCOREStratigraphicUnitInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREStratigraphicUnitInterpretation(struct soap *soap, resqml2__obj_USCOREStratigraphicUnitInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREStratigraphicUnitInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeologicUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeologicUnitInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGeologicUnitInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREGeologicUnitInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGeologicUnitInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGeologicUnitInterpretation(struct soap*, const char*, resqml2__obj_USCOREGeologicUnitInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGeologicUnitInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGeologicUnitInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGeologicUnitInterpretation * soap_new_resqml2__obj_USCOREGeologicUnitInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGeologicUnitInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGeologicUnitInterpretation * soap_new_req_resqml2__obj_USCOREGeologicUnitInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREGeologicUnitInterpretation *_p = soap_new_resqml2__obj_USCOREGeologicUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREGeologicUnitInterpretation * soap_new_set_resqml2__obj_USCOREGeologicUnitInterpretation(
	struct soap *soap,
	enum resqml2__GeologicUnitComposition *GeologicUnitComposition,
	enum resqml2__GeologicUnitMaterialImplacement *GeologicUnitMaterialImplacement,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	resqml2__TimeInterval *HasOccuredDuring1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREGeologicUnitInterpretation *_p = soap_new_resqml2__obj_USCOREGeologicUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGeologicUnitInterpretation::GeologicUnitComposition = GeologicUnitComposition;
		_p->resqml2__obj_USCOREGeologicUnitInterpretation::GeologicUnitMaterialImplacement = GeologicUnitMaterialImplacement;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGeologicUnitInterpretation(struct soap *soap, resqml2__obj_USCOREGeologicUnitInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GeologicUnitInterpretation", "resqml2:obj_GeologicUnitInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGeologicUnitInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGeologicUnitInterpretation(struct soap*, resqml2__obj_USCOREGeologicUnitInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGeologicUnitInterpretation(struct soap *soap, resqml2__obj_USCOREGeologicUnitInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGeologicUnitInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREHorizonInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREHorizonInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREHorizonInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREHorizonInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREHorizonInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREHorizonInterpretation(struct soap*, const char*, resqml2__obj_USCOREHorizonInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREHorizonInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREHorizonInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREHorizonInterpretation * soap_new_resqml2__obj_USCOREHorizonInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREHorizonInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREHorizonInterpretation * soap_new_req_resqml2__obj_USCOREHorizonInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREHorizonInterpretation *_p = soap_new_resqml2__obj_USCOREHorizonInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREHorizonInterpretation * soap_new_set_resqml2__obj_USCOREHorizonInterpretation(
	struct soap *soap,
	const std::vector<enum resqml2__BoundaryRelation> & BoundaryRelation,
	enum resqml2__SequenceStratigraphySurface *SequenceStratigraphySurface,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	resqml2__TimeInterval *HasOccuredDuring2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREHorizonInterpretation *_p = soap_new_resqml2__obj_USCOREHorizonInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREHorizonInterpretation::BoundaryRelation = BoundaryRelation;
		_p->resqml2__obj_USCOREHorizonInterpretation::SequenceStratigraphySurface = SequenceStratigraphySurface;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREHorizonInterpretation(struct soap *soap, resqml2__obj_USCOREHorizonInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_HorizonInterpretation", "resqml2:obj_HorizonInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREHorizonInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREHorizonInterpretation(struct soap*, resqml2__obj_USCOREHorizonInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREHorizonInterpretation(struct soap *soap, resqml2__obj_USCOREHorizonInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREHorizonInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__RockFluidUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__RockFluidUnitInterpretationIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__RockFluidUnitInterpretationIndex(struct soap*, const char*, int, const resqml2__RockFluidUnitInterpretationIndex *, const char*);
SOAP_FMAC3 resqml2__RockFluidUnitInterpretationIndex * SOAP_FMAC4 soap_in_resqml2__RockFluidUnitInterpretationIndex(struct soap*, const char*, resqml2__RockFluidUnitInterpretationIndex *, const char*);
SOAP_FMAC1 resqml2__RockFluidUnitInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml2__RockFluidUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__RockFluidUnitInterpretationIndex * soap_new_resqml2__RockFluidUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__RockFluidUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}

inline resqml2__RockFluidUnitInterpretationIndex * soap_new_req_resqml2__RockFluidUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml__DataObjectReference *RockFluidUnit)
{
	resqml2__RockFluidUnitInterpretationIndex *_p = soap_new_resqml2__RockFluidUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__RockFluidUnitInterpretationIndex::Index = Index;
		_p->resqml2__RockFluidUnitInterpretationIndex::RockFluidUnit = RockFluidUnit;
	}
	return _p;
}

inline resqml2__RockFluidUnitInterpretationIndex * soap_new_set_resqml2__RockFluidUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml__DataObjectReference *RockFluidUnit)
{
	resqml2__RockFluidUnitInterpretationIndex *_p = soap_new_resqml2__RockFluidUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__RockFluidUnitInterpretationIndex::Index = Index;
		_p->resqml2__RockFluidUnitInterpretationIndex::RockFluidUnit = RockFluidUnit;
	}
	return _p;
}

inline int soap_write_resqml2__RockFluidUnitInterpretationIndex(struct soap *soap, resqml2__RockFluidUnitInterpretationIndex const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:RockFluidUnitInterpretationIndex", "resqml2:RockFluidUnitInterpretationIndex") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__RockFluidUnitInterpretationIndex * SOAP_FMAC4 soap_get_resqml2__RockFluidUnitInterpretationIndex(struct soap*, resqml2__RockFluidUnitInterpretationIndex *, const char*, const char*);

inline int soap_read_resqml2__RockFluidUnitInterpretationIndex(struct soap *soap, resqml2__RockFluidUnitInterpretationIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__RockFluidUnitInterpretationIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractStratigraphicOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractStratigraphicOrganizationInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractStratigraphicOrganizationInterpretation(struct soap*, const char*, int, const resqml2__AbstractStratigraphicOrganizationInterpretation *, const char*);
SOAP_FMAC3 resqml2__AbstractStratigraphicOrganizationInterpretation * SOAP_FMAC4 soap_in_resqml2__AbstractStratigraphicOrganizationInterpretation(struct soap*, const char*, resqml2__AbstractStratigraphicOrganizationInterpretation *, const char*);
SOAP_FMAC1 resqml2__AbstractStratigraphicOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__AbstractStratigraphicOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractStratigraphicOrganizationInterpretation * soap_new_resqml2__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractStratigraphicOrganizationInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractStratigraphicOrganizationInterpretation * soap_new_req_resqml2__AbstractStratigraphicOrganizationInterpretation(
	struct soap *soap,
	enum resqml2__OrderingCriteria OrderingCriteria,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractStratigraphicOrganizationInterpretation *_p = soap_new_resqml2__AbstractStratigraphicOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__AbstractStratigraphicOrganizationInterpretation * soap_new_set_resqml2__AbstractStratigraphicOrganizationInterpretation(
	struct soap *soap,
	enum resqml2__OrderingCriteria OrderingCriteria,
	const std::vector<resqml2__AbstractContactInterpretationPart *> & ContactInterpretation1,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	resqml2__TimeInterval *HasOccuredDuring2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractStratigraphicOrganizationInterpretation *_p = soap_new_resqml2__AbstractStratigraphicOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria;
		_p->resqml2__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation1;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, resqml2__AbstractStratigraphicOrganizationInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractStratigraphicOrganizationInterpretation", "resqml2:AbstractStratigraphicOrganizationInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractStratigraphicOrganizationInterpretation * SOAP_FMAC4 soap_get_resqml2__AbstractStratigraphicOrganizationInterpretation(struct soap*, resqml2__AbstractStratigraphicOrganizationInterpretation *, const char*, const char*);

inline int soap_read_resqml2__AbstractStratigraphicOrganizationInterpretation(struct soap *soap, resqml2__AbstractStratigraphicOrganizationInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractStratigraphicOrganizationInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicColumnRankInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicColumnRankInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREStratigraphicColumnRankInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicColumnRankInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, const char*, resqml2__obj_USCOREStratigraphicColumnRankInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREStratigraphicColumnRankInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREStratigraphicColumnRankInterpretation * soap_new_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREStratigraphicColumnRankInterpretation * soap_new_req_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(
	struct soap *soap,
	ULONG64 Index,
	const std::vector<resqml2__StratigraphicUnitInterpretationIndex *> & StratigraphicUnits,
	enum resqml2__OrderingCriteria OrderingCriteria1,
	enum resqml2__Domain Domain3,
	eml__DataObjectReference *InterpretedFeature3,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREStratigraphicColumnRankInterpretation *_p = soap_new_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStratigraphicColumnRankInterpretation::Index = Index;
		_p->resqml2__obj_USCOREStratigraphicColumnRankInterpretation::StratigraphicUnits = StratigraphicUnits;
		_p->resqml2__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria1;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain3;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature3;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREStratigraphicColumnRankInterpretation * soap_new_set_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(
	struct soap *soap,
	ULONG64 Index,
	const std::vector<resqml2__StratigraphicUnitInterpretationIndex *> & StratigraphicUnits,
	enum resqml2__OrderingCriteria OrderingCriteria1,
	const std::vector<resqml2__AbstractContactInterpretationPart *> & ContactInterpretation2,
	enum resqml2__Domain Domain3,
	eml__DataObjectReference *InterpretedFeature3,
	resqml2__TimeInterval *HasOccuredDuring3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREStratigraphicColumnRankInterpretation *_p = soap_new_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStratigraphicColumnRankInterpretation::Index = Index;
		_p->resqml2__obj_USCOREStratigraphicColumnRankInterpretation::StratigraphicUnits = StratigraphicUnits;
		_p->resqml2__AbstractStratigraphicOrganizationInterpretation::OrderingCriteria = OrderingCriteria1;
		_p->resqml2__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation2;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain3;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature3;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, resqml2__obj_USCOREStratigraphicColumnRankInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_StratigraphicColumnRankInterpretation", "resqml2:obj_StratigraphicColumnRankInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicColumnRankInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(struct soap*, resqml2__obj_USCOREStratigraphicColumnRankInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(struct soap *soap, resqml2__obj_USCOREStratigraphicColumnRankInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREStratigraphicColumnRankInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__FaultThrow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__FaultThrow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__FaultThrow(struct soap*, const char*, int, const resqml2__FaultThrow *, const char*);
SOAP_FMAC3 resqml2__FaultThrow * SOAP_FMAC4 soap_in_resqml2__FaultThrow(struct soap*, const char*, resqml2__FaultThrow *, const char*);
SOAP_FMAC1 resqml2__FaultThrow * SOAP_FMAC2 soap_instantiate_resqml2__FaultThrow(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__FaultThrow * soap_new_resqml2__FaultThrow(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__FaultThrow(soap, n, NULL, NULL, NULL);
}

inline resqml2__FaultThrow * soap_new_req_resqml2__FaultThrow(
	struct soap *soap,
	const std::vector<enum resqml2__ThrowKind> & Throw)
{
	resqml2__FaultThrow *_p = soap_new_resqml2__FaultThrow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__FaultThrow::Throw = Throw;
	}
	return _p;
}

inline resqml2__FaultThrow * soap_new_set_resqml2__FaultThrow(
	struct soap *soap,
	const std::vector<enum resqml2__ThrowKind> & Throw,
	resqml2__TimeInterval *HasOccuredDuring)
{
	resqml2__FaultThrow *_p = soap_new_resqml2__FaultThrow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__FaultThrow::Throw = Throw;
		_p->resqml2__FaultThrow::HasOccuredDuring = HasOccuredDuring;
	}
	return _p;
}

inline int soap_write_resqml2__FaultThrow(struct soap *soap, resqml2__FaultThrow const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:FaultThrow", "resqml2:FaultThrow") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__FaultThrow * SOAP_FMAC4 soap_get_resqml2__FaultThrow(struct soap*, resqml2__FaultThrow *, const char*, const char*);

inline int soap_read_resqml2__FaultThrow(struct soap *soap, resqml2__FaultThrow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__FaultThrow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREEarthModelInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREEarthModelInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREEarthModelInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREEarthModelInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREEarthModelInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREEarthModelInterpretation(struct soap*, const char*, resqml2__obj_USCOREEarthModelInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREEarthModelInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREEarthModelInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREEarthModelInterpretation * soap_new_resqml2__obj_USCOREEarthModelInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREEarthModelInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREEarthModelInterpretation * soap_new_req_resqml2__obj_USCOREEarthModelInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREEarthModelInterpretation *_p = soap_new_resqml2__obj_USCOREEarthModelInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREEarthModelInterpretation * soap_new_set_resqml2__obj_USCOREEarthModelInterpretation(
	struct soap *soap,
	const std::vector<eml__DataObjectReference *> & StratigraphicOccurrences,
	eml__DataObjectReference *StratigraphicColumn,
	eml__DataObjectReference *Structure,
	eml__DataObjectReference *Fluid,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	resqml2__TimeInterval *HasOccuredDuring1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREEarthModelInterpretation *_p = soap_new_resqml2__obj_USCOREEarthModelInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREEarthModelInterpretation::StratigraphicOccurrences = StratigraphicOccurrences;
		_p->resqml2__obj_USCOREEarthModelInterpretation::StratigraphicColumn = StratigraphicColumn;
		_p->resqml2__obj_USCOREEarthModelInterpretation::Structure = Structure;
		_p->resqml2__obj_USCOREEarthModelInterpretation::Fluid = Fluid;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREEarthModelInterpretation(struct soap *soap, resqml2__obj_USCOREEarthModelInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_EarthModelInterpretation", "resqml2:obj_EarthModelInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREEarthModelInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREEarthModelInterpretation(struct soap*, resqml2__obj_USCOREEarthModelInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREEarthModelInterpretation(struct soap *soap, resqml2__obj_USCOREEarthModelInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREEarthModelInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractContactInterpretationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractContactInterpretationPart(struct soap*, const char*, int, const resqml2__AbstractContactInterpretationPart *, const char*);
SOAP_FMAC3 resqml2__AbstractContactInterpretationPart * SOAP_FMAC4 soap_in_resqml2__AbstractContactInterpretationPart(struct soap*, const char*, resqml2__AbstractContactInterpretationPart *, const char*);
SOAP_FMAC1 resqml2__AbstractContactInterpretationPart * SOAP_FMAC2 soap_instantiate_resqml2__AbstractContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractContactInterpretationPart * soap_new_resqml2__AbstractContactInterpretationPart(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractContactInterpretationPart(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractContactInterpretationPart * soap_new_req_resqml2__AbstractContactInterpretationPart(
	struct soap *soap,
	enum resqml2__ContactRelationship ContactRelationship,
	ULONG64 Index)
{
	resqml2__AbstractContactInterpretationPart *_p = soap_new_resqml2__AbstractContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship;
		_p->resqml2__AbstractContactInterpretationPart::Index = Index;
	}
	return _p;
}

inline resqml2__AbstractContactInterpretationPart * soap_new_set_resqml2__AbstractContactInterpretationPart(
	struct soap *soap,
	enum resqml2__ContactRelationship ContactRelationship,
	ULONG64 Index,
	eml__DataObjectReference *PartOf)
{
	resqml2__AbstractContactInterpretationPart *_p = soap_new_resqml2__AbstractContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship;
		_p->resqml2__AbstractContactInterpretationPart::Index = Index;
		_p->resqml2__AbstractContactInterpretationPart::PartOf = PartOf;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractContactInterpretationPart(struct soap *soap, resqml2__AbstractContactInterpretationPart const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractContactInterpretationPart", "resqml2:AbstractContactInterpretationPart") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractContactInterpretationPart * SOAP_FMAC4 soap_get_resqml2__AbstractContactInterpretationPart(struct soap*, resqml2__AbstractContactInterpretationPart *, const char*, const char*);

inline int soap_read_resqml2__AbstractContactInterpretationPart(struct soap *soap, resqml2__AbstractContactInterpretationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractContactInterpretationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREBoundaryFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREBoundaryFeatureInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREBoundaryFeatureInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREBoundaryFeatureInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREBoundaryFeatureInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREBoundaryFeatureInterpretation(struct soap*, const char*, resqml2__obj_USCOREBoundaryFeatureInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREBoundaryFeatureInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREBoundaryFeatureInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREBoundaryFeatureInterpretation * soap_new_resqml2__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREBoundaryFeatureInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREBoundaryFeatureInterpretation * soap_new_req_resqml2__obj_USCOREBoundaryFeatureInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREBoundaryFeatureInterpretation *_p = soap_new_resqml2__obj_USCOREBoundaryFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREBoundaryFeatureInterpretation * soap_new_set_resqml2__obj_USCOREBoundaryFeatureInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	resqml2__TimeInterval *HasOccuredDuring1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREBoundaryFeatureInterpretation *_p = soap_new_resqml2__obj_USCOREBoundaryFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, resqml2__obj_USCOREBoundaryFeatureInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_BoundaryFeatureInterpretation", "resqml2:obj_BoundaryFeatureInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREBoundaryFeatureInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREBoundaryFeatureInterpretation(struct soap*, resqml2__obj_USCOREBoundaryFeatureInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREBoundaryFeatureInterpretation(struct soap *soap, resqml2__obj_USCOREBoundaryFeatureInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREBoundaryFeatureInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeobodyInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeobodyInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGeobodyInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREGeobodyInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGeobodyInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGeobodyInterpretation(struct soap*, const char*, resqml2__obj_USCOREGeobodyInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGeobodyInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGeobodyInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGeobodyInterpretation * soap_new_resqml2__obj_USCOREGeobodyInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGeobodyInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGeobodyInterpretation * soap_new_req_resqml2__obj_USCOREGeobodyInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGeobodyInterpretation *_p = soap_new_resqml2__obj_USCOREGeobodyInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREGeobodyInterpretation * soap_new_set_resqml2__obj_USCOREGeobodyInterpretation(
	struct soap *soap,
	enum resqml2__Geobody3dShape *Geobody3dShape,
	enum resqml2__GeologicUnitComposition *GeologicUnitComposition1,
	enum resqml2__GeologicUnitMaterialImplacement *GeologicUnitMaterialImplacement1,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	resqml2__TimeInterval *HasOccuredDuring2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGeobodyInterpretation *_p = soap_new_resqml2__obj_USCOREGeobodyInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGeobodyInterpretation::Geobody3dShape = Geobody3dShape;
		_p->resqml2__obj_USCOREGeologicUnitInterpretation::GeologicUnitComposition = GeologicUnitComposition1;
		_p->resqml2__obj_USCOREGeologicUnitInterpretation::GeologicUnitMaterialImplacement = GeologicUnitMaterialImplacement1;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGeobodyInterpretation(struct soap *soap, resqml2__obj_USCOREGeobodyInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GeobodyInterpretation", "resqml2:obj_GeobodyInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGeobodyInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGeobodyInterpretation(struct soap*, resqml2__obj_USCOREGeobodyInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGeobodyInterpretation(struct soap *soap, resqml2__obj_USCOREGeobodyInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGeobodyInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicColumn_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStratigraphicColumn_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREStratigraphicColumn(struct soap*, const char*, int, const resqml2__obj_USCOREStratigraphicColumn *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicColumn * SOAP_FMAC4 soap_in_resqml2__obj_USCOREStratigraphicColumn(struct soap*, const char*, resqml2__obj_USCOREStratigraphicColumn *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREStratigraphicColumn * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREStratigraphicColumn(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREStratigraphicColumn * soap_new_resqml2__obj_USCOREStratigraphicColumn(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREStratigraphicColumn(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREStratigraphicColumn * soap_new_req_resqml2__obj_USCOREStratigraphicColumn(
	struct soap *soap,
	const std::vector<eml__DataObjectReference *> & Ranks,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREStratigraphicColumn *_p = soap_new_resqml2__obj_USCOREStratigraphicColumn(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStratigraphicColumn::Ranks = Ranks;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCOREStratigraphicColumn * soap_new_set_resqml2__obj_USCOREStratigraphicColumn(
	struct soap *soap,
	const std::vector<eml__DataObjectReference *> & Ranks,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREStratigraphicColumn *_p = soap_new_resqml2__obj_USCOREStratigraphicColumn(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStratigraphicColumn::Ranks = Ranks;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREStratigraphicColumn(struct soap *soap, resqml2__obj_USCOREStratigraphicColumn const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_StratigraphicColumn", "resqml2:obj_StratigraphicColumn") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREStratigraphicColumn * SOAP_FMAC4 soap_get_resqml2__obj_USCOREStratigraphicColumn(struct soap*, resqml2__obj_USCOREStratigraphicColumn *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREStratigraphicColumn(struct soap *soap, resqml2__obj_USCOREStratigraphicColumn *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREStratigraphicColumn(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREFaultInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREFaultInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREFaultInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREFaultInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREFaultInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREFaultInterpretation(struct soap*, const char*, resqml2__obj_USCOREFaultInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREFaultInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREFaultInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREFaultInterpretation * soap_new_resqml2__obj_USCOREFaultInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREFaultInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREFaultInterpretation * soap_new_req_resqml2__obj_USCOREFaultInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREFaultInterpretation *_p = soap_new_resqml2__obj_USCOREFaultInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREFaultInterpretation * soap_new_set_resqml2__obj_USCOREFaultInterpretation(
	struct soap *soap,
	bool *IsListric,
	eml__LengthMeasure *MaximumThrow,
	eml__PlaneAngleMeasure *MeanAzimuth,
	eml__PlaneAngleMeasure *MeanDip,
	const std::vector<resqml2__FaultThrow *> & ThrowInterpretation,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	resqml2__TimeInterval *HasOccuredDuring2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREFaultInterpretation *_p = soap_new_resqml2__obj_USCOREFaultInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREFaultInterpretation::IsListric = IsListric;
		_p->resqml2__obj_USCOREFaultInterpretation::MaximumThrow = MaximumThrow;
		_p->resqml2__obj_USCOREFaultInterpretation::MeanAzimuth = MeanAzimuth;
		_p->resqml2__obj_USCOREFaultInterpretation::MeanDip = MeanDip;
		_p->resqml2__obj_USCOREFaultInterpretation::ThrowInterpretation = ThrowInterpretation;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREFaultInterpretation(struct soap *soap, resqml2__obj_USCOREFaultInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_FaultInterpretation", "resqml2:obj_FaultInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREFaultInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREFaultInterpretation(struct soap*, resqml2__obj_USCOREFaultInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREFaultInterpretation(struct soap *soap, resqml2__obj_USCOREFaultInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREFaultInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__HorizonInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__HorizonInterpretationIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__HorizonInterpretationIndex(struct soap*, const char*, int, const resqml2__HorizonInterpretationIndex *, const char*);
SOAP_FMAC3 resqml2__HorizonInterpretationIndex * SOAP_FMAC4 soap_in_resqml2__HorizonInterpretationIndex(struct soap*, const char*, resqml2__HorizonInterpretationIndex *, const char*);
SOAP_FMAC1 resqml2__HorizonInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml2__HorizonInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__HorizonInterpretationIndex * soap_new_resqml2__HorizonInterpretationIndex(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__HorizonInterpretationIndex(soap, n, NULL, NULL, NULL);
}

inline resqml2__HorizonInterpretationIndex * soap_new_req_resqml2__HorizonInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml__DataObjectReference *Horizon)
{
	resqml2__HorizonInterpretationIndex *_p = soap_new_resqml2__HorizonInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__HorizonInterpretationIndex::Index = Index;
		_p->resqml2__HorizonInterpretationIndex::Horizon = Horizon;
	}
	return _p;
}

inline resqml2__HorizonInterpretationIndex * soap_new_set_resqml2__HorizonInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	ULONG64 *StratigraphicRank,
	eml__DataObjectReference *Horizon)
{
	resqml2__HorizonInterpretationIndex *_p = soap_new_resqml2__HorizonInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__HorizonInterpretationIndex::Index = Index;
		_p->resqml2__HorizonInterpretationIndex::StratigraphicRank = StratigraphicRank;
		_p->resqml2__HorizonInterpretationIndex::Horizon = Horizon;
	}
	return _p;
}

inline int soap_write_resqml2__HorizonInterpretationIndex(struct soap *soap, resqml2__HorizonInterpretationIndex const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:HorizonInterpretationIndex", "resqml2:HorizonInterpretationIndex") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__HorizonInterpretationIndex * SOAP_FMAC4 soap_get_resqml2__HorizonInterpretationIndex(struct soap*, resqml2__HorizonInterpretationIndex *, const char*, const char*);

inline int soap_read_resqml2__HorizonInterpretationIndex(struct soap *soap, resqml2__HorizonInterpretationIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__HorizonInterpretationIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__MultipleContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__MultipleContactInterpretationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__MultipleContactInterpretationPart(struct soap*, const char*, int, const resqml2__MultipleContactInterpretationPart *, const char*);
SOAP_FMAC3 resqml2__MultipleContactInterpretationPart * SOAP_FMAC4 soap_in_resqml2__MultipleContactInterpretationPart(struct soap*, const char*, resqml2__MultipleContactInterpretationPart *, const char*);
SOAP_FMAC1 resqml2__MultipleContactInterpretationPart * SOAP_FMAC2 soap_instantiate_resqml2__MultipleContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__MultipleContactInterpretationPart * soap_new_resqml2__MultipleContactInterpretationPart(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__MultipleContactInterpretationPart(soap, n, NULL, NULL, NULL);
}

inline resqml2__MultipleContactInterpretationPart * soap_new_req_resqml2__MultipleContactInterpretationPart(
	struct soap *soap,
	const std::vector<ULONG64> & With,
	enum resqml2__ContactRelationship ContactRelationship1,
	ULONG64 Index1)
{
	resqml2__MultipleContactInterpretationPart *_p = soap_new_resqml2__MultipleContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__MultipleContactInterpretationPart::With = With;
		_p->resqml2__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship1;
		_p->resqml2__AbstractContactInterpretationPart::Index = Index1;
	}
	return _p;
}

inline resqml2__MultipleContactInterpretationPart * soap_new_set_resqml2__MultipleContactInterpretationPart(
	struct soap *soap,
	const std::vector<ULONG64> & With,
	enum resqml2__ContactRelationship ContactRelationship1,
	ULONG64 Index1,
	eml__DataObjectReference *PartOf1)
{
	resqml2__MultipleContactInterpretationPart *_p = soap_new_resqml2__MultipleContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__MultipleContactInterpretationPart::With = With;
		_p->resqml2__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship1;
		_p->resqml2__AbstractContactInterpretationPart::Index = Index1;
		_p->resqml2__AbstractContactInterpretationPart::PartOf = PartOf1;
	}
	return _p;
}

inline int soap_write_resqml2__MultipleContactInterpretationPart(struct soap *soap, resqml2__MultipleContactInterpretationPart const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:MultipleContactInterpretationPart", "resqml2:MultipleContactInterpretationPart") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__MultipleContactInterpretationPart * SOAP_FMAC4 soap_get_resqml2__MultipleContactInterpretationPart(struct soap*, resqml2__MultipleContactInterpretationPart *, const char*, const char*);

inline int soap_read_resqml2__MultipleContactInterpretationPart(struct soap *soap, resqml2__MultipleContactInterpretationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__MultipleContactInterpretationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStructuralOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStructuralOrganizationInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREStructuralOrganizationInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREStructuralOrganizationInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREStructuralOrganizationInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREStructuralOrganizationInterpretation(struct soap*, const char*, resqml2__obj_USCOREStructuralOrganizationInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREStructuralOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREStructuralOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREStructuralOrganizationInterpretation * soap_new_resqml2__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREStructuralOrganizationInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREStructuralOrganizationInterpretation * soap_new_req_resqml2__obj_USCOREStructuralOrganizationInterpretation(
	struct soap *soap,
	enum resqml2__OrderingCriteria OrderingCriteria,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREStructuralOrganizationInterpretation *_p = soap_new_resqml2__obj_USCOREStructuralOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStructuralOrganizationInterpretation::OrderingCriteria = OrderingCriteria;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREStructuralOrganizationInterpretation * soap_new_set_resqml2__obj_USCOREStructuralOrganizationInterpretation(
	struct soap *soap,
	enum resqml2__OrderingCriteria OrderingCriteria,
	const std::vector<eml__DataObjectReference *> & Faults,
	const std::vector<resqml2__HorizonInterpretationIndex *> & Horizons,
	const std::vector<eml__DataObjectReference *> & Sides,
	const std::vector<eml__DataObjectReference *> & TopFrontier,
	const std::vector<eml__DataObjectReference *> & BottomFrontier,
	const std::vector<resqml2__AbstractContactInterpretationPart *> & ContactInterpretation1,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	resqml2__TimeInterval *HasOccuredDuring2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREStructuralOrganizationInterpretation *_p = soap_new_resqml2__obj_USCOREStructuralOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStructuralOrganizationInterpretation::OrderingCriteria = OrderingCriteria;
		_p->resqml2__obj_USCOREStructuralOrganizationInterpretation::Faults = Faults;
		_p->resqml2__obj_USCOREStructuralOrganizationInterpretation::Horizons = Horizons;
		_p->resqml2__obj_USCOREStructuralOrganizationInterpretation::Sides = Sides;
		_p->resqml2__obj_USCOREStructuralOrganizationInterpretation::TopFrontier = TopFrontier;
		_p->resqml2__obj_USCOREStructuralOrganizationInterpretation::BottomFrontier = BottomFrontier;
		_p->resqml2__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation1;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, resqml2__obj_USCOREStructuralOrganizationInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_StructuralOrganizationInterpretation", "resqml2:obj_StructuralOrganizationInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREStructuralOrganizationInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREStructuralOrganizationInterpretation(struct soap*, resqml2__obj_USCOREStructuralOrganizationInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREStructuralOrganizationInterpretation(struct soap *soap, resqml2__obj_USCOREStructuralOrganizationInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREStructuralOrganizationInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeobodyBoundaryInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGeobodyBoundaryInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREGeobodyBoundaryInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGeobodyBoundaryInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, const char*, resqml2__obj_USCOREGeobodyBoundaryInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGeobodyBoundaryInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGeobodyBoundaryInterpretation * soap_new_resqml2__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGeobodyBoundaryInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGeobodyBoundaryInterpretation * soap_new_req_resqml2__obj_USCOREGeobodyBoundaryInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGeobodyBoundaryInterpretation *_p = soap_new_resqml2__obj_USCOREGeobodyBoundaryInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREGeobodyBoundaryInterpretation * soap_new_set_resqml2__obj_USCOREGeobodyBoundaryInterpretation(
	struct soap *soap,
	const std::vector<enum resqml2__BoundaryRelation> & BoundaryRelation,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	resqml2__TimeInterval *HasOccuredDuring2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGeobodyBoundaryInterpretation *_p = soap_new_resqml2__obj_USCOREGeobodyBoundaryInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGeobodyBoundaryInterpretation::BoundaryRelation = BoundaryRelation;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, resqml2__obj_USCOREGeobodyBoundaryInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GeobodyBoundaryInterpretation", "resqml2:obj_GeobodyBoundaryInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGeobodyBoundaryInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGeobodyBoundaryInterpretation(struct soap*, resqml2__obj_USCOREGeobodyBoundaryInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGeobodyBoundaryInterpretation(struct soap *soap, resqml2__obj_USCOREGeobodyBoundaryInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGeobodyBoundaryInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeologicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GeologicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GeologicUnitInterpretationIndex(struct soap*, const char*, int, const resqml2__GeologicUnitInterpretationIndex *, const char*);
SOAP_FMAC3 resqml2__GeologicUnitInterpretationIndex * SOAP_FMAC4 soap_in_resqml2__GeologicUnitInterpretationIndex(struct soap*, const char*, resqml2__GeologicUnitInterpretationIndex *, const char*);
SOAP_FMAC1 resqml2__GeologicUnitInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml2__GeologicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__GeologicUnitInterpretationIndex * soap_new_resqml2__GeologicUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__GeologicUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}

inline resqml2__GeologicUnitInterpretationIndex * soap_new_req_resqml2__GeologicUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml__DataObjectReference *Unit)
{
	resqml2__GeologicUnitInterpretationIndex *_p = soap_new_resqml2__GeologicUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GeologicUnitInterpretationIndex::Index = Index;
		_p->resqml2__GeologicUnitInterpretationIndex::Unit = Unit;
	}
	return _p;
}

inline resqml2__GeologicUnitInterpretationIndex * soap_new_set_resqml2__GeologicUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml__DataObjectReference *Unit)
{
	resqml2__GeologicUnitInterpretationIndex *_p = soap_new_resqml2__GeologicUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GeologicUnitInterpretationIndex::Index = Index;
		_p->resqml2__GeologicUnitInterpretationIndex::Unit = Unit;
	}
	return _p;
}

inline int soap_write_resqml2__GeologicUnitInterpretationIndex(struct soap *soap, resqml2__GeologicUnitInterpretationIndex const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:GeologicUnitInterpretationIndex", "resqml2:GeologicUnitInterpretationIndex") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__GeologicUnitInterpretationIndex * SOAP_FMAC4 soap_get_resqml2__GeologicUnitInterpretationIndex(struct soap*, resqml2__GeologicUnitInterpretationIndex *, const char*, const char*);

inline int soap_read_resqml2__GeologicUnitInterpretationIndex(struct soap *soap, resqml2__GeologicUnitInterpretationIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__GeologicUnitInterpretationIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREWellboreInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREWellboreInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREWellboreInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREWellboreInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREWellboreInterpretation(struct soap*, const char*, resqml2__obj_USCOREWellboreInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREWellboreInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREWellboreInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREWellboreInterpretation * soap_new_resqml2__obj_USCOREWellboreInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREWellboreInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREWellboreInterpretation * soap_new_req_resqml2__obj_USCOREWellboreInterpretation(
	struct soap *soap,
	bool IsDrilled,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREWellboreInterpretation *_p = soap_new_resqml2__obj_USCOREWellboreInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREWellboreInterpretation::IsDrilled = IsDrilled;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREWellboreInterpretation * soap_new_set_resqml2__obj_USCOREWellboreInterpretation(
	struct soap *soap,
	bool IsDrilled,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	resqml2__TimeInterval *HasOccuredDuring1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREWellboreInterpretation *_p = soap_new_resqml2__obj_USCOREWellboreInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREWellboreInterpretation::IsDrilled = IsDrilled;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREWellboreInterpretation(struct soap *soap, resqml2__obj_USCOREWellboreInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_WellboreInterpretation", "resqml2:obj_WellboreInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREWellboreInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREWellboreInterpretation(struct soap*, resqml2__obj_USCOREWellboreInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREWellboreInterpretation(struct soap *soap, resqml2__obj_USCOREWellboreInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREWellboreInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGenericFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGenericFeatureInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGenericFeatureInterpretation(struct soap*, const char*, int, const resqml2__obj_USCOREGenericFeatureInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGenericFeatureInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGenericFeatureInterpretation(struct soap*, const char*, resqml2__obj_USCOREGenericFeatureInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGenericFeatureInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGenericFeatureInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGenericFeatureInterpretation * soap_new_resqml2__obj_USCOREGenericFeatureInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGenericFeatureInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGenericFeatureInterpretation * soap_new_req_resqml2__obj_USCOREGenericFeatureInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREGenericFeatureInterpretation *_p = soap_new_resqml2__obj_USCOREGenericFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREGenericFeatureInterpretation * soap_new_set_resqml2__obj_USCOREGenericFeatureInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	resqml2__TimeInterval *HasOccuredDuring1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREGenericFeatureInterpretation *_p = soap_new_resqml2__obj_USCOREGenericFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGenericFeatureInterpretation(struct soap *soap, resqml2__obj_USCOREGenericFeatureInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GenericFeatureInterpretation", "resqml2:obj_GenericFeatureInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGenericFeatureInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGenericFeatureInterpretation(struct soap*, resqml2__obj_USCOREGenericFeatureInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGenericFeatureInterpretation(struct soap *soap, resqml2__obj_USCOREGenericFeatureInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGenericFeatureInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERockFluidUnitInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERockFluidUnitInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORERockFluidUnitInterpretation(struct soap*, const char*, int, const resqml2__obj_USCORERockFluidUnitInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORERockFluidUnitInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCORERockFluidUnitInterpretation(struct soap*, const char*, resqml2__obj_USCORERockFluidUnitInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORERockFluidUnitInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORERockFluidUnitInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORERockFluidUnitInterpretation * soap_new_resqml2__obj_USCORERockFluidUnitInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORERockFluidUnitInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORERockFluidUnitInterpretation * soap_new_req_resqml2__obj_USCORERockFluidUnitInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORERockFluidUnitInterpretation *_p = soap_new_resqml2__obj_USCORERockFluidUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCORERockFluidUnitInterpretation * soap_new_set_resqml2__obj_USCORERockFluidUnitInterpretation(
	struct soap *soap,
	enum resqml2__Phase *Phase,
	enum resqml2__GeologicUnitComposition *GeologicUnitComposition1,
	enum resqml2__GeologicUnitMaterialImplacement *GeologicUnitMaterialImplacement1,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	resqml2__TimeInterval *HasOccuredDuring2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORERockFluidUnitInterpretation *_p = soap_new_resqml2__obj_USCORERockFluidUnitInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERockFluidUnitInterpretation::Phase = Phase;
		_p->resqml2__obj_USCOREGeologicUnitInterpretation::GeologicUnitComposition = GeologicUnitComposition1;
		_p->resqml2__obj_USCOREGeologicUnitInterpretation::GeologicUnitMaterialImplacement = GeologicUnitMaterialImplacement1;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORERockFluidUnitInterpretation(struct soap *soap, resqml2__obj_USCORERockFluidUnitInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_RockFluidUnitInterpretation", "resqml2:obj_RockFluidUnitInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORERockFluidUnitInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCORERockFluidUnitInterpretation(struct soap*, resqml2__obj_USCORERockFluidUnitInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORERockFluidUnitInterpretation(struct soap *soap, resqml2__obj_USCORERockFluidUnitInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORERockFluidUnitInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactElementReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ContactElementReference_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ContactElementReference(struct soap*, const char*, int, const resqml2__ContactElementReference *, const char*);
SOAP_FMAC3 resqml2__ContactElementReference * SOAP_FMAC4 soap_in_resqml2__ContactElementReference(struct soap*, const char*, resqml2__ContactElementReference *, const char*);
SOAP_FMAC1 resqml2__ContactElementReference * SOAP_FMAC2 soap_instantiate_resqml2__ContactElementReference(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ContactElementReference * soap_new_resqml2__ContactElementReference(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ContactElementReference(soap, n, NULL, NULL, NULL);
}

inline resqml2__ContactElementReference * soap_new_req_resqml2__ContactElementReference(
	struct soap *soap,
	const std::string& ContentType1,
	const std::string& Title1,
	const std::string& UUID1)
{
	resqml2__ContactElementReference *_p = soap_new_resqml2__ContactElementReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__DataObjectReference::ContentType = ContentType1;
		_p->eml__DataObjectReference::Title = Title1;
		_p->eml__DataObjectReference::UUID = UUID1;
	}
	return _p;
}

inline resqml2__ContactElementReference * soap_new_set_resqml2__ContactElementReference(
	struct soap *soap,
	enum resqml2__ContactSide *Qualifier,
	enum resqml2__ContactMode *SecondaryQualifier,
	const std::string& ContentType1,
	const std::string& Title1,
	const std::string& UUID1,
	std::string *UuidAuthority1,
	std::string *VersionString1)
{
	resqml2__ContactElementReference *_p = soap_new_resqml2__ContactElementReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ContactElementReference::Qualifier = Qualifier;
		_p->resqml2__ContactElementReference::SecondaryQualifier = SecondaryQualifier;
		_p->eml__DataObjectReference::ContentType = ContentType1;
		_p->eml__DataObjectReference::Title = Title1;
		_p->eml__DataObjectReference::UUID = UUID1;
		_p->eml__DataObjectReference::UuidAuthority = UuidAuthority1;
		_p->eml__DataObjectReference::VersionString = VersionString1;
	}
	return _p;
}

inline int soap_write_resqml2__ContactElementReference(struct soap *soap, resqml2__ContactElementReference const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ContactElementReference", "resqml2:ContactElementReference") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ContactElementReference * SOAP_FMAC4 soap_get_resqml2__ContactElementReference(struct soap*, resqml2__ContactElementReference *, const char*, const char*);

inline int soap_read_resqml2__ContactElementReference(struct soap *soap, resqml2__ContactElementReference *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ContactElementReference(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StratigraphicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StratigraphicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__StratigraphicUnitInterpretationIndex(struct soap*, const char*, int, const resqml2__StratigraphicUnitInterpretationIndex *, const char*);
SOAP_FMAC3 resqml2__StratigraphicUnitInterpretationIndex * SOAP_FMAC4 soap_in_resqml2__StratigraphicUnitInterpretationIndex(struct soap*, const char*, resqml2__StratigraphicUnitInterpretationIndex *, const char*);
SOAP_FMAC1 resqml2__StratigraphicUnitInterpretationIndex * SOAP_FMAC2 soap_instantiate_resqml2__StratigraphicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__StratigraphicUnitInterpretationIndex * soap_new_resqml2__StratigraphicUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__StratigraphicUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}

inline resqml2__StratigraphicUnitInterpretationIndex * soap_new_req_resqml2__StratigraphicUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml__DataObjectReference *Unit)
{
	resqml2__StratigraphicUnitInterpretationIndex *_p = soap_new_resqml2__StratigraphicUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StratigraphicUnitInterpretationIndex::Index = Index;
		_p->resqml2__StratigraphicUnitInterpretationIndex::Unit = Unit;
	}
	return _p;
}

inline resqml2__StratigraphicUnitInterpretationIndex * soap_new_set_resqml2__StratigraphicUnitInterpretationIndex(
	struct soap *soap,
	ULONG64 Index,
	eml__DataObjectReference *Unit)
{
	resqml2__StratigraphicUnitInterpretationIndex *_p = soap_new_resqml2__StratigraphicUnitInterpretationIndex(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StratigraphicUnitInterpretationIndex::Index = Index;
		_p->resqml2__StratigraphicUnitInterpretationIndex::Unit = Unit;
	}
	return _p;
}

inline int soap_write_resqml2__StratigraphicUnitInterpretationIndex(struct soap *soap, resqml2__StratigraphicUnitInterpretationIndex const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:StratigraphicUnitInterpretationIndex", "resqml2:StratigraphicUnitInterpretationIndex") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__StratigraphicUnitInterpretationIndex * SOAP_FMAC4 soap_get_resqml2__StratigraphicUnitInterpretationIndex(struct soap*, resqml2__StratigraphicUnitInterpretationIndex *, const char*, const char*);

inline int soap_read_resqml2__StratigraphicUnitInterpretationIndex(struct soap *soap, resqml2__StratigraphicUnitInterpretationIndex *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__StratigraphicUnitInterpretationIndex(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BinaryContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BinaryContactInterpretationPart_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__BinaryContactInterpretationPart(struct soap*, const char*, int, const resqml2__BinaryContactInterpretationPart *, const char*);
SOAP_FMAC3 resqml2__BinaryContactInterpretationPart * SOAP_FMAC4 soap_in_resqml2__BinaryContactInterpretationPart(struct soap*, const char*, resqml2__BinaryContactInterpretationPart *, const char*);
SOAP_FMAC1 resqml2__BinaryContactInterpretationPart * SOAP_FMAC2 soap_instantiate_resqml2__BinaryContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__BinaryContactInterpretationPart * soap_new_resqml2__BinaryContactInterpretationPart(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__BinaryContactInterpretationPart(soap, n, NULL, NULL, NULL);
}

inline resqml2__BinaryContactInterpretationPart * soap_new_req_resqml2__BinaryContactInterpretationPart(
	struct soap *soap,
	resqml2__ContactElementReference *DirectObject,
	enum resqml2__ContactVerb Verb,
	resqml2__ContactElementReference *Subject,
	enum resqml2__ContactRelationship ContactRelationship1,
	ULONG64 Index1)
{
	resqml2__BinaryContactInterpretationPart *_p = soap_new_resqml2__BinaryContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BinaryContactInterpretationPart::DirectObject = DirectObject;
		_p->resqml2__BinaryContactInterpretationPart::Verb = Verb;
		_p->resqml2__BinaryContactInterpretationPart::Subject = Subject;
		_p->resqml2__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship1;
		_p->resqml2__AbstractContactInterpretationPart::Index = Index1;
	}
	return _p;
}

inline resqml2__BinaryContactInterpretationPart * soap_new_set_resqml2__BinaryContactInterpretationPart(
	struct soap *soap,
	resqml2__ContactElementReference *DirectObject,
	enum resqml2__ContactVerb Verb,
	resqml2__ContactElementReference *Subject,
	enum resqml2__ContactRelationship ContactRelationship1,
	ULONG64 Index1,
	eml__DataObjectReference *PartOf1)
{
	resqml2__BinaryContactInterpretationPart *_p = soap_new_resqml2__BinaryContactInterpretationPart(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BinaryContactInterpretationPart::DirectObject = DirectObject;
		_p->resqml2__BinaryContactInterpretationPart::Verb = Verb;
		_p->resqml2__BinaryContactInterpretationPart::Subject = Subject;
		_p->resqml2__AbstractContactInterpretationPart::ContactRelationship = ContactRelationship1;
		_p->resqml2__AbstractContactInterpretationPart::Index = Index1;
		_p->resqml2__AbstractContactInterpretationPart::PartOf = PartOf1;
	}
	return _p;
}

inline int soap_write_resqml2__BinaryContactInterpretationPart(struct soap *soap, resqml2__BinaryContactInterpretationPart const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:BinaryContactInterpretationPart", "resqml2:BinaryContactInterpretationPart") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__BinaryContactInterpretationPart * SOAP_FMAC4 soap_get_resqml2__BinaryContactInterpretationPart(struct soap*, resqml2__BinaryContactInterpretationPart *, const char*, const char*);

inline int soap_read_resqml2__BinaryContactInterpretationPart(struct soap *soap, resqml2__BinaryContactInterpretationPart *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__BinaryContactInterpretationPart(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractOrganizationInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractOrganizationInterpretation(struct soap*, const char*, int, const resqml2__AbstractOrganizationInterpretation *, const char*);
SOAP_FMAC3 resqml2__AbstractOrganizationInterpretation * SOAP_FMAC4 soap_in_resqml2__AbstractOrganizationInterpretation(struct soap*, const char*, resqml2__AbstractOrganizationInterpretation *, const char*);
SOAP_FMAC1 resqml2__AbstractOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__AbstractOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractOrganizationInterpretation * soap_new_resqml2__AbstractOrganizationInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractOrganizationInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractOrganizationInterpretation * soap_new_req_resqml2__AbstractOrganizationInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractOrganizationInterpretation *_p = soap_new_resqml2__AbstractOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__AbstractOrganizationInterpretation * soap_new_set_resqml2__AbstractOrganizationInterpretation(
	struct soap *soap,
	const std::vector<resqml2__AbstractContactInterpretationPart *> & ContactInterpretation,
	enum resqml2__Domain Domain1,
	eml__DataObjectReference *InterpretedFeature1,
	resqml2__TimeInterval *HasOccuredDuring1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractOrganizationInterpretation *_p = soap_new_resqml2__AbstractOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain1;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature1;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractOrganizationInterpretation(struct soap *soap, resqml2__AbstractOrganizationInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractOrganizationInterpretation", "resqml2:AbstractOrganizationInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractOrganizationInterpretation * SOAP_FMAC4 soap_get_resqml2__AbstractOrganizationInterpretation(struct soap*, resqml2__AbstractOrganizationInterpretation *, const char*, const char*);

inline int soap_read_resqml2__AbstractOrganizationInterpretation(struct soap *soap, resqml2__AbstractOrganizationInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractOrganizationInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeInterval_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TimeInterval_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TimeInterval(struct soap*, const char*, int, const resqml2__TimeInterval *, const char*);
SOAP_FMAC3 resqml2__TimeInterval * SOAP_FMAC4 soap_in_resqml2__TimeInterval(struct soap*, const char*, resqml2__TimeInterval *, const char*);
SOAP_FMAC1 resqml2__TimeInterval * SOAP_FMAC2 soap_instantiate_resqml2__TimeInterval(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__TimeInterval * soap_new_resqml2__TimeInterval(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__TimeInterval(soap, n, NULL, NULL, NULL);
}

inline resqml2__TimeInterval * soap_new_req_resqml2__TimeInterval(
	struct soap *soap,
	eml__DataObjectReference *ChronoBottom,
	eml__DataObjectReference *ChronoTop)
{
	resqml2__TimeInterval *_p = soap_new_resqml2__TimeInterval(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeInterval::ChronoBottom = ChronoBottom;
		_p->resqml2__TimeInterval::ChronoTop = ChronoTop;
	}
	return _p;
}

inline resqml2__TimeInterval * soap_new_set_resqml2__TimeInterval(
	struct soap *soap,
	eml__DataObjectReference *ChronoBottom,
	eml__DataObjectReference *ChronoTop)
{
	resqml2__TimeInterval *_p = soap_new_resqml2__TimeInterval(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TimeInterval::ChronoBottom = ChronoBottom;
		_p->resqml2__TimeInterval::ChronoTop = ChronoTop;
	}
	return _p;
}

inline int soap_write_resqml2__TimeInterval(struct soap *soap, resqml2__TimeInterval const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:TimeInterval", "resqml2:TimeInterval") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__TimeInterval * SOAP_FMAC4 soap_get_resqml2__TimeInterval(struct soap*, resqml2__TimeInterval *, const char*, const char*);

inline int soap_read_resqml2__TimeInterval(struct soap *soap, resqml2__TimeInterval *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__TimeInterval(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERockFluidOrganizationInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERockFluidOrganizationInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORERockFluidOrganizationInterpretation(struct soap*, const char*, int, const resqml2__obj_USCORERockFluidOrganizationInterpretation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORERockFluidOrganizationInterpretation * SOAP_FMAC4 soap_in_resqml2__obj_USCORERockFluidOrganizationInterpretation(struct soap*, const char*, resqml2__obj_USCORERockFluidOrganizationInterpretation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORERockFluidOrganizationInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORERockFluidOrganizationInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORERockFluidOrganizationInterpretation * soap_new_resqml2__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORERockFluidOrganizationInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORERockFluidOrganizationInterpretation * soap_new_req_resqml2__obj_USCORERockFluidOrganizationInterpretation(
	struct soap *soap,
	resqml2__RockFluidUnitInterpretationIndex *RockFluidUnitIndex,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORERockFluidOrganizationInterpretation *_p = soap_new_resqml2__obj_USCORERockFluidOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERockFluidOrganizationInterpretation::RockFluidUnitIndex = RockFluidUnitIndex;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCORERockFluidOrganizationInterpretation * soap_new_set_resqml2__obj_USCORERockFluidOrganizationInterpretation(
	struct soap *soap,
	resqml2__RockFluidUnitInterpretationIndex *RockFluidUnitIndex,
	const std::vector<resqml2__AbstractContactInterpretationPart *> & ContactInterpretation1,
	enum resqml2__Domain Domain2,
	eml__DataObjectReference *InterpretedFeature2,
	resqml2__TimeInterval *HasOccuredDuring2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORERockFluidOrganizationInterpretation *_p = soap_new_resqml2__obj_USCORERockFluidOrganizationInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERockFluidOrganizationInterpretation::RockFluidUnitIndex = RockFluidUnitIndex;
		_p->resqml2__AbstractOrganizationInterpretation::ContactInterpretation = ContactInterpretation1;
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain2;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature2;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, resqml2__obj_USCORERockFluidOrganizationInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_RockFluidOrganizationInterpretation", "resqml2:obj_RockFluidOrganizationInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORERockFluidOrganizationInterpretation * SOAP_FMAC4 soap_get_resqml2__obj_USCORERockFluidOrganizationInterpretation(struct soap*, resqml2__obj_USCORERockFluidOrganizationInterpretation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORERockFluidOrganizationInterpretation(struct soap *soap, resqml2__obj_USCORERockFluidOrganizationInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORERockFluidOrganizationInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractFeatureInterpretation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractFeatureInterpretation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractFeatureInterpretation(struct soap*, const char*, int, const resqml2__AbstractFeatureInterpretation *, const char*);
SOAP_FMAC3 resqml2__AbstractFeatureInterpretation * SOAP_FMAC4 soap_in_resqml2__AbstractFeatureInterpretation(struct soap*, const char*, resqml2__AbstractFeatureInterpretation *, const char*);
SOAP_FMAC1 resqml2__AbstractFeatureInterpretation * SOAP_FMAC2 soap_instantiate_resqml2__AbstractFeatureInterpretation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractFeatureInterpretation * soap_new_resqml2__AbstractFeatureInterpretation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractFeatureInterpretation(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractFeatureInterpretation * soap_new_req_resqml2__AbstractFeatureInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain,
	eml__DataObjectReference *InterpretedFeature,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractFeatureInterpretation *_p = soap_new_resqml2__AbstractFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__AbstractFeatureInterpretation * soap_new_set_resqml2__AbstractFeatureInterpretation(
	struct soap *soap,
	enum resqml2__Domain Domain,
	eml__DataObjectReference *InterpretedFeature,
	resqml2__TimeInterval *HasOccuredDuring,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractFeatureInterpretation *_p = soap_new_resqml2__AbstractFeatureInterpretation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractFeatureInterpretation::Domain = Domain;
		_p->resqml2__AbstractFeatureInterpretation::InterpretedFeature = InterpretedFeature;
		_p->resqml2__AbstractFeatureInterpretation::HasOccuredDuring = HasOccuredDuring;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractFeatureInterpretation(struct soap *soap, resqml2__AbstractFeatureInterpretation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractFeatureInterpretation", "resqml2:AbstractFeatureInterpretation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractFeatureInterpretation * SOAP_FMAC4 soap_get_resqml2__AbstractFeatureInterpretation(struct soap*, resqml2__AbstractFeatureInterpretation *, const char*, const char*);

inline int soap_read_resqml2__AbstractFeatureInterpretation(struct soap *soap, resqml2__AbstractFeatureInterpretation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractFeatureInterpretation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractParentWindow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractParentWindow(struct soap*, const char*, int, const resqml2__AbstractParentWindow *, const char*);
SOAP_FMAC3 resqml2__AbstractParentWindow * SOAP_FMAC4 soap_in_resqml2__AbstractParentWindow(struct soap*, const char*, resqml2__AbstractParentWindow *, const char*);
SOAP_FMAC1 resqml2__AbstractParentWindow * SOAP_FMAC2 soap_instantiate_resqml2__AbstractParentWindow(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractParentWindow * soap_new_resqml2__AbstractParentWindow(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractParentWindow(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractParentWindow * soap_new_req_resqml2__AbstractParentWindow(
	struct soap *soap)
{
	resqml2__AbstractParentWindow *_p = soap_new_resqml2__AbstractParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AbstractParentWindow * soap_new_set_resqml2__AbstractParentWindow(
	struct soap *soap,
	resqml2__CellOverlap *CellOverlap)
{
	resqml2__AbstractParentWindow *_p = soap_new_resqml2__AbstractParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractParentWindow::CellOverlap = CellOverlap;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractParentWindow(struct soap *soap, resqml2__AbstractParentWindow const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractParentWindow", "resqml2:AbstractParentWindow") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractParentWindow * SOAP_FMAC4 soap_get_resqml2__AbstractParentWindow(struct soap*, resqml2__AbstractParentWindow *, const char*, const char*);

inline int soap_read_resqml2__AbstractParentWindow(struct soap *soap, resqml2__AbstractParentWindow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractParentWindow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractColumnLayerGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractColumnLayerGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractColumnLayerGridGeometry(struct soap*, const char*, int, const resqml2__AbstractColumnLayerGridGeometry *, const char*);
SOAP_FMAC3 resqml2__AbstractColumnLayerGridGeometry * SOAP_FMAC4 soap_in_resqml2__AbstractColumnLayerGridGeometry(struct soap*, const char*, resqml2__AbstractColumnLayerGridGeometry *, const char*);
SOAP_FMAC1 resqml2__AbstractColumnLayerGridGeometry * SOAP_FMAC2 soap_instantiate_resqml2__AbstractColumnLayerGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractColumnLayerGridGeometry * soap_new_resqml2__AbstractColumnLayerGridGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractColumnLayerGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractColumnLayerGridGeometry * soap_new_req_resqml2__AbstractColumnLayerGridGeometry(
	struct soap *soap,
	enum resqml2__KDirection KDirection,
	resqml2__AbstractBooleanArray *PillarGeometryIsDefined,
	enum resqml2__PillarShape PillarShape,
	resqml2__AbstractPoint3dArray *Points2,
	eml__DataObjectReference *LocalCrs3)
{
	resqml2__AbstractColumnLayerGridGeometry *_p = soap_new_resqml2__AbstractColumnLayerGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractColumnLayerGridGeometry::KDirection = KDirection;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarShape = PillarShape;
		_p->resqml2__PointGeometry::Points = Points2;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs3;
	}
	return _p;
}

inline resqml2__AbstractColumnLayerGridGeometry * soap_new_set_resqml2__AbstractColumnLayerGridGeometry(
	struct soap *soap,
	enum resqml2__KDirection KDirection,
	resqml2__AbstractBooleanArray *PillarGeometryIsDefined,
	enum resqml2__PillarShape PillarShape,
	resqml2__AbstractBooleanArray *CellGeometryIsDefined,
	resqml2__AbstractBooleanArray *NodeIsColocatedInKDirection,
	resqml2__AbstractBooleanArray *NodeIsColocatedOnKEdge,
	resqml2__ColumnLayerSubnodeTopology *SubnodeTopology,
	resqml2__ColumnLayerSplitCoordinateLines *SplitCoordinateLines,
	resqml2__SplitNodePatch *SplitNodes,
	const std::vector<resqml2__AdditionalGridPoints *> & AdditionalGridPoints1,
	resqml2__AbstractPoint3dArray *Points2,
	resqml2__AbstractSeismicCoordinates *SeismicCoordinates2,
	resqml2__TimeIndex *TimeIndex3,
	eml__DataObjectReference *LocalCrs3)
{
	resqml2__AbstractColumnLayerGridGeometry *_p = soap_new_resqml2__AbstractColumnLayerGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractColumnLayerGridGeometry::KDirection = KDirection;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarShape = PillarShape;
		_p->resqml2__AbstractColumnLayerGridGeometry::CellGeometryIsDefined = CellGeometryIsDefined;
		_p->resqml2__AbstractColumnLayerGridGeometry::NodeIsColocatedInKDirection = NodeIsColocatedInKDirection;
		_p->resqml2__AbstractColumnLayerGridGeometry::NodeIsColocatedOnKEdge = NodeIsColocatedOnKEdge;
		_p->resqml2__AbstractColumnLayerGridGeometry::SubnodeTopology = SubnodeTopology;
		_p->resqml2__AbstractColumnLayerGridGeometry::SplitCoordinateLines = SplitCoordinateLines;
		_p->resqml2__AbstractColumnLayerGridGeometry::SplitNodes = SplitNodes;
		_p->resqml2__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints1;
		_p->resqml2__PointGeometry::Points = Points2;
		_p->resqml2__PointGeometry::SeismicCoordinates = SeismicCoordinates2;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex3;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs3;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractColumnLayerGridGeometry(struct soap *soap, resqml2__AbstractColumnLayerGridGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractColumnLayerGridGeometry", "resqml2:AbstractColumnLayerGridGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractColumnLayerGridGeometry * SOAP_FMAC4 soap_get_resqml2__AbstractColumnLayerGridGeometry(struct soap*, resqml2__AbstractColumnLayerGridGeometry *, const char*, const char*);

inline int soap_read_resqml2__AbstractColumnLayerGridGeometry(struct soap *soap, resqml2__AbstractColumnLayerGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractColumnLayerGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Intervals_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Intervals_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Intervals(struct soap*, const char*, int, const resqml2__Intervals *, const char*);
SOAP_FMAC3 resqml2__Intervals * SOAP_FMAC4 soap_in_resqml2__Intervals(struct soap*, const char*, resqml2__Intervals *, const char*);
SOAP_FMAC1 resqml2__Intervals * SOAP_FMAC2 soap_instantiate_resqml2__Intervals(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Intervals * soap_new_resqml2__Intervals(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Intervals(soap, n, NULL, NULL, NULL);
}

inline resqml2__Intervals * soap_new_req_resqml2__Intervals(
	struct soap *soap,
	ULONG64 IntervalCount,
	resqml2__AbstractIntegerArray *ParentCountPerInterval,
	resqml2__AbstractIntegerArray *ChildCountPerInterval)
{
	resqml2__Intervals *_p = soap_new_resqml2__Intervals(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Intervals::IntervalCount = IntervalCount;
		_p->resqml2__Intervals::ParentCountPerInterval = ParentCountPerInterval;
		_p->resqml2__Intervals::ChildCountPerInterval = ChildCountPerInterval;
	}
	return _p;
}

inline resqml2__Intervals * soap_new_set_resqml2__Intervals(
	struct soap *soap,
	ULONG64 IntervalCount,
	resqml2__AbstractIntegerArray *ParentCountPerInterval,
	resqml2__AbstractIntegerArray *ChildCountPerInterval,
	resqml2__AbstractDoubleArray *ChildCellWeights)
{
	resqml2__Intervals *_p = soap_new_resqml2__Intervals(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Intervals::IntervalCount = IntervalCount;
		_p->resqml2__Intervals::ParentCountPerInterval = ParentCountPerInterval;
		_p->resqml2__Intervals::ChildCountPerInterval = ChildCountPerInterval;
		_p->resqml2__Intervals::ChildCellWeights = ChildCellWeights;
	}
	return _p;
}

inline int soap_write_resqml2__Intervals(struct soap *soap, resqml2__Intervals const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Intervals", "resqml2:Intervals") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Intervals * SOAP_FMAC4 soap_get_resqml2__Intervals(struct soap*, resqml2__Intervals *, const char*, const char*);

inline int soap_read_resqml2__Intervals(struct soap *soap, resqml2__Intervals *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Intervals(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__OverlapVolume_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__OverlapVolume_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__OverlapVolume(struct soap*, const char*, int, const resqml2__OverlapVolume *, const char*);
SOAP_FMAC3 resqml2__OverlapVolume * SOAP_FMAC4 soap_in_resqml2__OverlapVolume(struct soap*, const char*, resqml2__OverlapVolume *, const char*);
SOAP_FMAC1 resqml2__OverlapVolume * SOAP_FMAC2 soap_instantiate_resqml2__OverlapVolume(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__OverlapVolume * soap_new_resqml2__OverlapVolume(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__OverlapVolume(soap, n, NULL, NULL, NULL);
}

inline resqml2__OverlapVolume * soap_new_req_resqml2__OverlapVolume(
	struct soap *soap)
{
	resqml2__OverlapVolume *_p = soap_new_resqml2__OverlapVolume(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__OverlapVolume * soap_new_set_resqml2__OverlapVolume(
	struct soap *soap,
	__resqml2__OverlapVolume_sequence *__OverlapVolume_sequence)
{
	resqml2__OverlapVolume *_p = soap_new_resqml2__OverlapVolume(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__OverlapVolume::__OverlapVolume_sequence = __OverlapVolume_sequence;
	}
	return _p;
}

inline int soap_write_resqml2__OverlapVolume(struct soap *soap, resqml2__OverlapVolume const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:OverlapVolume", "resqml2:OverlapVolume") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__OverlapVolume * SOAP_FMAC4 soap_get_resqml2__OverlapVolume(struct soap*, resqml2__OverlapVolume *, const char*, const char*);

inline int soap_read_resqml2__OverlapVolume(struct soap *soap, resqml2__OverlapVolume *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__OverlapVolume(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__VariableSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__VariableSubnodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__VariableSubnodePatch(struct soap*, const char*, int, const resqml2__VariableSubnodePatch *, const char*);
SOAP_FMAC3 resqml2__VariableSubnodePatch * SOAP_FMAC4 soap_in_resqml2__VariableSubnodePatch(struct soap*, const char*, resqml2__VariableSubnodePatch *, const char*);
SOAP_FMAC1 resqml2__VariableSubnodePatch * SOAP_FMAC2 soap_instantiate_resqml2__VariableSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__VariableSubnodePatch * soap_new_resqml2__VariableSubnodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__VariableSubnodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__VariableSubnodePatch * soap_new_req_resqml2__VariableSubnodePatch(
	struct soap *soap,
	resqml2__AbstractIntegerArray *ObjectIndices,
	resqml2__AbstractIntegerArray *SubnodeCountPerSelectedObject,
	enum resqml2__SubnodeNodeObject SubnodeNodeObject1,
	resqml2__AbstractValueArray *NodeWeightsPerSubnode1,
	ULONG64 PatchIndex2)
{
	resqml2__VariableSubnodePatch *_p = soap_new_resqml2__VariableSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__VariableSubnodePatch::ObjectIndices = ObjectIndices;
		_p->resqml2__VariableSubnodePatch::SubnodeCountPerSelectedObject = SubnodeCountPerSelectedObject;
		_p->resqml2__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject1;
		_p->resqml2__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline resqml2__VariableSubnodePatch * soap_new_set_resqml2__VariableSubnodePatch(
	struct soap *soap,
	resqml2__AbstractIntegerArray *ObjectIndices,
	resqml2__AbstractIntegerArray *SubnodeCountPerSelectedObject,
	enum resqml2__SubnodeNodeObject SubnodeNodeObject1,
	resqml2__AbstractValueArray *NodeWeightsPerSubnode1,
	ULONG64 PatchIndex2)
{
	resqml2__VariableSubnodePatch *_p = soap_new_resqml2__VariableSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__VariableSubnodePatch::ObjectIndices = ObjectIndices;
		_p->resqml2__VariableSubnodePatch::SubnodeCountPerSelectedObject = SubnodeCountPerSelectedObject;
		_p->resqml2__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject1;
		_p->resqml2__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline int soap_write_resqml2__VariableSubnodePatch(struct soap *soap, resqml2__VariableSubnodePatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:VariableSubnodePatch", "resqml2:VariableSubnodePatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__VariableSubnodePatch * SOAP_FMAC4 soap_get_resqml2__VariableSubnodePatch(struct soap*, resqml2__VariableSubnodePatch *, const char*, const char*);

inline int soap_read_resqml2__VariableSubnodePatch(struct soap *soap, resqml2__VariableSubnodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__VariableSubnodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnLayerSplitColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnLayerSplitColumnEdges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ColumnLayerSplitColumnEdges(struct soap*, const char*, int, const resqml2__ColumnLayerSplitColumnEdges *, const char*);
SOAP_FMAC3 resqml2__ColumnLayerSplitColumnEdges * SOAP_FMAC4 soap_in_resqml2__ColumnLayerSplitColumnEdges(struct soap*, const char*, resqml2__ColumnLayerSplitColumnEdges *, const char*);
SOAP_FMAC1 resqml2__ColumnLayerSplitColumnEdges * SOAP_FMAC2 soap_instantiate_resqml2__ColumnLayerSplitColumnEdges(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ColumnLayerSplitColumnEdges * soap_new_resqml2__ColumnLayerSplitColumnEdges(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ColumnLayerSplitColumnEdges(soap, n, NULL, NULL, NULL);
}

inline resqml2__ColumnLayerSplitColumnEdges * soap_new_req_resqml2__ColumnLayerSplitColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentColumnEdgeIndices,
	resqml2__AbstractIntegerArray *ColumnPerSplitColumnEdge)
{
	resqml2__ColumnLayerSplitColumnEdges *_p = soap_new_resqml2__ColumnLayerSplitColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ColumnLayerSplitColumnEdges::Count = Count;
		_p->resqml2__ColumnLayerSplitColumnEdges::ParentColumnEdgeIndices = ParentColumnEdgeIndices;
		_p->resqml2__ColumnLayerSplitColumnEdges::ColumnPerSplitColumnEdge = ColumnPerSplitColumnEdge;
	}
	return _p;
}

inline resqml2__ColumnLayerSplitColumnEdges * soap_new_set_resqml2__ColumnLayerSplitColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentColumnEdgeIndices,
	resqml2__AbstractIntegerArray *ColumnPerSplitColumnEdge)
{
	resqml2__ColumnLayerSplitColumnEdges *_p = soap_new_resqml2__ColumnLayerSplitColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ColumnLayerSplitColumnEdges::Count = Count;
		_p->resqml2__ColumnLayerSplitColumnEdges::ParentColumnEdgeIndices = ParentColumnEdgeIndices;
		_p->resqml2__ColumnLayerSplitColumnEdges::ColumnPerSplitColumnEdge = ColumnPerSplitColumnEdge;
	}
	return _p;
}

inline int soap_write_resqml2__ColumnLayerSplitColumnEdges(struct soap *soap, resqml2__ColumnLayerSplitColumnEdges const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ColumnLayerSplitColumnEdges", "resqml2:ColumnLayerSplitColumnEdges") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ColumnLayerSplitColumnEdges * SOAP_FMAC4 soap_get_resqml2__ColumnLayerSplitColumnEdges(struct soap*, resqml2__ColumnLayerSplitColumnEdges *, const char*, const char*);

inline int soap_read_resqml2__ColumnLayerSplitColumnEdges(struct soap *soap, resqml2__ColumnLayerSplitColumnEdges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ColumnLayerSplitColumnEdges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellOverlap_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellOverlap_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__CellOverlap(struct soap*, const char*, int, const resqml2__CellOverlap *, const char*);
SOAP_FMAC3 resqml2__CellOverlap * SOAP_FMAC4 soap_in_resqml2__CellOverlap(struct soap*, const char*, resqml2__CellOverlap *, const char*);
SOAP_FMAC1 resqml2__CellOverlap * SOAP_FMAC2 soap_instantiate_resqml2__CellOverlap(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__CellOverlap * soap_new_resqml2__CellOverlap(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__CellOverlap(soap, n, NULL, NULL, NULL);
}

inline resqml2__CellOverlap * soap_new_req_resqml2__CellOverlap(
	struct soap *soap)
{
	resqml2__CellOverlap *_p = soap_new_resqml2__CellOverlap(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__CellOverlap * soap_new_set_resqml2__CellOverlap(
	struct soap *soap,
	__resqml2__CellOverlap_sequence *__CellOverlap_sequence)
{
	resqml2__CellOverlap *_p = soap_new_resqml2__CellOverlap(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__CellOverlap::__CellOverlap_sequence = __CellOverlap_sequence;
	}
	return _p;
}

inline int soap_write_resqml2__CellOverlap(struct soap *soap, resqml2__CellOverlap const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:CellOverlap", "resqml2:CellOverlap") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__CellOverlap * SOAP_FMAC4 soap_get_resqml2__CellOverlap(struct soap*, resqml2__CellOverlap *, const char*, const char*);

inline int soap_read_resqml2__CellOverlap(struct soap *soap, resqml2__CellOverlap *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__CellOverlap(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredGridHingeNodeFaces_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredGridHingeNodeFaces_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__UnstructuredGridHingeNodeFaces(struct soap*, const char*, int, const resqml2__UnstructuredGridHingeNodeFaces *, const char*);
SOAP_FMAC3 resqml2__UnstructuredGridHingeNodeFaces * SOAP_FMAC4 soap_in_resqml2__UnstructuredGridHingeNodeFaces(struct soap*, const char*, resqml2__UnstructuredGridHingeNodeFaces *, const char*);
SOAP_FMAC1 resqml2__UnstructuredGridHingeNodeFaces * SOAP_FMAC2 soap_instantiate_resqml2__UnstructuredGridHingeNodeFaces(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__UnstructuredGridHingeNodeFaces * soap_new_resqml2__UnstructuredGridHingeNodeFaces(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__UnstructuredGridHingeNodeFaces(soap, n, NULL, NULL, NULL);
}

inline resqml2__UnstructuredGridHingeNodeFaces * soap_new_req_resqml2__UnstructuredGridHingeNodeFaces(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *FaceIndices)
{
	resqml2__UnstructuredGridHingeNodeFaces *_p = soap_new_resqml2__UnstructuredGridHingeNodeFaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UnstructuredGridHingeNodeFaces::Count = Count;
		_p->resqml2__UnstructuredGridHingeNodeFaces::FaceIndices = FaceIndices;
	}
	return _p;
}

inline resqml2__UnstructuredGridHingeNodeFaces * soap_new_set_resqml2__UnstructuredGridHingeNodeFaces(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *FaceIndices)
{
	resqml2__UnstructuredGridHingeNodeFaces *_p = soap_new_resqml2__UnstructuredGridHingeNodeFaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UnstructuredGridHingeNodeFaces::Count = Count;
		_p->resqml2__UnstructuredGridHingeNodeFaces::FaceIndices = FaceIndices;
	}
	return _p;
}

inline int soap_write_resqml2__UnstructuredGridHingeNodeFaces(struct soap *soap, resqml2__UnstructuredGridHingeNodeFaces const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:UnstructuredGridHingeNodeFaces", "resqml2:UnstructuredGridHingeNodeFaces") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__UnstructuredGridHingeNodeFaces * SOAP_FMAC4 soap_get_resqml2__UnstructuredGridHingeNodeFaces(struct soap*, resqml2__UnstructuredGridHingeNodeFaces *, const char*, const char*);

inline int soap_read_resqml2__UnstructuredGridHingeNodeFaces(struct soap *soap, resqml2__UnstructuredGridHingeNodeFaces *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__UnstructuredGridHingeNodeFaces(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractGridGeometry(struct soap*, const char*, int, const resqml2__AbstractGridGeometry *, const char*);
SOAP_FMAC3 resqml2__AbstractGridGeometry * SOAP_FMAC4 soap_in_resqml2__AbstractGridGeometry(struct soap*, const char*, resqml2__AbstractGridGeometry *, const char*);
SOAP_FMAC1 resqml2__AbstractGridGeometry * SOAP_FMAC2 soap_instantiate_resqml2__AbstractGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractGridGeometry * soap_new_resqml2__AbstractGridGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractGridGeometry * soap_new_req_resqml2__AbstractGridGeometry(
	struct soap *soap,
	resqml2__AbstractPoint3dArray *Points1,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__AbstractGridGeometry *_p = soap_new_resqml2__AbstractGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PointGeometry::Points = Points1;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline resqml2__AbstractGridGeometry * soap_new_set_resqml2__AbstractGridGeometry(
	struct soap *soap,
	const std::vector<resqml2__AdditionalGridPoints *> & AdditionalGridPoints,
	resqml2__AbstractPoint3dArray *Points1,
	resqml2__AbstractSeismicCoordinates *SeismicCoordinates1,
	resqml2__TimeIndex *TimeIndex2,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__AbstractGridGeometry *_p = soap_new_resqml2__AbstractGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints;
		_p->resqml2__PointGeometry::Points = Points1;
		_p->resqml2__PointGeometry::SeismicCoordinates = SeismicCoordinates1;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex2;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractGridGeometry(struct soap *soap, resqml2__AbstractGridGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractGridGeometry", "resqml2:AbstractGridGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractGridGeometry * SOAP_FMAC4 soap_get_resqml2__AbstractGridGeometry(struct soap*, resqml2__AbstractGridGeometry *, const char*, const char*);

inline int soap_read_resqml2__AbstractGridGeometry(struct soap *soap, resqml2__AbstractGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGridConnectionSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGridConnectionSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGridConnectionSetRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREGridConnectionSetRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGridConnectionSetRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGridConnectionSetRepresentation(struct soap*, const char*, resqml2__obj_USCOREGridConnectionSetRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGridConnectionSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGridConnectionSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGridConnectionSetRepresentation * soap_new_resqml2__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGridConnectionSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGridConnectionSetRepresentation * soap_new_req_resqml2__obj_USCOREGridConnectionSetRepresentation(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *CellIndexPairs,
	const std::vector<eml__DataObjectReference *> & Grid,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREGridConnectionSetRepresentation *_p = soap_new_resqml2__obj_USCOREGridConnectionSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGridConnectionSetRepresentation::Count = Count;
		_p->resqml2__obj_USCOREGridConnectionSetRepresentation::CellIndexPairs = CellIndexPairs;
		_p->resqml2__obj_USCOREGridConnectionSetRepresentation::Grid = Grid;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREGridConnectionSetRepresentation * soap_new_set_resqml2__obj_USCOREGridConnectionSetRepresentation(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *CellIndexPairs,
	resqml2__AbstractIntegerArray *GridIndexPairs,
	resqml2__AbstractIntegerArray *LocalFacePerCellIndexPairs,
	resqml2__ConnectionInterpretations *ConnectionInterpretations,
	const std::vector<eml__DataObjectReference *> & Grid,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREGridConnectionSetRepresentation *_p = soap_new_resqml2__obj_USCOREGridConnectionSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGridConnectionSetRepresentation::Count = Count;
		_p->resqml2__obj_USCOREGridConnectionSetRepresentation::CellIndexPairs = CellIndexPairs;
		_p->resqml2__obj_USCOREGridConnectionSetRepresentation::GridIndexPairs = GridIndexPairs;
		_p->resqml2__obj_USCOREGridConnectionSetRepresentation::LocalFacePerCellIndexPairs = LocalFacePerCellIndexPairs;
		_p->resqml2__obj_USCOREGridConnectionSetRepresentation::ConnectionInterpretations = ConnectionInterpretations;
		_p->resqml2__obj_USCOREGridConnectionSetRepresentation::Grid = Grid;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, resqml2__obj_USCOREGridConnectionSetRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GridConnectionSetRepresentation", "resqml2:obj_GridConnectionSetRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGridConnectionSetRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGridConnectionSetRepresentation(struct soap*, resqml2__obj_USCOREGridConnectionSetRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGridConnectionSetRepresentation(struct soap *soap, resqml2__obj_USCOREGridConnectionSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGridConnectionSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETruncatedIjkGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETruncatedIjkGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORETruncatedIjkGridRepresentation(struct soap*, const char*, int, const resqml2__obj_USCORETruncatedIjkGridRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORETruncatedIjkGridRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCORETruncatedIjkGridRepresentation(struct soap*, const char*, resqml2__obj_USCORETruncatedIjkGridRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORETruncatedIjkGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORETruncatedIjkGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORETruncatedIjkGridRepresentation * soap_new_resqml2__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORETruncatedIjkGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORETruncatedIjkGridRepresentation * soap_new_req_resqml2__obj_USCORETruncatedIjkGridRepresentation(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	resqml2__IjkGridGeometry *Geometry,
	ULONG64 Nk1,
	resqml2__TruncationCellPatch *TruncationCells1,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORETruncatedIjkGridRepresentation *_p = soap_new_resqml2__obj_USCORETruncatedIjkGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETruncatedIjkGridRepresentation::Ni = Ni;
		_p->resqml2__obj_USCORETruncatedIjkGridRepresentation::Nj = Nj;
		_p->resqml2__obj_USCORETruncatedIjkGridRepresentation::Geometry = Geometry;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk1;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells1;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORETruncatedIjkGridRepresentation * soap_new_set_resqml2__obj_USCORETruncatedIjkGridRepresentation(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	resqml2__IjkGridGeometry *Geometry,
	ULONG64 Nk1,
	resqml2__TruncationCellPatch *TruncationCells1,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits2,
	resqml2__AbstractParentWindow *ParentWindow2,
	resqml2__CellStratigraphicUnits *CellStratigraphicUnits2,
	eml__DataObjectReference *RepresentedInterpretation3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORETruncatedIjkGridRepresentation *_p = soap_new_resqml2__obj_USCORETruncatedIjkGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETruncatedIjkGridRepresentation::Ni = Ni;
		_p->resqml2__obj_USCORETruncatedIjkGridRepresentation::Nj = Nj;
		_p->resqml2__obj_USCORETruncatedIjkGridRepresentation::Geometry = Geometry;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk1;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells1;
		_p->resqml2__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits2;
		_p->resqml2__AbstractGridRepresentation::ParentWindow = ParentWindow2;
		_p->resqml2__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits2;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, resqml2__obj_USCORETruncatedIjkGridRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_TruncatedIjkGridRepresentation", "resqml2:obj_TruncatedIjkGridRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORETruncatedIjkGridRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCORETruncatedIjkGridRepresentation(struct soap*, resqml2__obj_USCORETruncatedIjkGridRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORETruncatedIjkGridRepresentation(struct soap *soap, resqml2__obj_USCORETruncatedIjkGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORETruncatedIjkGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GpGridIjkGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GpGridIjkGridPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GpGridIjkGridPatch(struct soap*, const char*, int, const resqml2__GpGridIjkGridPatch *, const char*);
SOAP_FMAC3 resqml2__GpGridIjkGridPatch * SOAP_FMAC4 soap_in_resqml2__GpGridIjkGridPatch(struct soap*, const char*, resqml2__GpGridIjkGridPatch *, const char*);
SOAP_FMAC1 resqml2__GpGridIjkGridPatch * SOAP_FMAC2 soap_instantiate_resqml2__GpGridIjkGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__GpGridIjkGridPatch * soap_new_resqml2__GpGridIjkGridPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__GpGridIjkGridPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__GpGridIjkGridPatch * soap_new_req_resqml2__GpGridIjkGridPatch(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	ULONG64 PatchIndex1)
{
	resqml2__GpGridIjkGridPatch *_p = soap_new_resqml2__GpGridIjkGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GpGridIjkGridPatch::Ni = Ni;
		_p->resqml2__GpGridIjkGridPatch::Nj = Nj;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__GpGridIjkGridPatch * soap_new_set_resqml2__GpGridIjkGridPatch(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	bool *RadialGridIsComplete,
	resqml2__IjkGridGeometry *Geometry,
	resqml2__TruncationCellPatch *TruncationCells,
	ULONG64 PatchIndex1)
{
	resqml2__GpGridIjkGridPatch *_p = soap_new_resqml2__GpGridIjkGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GpGridIjkGridPatch::Ni = Ni;
		_p->resqml2__GpGridIjkGridPatch::Nj = Nj;
		_p->resqml2__GpGridIjkGridPatch::RadialGridIsComplete = RadialGridIsComplete;
		_p->resqml2__GpGridIjkGridPatch::Geometry = Geometry;
		_p->resqml2__GpGridIjkGridPatch::TruncationCells = TruncationCells;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__GpGridIjkGridPatch(struct soap *soap, resqml2__GpGridIjkGridPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:GpGridIjkGridPatch", "resqml2:GpGridIjkGridPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__GpGridIjkGridPatch * SOAP_FMAC4 soap_get_resqml2__GpGridIjkGridPatch(struct soap*, resqml2__GpGridIjkGridPatch *, const char*, const char*);

inline int soap_read_resqml2__GpGridIjkGridPatch(struct soap *soap, resqml2__GpGridIjkGridPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__GpGridIjkGridPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractColumnLayerGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractColumnLayerGridRepresentation(struct soap*, const char*, int, const resqml2__AbstractColumnLayerGridRepresentation *, const char*);
SOAP_FMAC3 resqml2__AbstractColumnLayerGridRepresentation * SOAP_FMAC4 soap_in_resqml2__AbstractColumnLayerGridRepresentation(struct soap*, const char*, resqml2__AbstractColumnLayerGridRepresentation *, const char*);
SOAP_FMAC1 resqml2__AbstractColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__AbstractColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractColumnLayerGridRepresentation * soap_new_resqml2__AbstractColumnLayerGridRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractColumnLayerGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractColumnLayerGridRepresentation * soap_new_req_resqml2__AbstractColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 Nk,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractColumnLayerGridRepresentation *_p = soap_new_resqml2__AbstractColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractColumnLayerGridRepresentation::Nk = Nk;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__AbstractColumnLayerGridRepresentation * soap_new_set_resqml2__AbstractColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 Nk,
	resqml2__IntervalStratigraphicUnits *IntervalStratigraphicUnits,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits1,
	resqml2__AbstractParentWindow *ParentWindow1,
	resqml2__CellStratigraphicUnits *CellStratigraphicUnits1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractColumnLayerGridRepresentation *_p = soap_new_resqml2__AbstractColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractColumnLayerGridRepresentation::Nk = Nk;
		_p->resqml2__AbstractColumnLayerGridRepresentation::IntervalStratigraphicUnits = IntervalStratigraphicUnits;
		_p->resqml2__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits1;
		_p->resqml2__AbstractGridRepresentation::ParentWindow = ParentWindow1;
		_p->resqml2__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractColumnLayerGridRepresentation(struct soap *soap, resqml2__AbstractColumnLayerGridRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractColumnLayerGridRepresentation", "resqml2:AbstractColumnLayerGridRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractColumnLayerGridRepresentation * SOAP_FMAC4 soap_get_resqml2__AbstractColumnLayerGridRepresentation(struct soap*, resqml2__AbstractColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_read_resqml2__AbstractColumnLayerGridRepresentation(struct soap *soap, resqml2__AbstractColumnLayerGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractColumnLayerGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellParentWindow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__CellParentWindow(struct soap*, const char*, int, const resqml2__CellParentWindow *, const char*);
SOAP_FMAC3 resqml2__CellParentWindow * SOAP_FMAC4 soap_in_resqml2__CellParentWindow(struct soap*, const char*, resqml2__CellParentWindow *, const char*);
SOAP_FMAC1 resqml2__CellParentWindow * SOAP_FMAC2 soap_instantiate_resqml2__CellParentWindow(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__CellParentWindow * soap_new_resqml2__CellParentWindow(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__CellParentWindow(soap, n, NULL, NULL, NULL);
}

inline resqml2__CellParentWindow * soap_new_req_resqml2__CellParentWindow(
	struct soap *soap,
	resqml2__AbstractIntegerArray *CellIndices,
	eml__DataObjectReference *ParentGrid)
{
	resqml2__CellParentWindow *_p = soap_new_resqml2__CellParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__CellParentWindow::CellIndices = CellIndices;
		_p->resqml2__CellParentWindow::ParentGrid = ParentGrid;
	}
	return _p;
}

inline resqml2__CellParentWindow * soap_new_set_resqml2__CellParentWindow(
	struct soap *soap,
	resqml2__AbstractIntegerArray *CellIndices,
	eml__DataObjectReference *ParentGrid,
	resqml2__CellOverlap *CellOverlap1)
{
	resqml2__CellParentWindow *_p = soap_new_resqml2__CellParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__CellParentWindow::CellIndices = CellIndices;
		_p->resqml2__CellParentWindow::ParentGrid = ParentGrid;
		_p->resqml2__AbstractParentWindow::CellOverlap = CellOverlap1;
	}
	return _p;
}

inline int soap_write_resqml2__CellParentWindow(struct soap *soap, resqml2__CellParentWindow const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:CellParentWindow", "resqml2:CellParentWindow") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__CellParentWindow * SOAP_FMAC4 soap_get_resqml2__CellParentWindow(struct soap*, resqml2__CellParentWindow *, const char*, const char*);

inline int soap_read_resqml2__CellParentWindow(struct soap *soap, resqml2__CellParentWindow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__CellParentWindow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, const char*, int, const resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, const char*, resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * soap_new_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * soap_new_req_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 ColumnCount,
	resqml2__UnstructuredColumnLayerGridGeometry *Geometry,
	ULONG64 Nk1,
	resqml2__TruncationCellPatch *TruncationCells1,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *_p = soap_new_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::ColumnCount = ColumnCount;
		_p->resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::Geometry = Geometry;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk1;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells1;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * soap_new_set_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 ColumnCount,
	resqml2__UnstructuredColumnLayerGridGeometry *Geometry,
	ULONG64 Nk1,
	resqml2__TruncationCellPatch *TruncationCells1,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits2,
	resqml2__AbstractParentWindow *ParentWindow2,
	resqml2__CellStratigraphicUnits *CellStratigraphicUnits2,
	eml__DataObjectReference *RepresentedInterpretation3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *_p = soap_new_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::ColumnCount = ColumnCount;
		_p->resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation::Geometry = Geometry;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk1;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells1;
		_p->resqml2__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits2;
		_p->resqml2__AbstractGridRepresentation::ParentWindow = ParentWindow2;
		_p->resqml2__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits2;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_TruncatedUnstructuredColumnLayerGridRepresentation", "resqml2:obj_TruncatedUnstructuredColumnLayerGridRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap*, resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORETruncatedUnstructuredColumnLayerGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Edges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Edges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Edges(struct soap*, const char*, int, const resqml2__Edges *, const char*);
SOAP_FMAC3 resqml2__Edges * SOAP_FMAC4 soap_in_resqml2__Edges(struct soap*, const char*, resqml2__Edges *, const char*);
SOAP_FMAC1 resqml2__Edges * SOAP_FMAC2 soap_instantiate_resqml2__Edges(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Edges * soap_new_resqml2__Edges(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Edges(soap, n, NULL, NULL, NULL);
}

inline resqml2__Edges * soap_new_req_resqml2__Edges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *NodesPerEdge)
{
	resqml2__Edges *_p = soap_new_resqml2__Edges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Edges::Count = Count;
		_p->resqml2__Edges::NodesPerEdge = NodesPerEdge;
	}
	return _p;
}

inline resqml2__Edges * soap_new_set_resqml2__Edges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *NodesPerEdge)
{
	resqml2__Edges *_p = soap_new_resqml2__Edges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Edges::Count = Count;
		_p->resqml2__Edges::NodesPerEdge = NodesPerEdge;
	}
	return _p;
}

inline int soap_write_resqml2__Edges(struct soap *soap, resqml2__Edges const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Edges", "resqml2:Edges") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Edges * SOAP_FMAC4 soap_get_resqml2__Edges(struct soap*, resqml2__Edges *, const char*, const char*);

inline int soap_read_resqml2__Edges(struct soap *soap, resqml2__Edges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Edges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__UnstructuredGridGeometry(struct soap*, const char*, int, const resqml2__UnstructuredGridGeometry *, const char*);
SOAP_FMAC3 resqml2__UnstructuredGridGeometry * SOAP_FMAC4 soap_in_resqml2__UnstructuredGridGeometry(struct soap*, const char*, resqml2__UnstructuredGridGeometry *, const char*);
SOAP_FMAC1 resqml2__UnstructuredGridGeometry * SOAP_FMAC2 soap_instantiate_resqml2__UnstructuredGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__UnstructuredGridGeometry * soap_new_resqml2__UnstructuredGridGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__UnstructuredGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__UnstructuredGridGeometry * soap_new_req_resqml2__UnstructuredGridGeometry(
	struct soap *soap,
	enum resqml2__CellShape CellShape,
	ULONG64 NodeCount,
	ULONG64 FaceCount,
	resqml2__ResqmlJaggedArray *NodesPerFace,
	resqml2__ResqmlJaggedArray *FacesPerCell,
	resqml2__AbstractBooleanArray *CellFaceIsRightHanded,
	resqml2__AbstractPoint3dArray *Points2,
	eml__DataObjectReference *LocalCrs3)
{
	resqml2__UnstructuredGridGeometry *_p = soap_new_resqml2__UnstructuredGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UnstructuredGridGeometry::CellShape = CellShape;
		_p->resqml2__UnstructuredGridGeometry::NodeCount = NodeCount;
		_p->resqml2__UnstructuredGridGeometry::FaceCount = FaceCount;
		_p->resqml2__UnstructuredGridGeometry::NodesPerFace = NodesPerFace;
		_p->resqml2__UnstructuredGridGeometry::FacesPerCell = FacesPerCell;
		_p->resqml2__UnstructuredGridGeometry::CellFaceIsRightHanded = CellFaceIsRightHanded;
		_p->resqml2__PointGeometry::Points = Points2;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs3;
	}
	return _p;
}

inline resqml2__UnstructuredGridGeometry * soap_new_set_resqml2__UnstructuredGridGeometry(
	struct soap *soap,
	enum resqml2__CellShape CellShape,
	ULONG64 NodeCount,
	ULONG64 FaceCount,
	resqml2__ResqmlJaggedArray *NodesPerFace,
	resqml2__ResqmlJaggedArray *FacesPerCell,
	resqml2__AbstractBooleanArray *CellFaceIsRightHanded,
	resqml2__UnstructuredGridHingeNodeFaces *HingeNodeFaces,
	resqml2__UnstructuredSubnodeTopology *SubnodeTopology,
	const std::vector<resqml2__AdditionalGridPoints *> & AdditionalGridPoints1,
	resqml2__AbstractPoint3dArray *Points2,
	resqml2__AbstractSeismicCoordinates *SeismicCoordinates2,
	resqml2__TimeIndex *TimeIndex3,
	eml__DataObjectReference *LocalCrs3)
{
	resqml2__UnstructuredGridGeometry *_p = soap_new_resqml2__UnstructuredGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UnstructuredGridGeometry::CellShape = CellShape;
		_p->resqml2__UnstructuredGridGeometry::NodeCount = NodeCount;
		_p->resqml2__UnstructuredGridGeometry::FaceCount = FaceCount;
		_p->resqml2__UnstructuredGridGeometry::NodesPerFace = NodesPerFace;
		_p->resqml2__UnstructuredGridGeometry::FacesPerCell = FacesPerCell;
		_p->resqml2__UnstructuredGridGeometry::CellFaceIsRightHanded = CellFaceIsRightHanded;
		_p->resqml2__UnstructuredGridGeometry::HingeNodeFaces = HingeNodeFaces;
		_p->resqml2__UnstructuredGridGeometry::SubnodeTopology = SubnodeTopology;
		_p->resqml2__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints1;
		_p->resqml2__PointGeometry::Points = Points2;
		_p->resqml2__PointGeometry::SeismicCoordinates = SeismicCoordinates2;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex3;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs3;
	}
	return _p;
}

inline int soap_write_resqml2__UnstructuredGridGeometry(struct soap *soap, resqml2__UnstructuredGridGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:UnstructuredGridGeometry", "resqml2:UnstructuredGridGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__UnstructuredGridGeometry * SOAP_FMAC4 soap_get_resqml2__UnstructuredGridGeometry(struct soap*, resqml2__UnstructuredGridGeometry *, const char*, const char*);

inline int soap_read_resqml2__UnstructuredGridGeometry(struct soap *soap, resqml2__UnstructuredGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__UnstructuredGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__NodesPerCell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__NodesPerCell_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__NodesPerCell(struct soap*, const char*, int, const resqml2__NodesPerCell *, const char*);
SOAP_FMAC3 resqml2__NodesPerCell * SOAP_FMAC4 soap_in_resqml2__NodesPerCell(struct soap*, const char*, resqml2__NodesPerCell *, const char*);
SOAP_FMAC1 resqml2__NodesPerCell * SOAP_FMAC2 soap_instantiate_resqml2__NodesPerCell(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__NodesPerCell * soap_new_resqml2__NodesPerCell(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__NodesPerCell(soap, n, NULL, NULL, NULL);
}

inline resqml2__NodesPerCell * soap_new_req_resqml2__NodesPerCell(
	struct soap *soap,
	resqml2__ResqmlJaggedArray *NodesPerCell)
{
	resqml2__NodesPerCell *_p = soap_new_resqml2__NodesPerCell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__NodesPerCell::NodesPerCell = NodesPerCell;
	}
	return _p;
}

inline resqml2__NodesPerCell * soap_new_set_resqml2__NodesPerCell(
	struct soap *soap,
	resqml2__ResqmlJaggedArray *NodesPerCell)
{
	resqml2__NodesPerCell *_p = soap_new_resqml2__NodesPerCell(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__NodesPerCell::NodesPerCell = NodesPerCell;
	}
	return _p;
}

inline int soap_write_resqml2__NodesPerCell(struct soap *soap, resqml2__NodesPerCell const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:NodesPerCell", "resqml2:NodesPerCell") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__NodesPerCell * SOAP_FMAC4 soap_get_resqml2__NodesPerCell(struct soap*, resqml2__NodesPerCell *, const char*, const char*);

inline int soap_read_resqml2__NodesPerCell(struct soap *soap, resqml2__NodesPerCell *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__NodesPerCell(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellFluidPhaseUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellFluidPhaseUnits_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__CellFluidPhaseUnits(struct soap*, const char*, int, const resqml2__CellFluidPhaseUnits *, const char*);
SOAP_FMAC3 resqml2__CellFluidPhaseUnits * SOAP_FMAC4 soap_in_resqml2__CellFluidPhaseUnits(struct soap*, const char*, resqml2__CellFluidPhaseUnits *, const char*);
SOAP_FMAC1 resqml2__CellFluidPhaseUnits * SOAP_FMAC2 soap_instantiate_resqml2__CellFluidPhaseUnits(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__CellFluidPhaseUnits * soap_new_resqml2__CellFluidPhaseUnits(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__CellFluidPhaseUnits(soap, n, NULL, NULL, NULL);
}

inline resqml2__CellFluidPhaseUnits * soap_new_req_resqml2__CellFluidPhaseUnits(
	struct soap *soap,
	resqml2__AbstractIntegerArray *PhaseUnitIndices,
	eml__DataObjectReference *FluidOrganization)
{
	resqml2__CellFluidPhaseUnits *_p = soap_new_resqml2__CellFluidPhaseUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__CellFluidPhaseUnits::PhaseUnitIndices = PhaseUnitIndices;
		_p->resqml2__CellFluidPhaseUnits::FluidOrganization = FluidOrganization;
	}
	return _p;
}

inline resqml2__CellFluidPhaseUnits * soap_new_set_resqml2__CellFluidPhaseUnits(
	struct soap *soap,
	resqml2__AbstractIntegerArray *PhaseUnitIndices,
	eml__DataObjectReference *FluidOrganization)
{
	resqml2__CellFluidPhaseUnits *_p = soap_new_resqml2__CellFluidPhaseUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__CellFluidPhaseUnits::PhaseUnitIndices = PhaseUnitIndices;
		_p->resqml2__CellFluidPhaseUnits::FluidOrganization = FluidOrganization;
	}
	return _p;
}

inline int soap_write_resqml2__CellFluidPhaseUnits(struct soap *soap, resqml2__CellFluidPhaseUnits const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:CellFluidPhaseUnits", "resqml2:CellFluidPhaseUnits") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__CellFluidPhaseUnits * SOAP_FMAC4 soap_get_resqml2__CellFluidPhaseUnits(struct soap*, resqml2__CellFluidPhaseUnits *, const char*, const char*);

inline int soap_read_resqml2__CellFluidPhaseUnits(struct soap *soap, resqml2__CellFluidPhaseUnits *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__CellFluidPhaseUnits(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SplitEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SplitEdges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SplitEdges(struct soap*, const char*, int, const resqml2__SplitEdges *, const char*);
SOAP_FMAC3 resqml2__SplitEdges * SOAP_FMAC4 soap_in_resqml2__SplitEdges(struct soap*, const char*, resqml2__SplitEdges *, const char*);
SOAP_FMAC1 resqml2__SplitEdges * SOAP_FMAC2 soap_instantiate_resqml2__SplitEdges(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__SplitEdges * soap_new_resqml2__SplitEdges(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__SplitEdges(soap, n, NULL, NULL, NULL);
}

inline resqml2__SplitEdges * soap_new_req_resqml2__SplitEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentEdgeIndices,
	resqml2__ResqmlJaggedArray *FacesPerSplitEdge)
{
	resqml2__SplitEdges *_p = soap_new_resqml2__SplitEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SplitEdges::Count = Count;
		_p->resqml2__SplitEdges::ParentEdgeIndices = ParentEdgeIndices;
		_p->resqml2__SplitEdges::FacesPerSplitEdge = FacesPerSplitEdge;
	}
	return _p;
}

inline resqml2__SplitEdges * soap_new_set_resqml2__SplitEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentEdgeIndices,
	resqml2__ResqmlJaggedArray *FacesPerSplitEdge)
{
	resqml2__SplitEdges *_p = soap_new_resqml2__SplitEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SplitEdges::Count = Count;
		_p->resqml2__SplitEdges::ParentEdgeIndices = ParentEdgeIndices;
		_p->resqml2__SplitEdges::FacesPerSplitEdge = FacesPerSplitEdge;
	}
	return _p;
}

inline int soap_write_resqml2__SplitEdges(struct soap *soap, resqml2__SplitEdges const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:SplitEdges", "resqml2:SplitEdges") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__SplitEdges * SOAP_FMAC4 soap_get_resqml2__SplitEdges(struct soap*, resqml2__SplitEdges *, const char*, const char*);

inline int soap_read_resqml2__SplitEdges(struct soap *soap, resqml2__SplitEdges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__SplitEdges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractTruncatedColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractTruncatedColumnLayerGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, const char*, int, const resqml2__AbstractTruncatedColumnLayerGridRepresentation *, const char*);
SOAP_FMAC3 resqml2__AbstractTruncatedColumnLayerGridRepresentation * SOAP_FMAC4 soap_in_resqml2__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, const char*, resqml2__AbstractTruncatedColumnLayerGridRepresentation *, const char*);
SOAP_FMAC1 resqml2__AbstractTruncatedColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractTruncatedColumnLayerGridRepresentation * soap_new_resqml2__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractTruncatedColumnLayerGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractTruncatedColumnLayerGridRepresentation * soap_new_req_resqml2__AbstractTruncatedColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 Nk,
	resqml2__TruncationCellPatch *TruncationCells,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractTruncatedColumnLayerGridRepresentation *_p = soap_new_resqml2__AbstractTruncatedColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__AbstractTruncatedColumnLayerGridRepresentation * soap_new_set_resqml2__AbstractTruncatedColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 Nk,
	resqml2__TruncationCellPatch *TruncationCells,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits1,
	resqml2__AbstractParentWindow *ParentWindow1,
	resqml2__CellStratigraphicUnits *CellStratigraphicUnits1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__AbstractTruncatedColumnLayerGridRepresentation *_p = soap_new_resqml2__AbstractTruncatedColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::Nk = Nk;
		_p->resqml2__AbstractTruncatedColumnLayerGridRepresentation::TruncationCells = TruncationCells;
		_p->resqml2__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits1;
		_p->resqml2__AbstractGridRepresentation::ParentWindow = ParentWindow1;
		_p->resqml2__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, resqml2__AbstractTruncatedColumnLayerGridRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractTruncatedColumnLayerGridRepresentation", "resqml2:AbstractTruncatedColumnLayerGridRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractTruncatedColumnLayerGridRepresentation * SOAP_FMAC4 soap_get_resqml2__AbstractTruncatedColumnLayerGridRepresentation(struct soap*, resqml2__AbstractTruncatedColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_read_resqml2__AbstractTruncatedColumnLayerGridRepresentation(struct soap *soap, resqml2__AbstractTruncatedColumnLayerGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractTruncatedColumnLayerGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ConnectionInterpretations_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ConnectionInterpretations_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ConnectionInterpretations(struct soap*, const char*, int, const resqml2__ConnectionInterpretations *, const char*);
SOAP_FMAC3 resqml2__ConnectionInterpretations * SOAP_FMAC4 soap_in_resqml2__ConnectionInterpretations(struct soap*, const char*, resqml2__ConnectionInterpretations *, const char*);
SOAP_FMAC1 resqml2__ConnectionInterpretations * SOAP_FMAC2 soap_instantiate_resqml2__ConnectionInterpretations(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ConnectionInterpretations * soap_new_resqml2__ConnectionInterpretations(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ConnectionInterpretations(soap, n, NULL, NULL, NULL);
}

inline resqml2__ConnectionInterpretations * soap_new_req_resqml2__ConnectionInterpretations(
	struct soap *soap,
	resqml2__ResqmlJaggedArray *InterpretationIndices,
	const std::vector<eml__DataObjectReference *> & FeatureInterpretation)
{
	resqml2__ConnectionInterpretations *_p = soap_new_resqml2__ConnectionInterpretations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ConnectionInterpretations::InterpretationIndices = InterpretationIndices;
		_p->resqml2__ConnectionInterpretations::FeatureInterpretation = FeatureInterpretation;
	}
	return _p;
}

inline resqml2__ConnectionInterpretations * soap_new_set_resqml2__ConnectionInterpretations(
	struct soap *soap,
	resqml2__ResqmlJaggedArray *InterpretationIndices,
	const std::vector<eml__DataObjectReference *> & FeatureInterpretation)
{
	resqml2__ConnectionInterpretations *_p = soap_new_resqml2__ConnectionInterpretations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ConnectionInterpretations::InterpretationIndices = InterpretationIndices;
		_p->resqml2__ConnectionInterpretations::FeatureInterpretation = FeatureInterpretation;
	}
	return _p;
}

inline int soap_write_resqml2__ConnectionInterpretations(struct soap *soap, resqml2__ConnectionInterpretations const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ConnectionInterpretations", "resqml2:ConnectionInterpretations") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ConnectionInterpretations * SOAP_FMAC4 soap_get_resqml2__ConnectionInterpretations(struct soap*, resqml2__ConnectionInterpretations *, const char*, const char*);

inline int soap_read_resqml2__ConnectionInterpretations(struct soap *soap, resqml2__ConnectionInterpretations *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ConnectionInterpretations(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjkGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjkGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IjkGridGeometry(struct soap*, const char*, int, const resqml2__IjkGridGeometry *, const char*);
SOAP_FMAC3 resqml2__IjkGridGeometry * SOAP_FMAC4 soap_in_resqml2__IjkGridGeometry(struct soap*, const char*, resqml2__IjkGridGeometry *, const char*);
SOAP_FMAC1 resqml2__IjkGridGeometry * SOAP_FMAC2 soap_instantiate_resqml2__IjkGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IjkGridGeometry * soap_new_resqml2__IjkGridGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IjkGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__IjkGridGeometry * soap_new_req_resqml2__IjkGridGeometry(
	struct soap *soap,
	bool GridIsRighthanded,
	enum resqml2__KDirection KDirection1,
	resqml2__AbstractBooleanArray *PillarGeometryIsDefined1,
	enum resqml2__PillarShape PillarShape1,
	resqml2__AbstractPoint3dArray *Points3,
	eml__DataObjectReference *LocalCrs4)
{
	resqml2__IjkGridGeometry *_p = soap_new_resqml2__IjkGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IjkGridGeometry::GridIsRighthanded = GridIsRighthanded;
		_p->resqml2__AbstractColumnLayerGridGeometry::KDirection = KDirection1;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined1;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarShape = PillarShape1;
		_p->resqml2__PointGeometry::Points = Points3;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs4;
	}
	return _p;
}

inline resqml2__IjkGridGeometry * soap_new_set_resqml2__IjkGridGeometry(
	struct soap *soap,
	bool GridIsRighthanded,
	resqml2__IjGaps *IjGaps,
	enum resqml2__KDirection KDirection1,
	resqml2__AbstractBooleanArray *PillarGeometryIsDefined1,
	enum resqml2__PillarShape PillarShape1,
	resqml2__AbstractBooleanArray *CellGeometryIsDefined1,
	resqml2__AbstractBooleanArray *NodeIsColocatedInKDirection1,
	resqml2__AbstractBooleanArray *NodeIsColocatedOnKEdge1,
	resqml2__ColumnLayerSubnodeTopology *SubnodeTopology1,
	resqml2__ColumnLayerSplitCoordinateLines *SplitCoordinateLines1,
	resqml2__SplitNodePatch *SplitNodes1,
	const std::vector<resqml2__AdditionalGridPoints *> & AdditionalGridPoints2,
	resqml2__AbstractPoint3dArray *Points3,
	resqml2__AbstractSeismicCoordinates *SeismicCoordinates3,
	resqml2__TimeIndex *TimeIndex4,
	eml__DataObjectReference *LocalCrs4)
{
	resqml2__IjkGridGeometry *_p = soap_new_resqml2__IjkGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IjkGridGeometry::GridIsRighthanded = GridIsRighthanded;
		_p->resqml2__IjkGridGeometry::IjGaps = IjGaps;
		_p->resqml2__AbstractColumnLayerGridGeometry::KDirection = KDirection1;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined1;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarShape = PillarShape1;
		_p->resqml2__AbstractColumnLayerGridGeometry::CellGeometryIsDefined = CellGeometryIsDefined1;
		_p->resqml2__AbstractColumnLayerGridGeometry::NodeIsColocatedInKDirection = NodeIsColocatedInKDirection1;
		_p->resqml2__AbstractColumnLayerGridGeometry::NodeIsColocatedOnKEdge = NodeIsColocatedOnKEdge1;
		_p->resqml2__AbstractColumnLayerGridGeometry::SubnodeTopology = SubnodeTopology1;
		_p->resqml2__AbstractColumnLayerGridGeometry::SplitCoordinateLines = SplitCoordinateLines1;
		_p->resqml2__AbstractColumnLayerGridGeometry::SplitNodes = SplitNodes1;
		_p->resqml2__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints2;
		_p->resqml2__PointGeometry::Points = Points3;
		_p->resqml2__PointGeometry::SeismicCoordinates = SeismicCoordinates3;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex4;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs4;
	}
	return _p;
}

inline int soap_write_resqml2__IjkGridGeometry(struct soap *soap, resqml2__IjkGridGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IjkGridGeometry", "resqml2:IjkGridGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IjkGridGeometry * SOAP_FMAC4 soap_get_resqml2__IjkGridGeometry(struct soap*, resqml2__IjkGridGeometry *, const char*, const char*);

inline int soap_read_resqml2__IjkGridGeometry(struct soap *soap, resqml2__IjkGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IjkGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredColumnLayerGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredColumnLayerGridGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__UnstructuredColumnLayerGridGeometry(struct soap*, const char*, int, const resqml2__UnstructuredColumnLayerGridGeometry *, const char*);
SOAP_FMAC3 resqml2__UnstructuredColumnLayerGridGeometry * SOAP_FMAC4 soap_in_resqml2__UnstructuredColumnLayerGridGeometry(struct soap*, const char*, resqml2__UnstructuredColumnLayerGridGeometry *, const char*);
SOAP_FMAC1 resqml2__UnstructuredColumnLayerGridGeometry * SOAP_FMAC2 soap_instantiate_resqml2__UnstructuredColumnLayerGridGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__UnstructuredColumnLayerGridGeometry * soap_new_resqml2__UnstructuredColumnLayerGridGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__UnstructuredColumnLayerGridGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__UnstructuredColumnLayerGridGeometry * soap_new_req_resqml2__UnstructuredColumnLayerGridGeometry(
	struct soap *soap,
	enum resqml2__ColumnShape ColumnShape,
	ULONG64 PillarCount,
	resqml2__ResqmlJaggedArray *PillarsPerColumn,
	resqml2__AbstractBooleanArray *ColumnIsRightHanded,
	enum resqml2__KDirection KDirection1,
	resqml2__AbstractBooleanArray *PillarGeometryIsDefined1,
	enum resqml2__PillarShape PillarShape1,
	resqml2__AbstractPoint3dArray *Points3,
	eml__DataObjectReference *LocalCrs4)
{
	resqml2__UnstructuredColumnLayerGridGeometry *_p = soap_new_resqml2__UnstructuredColumnLayerGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UnstructuredColumnLayerGridGeometry::ColumnShape = ColumnShape;
		_p->resqml2__UnstructuredColumnLayerGridGeometry::PillarCount = PillarCount;
		_p->resqml2__UnstructuredColumnLayerGridGeometry::PillarsPerColumn = PillarsPerColumn;
		_p->resqml2__UnstructuredColumnLayerGridGeometry::ColumnIsRightHanded = ColumnIsRightHanded;
		_p->resqml2__AbstractColumnLayerGridGeometry::KDirection = KDirection1;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined1;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarShape = PillarShape1;
		_p->resqml2__PointGeometry::Points = Points3;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs4;
	}
	return _p;
}

inline resqml2__UnstructuredColumnLayerGridGeometry * soap_new_set_resqml2__UnstructuredColumnLayerGridGeometry(
	struct soap *soap,
	enum resqml2__ColumnShape ColumnShape,
	ULONG64 PillarCount,
	resqml2__ResqmlJaggedArray *PillarsPerColumn,
	resqml2__AbstractBooleanArray *ColumnIsRightHanded,
	resqml2__UnstructuredColumnEdges *ColumnEdges,
	enum resqml2__KDirection KDirection1,
	resqml2__AbstractBooleanArray *PillarGeometryIsDefined1,
	enum resqml2__PillarShape PillarShape1,
	resqml2__AbstractBooleanArray *CellGeometryIsDefined1,
	resqml2__AbstractBooleanArray *NodeIsColocatedInKDirection1,
	resqml2__AbstractBooleanArray *NodeIsColocatedOnKEdge1,
	resqml2__ColumnLayerSubnodeTopology *SubnodeTopology1,
	resqml2__ColumnLayerSplitCoordinateLines *SplitCoordinateLines1,
	resqml2__SplitNodePatch *SplitNodes1,
	const std::vector<resqml2__AdditionalGridPoints *> & AdditionalGridPoints2,
	resqml2__AbstractPoint3dArray *Points3,
	resqml2__AbstractSeismicCoordinates *SeismicCoordinates3,
	resqml2__TimeIndex *TimeIndex4,
	eml__DataObjectReference *LocalCrs4)
{
	resqml2__UnstructuredColumnLayerGridGeometry *_p = soap_new_resqml2__UnstructuredColumnLayerGridGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UnstructuredColumnLayerGridGeometry::ColumnShape = ColumnShape;
		_p->resqml2__UnstructuredColumnLayerGridGeometry::PillarCount = PillarCount;
		_p->resqml2__UnstructuredColumnLayerGridGeometry::PillarsPerColumn = PillarsPerColumn;
		_p->resqml2__UnstructuredColumnLayerGridGeometry::ColumnIsRightHanded = ColumnIsRightHanded;
		_p->resqml2__UnstructuredColumnLayerGridGeometry::ColumnEdges = ColumnEdges;
		_p->resqml2__AbstractColumnLayerGridGeometry::KDirection = KDirection1;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarGeometryIsDefined = PillarGeometryIsDefined1;
		_p->resqml2__AbstractColumnLayerGridGeometry::PillarShape = PillarShape1;
		_p->resqml2__AbstractColumnLayerGridGeometry::CellGeometryIsDefined = CellGeometryIsDefined1;
		_p->resqml2__AbstractColumnLayerGridGeometry::NodeIsColocatedInKDirection = NodeIsColocatedInKDirection1;
		_p->resqml2__AbstractColumnLayerGridGeometry::NodeIsColocatedOnKEdge = NodeIsColocatedOnKEdge1;
		_p->resqml2__AbstractColumnLayerGridGeometry::SubnodeTopology = SubnodeTopology1;
		_p->resqml2__AbstractColumnLayerGridGeometry::SplitCoordinateLines = SplitCoordinateLines1;
		_p->resqml2__AbstractColumnLayerGridGeometry::SplitNodes = SplitNodes1;
		_p->resqml2__AbstractGridGeometry::AdditionalGridPoints = AdditionalGridPoints2;
		_p->resqml2__PointGeometry::Points = Points3;
		_p->resqml2__PointGeometry::SeismicCoordinates = SeismicCoordinates3;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex4;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs4;
	}
	return _p;
}

inline int soap_write_resqml2__UnstructuredColumnLayerGridGeometry(struct soap *soap, resqml2__UnstructuredColumnLayerGridGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:UnstructuredColumnLayerGridGeometry", "resqml2:UnstructuredColumnLayerGridGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__UnstructuredColumnLayerGridGeometry * SOAP_FMAC4 soap_get_resqml2__UnstructuredColumnLayerGridGeometry(struct soap*, resqml2__UnstructuredColumnLayerGridGeometry *, const char*, const char*);

inline int soap_read_resqml2__UnstructuredColumnLayerGridGeometry(struct soap *soap, resqml2__UnstructuredColumnLayerGridGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__UnstructuredColumnLayerGridGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Activation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Activation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Activation(struct soap*, const char*, int, const resqml2__Activation *, const char*);
SOAP_FMAC3 resqml2__Activation * SOAP_FMAC4 soap_in_resqml2__Activation(struct soap*, const char*, resqml2__Activation *, const char*);
SOAP_FMAC1 resqml2__Activation * SOAP_FMAC2 soap_instantiate_resqml2__Activation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Activation * soap_new_resqml2__Activation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Activation(soap, n, NULL, NULL, NULL);
}

inline resqml2__Activation * soap_new_req_resqml2__Activation(
	struct soap *soap,
	resqml2__AbstractIntegerArray *ActivationToggleIndices,
	eml__DataObjectReference *TimeSeries)
{
	resqml2__Activation *_p = soap_new_resqml2__Activation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Activation::ActivationToggleIndices = ActivationToggleIndices;
		_p->resqml2__Activation::TimeSeries = TimeSeries;
	}
	return _p;
}

inline resqml2__Activation * soap_new_set_resqml2__Activation(
	struct soap *soap,
	resqml2__AbstractIntegerArray *ActivationToggleIndices,
	eml__DataObjectReference *TimeSeries)
{
	resqml2__Activation *_p = soap_new_resqml2__Activation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Activation::ActivationToggleIndices = ActivationToggleIndices;
		_p->resqml2__Activation::TimeSeries = TimeSeries;
	}
	return _p;
}

inline int soap_write_resqml2__Activation(struct soap *soap, resqml2__Activation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Activation", "resqml2:Activation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Activation * SOAP_FMAC4 soap_get_resqml2__Activation(struct soap*, resqml2__Activation *, const char*, const char*);

inline int soap_read_resqml2__Activation(struct soap *soap, resqml2__Activation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Activation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Regrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Regrid_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Regrid(struct soap*, const char*, int, const resqml2__Regrid *, const char*);
SOAP_FMAC3 resqml2__Regrid * SOAP_FMAC4 soap_in_resqml2__Regrid(struct soap*, const char*, resqml2__Regrid *, const char*);
SOAP_FMAC1 resqml2__Regrid * SOAP_FMAC2 soap_instantiate_resqml2__Regrid(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Regrid * soap_new_resqml2__Regrid(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Regrid(soap, n, NULL, NULL, NULL);
}

inline resqml2__Regrid * soap_new_req_resqml2__Regrid(
	struct soap *soap,
	ULONG64 InitialIndexOnParentGrid)
{
	resqml2__Regrid *_p = soap_new_resqml2__Regrid(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Regrid::InitialIndexOnParentGrid = InitialIndexOnParentGrid;
	}
	return _p;
}

inline resqml2__Regrid * soap_new_set_resqml2__Regrid(
	struct soap *soap,
	ULONG64 InitialIndexOnParentGrid,
	resqml2__Intervals *Intervals)
{
	resqml2__Regrid *_p = soap_new_resqml2__Regrid(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Regrid::InitialIndexOnParentGrid = InitialIndexOnParentGrid;
		_p->resqml2__Regrid::Intervals = Intervals;
	}
	return _p;
}

inline int soap_write_resqml2__Regrid(struct soap *soap, resqml2__Regrid const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Regrid", "resqml2:Regrid") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Regrid * SOAP_FMAC4 soap_get_resqml2__Regrid(struct soap*, resqml2__Regrid *, const char*, const char*);

inline int soap_read_resqml2__Regrid(struct soap *soap, resqml2__Regrid *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Regrid(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntervalStratigraphicUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntervalStratigraphicUnits_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IntervalStratigraphicUnits(struct soap*, const char*, int, const resqml2__IntervalStratigraphicUnits *, const char*);
SOAP_FMAC3 resqml2__IntervalStratigraphicUnits * SOAP_FMAC4 soap_in_resqml2__IntervalStratigraphicUnits(struct soap*, const char*, resqml2__IntervalStratigraphicUnits *, const char*);
SOAP_FMAC1 resqml2__IntervalStratigraphicUnits * SOAP_FMAC2 soap_instantiate_resqml2__IntervalStratigraphicUnits(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IntervalStratigraphicUnits * soap_new_resqml2__IntervalStratigraphicUnits(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IntervalStratigraphicUnits(soap, n, NULL, NULL, NULL);
}

inline resqml2__IntervalStratigraphicUnits * soap_new_req_resqml2__IntervalStratigraphicUnits(
	struct soap *soap,
	resqml2__AbstractIntegerArray *UnitIndices,
	eml__DataObjectReference *StratigraphicOrganization)
{
	resqml2__IntervalStratigraphicUnits *_p = soap_new_resqml2__IntervalStratigraphicUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntervalStratigraphicUnits::UnitIndices = UnitIndices;
		_p->resqml2__IntervalStratigraphicUnits::StratigraphicOrganization = StratigraphicOrganization;
	}
	return _p;
}

inline resqml2__IntervalStratigraphicUnits * soap_new_set_resqml2__IntervalStratigraphicUnits(
	struct soap *soap,
	resqml2__AbstractIntegerArray *UnitIndices,
	eml__DataObjectReference *StratigraphicOrganization)
{
	resqml2__IntervalStratigraphicUnits *_p = soap_new_resqml2__IntervalStratigraphicUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntervalStratigraphicUnits::UnitIndices = UnitIndices;
		_p->resqml2__IntervalStratigraphicUnits::StratigraphicOrganization = StratigraphicOrganization;
	}
	return _p;
}

inline int soap_write_resqml2__IntervalStratigraphicUnits(struct soap *soap, resqml2__IntervalStratigraphicUnits const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IntervalStratigraphicUnits", "resqml2:IntervalStratigraphicUnits") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IntervalStratigraphicUnits * SOAP_FMAC4 soap_get_resqml2__IntervalStratigraphicUnits(struct soap*, resqml2__IntervalStratigraphicUnits *, const char*, const char*);

inline int soap_read_resqml2__IntervalStratigraphicUnits(struct soap *soap, resqml2__IntervalStratigraphicUnits *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IntervalStratigraphicUnits(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GpGridUnstructuredGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GpGridUnstructuredGridPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GpGridUnstructuredGridPatch(struct soap*, const char*, int, const resqml2__GpGridUnstructuredGridPatch *, const char*);
SOAP_FMAC3 resqml2__GpGridUnstructuredGridPatch * SOAP_FMAC4 soap_in_resqml2__GpGridUnstructuredGridPatch(struct soap*, const char*, resqml2__GpGridUnstructuredGridPatch *, const char*);
SOAP_FMAC1 resqml2__GpGridUnstructuredGridPatch * SOAP_FMAC2 soap_instantiate_resqml2__GpGridUnstructuredGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__GpGridUnstructuredGridPatch * soap_new_resqml2__GpGridUnstructuredGridPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__GpGridUnstructuredGridPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__GpGridUnstructuredGridPatch * soap_new_req_resqml2__GpGridUnstructuredGridPatch(
	struct soap *soap,
	ULONG64 UnstructuredCellCount,
	ULONG64 PatchIndex1)
{
	resqml2__GpGridUnstructuredGridPatch *_p = soap_new_resqml2__GpGridUnstructuredGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GpGridUnstructuredGridPatch::UnstructuredCellCount = UnstructuredCellCount;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__GpGridUnstructuredGridPatch * soap_new_set_resqml2__GpGridUnstructuredGridPatch(
	struct soap *soap,
	ULONG64 UnstructuredCellCount,
	resqml2__UnstructuredGridGeometry *Geometry,
	ULONG64 PatchIndex1)
{
	resqml2__GpGridUnstructuredGridPatch *_p = soap_new_resqml2__GpGridUnstructuredGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GpGridUnstructuredGridPatch::UnstructuredCellCount = UnstructuredCellCount;
		_p->resqml2__GpGridUnstructuredGridPatch::Geometry = Geometry;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__GpGridUnstructuredGridPatch(struct soap *soap, resqml2__GpGridUnstructuredGridPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:GpGridUnstructuredGridPatch", "resqml2:GpGridUnstructuredGridPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__GpGridUnstructuredGridPatch * SOAP_FMAC4 soap_get_resqml2__GpGridUnstructuredGridPatch(struct soap*, resqml2__GpGridUnstructuredGridPatch *, const char*, const char*);

inline int soap_read_resqml2__GpGridUnstructuredGridPatch(struct soap *soap, resqml2__GpGridUnstructuredGridPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__GpGridUnstructuredGridPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TruncationCellPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TruncationCellPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TruncationCellPatch(struct soap*, const char*, int, const resqml2__TruncationCellPatch *, const char*);
SOAP_FMAC3 resqml2__TruncationCellPatch * SOAP_FMAC4 soap_in_resqml2__TruncationCellPatch(struct soap*, const char*, resqml2__TruncationCellPatch *, const char*);
SOAP_FMAC1 resqml2__TruncationCellPatch * SOAP_FMAC2 soap_instantiate_resqml2__TruncationCellPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__TruncationCellPatch * soap_new_resqml2__TruncationCellPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__TruncationCellPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__TruncationCellPatch * soap_new_req_resqml2__TruncationCellPatch(
	struct soap *soap,
	ULONG64 TruncationNodeCount,
	ULONG64 TruncationFaceCount,
	ULONG64 TruncationCellCount,
	resqml2__ResqmlJaggedArray *NodesPerTruncationFace,
	resqml2__AbstractIntegerArray *ParentCellIndices,
	resqml2__ResqmlJaggedArray *LocalFacesPerCell,
	resqml2__ResqmlJaggedArray *TruncationFacesPerCell,
	resqml2__AbstractBooleanArray *TruncationCellFaceIsRightHanded,
	ULONG64 PatchIndex1)
{
	resqml2__TruncationCellPatch *_p = soap_new_resqml2__TruncationCellPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TruncationCellPatch::TruncationNodeCount = TruncationNodeCount;
		_p->resqml2__TruncationCellPatch::TruncationFaceCount = TruncationFaceCount;
		_p->resqml2__TruncationCellPatch::TruncationCellCount = TruncationCellCount;
		_p->resqml2__TruncationCellPatch::NodesPerTruncationFace = NodesPerTruncationFace;
		_p->resqml2__TruncationCellPatch::ParentCellIndices = ParentCellIndices;
		_p->resqml2__TruncationCellPatch::LocalFacesPerCell = LocalFacesPerCell;
		_p->resqml2__TruncationCellPatch::TruncationFacesPerCell = TruncationFacesPerCell;
		_p->resqml2__TruncationCellPatch::TruncationCellFaceIsRightHanded = TruncationCellFaceIsRightHanded;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__TruncationCellPatch * soap_new_set_resqml2__TruncationCellPatch(
	struct soap *soap,
	ULONG64 TruncationNodeCount,
	ULONG64 TruncationFaceCount,
	ULONG64 TruncationCellCount,
	resqml2__ResqmlJaggedArray *NodesPerTruncationFace,
	resqml2__AbstractIntegerArray *ParentCellIndices,
	resqml2__ResqmlJaggedArray *LocalFacesPerCell,
	resqml2__ResqmlJaggedArray *TruncationFacesPerCell,
	resqml2__AbstractBooleanArray *TruncationCellFaceIsRightHanded,
	ULONG64 PatchIndex1)
{
	resqml2__TruncationCellPatch *_p = soap_new_resqml2__TruncationCellPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TruncationCellPatch::TruncationNodeCount = TruncationNodeCount;
		_p->resqml2__TruncationCellPatch::TruncationFaceCount = TruncationFaceCount;
		_p->resqml2__TruncationCellPatch::TruncationCellCount = TruncationCellCount;
		_p->resqml2__TruncationCellPatch::NodesPerTruncationFace = NodesPerTruncationFace;
		_p->resqml2__TruncationCellPatch::ParentCellIndices = ParentCellIndices;
		_p->resqml2__TruncationCellPatch::LocalFacesPerCell = LocalFacesPerCell;
		_p->resqml2__TruncationCellPatch::TruncationFacesPerCell = TruncationFacesPerCell;
		_p->resqml2__TruncationCellPatch::TruncationCellFaceIsRightHanded = TruncationCellFaceIsRightHanded;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__TruncationCellPatch(struct soap *soap, resqml2__TruncationCellPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:TruncationCellPatch", "resqml2:TruncationCellPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__TruncationCellPatch * SOAP_FMAC4 soap_get_resqml2__TruncationCellPatch(struct soap*, resqml2__TruncationCellPatch *, const char*, const char*);

inline int soap_read_resqml2__TruncationCellPatch(struct soap *soap, resqml2__TruncationCellPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__TruncationCellPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjSplitColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjSplitColumnEdges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IjSplitColumnEdges(struct soap*, const char*, int, const resqml2__IjSplitColumnEdges *, const char*);
SOAP_FMAC3 resqml2__IjSplitColumnEdges * SOAP_FMAC4 soap_in_resqml2__IjSplitColumnEdges(struct soap*, const char*, resqml2__IjSplitColumnEdges *, const char*);
SOAP_FMAC1 resqml2__IjSplitColumnEdges * SOAP_FMAC2 soap_instantiate_resqml2__IjSplitColumnEdges(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IjSplitColumnEdges * soap_new_resqml2__IjSplitColumnEdges(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IjSplitColumnEdges(soap, n, NULL, NULL, NULL);
}

inline resqml2__IjSplitColumnEdges * soap_new_req_resqml2__IjSplitColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__ResqmlJaggedArray *PillarsPerSplitColumnEdge)
{
	resqml2__IjSplitColumnEdges *_p = soap_new_resqml2__IjSplitColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IjSplitColumnEdges::Count = Count;
		_p->resqml2__IjSplitColumnEdges::PillarsPerSplitColumnEdge = PillarsPerSplitColumnEdge;
	}
	return _p;
}

inline resqml2__IjSplitColumnEdges * soap_new_set_resqml2__IjSplitColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__ResqmlJaggedArray *PillarsPerSplitColumnEdge)
{
	resqml2__IjSplitColumnEdges *_p = soap_new_resqml2__IjSplitColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IjSplitColumnEdges::Count = Count;
		_p->resqml2__IjSplitColumnEdges::PillarsPerSplitColumnEdge = PillarsPerSplitColumnEdge;
	}
	return _p;
}

inline int soap_write_resqml2__IjSplitColumnEdges(struct soap *soap, resqml2__IjSplitColumnEdges const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IjSplitColumnEdges", "resqml2:IjSplitColumnEdges") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IjSplitColumnEdges * SOAP_FMAC4 soap_get_resqml2__IjSplitColumnEdges(struct soap*, resqml2__IjSplitColumnEdges *, const char*, const char*);

inline int soap_read_resqml2__IjSplitColumnEdges(struct soap *soap, resqml2__IjSplitColumnEdges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IjSplitColumnEdges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AdditionalGridPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AdditionalGridPoints_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AdditionalGridPoints(struct soap*, const char*, int, const resqml2__AdditionalGridPoints *, const char*);
SOAP_FMAC3 resqml2__AdditionalGridPoints * SOAP_FMAC4 soap_in_resqml2__AdditionalGridPoints(struct soap*, const char*, resqml2__AdditionalGridPoints *, const char*);
SOAP_FMAC1 resqml2__AdditionalGridPoints * SOAP_FMAC2 soap_instantiate_resqml2__AdditionalGridPoints(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AdditionalGridPoints * soap_new_resqml2__AdditionalGridPoints(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AdditionalGridPoints(soap, n, NULL, NULL, NULL);
}

inline resqml2__AdditionalGridPoints * soap_new_req_resqml2__AdditionalGridPoints(
	struct soap *soap,
	enum resqml2__GridGeometryAttachment Attachment,
	resqml2__AbstractPoint3dArray *Points)
{
	resqml2__AdditionalGridPoints *_p = soap_new_resqml2__AdditionalGridPoints(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AdditionalGridPoints::Attachment = Attachment;
		_p->resqml2__AdditionalGridPoints::Points = Points;
	}
	return _p;
}

inline resqml2__AdditionalGridPoints * soap_new_set_resqml2__AdditionalGridPoints(
	struct soap *soap,
	ULONG64 *RepresentationPatchIndex,
	enum resqml2__GridGeometryAttachment Attachment,
	resqml2__AbstractPoint3dArray *Points)
{
	resqml2__AdditionalGridPoints *_p = soap_new_resqml2__AdditionalGridPoints(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AdditionalGridPoints::RepresentationPatchIndex = RepresentationPatchIndex;
		_p->resqml2__AdditionalGridPoints::Attachment = Attachment;
		_p->resqml2__AdditionalGridPoints::Points = Points;
	}
	return _p;
}

inline int soap_write_resqml2__AdditionalGridPoints(struct soap *soap, resqml2__AdditionalGridPoints const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AdditionalGridPoints", "resqml2:AdditionalGridPoints") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AdditionalGridPoints * SOAP_FMAC4 soap_get_resqml2__AdditionalGridPoints(struct soap*, resqml2__AdditionalGridPoints *, const char*, const char*);

inline int soap_read_resqml2__AdditionalGridPoints(struct soap *soap, resqml2__AdditionalGridPoints *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AdditionalGridPoints(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredColumnEdges_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__UnstructuredColumnEdges(struct soap*, const char*, int, const resqml2__UnstructuredColumnEdges *, const char*);
SOAP_FMAC3 resqml2__UnstructuredColumnEdges * SOAP_FMAC4 soap_in_resqml2__UnstructuredColumnEdges(struct soap*, const char*, resqml2__UnstructuredColumnEdges *, const char*);
SOAP_FMAC1 resqml2__UnstructuredColumnEdges * SOAP_FMAC2 soap_instantiate_resqml2__UnstructuredColumnEdges(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__UnstructuredColumnEdges * soap_new_resqml2__UnstructuredColumnEdges(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__UnstructuredColumnEdges(soap, n, NULL, NULL, NULL);
}

inline resqml2__UnstructuredColumnEdges * soap_new_req_resqml2__UnstructuredColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__ResqmlJaggedArray *PillarsPerColumnEdge)
{
	resqml2__UnstructuredColumnEdges *_p = soap_new_resqml2__UnstructuredColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UnstructuredColumnEdges::Count = Count;
		_p->resqml2__UnstructuredColumnEdges::PillarsPerColumnEdge = PillarsPerColumnEdge;
	}
	return _p;
}

inline resqml2__UnstructuredColumnEdges * soap_new_set_resqml2__UnstructuredColumnEdges(
	struct soap *soap,
	ULONG64 Count,
	resqml2__ResqmlJaggedArray *PillarsPerColumnEdge)
{
	resqml2__UnstructuredColumnEdges *_p = soap_new_resqml2__UnstructuredColumnEdges(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UnstructuredColumnEdges::Count = Count;
		_p->resqml2__UnstructuredColumnEdges::PillarsPerColumnEdge = PillarsPerColumnEdge;
	}
	return _p;
}

inline int soap_write_resqml2__UnstructuredColumnEdges(struct soap *soap, resqml2__UnstructuredColumnEdges const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:UnstructuredColumnEdges", "resqml2:UnstructuredColumnEdges") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__UnstructuredColumnEdges * SOAP_FMAC4 soap_get_resqml2__UnstructuredColumnEdges(struct soap*, resqml2__UnstructuredColumnEdges *, const char*, const char*);

inline int soap_read_resqml2__UnstructuredColumnEdges(struct soap *soap, resqml2__UnstructuredColumnEdges *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__UnstructuredColumnEdges(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnLayerSubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnLayerSubnodeTopology_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ColumnLayerSubnodeTopology(struct soap*, const char*, int, const resqml2__ColumnLayerSubnodeTopology *, const char*);
SOAP_FMAC3 resqml2__ColumnLayerSubnodeTopology * SOAP_FMAC4 soap_in_resqml2__ColumnLayerSubnodeTopology(struct soap*, const char*, resqml2__ColumnLayerSubnodeTopology *, const char*);
SOAP_FMAC1 resqml2__ColumnLayerSubnodeTopology * SOAP_FMAC2 soap_instantiate_resqml2__ColumnLayerSubnodeTopology(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ColumnLayerSubnodeTopology * soap_new_resqml2__ColumnLayerSubnodeTopology(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ColumnLayerSubnodeTopology(soap, n, NULL, NULL, NULL);
}

inline resqml2__ColumnLayerSubnodeTopology * soap_new_req_resqml2__ColumnLayerSubnodeTopology(
	struct soap *soap)
{
	resqml2__ColumnLayerSubnodeTopology *_p = soap_new_resqml2__ColumnLayerSubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__ColumnLayerSubnodeTopology * soap_new_set_resqml2__ColumnLayerSubnodeTopology(
	struct soap *soap,
	const std::vector<resqml2__ColumnSubnodePatch *> & ColumnSubnodes,
	const std::vector<resqml2__VariableSubnodePatch *> & VariableSubnodes1,
	const std::vector<resqml2__UniformSubnodePatch *> & UniformSubnodes1)
{
	resqml2__ColumnLayerSubnodeTopology *_p = soap_new_resqml2__ColumnLayerSubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ColumnLayerSubnodeTopology::ColumnSubnodes = ColumnSubnodes;
		_p->resqml2__SubnodeTopology::VariableSubnodes = VariableSubnodes1;
		_p->resqml2__SubnodeTopology::UniformSubnodes = UniformSubnodes1;
	}
	return _p;
}

inline int soap_write_resqml2__ColumnLayerSubnodeTopology(struct soap *soap, resqml2__ColumnLayerSubnodeTopology const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ColumnLayerSubnodeTopology", "resqml2:ColumnLayerSubnodeTopology") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ColumnLayerSubnodeTopology * SOAP_FMAC4 soap_get_resqml2__ColumnLayerSubnodeTopology(struct soap*, resqml2__ColumnLayerSubnodeTopology *, const char*, const char*);

inline int soap_read_resqml2__ColumnLayerSubnodeTopology(struct soap *soap, resqml2__ColumnLayerSubnodeTopology *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ColumnLayerSubnodeTopology(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SubnodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SubnodePatch(struct soap*, const char*, int, const resqml2__SubnodePatch *, const char*);
SOAP_FMAC3 resqml2__SubnodePatch * SOAP_FMAC4 soap_in_resqml2__SubnodePatch(struct soap*, const char*, resqml2__SubnodePatch *, const char*);
SOAP_FMAC1 resqml2__SubnodePatch * SOAP_FMAC2 soap_instantiate_resqml2__SubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__SubnodePatch * soap_new_resqml2__SubnodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__SubnodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__SubnodePatch * soap_new_req_resqml2__SubnodePatch(
	struct soap *soap,
	enum resqml2__SubnodeNodeObject SubnodeNodeObject,
	resqml2__AbstractValueArray *NodeWeightsPerSubnode,
	ULONG64 PatchIndex1)
{
	resqml2__SubnodePatch *_p = soap_new_resqml2__SubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject;
		_p->resqml2__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__SubnodePatch * soap_new_set_resqml2__SubnodePatch(
	struct soap *soap,
	enum resqml2__SubnodeNodeObject SubnodeNodeObject,
	resqml2__AbstractValueArray *NodeWeightsPerSubnode,
	ULONG64 PatchIndex1)
{
	resqml2__SubnodePatch *_p = soap_new_resqml2__SubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject;
		_p->resqml2__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__SubnodePatch(struct soap *soap, resqml2__SubnodePatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:SubnodePatch", "resqml2:SubnodePatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__SubnodePatch * SOAP_FMAC4 soap_get_resqml2__SubnodePatch(struct soap*, resqml2__SubnodePatch *, const char*, const char*);

inline int soap_read_resqml2__SubnodePatch(struct soap *soap, resqml2__SubnodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__SubnodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__KGaps_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__KGaps_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__KGaps(struct soap*, const char*, int, const resqml2__KGaps *, const char*);
SOAP_FMAC3 resqml2__KGaps * SOAP_FMAC4 soap_in_resqml2__KGaps(struct soap*, const char*, resqml2__KGaps *, const char*);
SOAP_FMAC1 resqml2__KGaps * SOAP_FMAC2 soap_instantiate_resqml2__KGaps(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__KGaps * soap_new_resqml2__KGaps(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__KGaps(soap, n, NULL, NULL, NULL);
}

inline resqml2__KGaps * soap_new_req_resqml2__KGaps(
	struct soap *soap)
{
	resqml2__KGaps *_p = soap_new_resqml2__KGaps(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__KGaps * soap_new_set_resqml2__KGaps(
	struct soap *soap,
	__resqml2__KGaps_sequence *__KGaps_sequence)
{
	resqml2__KGaps *_p = soap_new_resqml2__KGaps(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__KGaps::__KGaps_sequence = __KGaps_sequence;
	}
	return _p;
}

inline int soap_write_resqml2__KGaps(struct soap *soap, resqml2__KGaps const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:KGaps", "resqml2:KGaps") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__KGaps * SOAP_FMAC4 soap_get_resqml2__KGaps(struct soap*, resqml2__KGaps *, const char*, const char*);

inline int soap_read_resqml2__KGaps(struct soap *soap, resqml2__KGaps *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__KGaps(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UniformSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UniformSubnodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__UniformSubnodePatch(struct soap*, const char*, int, const resqml2__UniformSubnodePatch *, const char*);
SOAP_FMAC3 resqml2__UniformSubnodePatch * SOAP_FMAC4 soap_in_resqml2__UniformSubnodePatch(struct soap*, const char*, resqml2__UniformSubnodePatch *, const char*);
SOAP_FMAC1 resqml2__UniformSubnodePatch * SOAP_FMAC2 soap_instantiate_resqml2__UniformSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__UniformSubnodePatch * soap_new_resqml2__UniformSubnodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__UniformSubnodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__UniformSubnodePatch * soap_new_req_resqml2__UniformSubnodePatch(
	struct soap *soap,
	ULONG64 SubnodeCountPerObject,
	enum resqml2__SubnodeNodeObject SubnodeNodeObject1,
	resqml2__AbstractValueArray *NodeWeightsPerSubnode1,
	ULONG64 PatchIndex2)
{
	resqml2__UniformSubnodePatch *_p = soap_new_resqml2__UniformSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UniformSubnodePatch::SubnodeCountPerObject = SubnodeCountPerObject;
		_p->resqml2__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject1;
		_p->resqml2__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline resqml2__UniformSubnodePatch * soap_new_set_resqml2__UniformSubnodePatch(
	struct soap *soap,
	ULONG64 SubnodeCountPerObject,
	enum resqml2__SubnodeNodeObject SubnodeNodeObject1,
	resqml2__AbstractValueArray *NodeWeightsPerSubnode1,
	ULONG64 PatchIndex2)
{
	resqml2__UniformSubnodePatch *_p = soap_new_resqml2__UniformSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UniformSubnodePatch::SubnodeCountPerObject = SubnodeCountPerObject;
		_p->resqml2__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject1;
		_p->resqml2__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline int soap_write_resqml2__UniformSubnodePatch(struct soap *soap, resqml2__UniformSubnodePatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:UniformSubnodePatch", "resqml2:UniformSubnodePatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__UniformSubnodePatch * SOAP_FMAC4 soap_get_resqml2__UniformSubnodePatch(struct soap*, resqml2__UniformSubnodePatch *, const char*, const char*);

inline int soap_read_resqml2__UniformSubnodePatch(struct soap *soap, resqml2__UniformSubnodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__UniformSubnodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnLayerSplitCoordinateLines_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnLayerSplitCoordinateLines_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ColumnLayerSplitCoordinateLines(struct soap*, const char*, int, const resqml2__ColumnLayerSplitCoordinateLines *, const char*);
SOAP_FMAC3 resqml2__ColumnLayerSplitCoordinateLines * SOAP_FMAC4 soap_in_resqml2__ColumnLayerSplitCoordinateLines(struct soap*, const char*, resqml2__ColumnLayerSplitCoordinateLines *, const char*);
SOAP_FMAC1 resqml2__ColumnLayerSplitCoordinateLines * SOAP_FMAC2 soap_instantiate_resqml2__ColumnLayerSplitCoordinateLines(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ColumnLayerSplitCoordinateLines * soap_new_resqml2__ColumnLayerSplitCoordinateLines(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ColumnLayerSplitCoordinateLines(soap, n, NULL, NULL, NULL);
}

inline resqml2__ColumnLayerSplitCoordinateLines * soap_new_req_resqml2__ColumnLayerSplitCoordinateLines(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *PillarIndices,
	resqml2__ResqmlJaggedArray *ColumnsPerSplitCoordinateLine)
{
	resqml2__ColumnLayerSplitCoordinateLines *_p = soap_new_resqml2__ColumnLayerSplitCoordinateLines(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ColumnLayerSplitCoordinateLines::Count = Count;
		_p->resqml2__ColumnLayerSplitCoordinateLines::PillarIndices = PillarIndices;
		_p->resqml2__ColumnLayerSplitCoordinateLines::ColumnsPerSplitCoordinateLine = ColumnsPerSplitCoordinateLine;
	}
	return _p;
}

inline resqml2__ColumnLayerSplitCoordinateLines * soap_new_set_resqml2__ColumnLayerSplitCoordinateLines(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *PillarIndices,
	resqml2__ResqmlJaggedArray *ColumnsPerSplitCoordinateLine,
	resqml2__ColumnLayerSplitColumnEdges *SplitColumnEdges)
{
	resqml2__ColumnLayerSplitCoordinateLines *_p = soap_new_resqml2__ColumnLayerSplitCoordinateLines(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ColumnLayerSplitCoordinateLines::Count = Count;
		_p->resqml2__ColumnLayerSplitCoordinateLines::PillarIndices = PillarIndices;
		_p->resqml2__ColumnLayerSplitCoordinateLines::ColumnsPerSplitCoordinateLine = ColumnsPerSplitCoordinateLine;
		_p->resqml2__ColumnLayerSplitCoordinateLines::SplitColumnEdges = SplitColumnEdges;
	}
	return _p;
}

inline int soap_write_resqml2__ColumnLayerSplitCoordinateLines(struct soap *soap, resqml2__ColumnLayerSplitCoordinateLines const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ColumnLayerSplitCoordinateLines", "resqml2:ColumnLayerSplitCoordinateLines") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ColumnLayerSplitCoordinateLines * SOAP_FMAC4 soap_get_resqml2__ColumnLayerSplitCoordinateLines(struct soap*, resqml2__ColumnLayerSplitCoordinateLines *, const char*, const char*);

inline int soap_read_resqml2__ColumnLayerSplitCoordinateLines(struct soap *soap, resqml2__ColumnLayerSplitCoordinateLines *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ColumnLayerSplitCoordinateLines(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GpGridColumnLayerGrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GpGridColumnLayerGrid_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GpGridColumnLayerGrid(struct soap*, const char*, int, const resqml2__GpGridColumnLayerGrid *, const char*);
SOAP_FMAC3 resqml2__GpGridColumnLayerGrid * SOAP_FMAC4 soap_in_resqml2__GpGridColumnLayerGrid(struct soap*, const char*, resqml2__GpGridColumnLayerGrid *, const char*);
SOAP_FMAC1 resqml2__GpGridColumnLayerGrid * SOAP_FMAC2 soap_instantiate_resqml2__GpGridColumnLayerGrid(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__GpGridColumnLayerGrid * soap_new_resqml2__GpGridColumnLayerGrid(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__GpGridColumnLayerGrid(soap, n, NULL, NULL, NULL);
}

inline resqml2__GpGridColumnLayerGrid * soap_new_req_resqml2__GpGridColumnLayerGrid(
	struct soap *soap,
	ULONG64 Nk)
{
	resqml2__GpGridColumnLayerGrid *_p = soap_new_resqml2__GpGridColumnLayerGrid(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GpGridColumnLayerGrid::Nk = Nk;
	}
	return _p;
}

inline resqml2__GpGridColumnLayerGrid * soap_new_set_resqml2__GpGridColumnLayerGrid(
	struct soap *soap,
	ULONG64 Nk,
	resqml2__KGaps *KGaps,
	const std::vector<resqml2__GpGridIjkGridPatch *> & IjkGridPatch,
	const std::vector<resqml2__GpGridUnstructuredColumnLayerGridPatch *> & UnstructuredColumnLayerGridPatch)
{
	resqml2__GpGridColumnLayerGrid *_p = soap_new_resqml2__GpGridColumnLayerGrid(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GpGridColumnLayerGrid::Nk = Nk;
		_p->resqml2__GpGridColumnLayerGrid::KGaps = KGaps;
		_p->resqml2__GpGridColumnLayerGrid::IjkGridPatch = IjkGridPatch;
		_p->resqml2__GpGridColumnLayerGrid::UnstructuredColumnLayerGridPatch = UnstructuredColumnLayerGridPatch;
	}
	return _p;
}

inline int soap_write_resqml2__GpGridColumnLayerGrid(struct soap *soap, resqml2__GpGridColumnLayerGrid const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:GpGridColumnLayerGrid", "resqml2:GpGridColumnLayerGrid") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__GpGridColumnLayerGrid * SOAP_FMAC4 soap_get_resqml2__GpGridColumnLayerGrid(struct soap*, resqml2__GpGridColumnLayerGrid *, const char*, const char*);

inline int soap_read_resqml2__GpGridColumnLayerGrid(struct soap *soap, resqml2__GpGridColumnLayerGrid *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__GpGridColumnLayerGrid(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GpGridUnstructuredColumnLayerGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__GpGridUnstructuredColumnLayerGridPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, int, const resqml2__GpGridUnstructuredColumnLayerGridPatch *, const char*);
SOAP_FMAC3 resqml2__GpGridUnstructuredColumnLayerGridPatch * SOAP_FMAC4 soap_in_resqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, resqml2__GpGridUnstructuredColumnLayerGridPatch *, const char*);
SOAP_FMAC1 resqml2__GpGridUnstructuredColumnLayerGridPatch * SOAP_FMAC2 soap_instantiate_resqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__GpGridUnstructuredColumnLayerGridPatch * soap_new_resqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__GpGridUnstructuredColumnLayerGridPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__GpGridUnstructuredColumnLayerGridPatch * soap_new_req_resqml2__GpGridUnstructuredColumnLayerGridPatch(
	struct soap *soap,
	ULONG64 UnstructuredColumnCount,
	ULONG64 PatchIndex1)
{
	resqml2__GpGridUnstructuredColumnLayerGridPatch *_p = soap_new_resqml2__GpGridUnstructuredColumnLayerGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GpGridUnstructuredColumnLayerGridPatch::UnstructuredColumnCount = UnstructuredColumnCount;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__GpGridUnstructuredColumnLayerGridPatch * soap_new_set_resqml2__GpGridUnstructuredColumnLayerGridPatch(
	struct soap *soap,
	ULONG64 UnstructuredColumnCount,
	resqml2__UnstructuredColumnLayerGridGeometry *Geometry,
	resqml2__TruncationCellPatch *TruncationCells,
	ULONG64 PatchIndex1)
{
	resqml2__GpGridUnstructuredColumnLayerGridPatch *_p = soap_new_resqml2__GpGridUnstructuredColumnLayerGridPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__GpGridUnstructuredColumnLayerGridPatch::UnstructuredColumnCount = UnstructuredColumnCount;
		_p->resqml2__GpGridUnstructuredColumnLayerGridPatch::Geometry = Geometry;
		_p->resqml2__GpGridUnstructuredColumnLayerGridPatch::TruncationCells = TruncationCells;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, resqml2__GpGridUnstructuredColumnLayerGridPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:GpGridUnstructuredColumnLayerGridPatch", "resqml2:GpGridUnstructuredColumnLayerGridPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__GpGridUnstructuredColumnLayerGridPatch * SOAP_FMAC4 soap_get_resqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, resqml2__GpGridUnstructuredColumnLayerGridPatch *, const char*, const char*);

inline int soap_read_resqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, resqml2__GpGridUnstructuredColumnLayerGridPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__GpGridUnstructuredColumnLayerGridPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredSubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__UnstructuredSubnodeTopology_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__UnstructuredSubnodeTopology(struct soap*, const char*, int, const resqml2__UnstructuredSubnodeTopology *, const char*);
SOAP_FMAC3 resqml2__UnstructuredSubnodeTopology * SOAP_FMAC4 soap_in_resqml2__UnstructuredSubnodeTopology(struct soap*, const char*, resqml2__UnstructuredSubnodeTopology *, const char*);
SOAP_FMAC1 resqml2__UnstructuredSubnodeTopology * SOAP_FMAC2 soap_instantiate_resqml2__UnstructuredSubnodeTopology(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__UnstructuredSubnodeTopology * soap_new_resqml2__UnstructuredSubnodeTopology(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__UnstructuredSubnodeTopology(soap, n, NULL, NULL, NULL);
}

inline resqml2__UnstructuredSubnodeTopology * soap_new_req_resqml2__UnstructuredSubnodeTopology(
	struct soap *soap)
{
	resqml2__UnstructuredSubnodeTopology *_p = soap_new_resqml2__UnstructuredSubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__UnstructuredSubnodeTopology * soap_new_set_resqml2__UnstructuredSubnodeTopology(
	struct soap *soap,
	resqml2__Edges *Edges,
	resqml2__NodesPerCell *NodesPerCell,
	const std::vector<resqml2__VariableSubnodePatch *> & VariableSubnodes1,
	const std::vector<resqml2__UniformSubnodePatch *> & UniformSubnodes1)
{
	resqml2__UnstructuredSubnodeTopology *_p = soap_new_resqml2__UnstructuredSubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__UnstructuredSubnodeTopology::Edges = Edges;
		_p->resqml2__UnstructuredSubnodeTopology::NodesPerCell = NodesPerCell;
		_p->resqml2__SubnodeTopology::VariableSubnodes = VariableSubnodes1;
		_p->resqml2__SubnodeTopology::UniformSubnodes = UniformSubnodes1;
	}
	return _p;
}

inline int soap_write_resqml2__UnstructuredSubnodeTopology(struct soap *soap, resqml2__UnstructuredSubnodeTopology const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:UnstructuredSubnodeTopology", "resqml2:UnstructuredSubnodeTopology") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__UnstructuredSubnodeTopology * SOAP_FMAC4 soap_get_resqml2__UnstructuredSubnodeTopology(struct soap*, resqml2__UnstructuredSubnodeTopology *, const char*, const char*);

inline int soap_read_resqml2__UnstructuredSubnodeTopology(struct soap *soap, resqml2__UnstructuredSubnodeTopology *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__UnstructuredSubnodeTopology(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnLayerParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnLayerParentWindow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ColumnLayerParentWindow(struct soap*, const char*, int, const resqml2__ColumnLayerParentWindow *, const char*);
SOAP_FMAC3 resqml2__ColumnLayerParentWindow * SOAP_FMAC4 soap_in_resqml2__ColumnLayerParentWindow(struct soap*, const char*, resqml2__ColumnLayerParentWindow *, const char*);
SOAP_FMAC1 resqml2__ColumnLayerParentWindow * SOAP_FMAC2 soap_instantiate_resqml2__ColumnLayerParentWindow(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ColumnLayerParentWindow * soap_new_resqml2__ColumnLayerParentWindow(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ColumnLayerParentWindow(soap, n, NULL, NULL, NULL);
}

inline resqml2__ColumnLayerParentWindow * soap_new_req_resqml2__ColumnLayerParentWindow(
	struct soap *soap,
	resqml2__AbstractIntegerArray *ColumnIndices,
	resqml2__Regrid *KRegrid,
	eml__DataObjectReference *ParentGrid)
{
	resqml2__ColumnLayerParentWindow *_p = soap_new_resqml2__ColumnLayerParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ColumnLayerParentWindow::ColumnIndices = ColumnIndices;
		_p->resqml2__ColumnLayerParentWindow::KRegrid = KRegrid;
		_p->resqml2__ColumnLayerParentWindow::ParentGrid = ParentGrid;
	}
	return _p;
}

inline resqml2__ColumnLayerParentWindow * soap_new_set_resqml2__ColumnLayerParentWindow(
	struct soap *soap,
	resqml2__AbstractIntegerArray *ColumnIndices,
	resqml2__AbstractIntegerArray *OmitParentCells,
	resqml2__Regrid *KRegrid,
	eml__DataObjectReference *ParentGrid,
	resqml2__CellOverlap *CellOverlap1)
{
	resqml2__ColumnLayerParentWindow *_p = soap_new_resqml2__ColumnLayerParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ColumnLayerParentWindow::ColumnIndices = ColumnIndices;
		_p->resqml2__ColumnLayerParentWindow::OmitParentCells = OmitParentCells;
		_p->resqml2__ColumnLayerParentWindow::KRegrid = KRegrid;
		_p->resqml2__ColumnLayerParentWindow::ParentGrid = ParentGrid;
		_p->resqml2__AbstractParentWindow::CellOverlap = CellOverlap1;
	}
	return _p;
}

inline int soap_write_resqml2__ColumnLayerParentWindow(struct soap *soap, resqml2__ColumnLayerParentWindow const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ColumnLayerParentWindow", "resqml2:ColumnLayerParentWindow") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ColumnLayerParentWindow * SOAP_FMAC4 soap_get_resqml2__ColumnLayerParentWindow(struct soap*, resqml2__ColumnLayerParentWindow *, const char*, const char*);

inline int soap_read_resqml2__ColumnLayerParentWindow(struct soap *soap, resqml2__ColumnLayerParentWindow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ColumnLayerParentWindow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREIjkGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREIjkGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREIjkGridRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREIjkGridRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREIjkGridRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREIjkGridRepresentation(struct soap*, const char*, resqml2__obj_USCOREIjkGridRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREIjkGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREIjkGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREIjkGridRepresentation * soap_new_resqml2__obj_USCOREIjkGridRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREIjkGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREIjkGridRepresentation * soap_new_req_resqml2__obj_USCOREIjkGridRepresentation(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	ULONG64 Nk1,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREIjkGridRepresentation *_p = soap_new_resqml2__obj_USCOREIjkGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREIjkGridRepresentation::Ni = Ni;
		_p->resqml2__obj_USCOREIjkGridRepresentation::Nj = Nj;
		_p->resqml2__AbstractColumnLayerGridRepresentation::Nk = Nk1;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREIjkGridRepresentation * soap_new_set_resqml2__obj_USCOREIjkGridRepresentation(
	struct soap *soap,
	ULONG64 Ni,
	ULONG64 Nj,
	bool *RadialGridIsComplete,
	resqml2__KGaps *KGaps,
	resqml2__IjkGridGeometry *Geometry,
	ULONG64 Nk1,
	resqml2__IntervalStratigraphicUnits *IntervalStratigraphicUnits1,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits2,
	resqml2__AbstractParentWindow *ParentWindow2,
	resqml2__CellStratigraphicUnits *CellStratigraphicUnits2,
	eml__DataObjectReference *RepresentedInterpretation3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREIjkGridRepresentation *_p = soap_new_resqml2__obj_USCOREIjkGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREIjkGridRepresentation::Ni = Ni;
		_p->resqml2__obj_USCOREIjkGridRepresentation::Nj = Nj;
		_p->resqml2__obj_USCOREIjkGridRepresentation::RadialGridIsComplete = RadialGridIsComplete;
		_p->resqml2__obj_USCOREIjkGridRepresentation::KGaps = KGaps;
		_p->resqml2__obj_USCOREIjkGridRepresentation::Geometry = Geometry;
		_p->resqml2__AbstractColumnLayerGridRepresentation::Nk = Nk1;
		_p->resqml2__AbstractColumnLayerGridRepresentation::IntervalStratigraphicUnits = IntervalStratigraphicUnits1;
		_p->resqml2__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits2;
		_p->resqml2__AbstractGridRepresentation::ParentWindow = ParentWindow2;
		_p->resqml2__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits2;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREIjkGridRepresentation(struct soap *soap, resqml2__obj_USCOREIjkGridRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_IjkGridRepresentation", "resqml2:obj_IjkGridRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREIjkGridRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREIjkGridRepresentation(struct soap*, resqml2__obj_USCOREIjkGridRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREIjkGridRepresentation(struct soap *soap, resqml2__obj_USCOREIjkGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREIjkGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjGaps_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjGaps_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IjGaps(struct soap*, const char*, int, const resqml2__IjGaps *, const char*);
SOAP_FMAC3 resqml2__IjGaps * SOAP_FMAC4 soap_in_resqml2__IjGaps(struct soap*, const char*, resqml2__IjGaps *, const char*);
SOAP_FMAC1 resqml2__IjGaps * SOAP_FMAC2 soap_instantiate_resqml2__IjGaps(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IjGaps * soap_new_resqml2__IjGaps(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IjGaps(soap, n, NULL, NULL, NULL);
}

inline resqml2__IjGaps * soap_new_req_resqml2__IjGaps(
	struct soap *soap)
{
	resqml2__IjGaps *_p = soap_new_resqml2__IjGaps(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__IjGaps * soap_new_set_resqml2__IjGaps(
	struct soap *soap,
	__resqml2__IjGaps_sequence *__IjGaps_sequence)
{
	resqml2__IjGaps *_p = soap_new_resqml2__IjGaps(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IjGaps::__IjGaps_sequence = __IjGaps_sequence;
	}
	return _p;
}

inline int soap_write_resqml2__IjGaps(struct soap *soap, resqml2__IjGaps const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IjGaps", "resqml2:IjGaps") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IjGaps * SOAP_FMAC4 soap_get_resqml2__IjGaps(struct soap*, resqml2__IjGaps *, const char*, const char*);

inline int soap_read_resqml2__IjGaps(struct soap *soap, resqml2__IjGaps *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IjGaps(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, const char*, resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation * soap_new_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation * soap_new_req_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 ColumnCount,
	ULONG64 Nk1,
	eml__Citation *Citation5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation *_p = soap_new_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation::ColumnCount = ColumnCount;
		_p->resqml2__AbstractColumnLayerGridRepresentation::Nk = Nk1;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation * soap_new_set_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(
	struct soap *soap,
	ULONG64 ColumnCount,
	resqml2__UnstructuredColumnLayerGridGeometry *Geometry,
	ULONG64 Nk1,
	resqml2__IntervalStratigraphicUnits *IntervalStratigraphicUnits1,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits2,
	resqml2__AbstractParentWindow *ParentWindow2,
	resqml2__CellStratigraphicUnits *CellStratigraphicUnits2,
	eml__DataObjectReference *RepresentedInterpretation3,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata4,
	eml__Citation *Citation5,
	const std::vector<eml__ObjectAlias *> & Aliases5,
	eml__CustomData *CustomData5,
	const std::string& schemaVersion5,
	const std::string& uuid5)
{
	resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation *_p = soap_new_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation::ColumnCount = ColumnCount;
		_p->resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation::Geometry = Geometry;
		_p->resqml2__AbstractColumnLayerGridRepresentation::Nk = Nk1;
		_p->resqml2__AbstractColumnLayerGridRepresentation::IntervalStratigraphicUnits = IntervalStratigraphicUnits1;
		_p->resqml2__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits2;
		_p->resqml2__AbstractGridRepresentation::ParentWindow = ParentWindow2;
		_p->resqml2__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits2;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation3;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata4;
		_p->eml__AbstractCitedDataObject::Citation = Citation5;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases5;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData5;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion5;
		_p->eml__AbstractCitedDataObject::uuid = uuid5;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_UnstructuredColumnLayerGridRepresentation", "resqml2:obj_UnstructuredColumnLayerGridRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap*, resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(struct soap *soap, resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREUnstructuredColumnLayerGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SplitFaces_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SplitFaces_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SplitFaces(struct soap*, const char*, int, const resqml2__SplitFaces *, const char*);
SOAP_FMAC3 resqml2__SplitFaces * SOAP_FMAC4 soap_in_resqml2__SplitFaces(struct soap*, const char*, resqml2__SplitFaces *, const char*);
SOAP_FMAC1 resqml2__SplitFaces * SOAP_FMAC2 soap_instantiate_resqml2__SplitFaces(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__SplitFaces * soap_new_resqml2__SplitFaces(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__SplitFaces(soap, n, NULL, NULL, NULL);
}

inline resqml2__SplitFaces * soap_new_req_resqml2__SplitFaces(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentFaceIndices,
	resqml2__AbstractIntegerArray *CellIndices)
{
	resqml2__SplitFaces *_p = soap_new_resqml2__SplitFaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SplitFaces::Count = Count;
		_p->resqml2__SplitFaces::ParentFaceIndices = ParentFaceIndices;
		_p->resqml2__SplitFaces::CellIndices = CellIndices;
	}
	return _p;
}

inline resqml2__SplitFaces * soap_new_set_resqml2__SplitFaces(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentFaceIndices,
	resqml2__AbstractIntegerArray *CellIndices,
	resqml2__SplitEdges *SplitEdges)
{
	resqml2__SplitFaces *_p = soap_new_resqml2__SplitFaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SplitFaces::Count = Count;
		_p->resqml2__SplitFaces::ParentFaceIndices = ParentFaceIndices;
		_p->resqml2__SplitFaces::CellIndices = CellIndices;
		_p->resqml2__SplitFaces::SplitEdges = SplitEdges;
	}
	return _p;
}

inline int soap_write_resqml2__SplitFaces(struct soap *soap, resqml2__SplitFaces const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:SplitFaces", "resqml2:SplitFaces") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__SplitFaces * SOAP_FMAC4 soap_get_resqml2__SplitFaces(struct soap*, resqml2__SplitFaces *, const char*, const char*);

inline int soap_read_resqml2__SplitFaces(struct soap *soap, resqml2__SplitFaces *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__SplitFaces(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SubnodeTopology_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SubnodeTopology(struct soap*, const char*, int, const resqml2__SubnodeTopology *, const char*);
SOAP_FMAC3 resqml2__SubnodeTopology * SOAP_FMAC4 soap_in_resqml2__SubnodeTopology(struct soap*, const char*, resqml2__SubnodeTopology *, const char*);
SOAP_FMAC1 resqml2__SubnodeTopology * SOAP_FMAC2 soap_instantiate_resqml2__SubnodeTopology(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__SubnodeTopology * soap_new_resqml2__SubnodeTopology(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__SubnodeTopology(soap, n, NULL, NULL, NULL);
}

inline resqml2__SubnodeTopology * soap_new_req_resqml2__SubnodeTopology(
	struct soap *soap)
{
	resqml2__SubnodeTopology *_p = soap_new_resqml2__SubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__SubnodeTopology * soap_new_set_resqml2__SubnodeTopology(
	struct soap *soap,
	const std::vector<resqml2__VariableSubnodePatch *> & VariableSubnodes,
	const std::vector<resqml2__UniformSubnodePatch *> & UniformSubnodes)
{
	resqml2__SubnodeTopology *_p = soap_new_resqml2__SubnodeTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SubnodeTopology::VariableSubnodes = VariableSubnodes;
		_p->resqml2__SubnodeTopology::UniformSubnodes = UniformSubnodes;
	}
	return _p;
}

inline int soap_write_resqml2__SubnodeTopology(struct soap *soap, resqml2__SubnodeTopology const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:SubnodeTopology", "resqml2:SubnodeTopology") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__SubnodeTopology * SOAP_FMAC4 soap_get_resqml2__SubnodeTopology(struct soap*, resqml2__SubnodeTopology *, const char*, const char*);

inline int soap_read_resqml2__SubnodeTopology(struct soap *soap, resqml2__SubnodeTopology *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__SubnodeTopology(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractGridRepresentation(struct soap*, const char*, int, const resqml2__AbstractGridRepresentation *, const char*);
SOAP_FMAC3 resqml2__AbstractGridRepresentation * SOAP_FMAC4 soap_in_resqml2__AbstractGridRepresentation(struct soap*, const char*, resqml2__AbstractGridRepresentation *, const char*);
SOAP_FMAC1 resqml2__AbstractGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__AbstractGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractGridRepresentation * soap_new_resqml2__AbstractGridRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractGridRepresentation * soap_new_req_resqml2__AbstractGridRepresentation(
	struct soap *soap,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractGridRepresentation *_p = soap_new_resqml2__AbstractGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__AbstractGridRepresentation * soap_new_set_resqml2__AbstractGridRepresentation(
	struct soap *soap,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits,
	resqml2__AbstractParentWindow *ParentWindow,
	resqml2__CellStratigraphicUnits *CellStratigraphicUnits,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractGridRepresentation *_p = soap_new_resqml2__AbstractGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits;
		_p->resqml2__AbstractGridRepresentation::ParentWindow = ParentWindow;
		_p->resqml2__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractGridRepresentation(struct soap *soap, resqml2__AbstractGridRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractGridRepresentation", "resqml2:AbstractGridRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractGridRepresentation * SOAP_FMAC4 soap_get_resqml2__AbstractGridRepresentation(struct soap*, resqml2__AbstractGridRepresentation *, const char*, const char*);

inline int soap_read_resqml2__AbstractGridRepresentation(struct soap *soap, resqml2__AbstractGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORELocalGridSet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORELocalGridSet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORELocalGridSet(struct soap*, const char*, int, const resqml2__obj_USCORELocalGridSet *, const char*);
SOAP_FMAC3 resqml2__obj_USCORELocalGridSet * SOAP_FMAC4 soap_in_resqml2__obj_USCORELocalGridSet(struct soap*, const char*, resqml2__obj_USCORELocalGridSet *, const char*);
SOAP_FMAC1 resqml2__obj_USCORELocalGridSet * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORELocalGridSet(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORELocalGridSet * soap_new_resqml2__obj_USCORELocalGridSet(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORELocalGridSet(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORELocalGridSet * soap_new_req_resqml2__obj_USCORELocalGridSet(
	struct soap *soap,
	const std::vector<eml__DataObjectReference *> & ChildGrid,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCORELocalGridSet *_p = soap_new_resqml2__obj_USCORELocalGridSet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORELocalGridSet::ChildGrid = ChildGrid;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCORELocalGridSet * soap_new_set_resqml2__obj_USCORELocalGridSet(
	struct soap *soap,
	resqml2__Activation *Activation,
	const std::vector<eml__DataObjectReference *> & ChildGrid,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCORELocalGridSet *_p = soap_new_resqml2__obj_USCORELocalGridSet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORELocalGridSet::Activation = Activation;
		_p->resqml2__obj_USCORELocalGridSet::ChildGrid = ChildGrid;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORELocalGridSet(struct soap *soap, resqml2__obj_USCORELocalGridSet const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_LocalGridSet", "resqml2:obj_LocalGridSet") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORELocalGridSet * SOAP_FMAC4 soap_get_resqml2__obj_USCORELocalGridSet(struct soap*, resqml2__obj_USCORELocalGridSet *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORELocalGridSet(struct soap *soap, resqml2__obj_USCORELocalGridSet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORELocalGridSet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellStratigraphicUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__CellStratigraphicUnits_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__CellStratigraphicUnits(struct soap*, const char*, int, const resqml2__CellStratigraphicUnits *, const char*);
SOAP_FMAC3 resqml2__CellStratigraphicUnits * SOAP_FMAC4 soap_in_resqml2__CellStratigraphicUnits(struct soap*, const char*, resqml2__CellStratigraphicUnits *, const char*);
SOAP_FMAC1 resqml2__CellStratigraphicUnits * SOAP_FMAC2 soap_instantiate_resqml2__CellStratigraphicUnits(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__CellStratigraphicUnits * soap_new_resqml2__CellStratigraphicUnits(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__CellStratigraphicUnits(soap, n, NULL, NULL, NULL);
}

inline resqml2__CellStratigraphicUnits * soap_new_req_resqml2__CellStratigraphicUnits(
	struct soap *soap,
	resqml2__AbstractIntegerArray *UnitIndices,
	eml__DataObjectReference *StratigraphicOrganization)
{
	resqml2__CellStratigraphicUnits *_p = soap_new_resqml2__CellStratigraphicUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__CellStratigraphicUnits::UnitIndices = UnitIndices;
		_p->resqml2__CellStratigraphicUnits::StratigraphicOrganization = StratigraphicOrganization;
	}
	return _p;
}

inline resqml2__CellStratigraphicUnits * soap_new_set_resqml2__CellStratigraphicUnits(
	struct soap *soap,
	resqml2__AbstractIntegerArray *UnitIndices,
	eml__DataObjectReference *StratigraphicOrganization)
{
	resqml2__CellStratigraphicUnits *_p = soap_new_resqml2__CellStratigraphicUnits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__CellStratigraphicUnits::UnitIndices = UnitIndices;
		_p->resqml2__CellStratigraphicUnits::StratigraphicOrganization = StratigraphicOrganization;
	}
	return _p;
}

inline int soap_write_resqml2__CellStratigraphicUnits(struct soap *soap, resqml2__CellStratigraphicUnits const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:CellStratigraphicUnits", "resqml2:CellStratigraphicUnits") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__CellStratigraphicUnits * SOAP_FMAC4 soap_get_resqml2__CellStratigraphicUnits(struct soap*, resqml2__CellStratigraphicUnits *, const char*, const char*);

inline int soap_read_resqml2__CellStratigraphicUnits(struct soap *soap, resqml2__CellStratigraphicUnits *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__CellStratigraphicUnits(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ColumnSubnodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ColumnSubnodePatch(struct soap*, const char*, int, const resqml2__ColumnSubnodePatch *, const char*);
SOAP_FMAC3 resqml2__ColumnSubnodePatch * SOAP_FMAC4 soap_in_resqml2__ColumnSubnodePatch(struct soap*, const char*, resqml2__ColumnSubnodePatch *, const char*);
SOAP_FMAC1 resqml2__ColumnSubnodePatch * SOAP_FMAC2 soap_instantiate_resqml2__ColumnSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ColumnSubnodePatch * soap_new_resqml2__ColumnSubnodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ColumnSubnodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__ColumnSubnodePatch * soap_new_req_resqml2__ColumnSubnodePatch(
	struct soap *soap,
	resqml2__AbstractIntegerArray *SubnodeCountPerObject,
	enum resqml2__SubnodeNodeObject SubnodeNodeObject1,
	resqml2__AbstractValueArray *NodeWeightsPerSubnode1,
	ULONG64 PatchIndex2)
{
	resqml2__ColumnSubnodePatch *_p = soap_new_resqml2__ColumnSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ColumnSubnodePatch::SubnodeCountPerObject = SubnodeCountPerObject;
		_p->resqml2__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject1;
		_p->resqml2__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline resqml2__ColumnSubnodePatch * soap_new_set_resqml2__ColumnSubnodePatch(
	struct soap *soap,
	resqml2__AbstractIntegerArray *SubnodeCountPerObject,
	enum resqml2__SubnodeNodeObject SubnodeNodeObject1,
	resqml2__AbstractValueArray *NodeWeightsPerSubnode1,
	ULONG64 PatchIndex2)
{
	resqml2__ColumnSubnodePatch *_p = soap_new_resqml2__ColumnSubnodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ColumnSubnodePatch::SubnodeCountPerObject = SubnodeCountPerObject;
		_p->resqml2__SubnodePatch::SubnodeNodeObject = SubnodeNodeObject1;
		_p->resqml2__SubnodePatch::NodeWeightsPerSubnode = NodeWeightsPerSubnode1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline int soap_write_resqml2__ColumnSubnodePatch(struct soap *soap, resqml2__ColumnSubnodePatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ColumnSubnodePatch", "resqml2:ColumnSubnodePatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ColumnSubnodePatch * SOAP_FMAC4 soap_get_resqml2__ColumnSubnodePatch(struct soap*, resqml2__ColumnSubnodePatch *, const char*, const char*);

inline int soap_read_resqml2__ColumnSubnodePatch(struct soap *soap, resqml2__ColumnSubnodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ColumnSubnodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjkParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IjkParentWindow_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IjkParentWindow(struct soap*, const char*, int, const resqml2__IjkParentWindow *, const char*);
SOAP_FMAC3 resqml2__IjkParentWindow * SOAP_FMAC4 soap_in_resqml2__IjkParentWindow(struct soap*, const char*, resqml2__IjkParentWindow *, const char*);
SOAP_FMAC1 resqml2__IjkParentWindow * SOAP_FMAC2 soap_instantiate_resqml2__IjkParentWindow(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IjkParentWindow * soap_new_resqml2__IjkParentWindow(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IjkParentWindow(soap, n, NULL, NULL, NULL);
}

inline resqml2__IjkParentWindow * soap_new_req_resqml2__IjkParentWindow(
	struct soap *soap,
	resqml2__Regrid *JRegrid,
	eml__DataObjectReference *ParentGrid,
	resqml2__Regrid *KRegrid,
	resqml2__Regrid *IRegrid)
{
	resqml2__IjkParentWindow *_p = soap_new_resqml2__IjkParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IjkParentWindow::JRegrid = JRegrid;
		_p->resqml2__IjkParentWindow::ParentGrid = ParentGrid;
		_p->resqml2__IjkParentWindow::KRegrid = KRegrid;
		_p->resqml2__IjkParentWindow::IRegrid = IRegrid;
	}
	return _p;
}

inline resqml2__IjkParentWindow * soap_new_set_resqml2__IjkParentWindow(
	struct soap *soap,
	resqml2__AbstractIntegerArray *OmitParentCells,
	resqml2__Regrid *JRegrid,
	eml__DataObjectReference *ParentGrid,
	resqml2__Regrid *KRegrid,
	resqml2__Regrid *IRegrid,
	resqml2__CellOverlap *CellOverlap1)
{
	resqml2__IjkParentWindow *_p = soap_new_resqml2__IjkParentWindow(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IjkParentWindow::OmitParentCells = OmitParentCells;
		_p->resqml2__IjkParentWindow::JRegrid = JRegrid;
		_p->resqml2__IjkParentWindow::ParentGrid = ParentGrid;
		_p->resqml2__IjkParentWindow::KRegrid = KRegrid;
		_p->resqml2__IjkParentWindow::IRegrid = IRegrid;
		_p->resqml2__AbstractParentWindow::CellOverlap = CellOverlap1;
	}
	return _p;
}

inline int soap_write_resqml2__IjkParentWindow(struct soap *soap, resqml2__IjkParentWindow const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IjkParentWindow", "resqml2:IjkParentWindow") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IjkParentWindow * SOAP_FMAC4 soap_get_resqml2__IjkParentWindow(struct soap*, resqml2__IjkParentWindow *, const char*, const char*);

inline int soap_read_resqml2__IjkParentWindow(struct soap *soap, resqml2__IjkParentWindow *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IjkParentWindow(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SplitNodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SplitNodePatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SplitNodePatch(struct soap*, const char*, int, const resqml2__SplitNodePatch *, const char*);
SOAP_FMAC3 resqml2__SplitNodePatch * SOAP_FMAC4 soap_in_resqml2__SplitNodePatch(struct soap*, const char*, resqml2__SplitNodePatch *, const char*);
SOAP_FMAC1 resqml2__SplitNodePatch * SOAP_FMAC2 soap_instantiate_resqml2__SplitNodePatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__SplitNodePatch * soap_new_resqml2__SplitNodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__SplitNodePatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__SplitNodePatch * soap_new_req_resqml2__SplitNodePatch(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentNodeIndices,
	resqml2__ResqmlJaggedArray *CellsPerSplitNode,
	ULONG64 PatchIndex1)
{
	resqml2__SplitNodePatch *_p = soap_new_resqml2__SplitNodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SplitNodePatch::Count = Count;
		_p->resqml2__SplitNodePatch::ParentNodeIndices = ParentNodeIndices;
		_p->resqml2__SplitNodePatch::CellsPerSplitNode = CellsPerSplitNode;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__SplitNodePatch * soap_new_set_resqml2__SplitNodePatch(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *ParentNodeIndices,
	resqml2__ResqmlJaggedArray *CellsPerSplitNode,
	resqml2__SplitFaces *SplitFaces,
	ULONG64 PatchIndex1)
{
	resqml2__SplitNodePatch *_p = soap_new_resqml2__SplitNodePatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SplitNodePatch::Count = Count;
		_p->resqml2__SplitNodePatch::ParentNodeIndices = ParentNodeIndices;
		_p->resqml2__SplitNodePatch::CellsPerSplitNode = CellsPerSplitNode;
		_p->resqml2__SplitNodePatch::SplitFaces = SplitFaces;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__SplitNodePatch(struct soap *soap, resqml2__SplitNodePatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:SplitNodePatch", "resqml2:SplitNodePatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__SplitNodePatch * SOAP_FMAC4 soap_get_resqml2__SplitNodePatch(struct soap*, resqml2__SplitNodePatch *, const char*, const char*);

inline int soap_read_resqml2__SplitNodePatch(struct soap *soap, resqml2__SplitNodePatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__SplitNodePatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGpGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREGpGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREGpGridRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREGpGridRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREGpGridRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREGpGridRepresentation(struct soap*, const char*, resqml2__obj_USCOREGpGridRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREGpGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREGpGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREGpGridRepresentation * soap_new_resqml2__obj_USCOREGpGridRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREGpGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREGpGridRepresentation * soap_new_req_resqml2__obj_USCOREGpGridRepresentation(
	struct soap *soap,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGpGridRepresentation *_p = soap_new_resqml2__obj_USCOREGpGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREGpGridRepresentation * soap_new_set_resqml2__obj_USCOREGpGridRepresentation(
	struct soap *soap,
	const std::vector<resqml2__GpGridColumnLayerGrid *> & ColumnLayerGrid,
	const std::vector<resqml2__GpGridUnstructuredGridPatch *> & UnstructuredGridPatch,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits1,
	resqml2__AbstractParentWindow *ParentWindow1,
	resqml2__CellStratigraphicUnits *CellStratigraphicUnits1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREGpGridRepresentation *_p = soap_new_resqml2__obj_USCOREGpGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREGpGridRepresentation::ColumnLayerGrid = ColumnLayerGrid;
		_p->resqml2__obj_USCOREGpGridRepresentation::UnstructuredGridPatch = UnstructuredGridPatch;
		_p->resqml2__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits1;
		_p->resqml2__AbstractGridRepresentation::ParentWindow = ParentWindow1;
		_p->resqml2__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREGpGridRepresentation(struct soap *soap, resqml2__obj_USCOREGpGridRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_GpGridRepresentation", "resqml2:obj_GpGridRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREGpGridRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREGpGridRepresentation(struct soap*, resqml2__obj_USCOREGpGridRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREGpGridRepresentation(struct soap *soap, resqml2__obj_USCOREGpGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREGpGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AdditionalGridTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AdditionalGridTopology_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AdditionalGridTopology(struct soap*, const char*, int, const resqml2__AdditionalGridTopology *, const char*);
SOAP_FMAC3 resqml2__AdditionalGridTopology * SOAP_FMAC4 soap_in_resqml2__AdditionalGridTopology(struct soap*, const char*, resqml2__AdditionalGridTopology *, const char*);
SOAP_FMAC1 resqml2__AdditionalGridTopology * SOAP_FMAC2 soap_instantiate_resqml2__AdditionalGridTopology(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AdditionalGridTopology * soap_new_resqml2__AdditionalGridTopology(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AdditionalGridTopology(soap, n, NULL, NULL, NULL);
}

inline resqml2__AdditionalGridTopology * soap_new_req_resqml2__AdditionalGridTopology(
	struct soap *soap)
{
	resqml2__AdditionalGridTopology *_p = soap_new_resqml2__AdditionalGridTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AdditionalGridTopology * soap_new_set_resqml2__AdditionalGridTopology(
	struct soap *soap,
	resqml2__SplitEdges *SplitEdges,
	resqml2__SplitNodePatch *SplitNodes,
	resqml2__ColumnLayerSplitColumnEdges *SplitColumnEdges,
	resqml2__UnstructuredColumnEdges *UnstructuredColumnEdges,
	resqml2__SplitFaces *SplitFaces,
	resqml2__IjSplitColumnEdges *IjSplitColumnEdges,
	resqml2__UnstructuredSubnodeTopology *UnstructuredSubnodeTopology,
	resqml2__ColumnLayerSubnodeTopology *ColumnLayerSubnodeTopology)
{
	resqml2__AdditionalGridTopology *_p = soap_new_resqml2__AdditionalGridTopology(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AdditionalGridTopology::SplitEdges = SplitEdges;
		_p->resqml2__AdditionalGridTopology::SplitNodes = SplitNodes;
		_p->resqml2__AdditionalGridTopology::SplitColumnEdges = SplitColumnEdges;
		_p->resqml2__AdditionalGridTopology::UnstructuredColumnEdges = UnstructuredColumnEdges;
		_p->resqml2__AdditionalGridTopology::SplitFaces = SplitFaces;
		_p->resqml2__AdditionalGridTopology::IjSplitColumnEdges = IjSplitColumnEdges;
		_p->resqml2__AdditionalGridTopology::UnstructuredSubnodeTopology = UnstructuredSubnodeTopology;
		_p->resqml2__AdditionalGridTopology::ColumnLayerSubnodeTopology = ColumnLayerSubnodeTopology;
	}
	return _p;
}

inline int soap_write_resqml2__AdditionalGridTopology(struct soap *soap, resqml2__AdditionalGridTopology const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AdditionalGridTopology", "resqml2:AdditionalGridTopology") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AdditionalGridTopology * SOAP_FMAC4 soap_get_resqml2__AdditionalGridTopology(struct soap*, resqml2__AdditionalGridTopology *, const char*, const char*);

inline int soap_read_resqml2__AdditionalGridTopology(struct soap *soap, resqml2__AdditionalGridTopology *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AdditionalGridTopology(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREUnstructuredGridRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREUnstructuredGridRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREUnstructuredGridRepresentation(struct soap*, const char*, int, const resqml2__obj_USCOREUnstructuredGridRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREUnstructuredGridRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCOREUnstructuredGridRepresentation(struct soap*, const char*, resqml2__obj_USCOREUnstructuredGridRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREUnstructuredGridRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREUnstructuredGridRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREUnstructuredGridRepresentation * soap_new_resqml2__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREUnstructuredGridRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREUnstructuredGridRepresentation * soap_new_req_resqml2__obj_USCOREUnstructuredGridRepresentation(
	struct soap *soap,
	ULONG64 CellCount,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREUnstructuredGridRepresentation *_p = soap_new_resqml2__obj_USCOREUnstructuredGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREUnstructuredGridRepresentation::CellCount = CellCount;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREUnstructuredGridRepresentation * soap_new_set_resqml2__obj_USCOREUnstructuredGridRepresentation(
	struct soap *soap,
	ULONG64 CellCount,
	resqml2__UnstructuredGridGeometry *Geometry,
	resqml2__CellFluidPhaseUnits *CellFluidPhaseUnits1,
	resqml2__AbstractParentWindow *ParentWindow1,
	resqml2__CellStratigraphicUnits *CellStratigraphicUnits1,
	eml__DataObjectReference *RepresentedInterpretation2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREUnstructuredGridRepresentation *_p = soap_new_resqml2__obj_USCOREUnstructuredGridRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREUnstructuredGridRepresentation::CellCount = CellCount;
		_p->resqml2__obj_USCOREUnstructuredGridRepresentation::Geometry = Geometry;
		_p->resqml2__AbstractGridRepresentation::CellFluidPhaseUnits = CellFluidPhaseUnits1;
		_p->resqml2__AbstractGridRepresentation::ParentWindow = ParentWindow1;
		_p->resqml2__AbstractGridRepresentation::CellStratigraphicUnits = CellStratigraphicUnits1;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, resqml2__obj_USCOREUnstructuredGridRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_UnstructuredGridRepresentation", "resqml2:obj_UnstructuredGridRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREUnstructuredGridRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCOREUnstructuredGridRepresentation(struct soap*, resqml2__obj_USCOREUnstructuredGridRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREUnstructuredGridRepresentation(struct soap *soap, resqml2__obj_USCOREUnstructuredGridRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREUnstructuredGridRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESubRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORESubRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORESubRepresentation(struct soap*, const char*, int, const resqml2__obj_USCORESubRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORESubRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCORESubRepresentation(struct soap*, const char*, resqml2__obj_USCORESubRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORESubRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORESubRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORESubRepresentation * soap_new_resqml2__obj_USCORESubRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORESubRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORESubRepresentation * soap_new_req_resqml2__obj_USCORESubRepresentation(
	struct soap *soap,
	eml__DataObjectReference *SupportingRepresentation,
	const std::vector<resqml2__SubRepresentationPatch *> & SubRepresentationPatch,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORESubRepresentation *_p = soap_new_resqml2__obj_USCORESubRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORESubRepresentation::SupportingRepresentation = SupportingRepresentation;
		_p->resqml2__obj_USCORESubRepresentation::SubRepresentationPatch = SubRepresentationPatch;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCORESubRepresentation * soap_new_set_resqml2__obj_USCORESubRepresentation(
	struct soap *soap,
	resqml2__AdditionalGridTopology *AdditionalGridTopology,
	eml__DataObjectReference *SupportingRepresentation,
	const std::vector<resqml2__SubRepresentationPatch *> & SubRepresentationPatch,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORESubRepresentation *_p = soap_new_resqml2__obj_USCORESubRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORESubRepresentation::AdditionalGridTopology = AdditionalGridTopology;
		_p->resqml2__obj_USCORESubRepresentation::SupportingRepresentation = SupportingRepresentation;
		_p->resqml2__obj_USCORESubRepresentation::SubRepresentationPatch = SubRepresentationPatch;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORESubRepresentation(struct soap *soap, resqml2__obj_USCORESubRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_SubRepresentation", "resqml2:obj_SubRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORESubRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCORESubRepresentation(struct soap*, resqml2__obj_USCORESubRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORESubRepresentation(struct soap *soap, resqml2__obj_USCORESubRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORESubRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PatchOfGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PatchOfGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__PatchOfGeometry(struct soap*, const char*, int, const resqml2__PatchOfGeometry *, const char*);
SOAP_FMAC3 resqml2__PatchOfGeometry * SOAP_FMAC4 soap_in_resqml2__PatchOfGeometry(struct soap*, const char*, resqml2__PatchOfGeometry *, const char*);
SOAP_FMAC1 resqml2__PatchOfGeometry * SOAP_FMAC2 soap_instantiate_resqml2__PatchOfGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__PatchOfGeometry * soap_new_resqml2__PatchOfGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__PatchOfGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__PatchOfGeometry * soap_new_req_resqml2__PatchOfGeometry(
	struct soap *soap,
	resqml2__AbstractGeometry *Geometry)
{
	resqml2__PatchOfGeometry *_p = soap_new_resqml2__PatchOfGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PatchOfGeometry::Geometry = Geometry;
	}
	return _p;
}

inline resqml2__PatchOfGeometry * soap_new_set_resqml2__PatchOfGeometry(
	struct soap *soap,
	ULONG64 *RepresentationPatchIndex,
	resqml2__AbstractGeometry *Geometry)
{
	resqml2__PatchOfGeometry *_p = soap_new_resqml2__PatchOfGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PatchOfGeometry::RepresentationPatchIndex = RepresentationPatchIndex;
		_p->resqml2__PatchOfGeometry::Geometry = Geometry;
	}
	return _p;
}

inline int soap_write_resqml2__PatchOfGeometry(struct soap *soap, resqml2__PatchOfGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:PatchOfGeometry", "resqml2:PatchOfGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__PatchOfGeometry * SOAP_FMAC4 soap_get_resqml2__PatchOfGeometry(struct soap*, resqml2__PatchOfGeometry *, const char*, const char*);

inline int soap_read_resqml2__PatchOfGeometry(struct soap *soap, resqml2__PatchOfGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__PatchOfGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractRepresentation(struct soap*, const char*, int, const resqml2__AbstractRepresentation *, const char*);
SOAP_FMAC3 resqml2__AbstractRepresentation * SOAP_FMAC4 soap_in_resqml2__AbstractRepresentation(struct soap*, const char*, resqml2__AbstractRepresentation *, const char*);
SOAP_FMAC1 resqml2__AbstractRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__AbstractRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractRepresentation * soap_new_resqml2__AbstractRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractRepresentation * soap_new_req_resqml2__AbstractRepresentation(
	struct soap *soap,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractRepresentation *_p = soap_new_resqml2__AbstractRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__AbstractRepresentation * soap_new_set_resqml2__AbstractRepresentation(
	struct soap *soap,
	eml__DataObjectReference *RepresentedInterpretation,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractRepresentation *_p = soap_new_resqml2__AbstractRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractRepresentation(struct soap *soap, resqml2__AbstractRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractRepresentation", "resqml2:AbstractRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractRepresentation * SOAP_FMAC4 soap_get_resqml2__AbstractRepresentation(struct soap*, resqml2__AbstractRepresentation *, const char*, const char*);

inline int soap_read_resqml2__AbstractRepresentation(struct soap *soap, resqml2__AbstractRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ElementIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ElementIdentity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ElementIdentity(struct soap*, const char*, int, const resqml2__ElementIdentity *, const char*);
SOAP_FMAC3 resqml2__ElementIdentity * SOAP_FMAC4 soap_in_resqml2__ElementIdentity(struct soap*, const char*, resqml2__ElementIdentity *, const char*);
SOAP_FMAC1 resqml2__ElementIdentity * SOAP_FMAC2 soap_instantiate_resqml2__ElementIdentity(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ElementIdentity * soap_new_resqml2__ElementIdentity(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ElementIdentity(soap, n, NULL, NULL, NULL);
}

inline resqml2__ElementIdentity * soap_new_req_resqml2__ElementIdentity(
	struct soap *soap,
	enum resqml2__IdentityKind IdentityKind,
	enum resqml2__IndexableElements IndexableElement,
	eml__DataObjectReference *Representation)
{
	resqml2__ElementIdentity *_p = soap_new_resqml2__ElementIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ElementIdentity::IdentityKind = IdentityKind;
		_p->resqml2__ElementIdentity::IndexableElement = IndexableElement;
		_p->resqml2__ElementIdentity::Representation = Representation;
	}
	return _p;
}

inline resqml2__ElementIdentity * soap_new_set_resqml2__ElementIdentity(
	struct soap *soap,
	resqml2__AbstractIntegerArray *ElementIndices,
	enum resqml2__IdentityKind IdentityKind,
	enum resqml2__IndexableElements IndexableElement,
	eml__DataObjectReference *Representation,
	resqml2__TimeIndex *FromTimeIndex,
	resqml2__TimeIndex *ToTimeIndex)
{
	resqml2__ElementIdentity *_p = soap_new_resqml2__ElementIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ElementIdentity::ElementIndices = ElementIndices;
		_p->resqml2__ElementIdentity::IdentityKind = IdentityKind;
		_p->resqml2__ElementIdentity::IndexableElement = IndexableElement;
		_p->resqml2__ElementIdentity::Representation = Representation;
		_p->resqml2__ElementIdentity::FromTimeIndex = FromTimeIndex;
		_p->resqml2__ElementIdentity::ToTimeIndex = ToTimeIndex;
	}
	return _p;
}

inline int soap_write_resqml2__ElementIdentity(struct soap *soap, resqml2__ElementIdentity const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ElementIdentity", "resqml2:ElementIdentity") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ElementIdentity * SOAP_FMAC4 soap_get_resqml2__ElementIdentity(struct soap*, resqml2__ElementIdentity *, const char*, const char*);

inline int soap_read_resqml2__ElementIdentity(struct soap *soap, resqml2__ElementIdentity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ElementIdentity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERepresentationIdentitySet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERepresentationIdentitySet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORERepresentationIdentitySet(struct soap*, const char*, int, const resqml2__obj_USCORERepresentationIdentitySet *, const char*);
SOAP_FMAC3 resqml2__obj_USCORERepresentationIdentitySet * SOAP_FMAC4 soap_in_resqml2__obj_USCORERepresentationIdentitySet(struct soap*, const char*, resqml2__obj_USCORERepresentationIdentitySet *, const char*);
SOAP_FMAC1 resqml2__obj_USCORERepresentationIdentitySet * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORERepresentationIdentitySet(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORERepresentationIdentitySet * soap_new_resqml2__obj_USCORERepresentationIdentitySet(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORERepresentationIdentitySet(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORERepresentationIdentitySet * soap_new_req_resqml2__obj_USCORERepresentationIdentitySet(
	struct soap *soap,
	const std::vector<resqml2__RepresentationIdentity *> & RepresentationIdentity,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCORERepresentationIdentitySet *_p = soap_new_resqml2__obj_USCORERepresentationIdentitySet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERepresentationIdentitySet::RepresentationIdentity = RepresentationIdentity;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCORERepresentationIdentitySet * soap_new_set_resqml2__obj_USCORERepresentationIdentitySet(
	struct soap *soap,
	const std::vector<resqml2__RepresentationIdentity *> & RepresentationIdentity,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCORERepresentationIdentitySet *_p = soap_new_resqml2__obj_USCORERepresentationIdentitySet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERepresentationIdentitySet::RepresentationIdentity = RepresentationIdentity;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORERepresentationIdentitySet(struct soap *soap, resqml2__obj_USCORERepresentationIdentitySet const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_RepresentationIdentitySet", "resqml2:obj_RepresentationIdentitySet") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORERepresentationIdentitySet * SOAP_FMAC4 soap_get_resqml2__obj_USCORERepresentationIdentitySet(struct soap*, resqml2__obj_USCORERepresentationIdentitySet *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORERepresentationIdentitySet(struct soap *soap, resqml2__obj_USCORERepresentationIdentitySet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORERepresentationIdentitySet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__RepresentationIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__RepresentationIdentity_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__RepresentationIdentity(struct soap*, const char*, int, const resqml2__RepresentationIdentity *, const char*);
SOAP_FMAC3 resqml2__RepresentationIdentity * SOAP_FMAC4 soap_in_resqml2__RepresentationIdentity(struct soap*, const char*, resqml2__RepresentationIdentity *, const char*);
SOAP_FMAC1 resqml2__RepresentationIdentity * SOAP_FMAC2 soap_instantiate_resqml2__RepresentationIdentity(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__RepresentationIdentity * soap_new_resqml2__RepresentationIdentity(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__RepresentationIdentity(soap, n, NULL, NULL, NULL);
}

inline resqml2__RepresentationIdentity * soap_new_req_resqml2__RepresentationIdentity(
	struct soap *soap,
	ULONG64 IdenticalElementCount,
	const std::vector<resqml2__ElementIdentity *> & ElementIdentity)
{
	resqml2__RepresentationIdentity *_p = soap_new_resqml2__RepresentationIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__RepresentationIdentity::IdenticalElementCount = IdenticalElementCount;
		_p->resqml2__RepresentationIdentity::ElementIdentity = ElementIdentity;
	}
	return _p;
}

inline resqml2__RepresentationIdentity * soap_new_set_resqml2__RepresentationIdentity(
	struct soap *soap,
	ULONG64 IdenticalElementCount,
	const std::vector<resqml2__ElementIdentity *> & ElementIdentity,
	resqml2__AdditionalGridTopology *AdditionalGridTopology)
{
	resqml2__RepresentationIdentity *_p = soap_new_resqml2__RepresentationIdentity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__RepresentationIdentity::IdenticalElementCount = IdenticalElementCount;
		_p->resqml2__RepresentationIdentity::ElementIdentity = ElementIdentity;
		_p->resqml2__RepresentationIdentity::AdditionalGridTopology = AdditionalGridTopology;
	}
	return _p;
}

inline int soap_write_resqml2__RepresentationIdentity(struct soap *soap, resqml2__RepresentationIdentity const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:RepresentationIdentity", "resqml2:RepresentationIdentity") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__RepresentationIdentity * SOAP_FMAC4 soap_get_resqml2__RepresentationIdentity(struct soap*, resqml2__RepresentationIdentity *, const char*, const char*);

inline int soap_read_resqml2__RepresentationIdentity(struct soap *soap, resqml2__RepresentationIdentity *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__RepresentationIdentity(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERedefinedGeometryRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERedefinedGeometryRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORERedefinedGeometryRepresentation(struct soap*, const char*, int, const resqml2__obj_USCORERedefinedGeometryRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORERedefinedGeometryRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCORERedefinedGeometryRepresentation(struct soap*, const char*, resqml2__obj_USCORERedefinedGeometryRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORERedefinedGeometryRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORERedefinedGeometryRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORERedefinedGeometryRepresentation * soap_new_resqml2__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORERedefinedGeometryRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORERedefinedGeometryRepresentation * soap_new_req_resqml2__obj_USCORERedefinedGeometryRepresentation(
	struct soap *soap,
	const std::vector<resqml2__PatchOfGeometry *> & PatchOfGeometry,
	eml__DataObjectReference *SupportingRepresentation,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORERedefinedGeometryRepresentation *_p = soap_new_resqml2__obj_USCORERedefinedGeometryRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERedefinedGeometryRepresentation::PatchOfGeometry = PatchOfGeometry;
		_p->resqml2__obj_USCORERedefinedGeometryRepresentation::SupportingRepresentation = SupportingRepresentation;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCORERedefinedGeometryRepresentation * soap_new_set_resqml2__obj_USCORERedefinedGeometryRepresentation(
	struct soap *soap,
	const std::vector<resqml2__PatchOfGeometry *> & PatchOfGeometry,
	eml__DataObjectReference *SupportingRepresentation,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORERedefinedGeometryRepresentation *_p = soap_new_resqml2__obj_USCORERedefinedGeometryRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERedefinedGeometryRepresentation::PatchOfGeometry = PatchOfGeometry;
		_p->resqml2__obj_USCORERedefinedGeometryRepresentation::SupportingRepresentation = SupportingRepresentation;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, resqml2__obj_USCORERedefinedGeometryRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_RedefinedGeometryRepresentation", "resqml2:obj_RedefinedGeometryRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORERedefinedGeometryRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCORERedefinedGeometryRepresentation(struct soap*, resqml2__obj_USCORERedefinedGeometryRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORERedefinedGeometryRepresentation(struct soap *soap, resqml2__obj_USCORERedefinedGeometryRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORERedefinedGeometryRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERepresentationSetRepresentation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORERepresentationSetRepresentation_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORERepresentationSetRepresentation(struct soap*, const char*, int, const resqml2__obj_USCORERepresentationSetRepresentation *, const char*);
SOAP_FMAC3 resqml2__obj_USCORERepresentationSetRepresentation * SOAP_FMAC4 soap_in_resqml2__obj_USCORERepresentationSetRepresentation(struct soap*, const char*, resqml2__obj_USCORERepresentationSetRepresentation *, const char*);
SOAP_FMAC1 resqml2__obj_USCORERepresentationSetRepresentation * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORERepresentationSetRepresentation(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORERepresentationSetRepresentation * soap_new_resqml2__obj_USCORERepresentationSetRepresentation(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORERepresentationSetRepresentation(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORERepresentationSetRepresentation * soap_new_req_resqml2__obj_USCORERepresentationSetRepresentation(
	struct soap *soap,
	bool IsHomogeneous,
	const std::vector<eml__DataObjectReference *> & Representation,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORERepresentationSetRepresentation *_p = soap_new_resqml2__obj_USCORERepresentationSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCORERepresentationSetRepresentation * soap_new_set_resqml2__obj_USCORERepresentationSetRepresentation(
	struct soap *soap,
	bool IsHomogeneous,
	const std::vector<eml__DataObjectReference *> & Representation,
	eml__DataObjectReference *RepresentedInterpretation1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCORERepresentationSetRepresentation *_p = soap_new_resqml2__obj_USCORERepresentationSetRepresentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORERepresentationSetRepresentation::IsHomogeneous = IsHomogeneous;
		_p->resqml2__obj_USCORERepresentationSetRepresentation::Representation = Representation;
		_p->resqml2__AbstractRepresentation::RepresentedInterpretation = RepresentedInterpretation1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORERepresentationSetRepresentation(struct soap *soap, resqml2__obj_USCORERepresentationSetRepresentation const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_RepresentationSetRepresentation", "resqml2:obj_RepresentationSetRepresentation") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORERepresentationSetRepresentation * SOAP_FMAC4 soap_get_resqml2__obj_USCORERepresentationSetRepresentation(struct soap*, resqml2__obj_USCORERepresentationSetRepresentation *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORERepresentationSetRepresentation(struct soap *soap, resqml2__obj_USCORERepresentationSetRepresentation *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORERepresentationSetRepresentation(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SubRepresentationPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__SubRepresentationPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__SubRepresentationPatch(struct soap*, const char*, int, const resqml2__SubRepresentationPatch *, const char*);
SOAP_FMAC3 resqml2__SubRepresentationPatch * SOAP_FMAC4 soap_in_resqml2__SubRepresentationPatch(struct soap*, const char*, resqml2__SubRepresentationPatch *, const char*);
SOAP_FMAC1 resqml2__SubRepresentationPatch * SOAP_FMAC2 soap_instantiate_resqml2__SubRepresentationPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__SubRepresentationPatch * soap_new_resqml2__SubRepresentationPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__SubRepresentationPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__SubRepresentationPatch * soap_new_req_resqml2__SubRepresentationPatch(
	struct soap *soap,
	const std::vector<resqml2__ElementIndices *> & ElementIndices,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__SubRepresentationPatch *_p = soap_new_resqml2__SubRepresentationPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SubRepresentationPatch::ElementIndices = ElementIndices;
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline resqml2__SubRepresentationPatch * soap_new_set_resqml2__SubRepresentationPatch(
	struct soap *soap,
	const std::vector<resqml2__ElementIndices *> & ElementIndices,
	ULONG64 Count1,
	ULONG64 PatchIndex2)
{
	resqml2__SubRepresentationPatch *_p = soap_new_resqml2__SubRepresentationPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__SubRepresentationPatch::ElementIndices = ElementIndices;
		_p->resqml2__Patch1d::Count = Count1;
		_p->resqml2__Patch::PatchIndex = PatchIndex2;
	}
	return _p;
}

inline int soap_write_resqml2__SubRepresentationPatch(struct soap *soap, resqml2__SubRepresentationPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:SubRepresentationPatch", "resqml2:SubRepresentationPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__SubRepresentationPatch * SOAP_FMAC4 soap_get_resqml2__SubRepresentationPatch(struct soap*, resqml2__SubRepresentationPatch *, const char*, const char*);

inline int soap_read_resqml2__SubRepresentationPatch(struct soap *soap, resqml2__SubRepresentationPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__SubRepresentationPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ElementIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ElementIndices_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ElementIndices(struct soap*, const char*, int, const resqml2__ElementIndices *, const char*);
SOAP_FMAC3 resqml2__ElementIndices * SOAP_FMAC4 soap_in_resqml2__ElementIndices(struct soap*, const char*, resqml2__ElementIndices *, const char*);
SOAP_FMAC1 resqml2__ElementIndices * SOAP_FMAC2 soap_instantiate_resqml2__ElementIndices(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ElementIndices * soap_new_resqml2__ElementIndices(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ElementIndices(soap, n, NULL, NULL, NULL);
}

inline resqml2__ElementIndices * soap_new_req_resqml2__ElementIndices(
	struct soap *soap,
	enum resqml2__IndexableElements IndexableElement,
	resqml2__AbstractIntegerArray *Indices)
{
	resqml2__ElementIndices *_p = soap_new_resqml2__ElementIndices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ElementIndices::IndexableElement = IndexableElement;
		_p->resqml2__ElementIndices::Indices = Indices;
	}
	return _p;
}

inline resqml2__ElementIndices * soap_new_set_resqml2__ElementIndices(
	struct soap *soap,
	enum resqml2__IndexableElements IndexableElement,
	resqml2__AbstractIntegerArray *Indices)
{
	resqml2__ElementIndices *_p = soap_new_resqml2__ElementIndices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ElementIndices::IndexableElement = IndexableElement;
		_p->resqml2__ElementIndices::Indices = Indices;
	}
	return _p;
}

inline int soap_write_resqml2__ElementIndices(struct soap *soap, resqml2__ElementIndices const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ElementIndices", "resqml2:ElementIndices") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ElementIndices * SOAP_FMAC4 soap_get_resqml2__ElementIndices(struct soap*, resqml2__ElementIndices *, const char*, const char*);

inline int soap_read_resqml2__ElementIndices(struct soap *soap, resqml2__ElementIndices *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ElementIndices(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Patch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Patch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Patch(struct soap*, const char*, int, const resqml2__Patch *, const char*);
SOAP_FMAC3 resqml2__Patch * SOAP_FMAC4 soap_in_resqml2__Patch(struct soap*, const char*, resqml2__Patch *, const char*);
SOAP_FMAC1 resqml2__Patch * SOAP_FMAC2 soap_instantiate_resqml2__Patch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Patch * soap_new_resqml2__Patch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Patch(soap, n, NULL, NULL, NULL);
}

inline resqml2__Patch * soap_new_req_resqml2__Patch(
	struct soap *soap,
	ULONG64 PatchIndex)
{
	resqml2__Patch *_p = soap_new_resqml2__Patch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Patch::PatchIndex = PatchIndex;
	}
	return _p;
}

inline resqml2__Patch * soap_new_set_resqml2__Patch(
	struct soap *soap,
	ULONG64 PatchIndex)
{
	resqml2__Patch *_p = soap_new_resqml2__Patch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Patch::PatchIndex = PatchIndex;
	}
	return _p;
}

inline int soap_write_resqml2__Patch(struct soap *soap, resqml2__Patch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Patch", "resqml2:Patch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Patch * SOAP_FMAC4 soap_get_resqml2__Patch(struct soap*, resqml2__Patch *, const char*, const char*);

inline int soap_read_resqml2__Patch(struct soap *soap, resqml2__Patch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Patch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Patch1d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Patch1d_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Patch1d(struct soap*, const char*, int, const resqml2__Patch1d *, const char*);
SOAP_FMAC3 resqml2__Patch1d * SOAP_FMAC4 soap_in_resqml2__Patch1d(struct soap*, const char*, resqml2__Patch1d *, const char*);
SOAP_FMAC1 resqml2__Patch1d * SOAP_FMAC2 soap_instantiate_resqml2__Patch1d(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Patch1d * soap_new_resqml2__Patch1d(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Patch1d(soap, n, NULL, NULL, NULL);
}

inline resqml2__Patch1d * soap_new_req_resqml2__Patch1d(
	struct soap *soap,
	ULONG64 Count,
	ULONG64 PatchIndex1)
{
	resqml2__Patch1d *_p = soap_new_resqml2__Patch1d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Patch1d::Count = Count;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline resqml2__Patch1d * soap_new_set_resqml2__Patch1d(
	struct soap *soap,
	ULONG64 Count,
	ULONG64 PatchIndex1)
{
	resqml2__Patch1d *_p = soap_new_resqml2__Patch1d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Patch1d::Count = Count;
		_p->resqml2__Patch::PatchIndex = PatchIndex1;
	}
	return _p;
}

inline int soap_write_resqml2__Patch1d(struct soap *soap, resqml2__Patch1d const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Patch1d", "resqml2:Patch1d") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Patch1d * SOAP_FMAC4 soap_get_resqml2__Patch1d(struct soap*, resqml2__Patch1d *, const char*, const char*);

inline int soap_read_resqml2__Patch1d(struct soap *soap, resqml2__Patch1d *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Patch1d(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Seismic2dCoordinates_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Seismic2dCoordinates_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Seismic2dCoordinates(struct soap*, const char*, int, const resqml2__Seismic2dCoordinates *, const char*);
SOAP_FMAC3 resqml2__Seismic2dCoordinates * SOAP_FMAC4 soap_in_resqml2__Seismic2dCoordinates(struct soap*, const char*, resqml2__Seismic2dCoordinates *, const char*);
SOAP_FMAC1 resqml2__Seismic2dCoordinates * SOAP_FMAC2 soap_instantiate_resqml2__Seismic2dCoordinates(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Seismic2dCoordinates * soap_new_resqml2__Seismic2dCoordinates(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Seismic2dCoordinates(soap, n, NULL, NULL, NULL);
}

inline resqml2__Seismic2dCoordinates * soap_new_req_resqml2__Seismic2dCoordinates(
	struct soap *soap,
	resqml2__AbstractDoubleArray *LineAbscissa,
	eml__DataObjectReference *SeismicSupport1)
{
	resqml2__Seismic2dCoordinates *_p = soap_new_resqml2__Seismic2dCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Seismic2dCoordinates::LineAbscissa = LineAbscissa;
		_p->resqml2__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport1;
	}
	return _p;
}

inline resqml2__Seismic2dCoordinates * soap_new_set_resqml2__Seismic2dCoordinates(
	struct soap *soap,
	resqml2__AbstractDoubleArray *LineAbscissa,
	resqml2__AbstractDoubleArray *VerticalCoordinates,
	eml__DataObjectReference *SeismicSupport1)
{
	resqml2__Seismic2dCoordinates *_p = soap_new_resqml2__Seismic2dCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Seismic2dCoordinates::LineAbscissa = LineAbscissa;
		_p->resqml2__Seismic2dCoordinates::VerticalCoordinates = VerticalCoordinates;
		_p->resqml2__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport1;
	}
	return _p;
}

inline int soap_write_resqml2__Seismic2dCoordinates(struct soap *soap, resqml2__Seismic2dCoordinates const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Seismic2dCoordinates", "resqml2:Seismic2dCoordinates") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Seismic2dCoordinates * SOAP_FMAC4 soap_get_resqml2__Seismic2dCoordinates(struct soap*, resqml2__Seismic2dCoordinates *, const char*, const char*);

inline int soap_read_resqml2__Seismic2dCoordinates(struct soap *soap, resqml2__Seismic2dCoordinates *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Seismic2dCoordinates(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractSeismicCoordinates_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractSeismicCoordinates_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractSeismicCoordinates(struct soap*, const char*, int, const resqml2__AbstractSeismicCoordinates *, const char*);
SOAP_FMAC3 resqml2__AbstractSeismicCoordinates * SOAP_FMAC4 soap_in_resqml2__AbstractSeismicCoordinates(struct soap*, const char*, resqml2__AbstractSeismicCoordinates *, const char*);
SOAP_FMAC1 resqml2__AbstractSeismicCoordinates * SOAP_FMAC2 soap_instantiate_resqml2__AbstractSeismicCoordinates(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractSeismicCoordinates * soap_new_resqml2__AbstractSeismicCoordinates(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractSeismicCoordinates(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractSeismicCoordinates * soap_new_req_resqml2__AbstractSeismicCoordinates(
	struct soap *soap,
	eml__DataObjectReference *SeismicSupport)
{
	resqml2__AbstractSeismicCoordinates *_p = soap_new_resqml2__AbstractSeismicCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport;
	}
	return _p;
}

inline resqml2__AbstractSeismicCoordinates * soap_new_set_resqml2__AbstractSeismicCoordinates(
	struct soap *soap,
	eml__DataObjectReference *SeismicSupport)
{
	resqml2__AbstractSeismicCoordinates *_p = soap_new_resqml2__AbstractSeismicCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractSeismicCoordinates(struct soap *soap, resqml2__AbstractSeismicCoordinates const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractSeismicCoordinates", "resqml2:AbstractSeismicCoordinates") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractSeismicCoordinates * SOAP_FMAC4 soap_get_resqml2__AbstractSeismicCoordinates(struct soap*, resqml2__AbstractSeismicCoordinates *, const char*, const char*);

inline int soap_read_resqml2__AbstractSeismicCoordinates(struct soap *soap, resqml2__AbstractSeismicCoordinates *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractSeismicCoordinates(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Seismic3dCoordinates_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Seismic3dCoordinates_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Seismic3dCoordinates(struct soap*, const char*, int, const resqml2__Seismic3dCoordinates *, const char*);
SOAP_FMAC3 resqml2__Seismic3dCoordinates * SOAP_FMAC4 soap_in_resqml2__Seismic3dCoordinates(struct soap*, const char*, resqml2__Seismic3dCoordinates *, const char*);
SOAP_FMAC1 resqml2__Seismic3dCoordinates * SOAP_FMAC2 soap_instantiate_resqml2__Seismic3dCoordinates(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Seismic3dCoordinates * soap_new_resqml2__Seismic3dCoordinates(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Seismic3dCoordinates(soap, n, NULL, NULL, NULL);
}

inline resqml2__Seismic3dCoordinates * soap_new_req_resqml2__Seismic3dCoordinates(
	struct soap *soap,
	resqml2__AbstractDoubleArray *CrosslineCoordinates,
	resqml2__AbstractDoubleArray *InlineCoordinates,
	eml__DataObjectReference *SeismicSupport1)
{
	resqml2__Seismic3dCoordinates *_p = soap_new_resqml2__Seismic3dCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Seismic3dCoordinates::CrosslineCoordinates = CrosslineCoordinates;
		_p->resqml2__Seismic3dCoordinates::InlineCoordinates = InlineCoordinates;
		_p->resqml2__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport1;
	}
	return _p;
}

inline resqml2__Seismic3dCoordinates * soap_new_set_resqml2__Seismic3dCoordinates(
	struct soap *soap,
	resqml2__AbstractDoubleArray *CrosslineCoordinates,
	resqml2__AbstractDoubleArray *InlineCoordinates,
	resqml2__AbstractDoubleArray *VerticalCoordinates,
	eml__DataObjectReference *SeismicSupport1)
{
	resqml2__Seismic3dCoordinates *_p = soap_new_resqml2__Seismic3dCoordinates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Seismic3dCoordinates::CrosslineCoordinates = CrosslineCoordinates;
		_p->resqml2__Seismic3dCoordinates::InlineCoordinates = InlineCoordinates;
		_p->resqml2__Seismic3dCoordinates::VerticalCoordinates = VerticalCoordinates;
		_p->resqml2__AbstractSeismicCoordinates::SeismicSupport = SeismicSupport1;
	}
	return _p;
}

inline int soap_write_resqml2__Seismic3dCoordinates(struct soap *soap, resqml2__Seismic3dCoordinates const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Seismic3dCoordinates", "resqml2:Seismic3dCoordinates") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Seismic3dCoordinates * SOAP_FMAC4 soap_get_resqml2__Seismic3dCoordinates(struct soap*, resqml2__Seismic3dCoordinates *, const char*, const char*);

inline int soap_read_resqml2__Seismic3dCoordinates(struct soap *soap, resqml2__Seismic3dCoordinates *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Seismic3dCoordinates(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dFromRepresentationLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dFromRepresentationLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Point3dFromRepresentationLatticeArray(struct soap*, const char*, int, const resqml2__Point3dFromRepresentationLatticeArray *, const char*);
SOAP_FMAC3 resqml2__Point3dFromRepresentationLatticeArray * SOAP_FMAC4 soap_in_resqml2__Point3dFromRepresentationLatticeArray(struct soap*, const char*, resqml2__Point3dFromRepresentationLatticeArray *, const char*);
SOAP_FMAC1 resqml2__Point3dFromRepresentationLatticeArray * SOAP_FMAC2 soap_instantiate_resqml2__Point3dFromRepresentationLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Point3dFromRepresentationLatticeArray * soap_new_resqml2__Point3dFromRepresentationLatticeArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Point3dFromRepresentationLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__Point3dFromRepresentationLatticeArray * soap_new_req_resqml2__Point3dFromRepresentationLatticeArray(
	struct soap *soap,
	resqml2__IntegerLatticeArray *NodeIndicesOnSupportingRepresentation,
	eml__DataObjectReference *SupportingRepresentation)
{
	resqml2__Point3dFromRepresentationLatticeArray *_p = soap_new_resqml2__Point3dFromRepresentationLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dFromRepresentationLatticeArray::NodeIndicesOnSupportingRepresentation = NodeIndicesOnSupportingRepresentation;
		_p->resqml2__Point3dFromRepresentationLatticeArray::SupportingRepresentation = SupportingRepresentation;
	}
	return _p;
}

inline resqml2__Point3dFromRepresentationLatticeArray * soap_new_set_resqml2__Point3dFromRepresentationLatticeArray(
	struct soap *soap,
	resqml2__IntegerLatticeArray *NodeIndicesOnSupportingRepresentation,
	eml__DataObjectReference *SupportingRepresentation)
{
	resqml2__Point3dFromRepresentationLatticeArray *_p = soap_new_resqml2__Point3dFromRepresentationLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dFromRepresentationLatticeArray::NodeIndicesOnSupportingRepresentation = NodeIndicesOnSupportingRepresentation;
		_p->resqml2__Point3dFromRepresentationLatticeArray::SupportingRepresentation = SupportingRepresentation;
	}
	return _p;
}

inline int soap_write_resqml2__Point3dFromRepresentationLatticeArray(struct soap *soap, resqml2__Point3dFromRepresentationLatticeArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Point3dFromRepresentationLatticeArray", "resqml2:Point3dFromRepresentationLatticeArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Point3dFromRepresentationLatticeArray * SOAP_FMAC4 soap_get_resqml2__Point3dFromRepresentationLatticeArray(struct soap*, resqml2__Point3dFromRepresentationLatticeArray *, const char*, const char*);

inline int soap_read_resqml2__Point3dFromRepresentationLatticeArray(struct soap *soap, resqml2__Point3dFromRepresentationLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Point3dFromRepresentationLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractParametricLineGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractParametricLineGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractParametricLineGeometry(struct soap*, const char*, int, const resqml2__AbstractParametricLineGeometry *, const char*);
SOAP_FMAC3 resqml2__AbstractParametricLineGeometry * SOAP_FMAC4 soap_in_resqml2__AbstractParametricLineGeometry(struct soap*, const char*, resqml2__AbstractParametricLineGeometry *, const char*);
SOAP_FMAC1 resqml2__AbstractParametricLineGeometry * SOAP_FMAC2 soap_instantiate_resqml2__AbstractParametricLineGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractParametricLineGeometry * soap_new_resqml2__AbstractParametricLineGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractParametricLineGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractParametricLineGeometry * soap_new_req_resqml2__AbstractParametricLineGeometry(
	struct soap *soap,
	eml__DataObjectReference *LocalCrs1)
{
	resqml2__AbstractParametricLineGeometry *_p = soap_new_resqml2__AbstractParametricLineGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs1;
	}
	return _p;
}

inline resqml2__AbstractParametricLineGeometry * soap_new_set_resqml2__AbstractParametricLineGeometry(
	struct soap *soap,
	resqml2__TimeIndex *TimeIndex1,
	eml__DataObjectReference *LocalCrs1)
{
	resqml2__AbstractParametricLineGeometry *_p = soap_new_resqml2__AbstractParametricLineGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex1;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs1;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractParametricLineGeometry(struct soap *soap, resqml2__AbstractParametricLineGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractParametricLineGeometry", "resqml2:AbstractParametricLineGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractParametricLineGeometry * SOAP_FMAC4 soap_get_resqml2__AbstractParametricLineGeometry(struct soap*, resqml2__AbstractParametricLineGeometry *, const char*, const char*);

inline int soap_read_resqml2__AbstractParametricLineGeometry(struct soap *soap, resqml2__AbstractParametricLineGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractParametricLineGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractPlaneGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractPlaneGeometry(struct soap*, const char*, int, const resqml2__AbstractPlaneGeometry *, const char*);
SOAP_FMAC3 resqml2__AbstractPlaneGeometry * SOAP_FMAC4 soap_in_resqml2__AbstractPlaneGeometry(struct soap*, const char*, resqml2__AbstractPlaneGeometry *, const char*);
SOAP_FMAC1 resqml2__AbstractPlaneGeometry * SOAP_FMAC2 soap_instantiate_resqml2__AbstractPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractPlaneGeometry * soap_new_resqml2__AbstractPlaneGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractPlaneGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractPlaneGeometry * soap_new_req_resqml2__AbstractPlaneGeometry(
	struct soap *soap,
	eml__DataObjectReference *LocalCrs1)
{
	resqml2__AbstractPlaneGeometry *_p = soap_new_resqml2__AbstractPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs1;
	}
	return _p;
}

inline resqml2__AbstractPlaneGeometry * soap_new_set_resqml2__AbstractPlaneGeometry(
	struct soap *soap,
	resqml2__TimeIndex *TimeIndex1,
	eml__DataObjectReference *LocalCrs1)
{
	resqml2__AbstractPlaneGeometry *_p = soap_new_resqml2__AbstractPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex1;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs1;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractPlaneGeometry(struct soap *soap, resqml2__AbstractPlaneGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractPlaneGeometry", "resqml2:AbstractPlaneGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractPlaneGeometry * SOAP_FMAC4 soap_get_resqml2__AbstractPlaneGeometry(struct soap*, resqml2__AbstractPlaneGeometry *, const char*, const char*);

inline int soap_read_resqml2__AbstractPlaneGeometry(struct soap *soap, resqml2__AbstractPlaneGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractPlaneGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TiltedPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__TiltedPlaneGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__TiltedPlaneGeometry(struct soap*, const char*, int, const resqml2__TiltedPlaneGeometry *, const char*);
SOAP_FMAC3 resqml2__TiltedPlaneGeometry * SOAP_FMAC4 soap_in_resqml2__TiltedPlaneGeometry(struct soap*, const char*, resqml2__TiltedPlaneGeometry *, const char*);
SOAP_FMAC1 resqml2__TiltedPlaneGeometry * SOAP_FMAC2 soap_instantiate_resqml2__TiltedPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__TiltedPlaneGeometry * soap_new_resqml2__TiltedPlaneGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__TiltedPlaneGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__TiltedPlaneGeometry * soap_new_req_resqml2__TiltedPlaneGeometry(
	struct soap *soap,
	const std::vector<resqml2__ThreePoint3d *> & Plane,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__TiltedPlaneGeometry *_p = soap_new_resqml2__TiltedPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TiltedPlaneGeometry::Plane = Plane;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline resqml2__TiltedPlaneGeometry * soap_new_set_resqml2__TiltedPlaneGeometry(
	struct soap *soap,
	const std::vector<resqml2__ThreePoint3d *> & Plane,
	resqml2__TimeIndex *TimeIndex2,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__TiltedPlaneGeometry *_p = soap_new_resqml2__TiltedPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__TiltedPlaneGeometry::Plane = Plane;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex2;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline int soap_write_resqml2__TiltedPlaneGeometry(struct soap *soap, resqml2__TiltedPlaneGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:TiltedPlaneGeometry", "resqml2:TiltedPlaneGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__TiltedPlaneGeometry * SOAP_FMAC4 soap_get_resqml2__TiltedPlaneGeometry(struct soap*, resqml2__TiltedPlaneGeometry *, const char*, const char*);

inline int soap_read_resqml2__TiltedPlaneGeometry(struct soap *soap, resqml2__TiltedPlaneGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__TiltedPlaneGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineIntersections_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineIntersections_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ParametricLineIntersections(struct soap*, const char*, int, const resqml2__ParametricLineIntersections *, const char*);
SOAP_FMAC3 resqml2__ParametricLineIntersections * SOAP_FMAC4 soap_in_resqml2__ParametricLineIntersections(struct soap*, const char*, resqml2__ParametricLineIntersections *, const char*);
SOAP_FMAC1 resqml2__ParametricLineIntersections * SOAP_FMAC2 soap_instantiate_resqml2__ParametricLineIntersections(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ParametricLineIntersections * soap_new_resqml2__ParametricLineIntersections(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ParametricLineIntersections(soap, n, NULL, NULL, NULL);
}

inline resqml2__ParametricLineIntersections * soap_new_req_resqml2__ParametricLineIntersections(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *IntersectionLinePairs,
	resqml2__AbstractValueArray *ParameterValuePairs)
{
	resqml2__ParametricLineIntersections *_p = soap_new_resqml2__ParametricLineIntersections(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineIntersections::Count = Count;
		_p->resqml2__ParametricLineIntersections::IntersectionLinePairs = IntersectionLinePairs;
		_p->resqml2__ParametricLineIntersections::ParameterValuePairs = ParameterValuePairs;
	}
	return _p;
}

inline resqml2__ParametricLineIntersections * soap_new_set_resqml2__ParametricLineIntersections(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *IntersectionLinePairs,
	resqml2__AbstractValueArray *ParameterValuePairs)
{
	resqml2__ParametricLineIntersections *_p = soap_new_resqml2__ParametricLineIntersections(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineIntersections::Count = Count;
		_p->resqml2__ParametricLineIntersections::IntersectionLinePairs = IntersectionLinePairs;
		_p->resqml2__ParametricLineIntersections::ParameterValuePairs = ParameterValuePairs;
	}
	return _p;
}

inline int soap_write_resqml2__ParametricLineIntersections(struct soap *soap, resqml2__ParametricLineIntersections const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ParametricLineIntersections", "resqml2:ParametricLineIntersections") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ParametricLineIntersections * SOAP_FMAC4 soap_get_resqml2__ParametricLineIntersections(struct soap*, resqml2__ParametricLineIntersections *, const char*, const char*);

inline int soap_read_resqml2__ParametricLineIntersections(struct soap *soap, resqml2__ParametricLineIntersections *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ParametricLineIntersections(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractParametricLineArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractParametricLineArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractParametricLineArray(struct soap*, const char*, int, const resqml2__AbstractParametricLineArray *, const char*);
SOAP_FMAC3 resqml2__AbstractParametricLineArray * SOAP_FMAC4 soap_in_resqml2__AbstractParametricLineArray(struct soap*, const char*, resqml2__AbstractParametricLineArray *, const char*);
SOAP_FMAC1 resqml2__AbstractParametricLineArray * SOAP_FMAC2 soap_instantiate_resqml2__AbstractParametricLineArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractParametricLineArray * soap_new_resqml2__AbstractParametricLineArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractParametricLineArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractParametricLineArray * soap_new_req_resqml2__AbstractParametricLineArray(
	struct soap *soap)
{
	resqml2__AbstractParametricLineArray *_p = soap_new_resqml2__AbstractParametricLineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AbstractParametricLineArray * soap_new_set_resqml2__AbstractParametricLineArray(
	struct soap *soap)
{
	resqml2__AbstractParametricLineArray *_p = soap_new_resqml2__AbstractParametricLineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml2__AbstractParametricLineArray(struct soap *soap, resqml2__AbstractParametricLineArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractParametricLineArray", "resqml2:AbstractParametricLineArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractParametricLineArray * SOAP_FMAC4 soap_get_resqml2__AbstractParametricLineArray(struct soap*, resqml2__AbstractParametricLineArray *, const char*, const char*);

inline int soap_read_resqml2__AbstractParametricLineArray(struct soap *soap, resqml2__AbstractParametricLineArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractParametricLineArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dParametricArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dParametricArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Point3dParametricArray(struct soap*, const char*, int, const resqml2__Point3dParametricArray *, const char*);
SOAP_FMAC3 resqml2__Point3dParametricArray * SOAP_FMAC4 soap_in_resqml2__Point3dParametricArray(struct soap*, const char*, resqml2__Point3dParametricArray *, const char*);
SOAP_FMAC1 resqml2__Point3dParametricArray * SOAP_FMAC2 soap_instantiate_resqml2__Point3dParametricArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Point3dParametricArray * soap_new_resqml2__Point3dParametricArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Point3dParametricArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__Point3dParametricArray * soap_new_req_resqml2__Point3dParametricArray(
	struct soap *soap,
	resqml2__AbstractValueArray *Parameters,
	resqml2__AbstractParametricLineArray *ParametricLines)
{
	resqml2__Point3dParametricArray *_p = soap_new_resqml2__Point3dParametricArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dParametricArray::Parameters = Parameters;
		_p->resqml2__Point3dParametricArray::ParametricLines = ParametricLines;
	}
	return _p;
}

inline resqml2__Point3dParametricArray * soap_new_set_resqml2__Point3dParametricArray(
	struct soap *soap,
	resqml2__AbstractValueArray *Parameters,
	resqml2__AbstractIntegerArray *ParametricLineIndices,
	resqml2__AbstractIntegerArray *TruncatedLineIndices,
	resqml2__AbstractParametricLineArray *ParametricLines)
{
	resqml2__Point3dParametricArray *_p = soap_new_resqml2__Point3dParametricArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dParametricArray::Parameters = Parameters;
		_p->resqml2__Point3dParametricArray::ParametricLineIndices = ParametricLineIndices;
		_p->resqml2__Point3dParametricArray::TruncatedLineIndices = TruncatedLineIndices;
		_p->resqml2__Point3dParametricArray::ParametricLines = ParametricLines;
	}
	return _p;
}

inline int soap_write_resqml2__Point3dParametricArray(struct soap *soap, resqml2__Point3dParametricArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Point3dParametricArray", "resqml2:Point3dParametricArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Point3dParametricArray * SOAP_FMAC4 soap_get_resqml2__Point3dParametricArray(struct soap*, resqml2__Point3dParametricArray *, const char*, const char*);

inline int soap_read_resqml2__Point3dParametricArray(struct soap *soap, resqml2__Point3dParametricArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Point3dParametricArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ParametricLineArray(struct soap*, const char*, int, const resqml2__ParametricLineArray *, const char*);
SOAP_FMAC3 resqml2__ParametricLineArray * SOAP_FMAC4 soap_in_resqml2__ParametricLineArray(struct soap*, const char*, resqml2__ParametricLineArray *, const char*);
SOAP_FMAC1 resqml2__ParametricLineArray * SOAP_FMAC2 soap_instantiate_resqml2__ParametricLineArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ParametricLineArray * soap_new_resqml2__ParametricLineArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ParametricLineArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__ParametricLineArray * soap_new_req_resqml2__ParametricLineArray(
	struct soap *soap,
	resqml2__AbstractPoint3dArray *ControlPoints,
	ULONG64 KnotCount,
	resqml2__AbstractIntegerArray *LineKindIndices)
{
	resqml2__ParametricLineArray *_p = soap_new_resqml2__ParametricLineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineArray::ControlPoints = ControlPoints;
		_p->resqml2__ParametricLineArray::KnotCount = KnotCount;
		_p->resqml2__ParametricLineArray::LineKindIndices = LineKindIndices;
	}
	return _p;
}

inline resqml2__ParametricLineArray * soap_new_set_resqml2__ParametricLineArray(
	struct soap *soap,
	resqml2__AbstractDoubleArray *ControlPointParameters,
	resqml2__AbstractPoint3dArray *ControlPoints,
	ULONG64 KnotCount,
	resqml2__AbstractIntegerArray *LineKindIndices,
	resqml2__AbstractPoint3dArray *TangentVectors,
	resqml2__ParametricLineIntersections *ParametricLineIntersections)
{
	resqml2__ParametricLineArray *_p = soap_new_resqml2__ParametricLineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineArray::ControlPointParameters = ControlPointParameters;
		_p->resqml2__ParametricLineArray::ControlPoints = ControlPoints;
		_p->resqml2__ParametricLineArray::KnotCount = KnotCount;
		_p->resqml2__ParametricLineArray::LineKindIndices = LineKindIndices;
		_p->resqml2__ParametricLineArray::TangentVectors = TangentVectors;
		_p->resqml2__ParametricLineArray::ParametricLineIntersections = ParametricLineIntersections;
	}
	return _p;
}

inline int soap_write_resqml2__ParametricLineArray(struct soap *soap, resqml2__ParametricLineArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ParametricLineArray", "resqml2:ParametricLineArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ParametricLineArray * SOAP_FMAC4 soap_get_resqml2__ParametricLineArray(struct soap*, resqml2__ParametricLineArray *, const char*, const char*);

inline int soap_read_resqml2__ParametricLineArray(struct soap *soap, resqml2__ParametricLineArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ParametricLineArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineFromRepresentationGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineFromRepresentationGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ParametricLineFromRepresentationGeometry(struct soap*, const char*, int, const resqml2__ParametricLineFromRepresentationGeometry *, const char*);
SOAP_FMAC3 resqml2__ParametricLineFromRepresentationGeometry * SOAP_FMAC4 soap_in_resqml2__ParametricLineFromRepresentationGeometry(struct soap*, const char*, resqml2__ParametricLineFromRepresentationGeometry *, const char*);
SOAP_FMAC1 resqml2__ParametricLineFromRepresentationGeometry * SOAP_FMAC2 soap_instantiate_resqml2__ParametricLineFromRepresentationGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ParametricLineFromRepresentationGeometry * soap_new_resqml2__ParametricLineFromRepresentationGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ParametricLineFromRepresentationGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__ParametricLineFromRepresentationGeometry * soap_new_req_resqml2__ParametricLineFromRepresentationGeometry(
	struct soap *soap,
	ULONG64 LineIndiexOnSupportingRepresentation,
	eml__DataObjectReference *SupportingRepresentation,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__ParametricLineFromRepresentationGeometry *_p = soap_new_resqml2__ParametricLineFromRepresentationGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineFromRepresentationGeometry::LineIndiexOnSupportingRepresentation = LineIndiexOnSupportingRepresentation;
		_p->resqml2__ParametricLineFromRepresentationGeometry::SupportingRepresentation = SupportingRepresentation;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline resqml2__ParametricLineFromRepresentationGeometry * soap_new_set_resqml2__ParametricLineFromRepresentationGeometry(
	struct soap *soap,
	ULONG64 LineIndiexOnSupportingRepresentation,
	eml__DataObjectReference *SupportingRepresentation,
	resqml2__TimeIndex *TimeIndex2,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__ParametricLineFromRepresentationGeometry *_p = soap_new_resqml2__ParametricLineFromRepresentationGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineFromRepresentationGeometry::LineIndiexOnSupportingRepresentation = LineIndiexOnSupportingRepresentation;
		_p->resqml2__ParametricLineFromRepresentationGeometry::SupportingRepresentation = SupportingRepresentation;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex2;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline int soap_write_resqml2__ParametricLineFromRepresentationGeometry(struct soap *soap, resqml2__ParametricLineFromRepresentationGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ParametricLineFromRepresentationGeometry", "resqml2:ParametricLineFromRepresentationGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ParametricLineFromRepresentationGeometry * SOAP_FMAC4 soap_get_resqml2__ParametricLineFromRepresentationGeometry(struct soap*, resqml2__ParametricLineFromRepresentationGeometry *, const char*, const char*);

inline int soap_read_resqml2__ParametricLineFromRepresentationGeometry(struct soap *soap, resqml2__ParametricLineFromRepresentationGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ParametricLineFromRepresentationGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ThreePoint3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ThreePoint3d_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ThreePoint3d(struct soap*, const char*, int, const resqml2__ThreePoint3d *, const char*);
SOAP_FMAC3 resqml2__ThreePoint3d * SOAP_FMAC4 soap_in_resqml2__ThreePoint3d(struct soap*, const char*, resqml2__ThreePoint3d *, const char*);
SOAP_FMAC1 resqml2__ThreePoint3d * SOAP_FMAC2 soap_instantiate_resqml2__ThreePoint3d(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ThreePoint3d * soap_new_resqml2__ThreePoint3d(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ThreePoint3d(soap, n, NULL, NULL, NULL);
}

inline resqml2__ThreePoint3d * soap_new_req_resqml2__ThreePoint3d(
	struct soap *soap,
	const std::vector<resqml2__Point3d *> & Point3d)
{
	resqml2__ThreePoint3d *_p = soap_new_resqml2__ThreePoint3d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ThreePoint3d::Point3d = Point3d;
	}
	return _p;
}

inline resqml2__ThreePoint3d * soap_new_set_resqml2__ThreePoint3d(
	struct soap *soap,
	const std::vector<resqml2__Point3d *> & Point3d)
{
	resqml2__ThreePoint3d *_p = soap_new_resqml2__ThreePoint3d(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ThreePoint3d::Point3d = Point3d;
	}
	return _p;
}

inline int soap_write_resqml2__ThreePoint3d(struct soap *soap, resqml2__ThreePoint3d const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ThreePoint3d", "resqml2:ThreePoint3d") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ThreePoint3d * SOAP_FMAC4 soap_get_resqml2__ThreePoint3d(struct soap*, resqml2__ThreePoint3d *, const char*, const char*);

inline int soap_read_resqml2__ThreePoint3d(struct soap *soap, resqml2__ThreePoint3d *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ThreePoint3d(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Point3dHdf5Array(struct soap*, const char*, int, const resqml2__Point3dHdf5Array *, const char*);
SOAP_FMAC3 resqml2__Point3dHdf5Array * SOAP_FMAC4 soap_in_resqml2__Point3dHdf5Array(struct soap*, const char*, resqml2__Point3dHdf5Array *, const char*);
SOAP_FMAC1 resqml2__Point3dHdf5Array * SOAP_FMAC2 soap_instantiate_resqml2__Point3dHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Point3dHdf5Array * soap_new_resqml2__Point3dHdf5Array(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Point3dHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml2__Point3dHdf5Array * soap_new_req_resqml2__Point3dHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Coordinates)
{
	resqml2__Point3dHdf5Array *_p = soap_new_resqml2__Point3dHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dHdf5Array::Coordinates = Coordinates;
	}
	return _p;
}

inline resqml2__Point3dHdf5Array * soap_new_set_resqml2__Point3dHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Coordinates)
{
	resqml2__Point3dHdf5Array *_p = soap_new_resqml2__Point3dHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dHdf5Array::Coordinates = Coordinates;
	}
	return _p;
}

inline int soap_write_resqml2__Point3dHdf5Array(struct soap *soap, resqml2__Point3dHdf5Array const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Point3dHdf5Array", "resqml2:Point3dHdf5Array") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Point3dHdf5Array * SOAP_FMAC4 soap_get_resqml2__Point3dHdf5Array(struct soap*, resqml2__Point3dHdf5Array *, const char*, const char*);

inline int soap_read_resqml2__Point3dHdf5Array(struct soap *soap, resqml2__Point3dHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Point3dHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractGeometry(struct soap*, const char*, int, const resqml2__AbstractGeometry *, const char*);
SOAP_FMAC3 resqml2__AbstractGeometry * SOAP_FMAC4 soap_in_resqml2__AbstractGeometry(struct soap*, const char*, resqml2__AbstractGeometry *, const char*);
SOAP_FMAC1 resqml2__AbstractGeometry * SOAP_FMAC2 soap_instantiate_resqml2__AbstractGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractGeometry * soap_new_resqml2__AbstractGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractGeometry * soap_new_req_resqml2__AbstractGeometry(
	struct soap *soap,
	eml__DataObjectReference *LocalCrs)
{
	resqml2__AbstractGeometry *_p = soap_new_resqml2__AbstractGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs;
	}
	return _p;
}

inline resqml2__AbstractGeometry * soap_new_set_resqml2__AbstractGeometry(
	struct soap *soap,
	resqml2__TimeIndex *TimeIndex,
	eml__DataObjectReference *LocalCrs)
{
	resqml2__AbstractGeometry *_p = soap_new_resqml2__AbstractGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractGeometry(struct soap *soap, resqml2__AbstractGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractGeometry", "resqml2:AbstractGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractGeometry * SOAP_FMAC4 soap_get_resqml2__AbstractGeometry(struct soap*, resqml2__AbstractGeometry *, const char*, const char*);

inline int soap_read_resqml2__AbstractGeometry(struct soap *soap, resqml2__AbstractGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractPoint3dArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractPoint3dArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractPoint3dArray(struct soap*, const char*, int, const resqml2__AbstractPoint3dArray *, const char*);
SOAP_FMAC3 resqml2__AbstractPoint3dArray * SOAP_FMAC4 soap_in_resqml2__AbstractPoint3dArray(struct soap*, const char*, resqml2__AbstractPoint3dArray *, const char*);
SOAP_FMAC1 resqml2__AbstractPoint3dArray * SOAP_FMAC2 soap_instantiate_resqml2__AbstractPoint3dArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractPoint3dArray * soap_new_resqml2__AbstractPoint3dArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractPoint3dArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractPoint3dArray * soap_new_req_resqml2__AbstractPoint3dArray(
	struct soap *soap)
{
	resqml2__AbstractPoint3dArray *_p = soap_new_resqml2__AbstractPoint3dArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AbstractPoint3dArray * soap_new_set_resqml2__AbstractPoint3dArray(
	struct soap *soap)
{
	resqml2__AbstractPoint3dArray *_p = soap_new_resqml2__AbstractPoint3dArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml2__AbstractPoint3dArray(struct soap *soap, resqml2__AbstractPoint3dArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractPoint3dArray", "resqml2:AbstractPoint3dArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractPoint3dArray * SOAP_FMAC4 soap_get_resqml2__AbstractPoint3dArray(struct soap*, resqml2__AbstractPoint3dArray *, const char*, const char*);

inline int soap_read_resqml2__AbstractPoint3dArray(struct soap *soap, resqml2__AbstractPoint3dArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractPoint3dArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PointGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PointGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__PointGeometry(struct soap*, const char*, int, const resqml2__PointGeometry *, const char*);
SOAP_FMAC3 resqml2__PointGeometry * SOAP_FMAC4 soap_in_resqml2__PointGeometry(struct soap*, const char*, resqml2__PointGeometry *, const char*);
SOAP_FMAC1 resqml2__PointGeometry * SOAP_FMAC2 soap_instantiate_resqml2__PointGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__PointGeometry * soap_new_resqml2__PointGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__PointGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__PointGeometry * soap_new_req_resqml2__PointGeometry(
	struct soap *soap,
	resqml2__AbstractPoint3dArray *Points,
	eml__DataObjectReference *LocalCrs1)
{
	resqml2__PointGeometry *_p = soap_new_resqml2__PointGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PointGeometry::Points = Points;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs1;
	}
	return _p;
}

inline resqml2__PointGeometry * soap_new_set_resqml2__PointGeometry(
	struct soap *soap,
	resqml2__AbstractPoint3dArray *Points,
	resqml2__AbstractSeismicCoordinates *SeismicCoordinates,
	resqml2__TimeIndex *TimeIndex1,
	eml__DataObjectReference *LocalCrs1)
{
	resqml2__PointGeometry *_p = soap_new_resqml2__PointGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PointGeometry::Points = Points;
		_p->resqml2__PointGeometry::SeismicCoordinates = SeismicCoordinates;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex1;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs1;
	}
	return _p;
}

inline int soap_write_resqml2__PointGeometry(struct soap *soap, resqml2__PointGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:PointGeometry", "resqml2:PointGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__PointGeometry * SOAP_FMAC4 soap_get_resqml2__PointGeometry(struct soap*, resqml2__PointGeometry *, const char*, const char*);

inline int soap_read_resqml2__PointGeometry(struct soap *soap, resqml2__PointGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__PointGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__HorizontalPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__HorizontalPlaneGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__HorizontalPlaneGeometry(struct soap*, const char*, int, const resqml2__HorizontalPlaneGeometry *, const char*);
SOAP_FMAC3 resqml2__HorizontalPlaneGeometry * SOAP_FMAC4 soap_in_resqml2__HorizontalPlaneGeometry(struct soap*, const char*, resqml2__HorizontalPlaneGeometry *, const char*);
SOAP_FMAC1 resqml2__HorizontalPlaneGeometry * SOAP_FMAC2 soap_instantiate_resqml2__HorizontalPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__HorizontalPlaneGeometry * soap_new_resqml2__HorizontalPlaneGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__HorizontalPlaneGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__HorizontalPlaneGeometry * soap_new_req_resqml2__HorizontalPlaneGeometry(
	struct soap *soap,
	double Coordinate,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__HorizontalPlaneGeometry *_p = soap_new_resqml2__HorizontalPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__HorizontalPlaneGeometry::Coordinate = Coordinate;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline resqml2__HorizontalPlaneGeometry * soap_new_set_resqml2__HorizontalPlaneGeometry(
	struct soap *soap,
	double Coordinate,
	resqml2__TimeIndex *TimeIndex2,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__HorizontalPlaneGeometry *_p = soap_new_resqml2__HorizontalPlaneGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__HorizontalPlaneGeometry::Coordinate = Coordinate;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex2;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline int soap_write_resqml2__HorizontalPlaneGeometry(struct soap *soap, resqml2__HorizontalPlaneGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:HorizontalPlaneGeometry", "resqml2:HorizontalPlaneGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__HorizontalPlaneGeometry * SOAP_FMAC4 soap_get_resqml2__HorizontalPlaneGeometry(struct soap*, resqml2__HorizontalPlaneGeometry *, const char*, const char*);

inline int soap_read_resqml2__HorizontalPlaneGeometry(struct soap *soap, resqml2__HorizontalPlaneGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__HorizontalPlaneGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dZValueArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dZValueArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Point3dZValueArray(struct soap*, const char*, int, const resqml2__Point3dZValueArray *, const char*);
SOAP_FMAC3 resqml2__Point3dZValueArray * SOAP_FMAC4 soap_in_resqml2__Point3dZValueArray(struct soap*, const char*, resqml2__Point3dZValueArray *, const char*);
SOAP_FMAC1 resqml2__Point3dZValueArray * SOAP_FMAC2 soap_instantiate_resqml2__Point3dZValueArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Point3dZValueArray * soap_new_resqml2__Point3dZValueArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Point3dZValueArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__Point3dZValueArray * soap_new_req_resqml2__Point3dZValueArray(
	struct soap *soap,
	resqml2__AbstractPoint3dArray *SupportingGeometry,
	resqml2__AbstractDoubleArray *ZValues)
{
	resqml2__Point3dZValueArray *_p = soap_new_resqml2__Point3dZValueArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dZValueArray::SupportingGeometry = SupportingGeometry;
		_p->resqml2__Point3dZValueArray::ZValues = ZValues;
	}
	return _p;
}

inline resqml2__Point3dZValueArray * soap_new_set_resqml2__Point3dZValueArray(
	struct soap *soap,
	resqml2__AbstractPoint3dArray *SupportingGeometry,
	resqml2__AbstractDoubleArray *ZValues)
{
	resqml2__Point3dZValueArray *_p = soap_new_resqml2__Point3dZValueArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dZValueArray::SupportingGeometry = SupportingGeometry;
		_p->resqml2__Point3dZValueArray::ZValues = ZValues;
	}
	return _p;
}

inline int soap_write_resqml2__Point3dZValueArray(struct soap *soap, resqml2__Point3dZValueArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Point3dZValueArray", "resqml2:Point3dZValueArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Point3dZValueArray * SOAP_FMAC4 soap_get_resqml2__Point3dZValueArray(struct soap*, resqml2__Point3dZValueArray *, const char*, const char*);

inline int soap_read_resqml2__Point3dZValueArray(struct soap *soap, resqml2__Point3dZValueArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Point3dZValueArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Point3dLatticeArray(struct soap*, const char*, int, const resqml2__Point3dLatticeArray *, const char*);
SOAP_FMAC3 resqml2__Point3dLatticeArray * SOAP_FMAC4 soap_in_resqml2__Point3dLatticeArray(struct soap*, const char*, resqml2__Point3dLatticeArray *, const char*);
SOAP_FMAC1 resqml2__Point3dLatticeArray * SOAP_FMAC2 soap_instantiate_resqml2__Point3dLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Point3dLatticeArray * soap_new_resqml2__Point3dLatticeArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Point3dLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__Point3dLatticeArray * soap_new_req_resqml2__Point3dLatticeArray(
	struct soap *soap,
	resqml2__Point3d *Origin,
	const std::vector<resqml2__Point3dOffset *> & Offset)
{
	resqml2__Point3dLatticeArray *_p = soap_new_resqml2__Point3dLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dLatticeArray::Origin = Origin;
		_p->resqml2__Point3dLatticeArray::Offset = Offset;
	}
	return _p;
}

inline resqml2__Point3dLatticeArray * soap_new_set_resqml2__Point3dLatticeArray(
	struct soap *soap,
	bool *AllDimensionsAreOrthogonal,
	resqml2__Point3d *Origin,
	const std::vector<resqml2__Point3dOffset *> & Offset)
{
	resqml2__Point3dLatticeArray *_p = soap_new_resqml2__Point3dLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dLatticeArray::AllDimensionsAreOrthogonal = AllDimensionsAreOrthogonal;
		_p->resqml2__Point3dLatticeArray::Origin = Origin;
		_p->resqml2__Point3dLatticeArray::Offset = Offset;
	}
	return _p;
}

inline int soap_write_resqml2__Point3dLatticeArray(struct soap *soap, resqml2__Point3dLatticeArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Point3dLatticeArray", "resqml2:Point3dLatticeArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Point3dLatticeArray * SOAP_FMAC4 soap_get_resqml2__Point3dLatticeArray(struct soap*, resqml2__Point3dLatticeArray *, const char*, const char*);

inline int soap_read_resqml2__Point3dLatticeArray(struct soap *soap, resqml2__Point3dLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Point3dLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineFromRepresentationLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineFromRepresentationLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ParametricLineFromRepresentationLatticeArray(struct soap*, const char*, int, const resqml2__ParametricLineFromRepresentationLatticeArray *, const char*);
SOAP_FMAC3 resqml2__ParametricLineFromRepresentationLatticeArray * SOAP_FMAC4 soap_in_resqml2__ParametricLineFromRepresentationLatticeArray(struct soap*, const char*, resqml2__ParametricLineFromRepresentationLatticeArray *, const char*);
SOAP_FMAC1 resqml2__ParametricLineFromRepresentationLatticeArray * SOAP_FMAC2 soap_instantiate_resqml2__ParametricLineFromRepresentationLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ParametricLineFromRepresentationLatticeArray * soap_new_resqml2__ParametricLineFromRepresentationLatticeArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ParametricLineFromRepresentationLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__ParametricLineFromRepresentationLatticeArray * soap_new_req_resqml2__ParametricLineFromRepresentationLatticeArray(
	struct soap *soap,
	resqml2__IntegerLatticeArray *LineIndicesOnSupportingRepresentation,
	eml__DataObjectReference *SupportingRepresentation)
{
	resqml2__ParametricLineFromRepresentationLatticeArray *_p = soap_new_resqml2__ParametricLineFromRepresentationLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineFromRepresentationLatticeArray::LineIndicesOnSupportingRepresentation = LineIndicesOnSupportingRepresentation;
		_p->resqml2__ParametricLineFromRepresentationLatticeArray::SupportingRepresentation = SupportingRepresentation;
	}
	return _p;
}

inline resqml2__ParametricLineFromRepresentationLatticeArray * soap_new_set_resqml2__ParametricLineFromRepresentationLatticeArray(
	struct soap *soap,
	resqml2__IntegerLatticeArray *LineIndicesOnSupportingRepresentation,
	eml__DataObjectReference *SupportingRepresentation)
{
	resqml2__ParametricLineFromRepresentationLatticeArray *_p = soap_new_resqml2__ParametricLineFromRepresentationLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineFromRepresentationLatticeArray::LineIndicesOnSupportingRepresentation = LineIndicesOnSupportingRepresentation;
		_p->resqml2__ParametricLineFromRepresentationLatticeArray::SupportingRepresentation = SupportingRepresentation;
	}
	return _p;
}

inline int soap_write_resqml2__ParametricLineFromRepresentationLatticeArray(struct soap *soap, resqml2__ParametricLineFromRepresentationLatticeArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ParametricLineFromRepresentationLatticeArray", "resqml2:ParametricLineFromRepresentationLatticeArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ParametricLineFromRepresentationLatticeArray * SOAP_FMAC4 soap_get_resqml2__ParametricLineFromRepresentationLatticeArray(struct soap*, resqml2__ParametricLineFromRepresentationLatticeArray *, const char*, const char*);

inline int soap_read_resqml2__ParametricLineFromRepresentationLatticeArray(struct soap *soap, resqml2__ParametricLineFromRepresentationLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ParametricLineFromRepresentationLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__ParametricLineGeometry_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__ParametricLineGeometry(struct soap*, const char*, int, const resqml2__ParametricLineGeometry *, const char*);
SOAP_FMAC3 resqml2__ParametricLineGeometry * SOAP_FMAC4 soap_in_resqml2__ParametricLineGeometry(struct soap*, const char*, resqml2__ParametricLineGeometry *, const char*);
SOAP_FMAC1 resqml2__ParametricLineGeometry * SOAP_FMAC2 soap_instantiate_resqml2__ParametricLineGeometry(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__ParametricLineGeometry * soap_new_resqml2__ParametricLineGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__ParametricLineGeometry(soap, n, NULL, NULL, NULL);
}

inline resqml2__ParametricLineGeometry * soap_new_req_resqml2__ParametricLineGeometry(
	struct soap *soap,
	resqml2__AbstractPoint3dArray *ControlPoints,
	ULONG64 KnotCount,
	LONG64 LineKindIndex,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__ParametricLineGeometry *_p = soap_new_resqml2__ParametricLineGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineGeometry::ControlPoints = ControlPoints;
		_p->resqml2__ParametricLineGeometry::KnotCount = KnotCount;
		_p->resqml2__ParametricLineGeometry::LineKindIndex = LineKindIndex;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline resqml2__ParametricLineGeometry * soap_new_set_resqml2__ParametricLineGeometry(
	struct soap *soap,
	resqml2__AbstractDoubleArray *ControlPointParameters,
	resqml2__AbstractPoint3dArray *ControlPoints,
	ULONG64 KnotCount,
	LONG64 LineKindIndex,
	resqml2__AbstractPoint3dArray *TangentVectors,
	resqml2__TimeIndex *TimeIndex2,
	eml__DataObjectReference *LocalCrs2)
{
	resqml2__ParametricLineGeometry *_p = soap_new_resqml2__ParametricLineGeometry(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__ParametricLineGeometry::ControlPointParameters = ControlPointParameters;
		_p->resqml2__ParametricLineGeometry::ControlPoints = ControlPoints;
		_p->resqml2__ParametricLineGeometry::KnotCount = KnotCount;
		_p->resqml2__ParametricLineGeometry::LineKindIndex = LineKindIndex;
		_p->resqml2__ParametricLineGeometry::TangentVectors = TangentVectors;
		_p->resqml2__AbstractGeometry::TimeIndex = TimeIndex2;
		_p->resqml2__AbstractGeometry::LocalCrs = LocalCrs2;
	}
	return _p;
}

inline int soap_write_resqml2__ParametricLineGeometry(struct soap *soap, resqml2__ParametricLineGeometry const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:ParametricLineGeometry", "resqml2:ParametricLineGeometry") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__ParametricLineGeometry * SOAP_FMAC4 soap_get_resqml2__ParametricLineGeometry(struct soap*, resqml2__ParametricLineGeometry *, const char*, const char*);

inline int soap_read_resqml2__ParametricLineGeometry(struct soap *soap, resqml2__ParametricLineGeometry *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__ParametricLineGeometry(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point2dHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point2dHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Point2dHdf5Array(struct soap*, const char*, int, const resqml2__Point2dHdf5Array *, const char*);
SOAP_FMAC3 resqml2__Point2dHdf5Array * SOAP_FMAC4 soap_in_resqml2__Point2dHdf5Array(struct soap*, const char*, resqml2__Point2dHdf5Array *, const char*);
SOAP_FMAC1 resqml2__Point2dHdf5Array * SOAP_FMAC2 soap_instantiate_resqml2__Point2dHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Point2dHdf5Array * soap_new_resqml2__Point2dHdf5Array(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Point2dHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml2__Point2dHdf5Array * soap_new_req_resqml2__Point2dHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Coordinates)
{
	resqml2__Point2dHdf5Array *_p = soap_new_resqml2__Point2dHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point2dHdf5Array::Coordinates = Coordinates;
	}
	return _p;
}

inline resqml2__Point2dHdf5Array * soap_new_set_resqml2__Point2dHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Coordinates)
{
	resqml2__Point2dHdf5Array *_p = soap_new_resqml2__Point2dHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point2dHdf5Array::Coordinates = Coordinates;
	}
	return _p;
}

inline int soap_write_resqml2__Point2dHdf5Array(struct soap *soap, resqml2__Point2dHdf5Array const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Point2dHdf5Array", "resqml2:Point2dHdf5Array") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Point2dHdf5Array * SOAP_FMAC4 soap_get_resqml2__Point2dHdf5Array(struct soap*, resqml2__Point2dHdf5Array *, const char*, const char*);

inline int soap_read_resqml2__Point2dHdf5Array(struct soap *soap, resqml2__Point2dHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Point2dHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dOffset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__Point3dOffset_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__Point3dOffset(struct soap*, const char*, int, const resqml2__Point3dOffset *, const char*);
SOAP_FMAC3 resqml2__Point3dOffset * SOAP_FMAC4 soap_in_resqml2__Point3dOffset(struct soap*, const char*, resqml2__Point3dOffset *, const char*);
SOAP_FMAC1 resqml2__Point3dOffset * SOAP_FMAC2 soap_instantiate_resqml2__Point3dOffset(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__Point3dOffset * soap_new_resqml2__Point3dOffset(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__Point3dOffset(soap, n, NULL, NULL, NULL);
}

inline resqml2__Point3dOffset * soap_new_req_resqml2__Point3dOffset(
	struct soap *soap,
	resqml2__Point3d *Offset,
	resqml2__AbstractDoubleArray *Spacing)
{
	resqml2__Point3dOffset *_p = soap_new_resqml2__Point3dOffset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dOffset::Offset = Offset;
		_p->resqml2__Point3dOffset::Spacing = Spacing;
	}
	return _p;
}

inline resqml2__Point3dOffset * soap_new_set_resqml2__Point3dOffset(
	struct soap *soap,
	resqml2__Point3d *Offset,
	resqml2__AbstractDoubleArray *Spacing)
{
	resqml2__Point3dOffset *_p = soap_new_resqml2__Point3dOffset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__Point3dOffset::Offset = Offset;
		_p->resqml2__Point3dOffset::Spacing = Spacing;
	}
	return _p;
}

inline int soap_write_resqml2__Point3dOffset(struct soap *soap, resqml2__Point3dOffset const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:Point3dOffset", "resqml2:Point3dOffset") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__Point3dOffset * SOAP_FMAC4 soap_get_resqml2__Point3dOffset(struct soap*, resqml2__Point3dOffset *, const char*, const char*);

inline int soap_read_resqml2__Point3dOffset(struct soap *soap, resqml2__Point3dOffset *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__Point3dOffset(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BooleanArrayFromDiscretePropertyArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BooleanArrayFromDiscretePropertyArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__BooleanArrayFromDiscretePropertyArray(struct soap*, const char*, int, const resqml2__BooleanArrayFromDiscretePropertyArray *, const char*);
SOAP_FMAC3 resqml2__BooleanArrayFromDiscretePropertyArray * SOAP_FMAC4 soap_in_resqml2__BooleanArrayFromDiscretePropertyArray(struct soap*, const char*, resqml2__BooleanArrayFromDiscretePropertyArray *, const char*);
SOAP_FMAC1 resqml2__BooleanArrayFromDiscretePropertyArray * SOAP_FMAC2 soap_instantiate_resqml2__BooleanArrayFromDiscretePropertyArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__BooleanArrayFromDiscretePropertyArray * soap_new_resqml2__BooleanArrayFromDiscretePropertyArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__BooleanArrayFromDiscretePropertyArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__BooleanArrayFromDiscretePropertyArray * soap_new_req_resqml2__BooleanArrayFromDiscretePropertyArray(
	struct soap *soap,
	LONG64 Value,
	eml__DataObjectReference *Property)
{
	resqml2__BooleanArrayFromDiscretePropertyArray *_p = soap_new_resqml2__BooleanArrayFromDiscretePropertyArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BooleanArrayFromDiscretePropertyArray::Value = Value;
		_p->resqml2__BooleanArrayFromDiscretePropertyArray::Property = Property;
	}
	return _p;
}

inline resqml2__BooleanArrayFromDiscretePropertyArray * soap_new_set_resqml2__BooleanArrayFromDiscretePropertyArray(
	struct soap *soap,
	LONG64 Value,
	eml__DataObjectReference *Property)
{
	resqml2__BooleanArrayFromDiscretePropertyArray *_p = soap_new_resqml2__BooleanArrayFromDiscretePropertyArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BooleanArrayFromDiscretePropertyArray::Value = Value;
		_p->resqml2__BooleanArrayFromDiscretePropertyArray::Property = Property;
	}
	return _p;
}

inline int soap_write_resqml2__BooleanArrayFromDiscretePropertyArray(struct soap *soap, resqml2__BooleanArrayFromDiscretePropertyArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:BooleanArrayFromDiscretePropertyArray", "resqml2:BooleanArrayFromDiscretePropertyArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__BooleanArrayFromDiscretePropertyArray * SOAP_FMAC4 soap_get_resqml2__BooleanArrayFromDiscretePropertyArray(struct soap*, resqml2__BooleanArrayFromDiscretePropertyArray *, const char*, const char*);

inline int soap_read_resqml2__BooleanArrayFromDiscretePropertyArray(struct soap *soap, resqml2__BooleanArrayFromDiscretePropertyArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__BooleanArrayFromDiscretePropertyArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DoubleLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DoubleLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__DoubleLookup(struct soap*, const char*, int, const resqml2__DoubleLookup *, const char*);
SOAP_FMAC3 resqml2__DoubleLookup * SOAP_FMAC4 soap_in_resqml2__DoubleLookup(struct soap*, const char*, resqml2__DoubleLookup *, const char*);
SOAP_FMAC1 resqml2__DoubleLookup * SOAP_FMAC2 soap_instantiate_resqml2__DoubleLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__DoubleLookup * soap_new_resqml2__DoubleLookup(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__DoubleLookup(soap, n, NULL, NULL, NULL);
}

inline resqml2__DoubleLookup * soap_new_req_resqml2__DoubleLookup(
	struct soap *soap,
	double Key,
	double Value)
{
	resqml2__DoubleLookup *_p = soap_new_resqml2__DoubleLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DoubleLookup::Key = Key;
		_p->resqml2__DoubleLookup::Value = Value;
	}
	return _p;
}

inline resqml2__DoubleLookup * soap_new_set_resqml2__DoubleLookup(
	struct soap *soap,
	double Key,
	double Value)
{
	resqml2__DoubleLookup *_p = soap_new_resqml2__DoubleLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DoubleLookup::Key = Key;
		_p->resqml2__DoubleLookup::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml2__DoubleLookup(struct soap *soap, resqml2__DoubleLookup const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:DoubleLookup", "resqml2:DoubleLookup") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__DoubleLookup * SOAP_FMAC4 soap_get_resqml2__DoubleLookup(struct soap*, resqml2__DoubleLookup *, const char*, const char*);

inline int soap_read_resqml2__DoubleLookup(struct soap *soap, resqml2__DoubleLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__DoubleLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__LocalPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__LocalPropertyKind_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__LocalPropertyKind(struct soap*, const char*, int, const resqml2__LocalPropertyKind *, const char*);
SOAP_FMAC3 resqml2__LocalPropertyKind * SOAP_FMAC4 soap_in_resqml2__LocalPropertyKind(struct soap*, const char*, resqml2__LocalPropertyKind *, const char*);
SOAP_FMAC1 resqml2__LocalPropertyKind * SOAP_FMAC2 soap_instantiate_resqml2__LocalPropertyKind(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__LocalPropertyKind * soap_new_resqml2__LocalPropertyKind(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__LocalPropertyKind(soap, n, NULL, NULL, NULL);
}

inline resqml2__LocalPropertyKind * soap_new_req_resqml2__LocalPropertyKind(
	struct soap *soap,
	eml__DataObjectReference *LocalPropertyKind)
{
	resqml2__LocalPropertyKind *_p = soap_new_resqml2__LocalPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__LocalPropertyKind::LocalPropertyKind = LocalPropertyKind;
	}
	return _p;
}

inline resqml2__LocalPropertyKind * soap_new_set_resqml2__LocalPropertyKind(
	struct soap *soap,
	eml__DataObjectReference *LocalPropertyKind)
{
	resqml2__LocalPropertyKind *_p = soap_new_resqml2__LocalPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__LocalPropertyKind::LocalPropertyKind = LocalPropertyKind;
	}
	return _p;
}

inline int soap_write_resqml2__LocalPropertyKind(struct soap *soap, resqml2__LocalPropertyKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:LocalPropertyKind", "resqml2:LocalPropertyKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__LocalPropertyKind * SOAP_FMAC4 soap_get_resqml2__LocalPropertyKind(struct soap*, resqml2__LocalPropertyKind *, const char*, const char*);

inline int soap_read_resqml2__LocalPropertyKind(struct soap *soap, resqml2__LocalPropertyKind *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__LocalPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractValuesProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractValuesProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractValuesProperty(struct soap*, const char*, int, const resqml2__AbstractValuesProperty *, const char*);
SOAP_FMAC3 resqml2__AbstractValuesProperty * SOAP_FMAC4 soap_in_resqml2__AbstractValuesProperty(struct soap*, const char*, resqml2__AbstractValuesProperty *, const char*);
SOAP_FMAC1 resqml2__AbstractValuesProperty * SOAP_FMAC2 soap_instantiate_resqml2__AbstractValuesProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractValuesProperty * soap_new_resqml2__AbstractValuesProperty(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractValuesProperty(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractValuesProperty * soap_new_req_resqml2__AbstractValuesProperty(
	struct soap *soap,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues,
	ULONG64 Count1,
	enum resqml2__IndexableElements IndexableElement1,
	eml__DataObjectReference *SupportingRepresentation1,
	resqml2__AbstractPropertyKind *PropertyKind1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractValuesProperty *_p = soap_new_resqml2__AbstractValuesProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues;
		_p->resqml2__AbstractProperty::Count = Count1;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement1;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation1;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__AbstractValuesProperty * soap_new_set_resqml2__AbstractValuesProperty(
	struct soap *soap,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues,
	const std::vector<resqml2__PropertyKindFacet *> & Facet,
	ULONG64 Count1,
	enum resqml2__IndexableElements IndexableElement1,
	ULONG64 *RealizationIndex1,
	ULONG64 *TimeStep1,
	resqml2__TimeIndex *TimeIndex1,
	eml__DataObjectReference *SupportingRepresentation1,
	eml__DataObjectReference *LocalCrs1,
	resqml2__AbstractPropertyKind *PropertyKind1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__AbstractValuesProperty *_p = soap_new_resqml2__AbstractValuesProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues;
		_p->resqml2__AbstractValuesProperty::Facet = Facet;
		_p->resqml2__AbstractProperty::Count = Count1;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement1;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex1;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep1;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex1;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation1;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs1;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractValuesProperty(struct soap *soap, resqml2__AbstractValuesProperty const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractValuesProperty", "resqml2:AbstractValuesProperty") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractValuesProperty * SOAP_FMAC4 soap_get_resqml2__AbstractValuesProperty(struct soap*, resqml2__AbstractValuesProperty *, const char*, const char*);

inline int soap_read_resqml2__AbstractValuesProperty(struct soap *soap, resqml2__AbstractValuesProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractValuesProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StandardPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StandardPropertyKind_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__StandardPropertyKind(struct soap*, const char*, int, const resqml2__StandardPropertyKind *, const char*);
SOAP_FMAC3 resqml2__StandardPropertyKind * SOAP_FMAC4 soap_in_resqml2__StandardPropertyKind(struct soap*, const char*, resqml2__StandardPropertyKind *, const char*);
SOAP_FMAC1 resqml2__StandardPropertyKind * SOAP_FMAC2 soap_instantiate_resqml2__StandardPropertyKind(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__StandardPropertyKind * soap_new_resqml2__StandardPropertyKind(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__StandardPropertyKind(soap, n, NULL, NULL, NULL);
}

inline resqml2__StandardPropertyKind * soap_new_req_resqml2__StandardPropertyKind(
	struct soap *soap,
	enum resqml2__ResqmlPropertyKind Kind)
{
	resqml2__StandardPropertyKind *_p = soap_new_resqml2__StandardPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StandardPropertyKind::Kind = Kind;
	}
	return _p;
}

inline resqml2__StandardPropertyKind * soap_new_set_resqml2__StandardPropertyKind(
	struct soap *soap,
	enum resqml2__ResqmlPropertyKind Kind)
{
	resqml2__StandardPropertyKind *_p = soap_new_resqml2__StandardPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StandardPropertyKind::Kind = Kind;
	}
	return _p;
}

inline int soap_write_resqml2__StandardPropertyKind(struct soap *soap, resqml2__StandardPropertyKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:StandardPropertyKind", "resqml2:StandardPropertyKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__StandardPropertyKind * SOAP_FMAC4 soap_get_resqml2__StandardPropertyKind(struct soap*, resqml2__StandardPropertyKind *, const char*, const char*);

inline int soap_read_resqml2__StandardPropertyKind(struct soap *soap, resqml2__StandardPropertyKind *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__StandardPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PropertyValuesPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PropertyValuesPatch_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__PropertyValuesPatch(struct soap*, const char*, int, const resqml2__PropertyValuesPatch *, const char*);
SOAP_FMAC3 resqml2__PropertyValuesPatch * SOAP_FMAC4 soap_in_resqml2__PropertyValuesPatch(struct soap*, const char*, resqml2__PropertyValuesPatch *, const char*);
SOAP_FMAC1 resqml2__PropertyValuesPatch * SOAP_FMAC2 soap_instantiate_resqml2__PropertyValuesPatch(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__PropertyValuesPatch * soap_new_resqml2__PropertyValuesPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__PropertyValuesPatch(soap, n, NULL, NULL, NULL);
}

inline resqml2__PropertyValuesPatch * soap_new_req_resqml2__PropertyValuesPatch(
	struct soap *soap,
	ULONG64 patchUid,
	resqml2__AbstractValueArray *values)
{
	resqml2__PropertyValuesPatch *_p = soap_new_resqml2__PropertyValuesPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PropertyValuesPatch::patchUid = patchUid;
		_p->resqml2__PropertyValuesPatch::values = values;
	}
	return _p;
}

inline resqml2__PropertyValuesPatch * soap_new_set_resqml2__PropertyValuesPatch(
	struct soap *soap,
	ULONG64 patchUid,
	resqml2__AbstractValueArray *values)
{
	resqml2__PropertyValuesPatch *_p = soap_new_resqml2__PropertyValuesPatch(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PropertyValuesPatch::patchUid = patchUid;
		_p->resqml2__PropertyValuesPatch::values = values;
	}
	return _p;
}

inline int soap_write_resqml2__PropertyValuesPatch(struct soap *soap, resqml2__PropertyValuesPatch const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:PropertyValuesPatch", "resqml2:PropertyValuesPatch") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__PropertyValuesPatch * SOAP_FMAC4 soap_get_resqml2__PropertyValuesPatch(struct soap*, resqml2__PropertyValuesPatch *, const char*, const char*);

inline int soap_read_resqml2__PropertyValuesPatch(struct soap *soap, resqml2__PropertyValuesPatch *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__PropertyValuesPatch(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractBooleanArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractBooleanArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractBooleanArray(struct soap*, const char*, int, const resqml2__AbstractBooleanArray *, const char*);
SOAP_FMAC3 resqml2__AbstractBooleanArray * SOAP_FMAC4 soap_in_resqml2__AbstractBooleanArray(struct soap*, const char*, resqml2__AbstractBooleanArray *, const char*);
SOAP_FMAC1 resqml2__AbstractBooleanArray * SOAP_FMAC2 soap_instantiate_resqml2__AbstractBooleanArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractBooleanArray * soap_new_resqml2__AbstractBooleanArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractBooleanArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractBooleanArray * soap_new_req_resqml2__AbstractBooleanArray(
	struct soap *soap)
{
	resqml2__AbstractBooleanArray *_p = soap_new_resqml2__AbstractBooleanArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AbstractBooleanArray * soap_new_set_resqml2__AbstractBooleanArray(
	struct soap *soap)
{
	resqml2__AbstractBooleanArray *_p = soap_new_resqml2__AbstractBooleanArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml2__AbstractBooleanArray(struct soap *soap, resqml2__AbstractBooleanArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractBooleanArray", "resqml2:AbstractBooleanArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractBooleanArray * SOAP_FMAC4 soap_get_resqml2__AbstractBooleanArray(struct soap*, resqml2__AbstractBooleanArray *, const char*, const char*);

inline int soap_read_resqml2__AbstractBooleanArray(struct soap *soap, resqml2__AbstractBooleanArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractBooleanArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractIntegerArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractIntegerArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractIntegerArray(struct soap*, const char*, int, const resqml2__AbstractIntegerArray *, const char*);
SOAP_FMAC3 resqml2__AbstractIntegerArray * SOAP_FMAC4 soap_in_resqml2__AbstractIntegerArray(struct soap*, const char*, resqml2__AbstractIntegerArray *, const char*);
SOAP_FMAC1 resqml2__AbstractIntegerArray * SOAP_FMAC2 soap_instantiate_resqml2__AbstractIntegerArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractIntegerArray * soap_new_resqml2__AbstractIntegerArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractIntegerArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractIntegerArray * soap_new_req_resqml2__AbstractIntegerArray(
	struct soap *soap)
{
	resqml2__AbstractIntegerArray *_p = soap_new_resqml2__AbstractIntegerArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AbstractIntegerArray * soap_new_set_resqml2__AbstractIntegerArray(
	struct soap *soap)
{
	resqml2__AbstractIntegerArray *_p = soap_new_resqml2__AbstractIntegerArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml2__AbstractIntegerArray(struct soap *soap, resqml2__AbstractIntegerArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractIntegerArray", "resqml2:AbstractIntegerArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractIntegerArray * SOAP_FMAC4 soap_get_resqml2__AbstractIntegerArray(struct soap*, resqml2__AbstractIntegerArray *, const char*, const char*);

inline int soap_read_resqml2__AbstractIntegerArray(struct soap *soap, resqml2__AbstractIntegerArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractIntegerArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractProperty(struct soap*, const char*, int, const resqml2__AbstractProperty *, const char*);
SOAP_FMAC3 resqml2__AbstractProperty * SOAP_FMAC4 soap_in_resqml2__AbstractProperty(struct soap*, const char*, resqml2__AbstractProperty *, const char*);
SOAP_FMAC1 resqml2__AbstractProperty * SOAP_FMAC2 soap_instantiate_resqml2__AbstractProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractProperty * soap_new_resqml2__AbstractProperty(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractProperty(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractProperty * soap_new_req_resqml2__AbstractProperty(
	struct soap *soap,
	ULONG64 Count,
	enum resqml2__IndexableElements IndexableElement,
	eml__DataObjectReference *SupportingRepresentation,
	resqml2__AbstractPropertyKind *PropertyKind,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractProperty *_p = soap_new_resqml2__AbstractProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractProperty::Count = Count;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__AbstractProperty * soap_new_set_resqml2__AbstractProperty(
	struct soap *soap,
	ULONG64 Count,
	enum resqml2__IndexableElements IndexableElement,
	ULONG64 *RealizationIndex,
	ULONG64 *TimeStep,
	resqml2__TimeIndex *TimeIndex,
	eml__DataObjectReference *SupportingRepresentation,
	eml__DataObjectReference *LocalCrs,
	resqml2__AbstractPropertyKind *PropertyKind,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractProperty *_p = soap_new_resqml2__AbstractProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractProperty::Count = Count;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractProperty(struct soap *soap, resqml2__AbstractProperty const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractProperty", "resqml2:AbstractProperty") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractProperty * SOAP_FMAC4 soap_get_resqml2__AbstractProperty(struct soap*, resqml2__AbstractProperty *, const char*, const char*);

inline int soap_read_resqml2__AbstractProperty(struct soap *soap, resqml2__AbstractProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPropertySet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPropertySet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREPropertySet(struct soap*, const char*, int, const resqml2__obj_USCOREPropertySet *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREPropertySet * SOAP_FMAC4 soap_in_resqml2__obj_USCOREPropertySet(struct soap*, const char*, resqml2__obj_USCOREPropertySet *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREPropertySet * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREPropertySet(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREPropertySet * soap_new_resqml2__obj_USCOREPropertySet(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREPropertySet(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREPropertySet * soap_new_req_resqml2__obj_USCOREPropertySet(
	struct soap *soap,
	enum resqml2__TimeSetKind TimeSetKind,
	bool HasSinglePropertyKind,
	bool HasMultipleRealizations,
	const std::vector<eml__DataObjectReference *> & Properties,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREPropertySet *_p = soap_new_resqml2__obj_USCOREPropertySet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPropertySet::TimeSetKind = TimeSetKind;
		_p->resqml2__obj_USCOREPropertySet::HasSinglePropertyKind = HasSinglePropertyKind;
		_p->resqml2__obj_USCOREPropertySet::HasMultipleRealizations = HasMultipleRealizations;
		_p->resqml2__obj_USCOREPropertySet::Properties = Properties;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCOREPropertySet * soap_new_set_resqml2__obj_USCOREPropertySet(
	struct soap *soap,
	enum resqml2__TimeSetKind TimeSetKind,
	bool HasSinglePropertyKind,
	bool HasMultipleRealizations,
	const std::vector<eml__DataObjectReference *> & ParentSet,
	const std::vector<eml__DataObjectReference *> & Properties,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREPropertySet *_p = soap_new_resqml2__obj_USCOREPropertySet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPropertySet::TimeSetKind = TimeSetKind;
		_p->resqml2__obj_USCOREPropertySet::HasSinglePropertyKind = HasSinglePropertyKind;
		_p->resqml2__obj_USCOREPropertySet::HasMultipleRealizations = HasMultipleRealizations;
		_p->resqml2__obj_USCOREPropertySet::ParentSet = ParentSet;
		_p->resqml2__obj_USCOREPropertySet::Properties = Properties;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREPropertySet(struct soap *soap, resqml2__obj_USCOREPropertySet const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_PropertySet", "resqml2:obj_PropertySet") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREPropertySet * SOAP_FMAC4 soap_get_resqml2__obj_USCOREPropertySet(struct soap*, resqml2__obj_USCOREPropertySet *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREPropertySet(struct soap *soap, resqml2__obj_USCOREPropertySet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREPropertySet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerRangeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerRangeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IntegerRangeArray(struct soap*, const char*, int, const resqml2__IntegerRangeArray *, const char*);
SOAP_FMAC3 resqml2__IntegerRangeArray * SOAP_FMAC4 soap_in_resqml2__IntegerRangeArray(struct soap*, const char*, resqml2__IntegerRangeArray *, const char*);
SOAP_FMAC1 resqml2__IntegerRangeArray * SOAP_FMAC2 soap_instantiate_resqml2__IntegerRangeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IntegerRangeArray * soap_new_resqml2__IntegerRangeArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IntegerRangeArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__IntegerRangeArray * soap_new_req_resqml2__IntegerRangeArray(
	struct soap *soap,
	ULONG64 Count,
	LONG64 Value)
{
	resqml2__IntegerRangeArray *_p = soap_new_resqml2__IntegerRangeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerRangeArray::Count = Count;
		_p->resqml2__IntegerRangeArray::Value = Value;
	}
	return _p;
}

inline resqml2__IntegerRangeArray * soap_new_set_resqml2__IntegerRangeArray(
	struct soap *soap,
	ULONG64 Count,
	LONG64 Value)
{
	resqml2__IntegerRangeArray *_p = soap_new_resqml2__IntegerRangeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerRangeArray::Count = Count;
		_p->resqml2__IntegerRangeArray::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml2__IntegerRangeArray(struct soap *soap, resqml2__IntegerRangeArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IntegerRangeArray", "resqml2:IntegerRangeArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IntegerRangeArray * SOAP_FMAC4 soap_get_resqml2__IntegerRangeArray(struct soap*, resqml2__IntegerRangeArray *, const char*, const char*);

inline int soap_read_resqml2__IntegerRangeArray(struct soap *soap, resqml2__IntegerRangeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IntegerRangeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractPropertyLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractPropertyLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractPropertyLookup(struct soap*, const char*, int, const resqml2__AbstractPropertyLookup *, const char*);
SOAP_FMAC3 resqml2__AbstractPropertyLookup * SOAP_FMAC4 soap_in_resqml2__AbstractPropertyLookup(struct soap*, const char*, resqml2__AbstractPropertyLookup *, const char*);
SOAP_FMAC1 resqml2__AbstractPropertyLookup * SOAP_FMAC2 soap_instantiate_resqml2__AbstractPropertyLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractPropertyLookup * soap_new_resqml2__AbstractPropertyLookup(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractPropertyLookup(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractPropertyLookup * soap_new_req_resqml2__AbstractPropertyLookup(
	struct soap *soap,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractPropertyLookup *_p = soap_new_resqml2__AbstractPropertyLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__AbstractPropertyLookup * soap_new_set_resqml2__AbstractPropertyLookup(
	struct soap *soap,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__AbstractPropertyLookup *_p = soap_new_resqml2__AbstractPropertyLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__AbstractPropertyLookup(struct soap *soap, resqml2__AbstractPropertyLookup const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractPropertyLookup", "resqml2:AbstractPropertyLookup") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractPropertyLookup * SOAP_FMAC4 soap_get_resqml2__AbstractPropertyLookup(struct soap*, resqml2__AbstractPropertyLookup *, const char*, const char*);

inline int soap_read_resqml2__AbstractPropertyLookup(struct soap *soap, resqml2__AbstractPropertyLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractPropertyLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractValueArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractValueArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractValueArray(struct soap*, const char*, int, const resqml2__AbstractValueArray *, const char*);
SOAP_FMAC3 resqml2__AbstractValueArray * SOAP_FMAC4 soap_in_resqml2__AbstractValueArray(struct soap*, const char*, resqml2__AbstractValueArray *, const char*);
SOAP_FMAC1 resqml2__AbstractValueArray * SOAP_FMAC2 soap_instantiate_resqml2__AbstractValueArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractValueArray * soap_new_resqml2__AbstractValueArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractValueArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractValueArray * soap_new_req_resqml2__AbstractValueArray(
	struct soap *soap)
{
	resqml2__AbstractValueArray *_p = soap_new_resqml2__AbstractValueArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AbstractValueArray * soap_new_set_resqml2__AbstractValueArray(
	struct soap *soap)
{
	resqml2__AbstractValueArray *_p = soap_new_resqml2__AbstractValueArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml2__AbstractValueArray(struct soap *soap, resqml2__AbstractValueArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractValueArray", "resqml2:AbstractValueArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractValueArray * SOAP_FMAC4 soap_get_resqml2__AbstractValueArray(struct soap*, resqml2__AbstractValueArray *, const char*, const char*);

inline int soap_read_resqml2__AbstractValueArray(struct soap *soap, resqml2__AbstractValueArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractValueArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PatchOfValues_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PatchOfValues_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__PatchOfValues(struct soap*, const char*, int, const resqml2__PatchOfValues *, const char*);
SOAP_FMAC3 resqml2__PatchOfValues * SOAP_FMAC4 soap_in_resqml2__PatchOfValues(struct soap*, const char*, resqml2__PatchOfValues *, const char*);
SOAP_FMAC1 resqml2__PatchOfValues * SOAP_FMAC2 soap_instantiate_resqml2__PatchOfValues(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__PatchOfValues * soap_new_resqml2__PatchOfValues(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__PatchOfValues(soap, n, NULL, NULL, NULL);
}

inline resqml2__PatchOfValues * soap_new_req_resqml2__PatchOfValues(
	struct soap *soap,
	resqml2__AbstractValueArray *Values)
{
	resqml2__PatchOfValues *_p = soap_new_resqml2__PatchOfValues(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PatchOfValues::Values = Values;
	}
	return _p;
}

inline resqml2__PatchOfValues * soap_new_set_resqml2__PatchOfValues(
	struct soap *soap,
	ULONG64 *RepresentationPatchIndex,
	resqml2__AbstractValueArray *Values)
{
	resqml2__PatchOfValues *_p = soap_new_resqml2__PatchOfValues(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PatchOfValues::RepresentationPatchIndex = RepresentationPatchIndex;
		_p->resqml2__PatchOfValues::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml2__PatchOfValues(struct soap *soap, resqml2__PatchOfValues const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:PatchOfValues", "resqml2:PatchOfValues") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__PatchOfValues * SOAP_FMAC4 soap_get_resqml2__PatchOfValues(struct soap*, resqml2__PatchOfValues *, const char*, const char*);

inline int soap_read_resqml2__PatchOfValues(struct soap *soap, resqml2__PatchOfValues *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__PatchOfValues(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractPropertyKind_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractPropertyKind(struct soap*, const char*, int, const resqml2__AbstractPropertyKind *, const char*);
SOAP_FMAC3 resqml2__AbstractPropertyKind * SOAP_FMAC4 soap_in_resqml2__AbstractPropertyKind(struct soap*, const char*, resqml2__AbstractPropertyKind *, const char*);
SOAP_FMAC1 resqml2__AbstractPropertyKind * SOAP_FMAC2 soap_instantiate_resqml2__AbstractPropertyKind(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractPropertyKind * soap_new_resqml2__AbstractPropertyKind(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractPropertyKind(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractPropertyKind * soap_new_req_resqml2__AbstractPropertyKind(
	struct soap *soap)
{
	resqml2__AbstractPropertyKind *_p = soap_new_resqml2__AbstractPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AbstractPropertyKind * soap_new_set_resqml2__AbstractPropertyKind(
	struct soap *soap)
{
	resqml2__AbstractPropertyKind *_p = soap_new_resqml2__AbstractPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml2__AbstractPropertyKind(struct soap *soap, resqml2__AbstractPropertyKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractPropertyKind", "resqml2:AbstractPropertyKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractPropertyKind * SOAP_FMAC4 soap_get_resqml2__AbstractPropertyKind(struct soap*, resqml2__AbstractPropertyKind *, const char*, const char*);

inline int soap_read_resqml2__AbstractPropertyKind(struct soap *soap, resqml2__AbstractPropertyKind *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BooleanHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BooleanHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__BooleanHdf5Array(struct soap*, const char*, int, const resqml2__BooleanHdf5Array *, const char*);
SOAP_FMAC3 resqml2__BooleanHdf5Array * SOAP_FMAC4 soap_in_resqml2__BooleanHdf5Array(struct soap*, const char*, resqml2__BooleanHdf5Array *, const char*);
SOAP_FMAC1 resqml2__BooleanHdf5Array * SOAP_FMAC2 soap_instantiate_resqml2__BooleanHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__BooleanHdf5Array * soap_new_resqml2__BooleanHdf5Array(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__BooleanHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml2__BooleanHdf5Array * soap_new_req_resqml2__BooleanHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Values)
{
	resqml2__BooleanHdf5Array *_p = soap_new_resqml2__BooleanHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BooleanHdf5Array::Values = Values;
	}
	return _p;
}

inline resqml2__BooleanHdf5Array * soap_new_set_resqml2__BooleanHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Values)
{
	resqml2__BooleanHdf5Array *_p = soap_new_resqml2__BooleanHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BooleanHdf5Array::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml2__BooleanHdf5Array(struct soap *soap, resqml2__BooleanHdf5Array const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:BooleanHdf5Array", "resqml2:BooleanHdf5Array") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__BooleanHdf5Array * SOAP_FMAC4 soap_get_resqml2__BooleanHdf5Array(struct soap*, resqml2__BooleanHdf5Array *, const char*, const char*);

inline int soap_read_resqml2__BooleanHdf5Array(struct soap *soap, resqml2__BooleanHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__BooleanHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StringHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StringHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__StringHdf5Array(struct soap*, const char*, int, const resqml2__StringHdf5Array *, const char*);
SOAP_FMAC3 resqml2__StringHdf5Array * SOAP_FMAC4 soap_in_resqml2__StringHdf5Array(struct soap*, const char*, resqml2__StringHdf5Array *, const char*);
SOAP_FMAC1 resqml2__StringHdf5Array * SOAP_FMAC2 soap_instantiate_resqml2__StringHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__StringHdf5Array * soap_new_resqml2__StringHdf5Array(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__StringHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml2__StringHdf5Array * soap_new_req_resqml2__StringHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Values)
{
	resqml2__StringHdf5Array *_p = soap_new_resqml2__StringHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StringHdf5Array::Values = Values;
	}
	return _p;
}

inline resqml2__StringHdf5Array * soap_new_set_resqml2__StringHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Values)
{
	resqml2__StringHdf5Array *_p = soap_new_resqml2__StringHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StringHdf5Array::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml2__StringHdf5Array(struct soap *soap, resqml2__StringHdf5Array const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:StringHdf5Array", "resqml2:StringHdf5Array") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__StringHdf5Array * SOAP_FMAC4 soap_get_resqml2__StringHdf5Array(struct soap*, resqml2__StringHdf5Array *, const char*, const char*);

inline int soap_read_resqml2__StringHdf5Array(struct soap *soap, resqml2__StringHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__StringHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStringTableLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREStringTableLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREStringTableLookup(struct soap*, const char*, int, const resqml2__obj_USCOREStringTableLookup *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREStringTableLookup * SOAP_FMAC4 soap_in_resqml2__obj_USCOREStringTableLookup(struct soap*, const char*, resqml2__obj_USCOREStringTableLookup *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREStringTableLookup * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREStringTableLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREStringTableLookup * soap_new_resqml2__obj_USCOREStringTableLookup(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREStringTableLookup(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREStringTableLookup * soap_new_req_resqml2__obj_USCOREStringTableLookup(
	struct soap *soap,
	const std::vector<resqml2__StringLookup *> & Value,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREStringTableLookup *_p = soap_new_resqml2__obj_USCOREStringTableLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStringTableLookup::Value = Value;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREStringTableLookup * soap_new_set_resqml2__obj_USCOREStringTableLookup(
	struct soap *soap,
	const std::vector<resqml2__StringLookup *> & Value,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREStringTableLookup *_p = soap_new_resqml2__obj_USCOREStringTableLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREStringTableLookup::Value = Value;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREStringTableLookup(struct soap *soap, resqml2__obj_USCOREStringTableLookup const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_StringTableLookup", "resqml2:obj_StringTableLookup") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREStringTableLookup * SOAP_FMAC4 soap_get_resqml2__obj_USCOREStringTableLookup(struct soap*, resqml2__obj_USCOREStringTableLookup *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREStringTableLookup(struct soap *soap, resqml2__obj_USCOREStringTableLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREStringTableLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPropertyKind_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREPropertyKind(struct soap*, const char*, int, const resqml2__obj_USCOREPropertyKind *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREPropertyKind * SOAP_FMAC4 soap_in_resqml2__obj_USCOREPropertyKind(struct soap*, const char*, resqml2__obj_USCOREPropertyKind *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREPropertyKind * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREPropertyKind(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREPropertyKind * soap_new_resqml2__obj_USCOREPropertyKind(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREPropertyKind(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREPropertyKind * soap_new_req_resqml2__obj_USCOREPropertyKind(
	struct soap *soap,
	const std::string& NamingSystem,
	bool IsAbstract,
	enum resqml2__ResqmlUom RepresentativeUom,
	resqml2__AbstractPropertyKind *ParentPropertyKind,
	eml__Citation *Citation2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREPropertyKind *_p = soap_new_resqml2__obj_USCOREPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPropertyKind::NamingSystem = NamingSystem;
		_p->resqml2__obj_USCOREPropertyKind::IsAbstract = IsAbstract;
		_p->resqml2__obj_USCOREPropertyKind::RepresentativeUom = RepresentativeUom;
		_p->resqml2__obj_USCOREPropertyKind::ParentPropertyKind = ParentPropertyKind;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline resqml2__obj_USCOREPropertyKind * soap_new_set_resqml2__obj_USCOREPropertyKind(
	struct soap *soap,
	const std::string& NamingSystem,
	bool IsAbstract,
	enum resqml2__ResqmlUom RepresentativeUom,
	resqml2__AbstractPropertyKind *ParentPropertyKind,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata1,
	eml__Citation *Citation2,
	const std::vector<eml__ObjectAlias *> & Aliases2,
	eml__CustomData *CustomData2,
	const std::string& schemaVersion2,
	const std::string& uuid2)
{
	resqml2__obj_USCOREPropertyKind *_p = soap_new_resqml2__obj_USCOREPropertyKind(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPropertyKind::NamingSystem = NamingSystem;
		_p->resqml2__obj_USCOREPropertyKind::IsAbstract = IsAbstract;
		_p->resqml2__obj_USCOREPropertyKind::RepresentativeUom = RepresentativeUom;
		_p->resqml2__obj_USCOREPropertyKind::ParentPropertyKind = ParentPropertyKind;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata1;
		_p->eml__AbstractCitedDataObject::Citation = Citation2;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases2;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData2;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion2;
		_p->eml__AbstractCitedDataObject::uuid = uuid2;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREPropertyKind(struct soap *soap, resqml2__obj_USCOREPropertyKind const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_PropertyKind", "resqml2:obj_PropertyKind") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREPropertyKind * SOAP_FMAC4 soap_get_resqml2__obj_USCOREPropertyKind(struct soap*, resqml2__obj_USCOREPropertyKind *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREPropertyKind(struct soap *soap, resqml2__obj_USCOREPropertyKind *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREPropertyKind(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IntegerLatticeArray(struct soap*, const char*, int, const resqml2__IntegerLatticeArray *, const char*);
SOAP_FMAC3 resqml2__IntegerLatticeArray * SOAP_FMAC4 soap_in_resqml2__IntegerLatticeArray(struct soap*, const char*, resqml2__IntegerLatticeArray *, const char*);
SOAP_FMAC1 resqml2__IntegerLatticeArray * SOAP_FMAC2 soap_instantiate_resqml2__IntegerLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IntegerLatticeArray * soap_new_resqml2__IntegerLatticeArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IntegerLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__IntegerLatticeArray * soap_new_req_resqml2__IntegerLatticeArray(
	struct soap *soap,
	LONG64 StartValue,
	const std::vector<resqml2__IntegerConstantArray *> & Offset)
{
	resqml2__IntegerLatticeArray *_p = soap_new_resqml2__IntegerLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerLatticeArray::StartValue = StartValue;
		_p->resqml2__IntegerLatticeArray::Offset = Offset;
	}
	return _p;
}

inline resqml2__IntegerLatticeArray * soap_new_set_resqml2__IntegerLatticeArray(
	struct soap *soap,
	LONG64 StartValue,
	const std::vector<resqml2__IntegerConstantArray *> & Offset)
{
	resqml2__IntegerLatticeArray *_p = soap_new_resqml2__IntegerLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerLatticeArray::StartValue = StartValue;
		_p->resqml2__IntegerLatticeArray::Offset = Offset;
	}
	return _p;
}

inline int soap_write_resqml2__IntegerLatticeArray(struct soap *soap, resqml2__IntegerLatticeArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IntegerLatticeArray", "resqml2:IntegerLatticeArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IntegerLatticeArray * SOAP_FMAC4 soap_get_resqml2__IntegerLatticeArray(struct soap*, resqml2__IntegerLatticeArray *, const char*, const char*);

inline int soap_read_resqml2__IntegerLatticeArray(struct soap *soap, resqml2__IntegerLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IntegerLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractDoubleArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__AbstractDoubleArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__AbstractDoubleArray(struct soap*, const char*, int, const resqml2__AbstractDoubleArray *, const char*);
SOAP_FMAC3 resqml2__AbstractDoubleArray * SOAP_FMAC4 soap_in_resqml2__AbstractDoubleArray(struct soap*, const char*, resqml2__AbstractDoubleArray *, const char*);
SOAP_FMAC1 resqml2__AbstractDoubleArray * SOAP_FMAC2 soap_instantiate_resqml2__AbstractDoubleArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__AbstractDoubleArray * soap_new_resqml2__AbstractDoubleArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__AbstractDoubleArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__AbstractDoubleArray * soap_new_req_resqml2__AbstractDoubleArray(
	struct soap *soap)
{
	resqml2__AbstractDoubleArray *_p = soap_new_resqml2__AbstractDoubleArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline resqml2__AbstractDoubleArray * soap_new_set_resqml2__AbstractDoubleArray(
	struct soap *soap)
{
	resqml2__AbstractDoubleArray *_p = soap_new_resqml2__AbstractDoubleArray(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline int soap_write_resqml2__AbstractDoubleArray(struct soap *soap, resqml2__AbstractDoubleArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:AbstractDoubleArray", "resqml2:AbstractDoubleArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__AbstractDoubleArray * SOAP_FMAC4 soap_get_resqml2__AbstractDoubleArray(struct soap*, resqml2__AbstractDoubleArray *, const char*, const char*);

inline int soap_read_resqml2__AbstractDoubleArray(struct soap *soap, resqml2__AbstractDoubleArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__AbstractDoubleArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORECategoricalProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORECategoricalProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORECategoricalProperty(struct soap*, const char*, int, const resqml2__obj_USCORECategoricalProperty *, const char*);
SOAP_FMAC3 resqml2__obj_USCORECategoricalProperty * SOAP_FMAC4 soap_in_resqml2__obj_USCORECategoricalProperty(struct soap*, const char*, resqml2__obj_USCORECategoricalProperty *, const char*);
SOAP_FMAC1 resqml2__obj_USCORECategoricalProperty * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORECategoricalProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORECategoricalProperty * soap_new_resqml2__obj_USCORECategoricalProperty(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORECategoricalProperty(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORECategoricalProperty * soap_new_req_resqml2__obj_USCORECategoricalProperty(
	struct soap *soap,
	eml__DataObjectReference *Lookup,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues1,
	ULONG64 Count2,
	enum resqml2__IndexableElements IndexableElement2,
	eml__DataObjectReference *SupportingRepresentation2,
	resqml2__AbstractPropertyKind *PropertyKind2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORECategoricalProperty *_p = soap_new_resqml2__obj_USCORECategoricalProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORECategoricalProperty::Lookup = Lookup;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues1;
		_p->resqml2__AbstractProperty::Count = Count2;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement2;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation2;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCORECategoricalProperty * soap_new_set_resqml2__obj_USCORECategoricalProperty(
	struct soap *soap,
	eml__DataObjectReference *Lookup,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues1,
	const std::vector<resqml2__PropertyKindFacet *> & Facet1,
	ULONG64 Count2,
	enum resqml2__IndexableElements IndexableElement2,
	ULONG64 *RealizationIndex2,
	ULONG64 *TimeStep2,
	resqml2__TimeIndex *TimeIndex2,
	eml__DataObjectReference *SupportingRepresentation2,
	eml__DataObjectReference *LocalCrs2,
	resqml2__AbstractPropertyKind *PropertyKind2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORECategoricalProperty *_p = soap_new_resqml2__obj_USCORECategoricalProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORECategoricalProperty::Lookup = Lookup;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues1;
		_p->resqml2__AbstractValuesProperty::Facet = Facet1;
		_p->resqml2__AbstractProperty::Count = Count2;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement2;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex2;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep2;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex2;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation2;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs2;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORECategoricalProperty(struct soap *soap, resqml2__obj_USCORECategoricalProperty const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_CategoricalProperty", "resqml2:obj_CategoricalProperty") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORECategoricalProperty * SOAP_FMAC4 soap_get_resqml2__obj_USCORECategoricalProperty(struct soap*, resqml2__obj_USCORECategoricalProperty *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORECategoricalProperty(struct soap *soap, resqml2__obj_USCORECategoricalProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORECategoricalProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREDiscreteProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREDiscreteProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREDiscreteProperty(struct soap*, const char*, int, const resqml2__obj_USCOREDiscreteProperty *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREDiscreteProperty * SOAP_FMAC4 soap_in_resqml2__obj_USCOREDiscreteProperty(struct soap*, const char*, resqml2__obj_USCOREDiscreteProperty *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREDiscreteProperty * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREDiscreteProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREDiscreteProperty * soap_new_resqml2__obj_USCOREDiscreteProperty(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREDiscreteProperty(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREDiscreteProperty * soap_new_req_resqml2__obj_USCOREDiscreteProperty(
	struct soap *soap,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues1,
	ULONG64 Count2,
	enum resqml2__IndexableElements IndexableElement2,
	eml__DataObjectReference *SupportingRepresentation2,
	resqml2__AbstractPropertyKind *PropertyKind2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREDiscreteProperty *_p = soap_new_resqml2__obj_USCOREDiscreteProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues1;
		_p->resqml2__AbstractProperty::Count = Count2;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement2;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation2;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREDiscreteProperty * soap_new_set_resqml2__obj_USCOREDiscreteProperty(
	struct soap *soap,
	const std::vector<LONG64> & MinimumValue,
	const std::vector<LONG64> & MaximumValue,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues1,
	const std::vector<resqml2__PropertyKindFacet *> & Facet1,
	ULONG64 Count2,
	enum resqml2__IndexableElements IndexableElement2,
	ULONG64 *RealizationIndex2,
	ULONG64 *TimeStep2,
	resqml2__TimeIndex *TimeIndex2,
	eml__DataObjectReference *SupportingRepresentation2,
	eml__DataObjectReference *LocalCrs2,
	resqml2__AbstractPropertyKind *PropertyKind2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREDiscreteProperty *_p = soap_new_resqml2__obj_USCOREDiscreteProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREDiscreteProperty::MinimumValue = MinimumValue;
		_p->resqml2__obj_USCOREDiscreteProperty::MaximumValue = MaximumValue;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues1;
		_p->resqml2__AbstractValuesProperty::Facet = Facet1;
		_p->resqml2__AbstractProperty::Count = Count2;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement2;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex2;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep2;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex2;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation2;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs2;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREDiscreteProperty(struct soap *soap, resqml2__obj_USCOREDiscreteProperty const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_DiscreteProperty", "resqml2:obj_DiscreteProperty") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREDiscreteProperty * SOAP_FMAC4 soap_get_resqml2__obj_USCOREDiscreteProperty(struct soap*, resqml2__obj_USCOREDiscreteProperty *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREDiscreteProperty(struct soap *soap, resqml2__obj_USCOREDiscreteProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREDiscreteProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORECommentProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCORECommentProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCORECommentProperty(struct soap*, const char*, int, const resqml2__obj_USCORECommentProperty *, const char*);
SOAP_FMAC3 resqml2__obj_USCORECommentProperty * SOAP_FMAC4 soap_in_resqml2__obj_USCORECommentProperty(struct soap*, const char*, resqml2__obj_USCORECommentProperty *, const char*);
SOAP_FMAC1 resqml2__obj_USCORECommentProperty * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCORECommentProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCORECommentProperty * soap_new_resqml2__obj_USCORECommentProperty(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCORECommentProperty(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCORECommentProperty * soap_new_req_resqml2__obj_USCORECommentProperty(
	struct soap *soap,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues1,
	ULONG64 Count2,
	enum resqml2__IndexableElements IndexableElement2,
	eml__DataObjectReference *SupportingRepresentation2,
	resqml2__AbstractPropertyKind *PropertyKind2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORECommentProperty *_p = soap_new_resqml2__obj_USCORECommentProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues1;
		_p->resqml2__AbstractProperty::Count = Count2;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement2;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation2;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCORECommentProperty * soap_new_set_resqml2__obj_USCORECommentProperty(
	struct soap *soap,
	std::string *Language,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues1,
	const std::vector<resqml2__PropertyKindFacet *> & Facet1,
	ULONG64 Count2,
	enum resqml2__IndexableElements IndexableElement2,
	ULONG64 *RealizationIndex2,
	ULONG64 *TimeStep2,
	resqml2__TimeIndex *TimeIndex2,
	eml__DataObjectReference *SupportingRepresentation2,
	eml__DataObjectReference *LocalCrs2,
	resqml2__AbstractPropertyKind *PropertyKind2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCORECommentProperty *_p = soap_new_resqml2__obj_USCORECommentProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCORECommentProperty::Language = Language;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues1;
		_p->resqml2__AbstractValuesProperty::Facet = Facet1;
		_p->resqml2__AbstractProperty::Count = Count2;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement2;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex2;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep2;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex2;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation2;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs2;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCORECommentProperty(struct soap *soap, resqml2__obj_USCORECommentProperty const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_CommentProperty", "resqml2:obj_CommentProperty") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCORECommentProperty * SOAP_FMAC4 soap_get_resqml2__obj_USCORECommentProperty(struct soap*, resqml2__obj_USCORECommentProperty *, const char*, const char*);

inline int soap_read_resqml2__obj_USCORECommentProperty(struct soap *soap, resqml2__obj_USCORECommentProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCORECommentProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PatchOfPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PatchOfPoints_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__PatchOfPoints(struct soap*, const char*, int, const resqml2__PatchOfPoints *, const char*);
SOAP_FMAC3 resqml2__PatchOfPoints * SOAP_FMAC4 soap_in_resqml2__PatchOfPoints(struct soap*, const char*, resqml2__PatchOfPoints *, const char*);
SOAP_FMAC1 resqml2__PatchOfPoints * SOAP_FMAC2 soap_instantiate_resqml2__PatchOfPoints(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__PatchOfPoints * soap_new_resqml2__PatchOfPoints(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__PatchOfPoints(soap, n, NULL, NULL, NULL);
}

inline resqml2__PatchOfPoints * soap_new_req_resqml2__PatchOfPoints(
	struct soap *soap,
	resqml2__AbstractPoint3dArray *Points)
{
	resqml2__PatchOfPoints *_p = soap_new_resqml2__PatchOfPoints(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PatchOfPoints::Points = Points;
	}
	return _p;
}

inline resqml2__PatchOfPoints * soap_new_set_resqml2__PatchOfPoints(
	struct soap *soap,
	ULONG64 *RepresentationPatchIndex,
	resqml2__AbstractPoint3dArray *Points)
{
	resqml2__PatchOfPoints *_p = soap_new_resqml2__PatchOfPoints(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PatchOfPoints::RepresentationPatchIndex = RepresentationPatchIndex;
		_p->resqml2__PatchOfPoints::Points = Points;
	}
	return _p;
}

inline int soap_write_resqml2__PatchOfPoints(struct soap *soap, resqml2__PatchOfPoints const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:PatchOfPoints", "resqml2:PatchOfPoints") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__PatchOfPoints * SOAP_FMAC4 soap_get_resqml2__PatchOfPoints(struct soap*, resqml2__PatchOfPoints *, const char*, const char*);

inline int soap_read_resqml2__PatchOfPoints(struct soap *soap, resqml2__PatchOfPoints *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__PatchOfPoints(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DoubleHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DoubleHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__DoubleHdf5Array(struct soap*, const char*, int, const resqml2__DoubleHdf5Array *, const char*);
SOAP_FMAC3 resqml2__DoubleHdf5Array * SOAP_FMAC4 soap_in_resqml2__DoubleHdf5Array(struct soap*, const char*, resqml2__DoubleHdf5Array *, const char*);
SOAP_FMAC1 resqml2__DoubleHdf5Array * SOAP_FMAC2 soap_instantiate_resqml2__DoubleHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__DoubleHdf5Array * soap_new_resqml2__DoubleHdf5Array(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__DoubleHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml2__DoubleHdf5Array * soap_new_req_resqml2__DoubleHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Values)
{
	resqml2__DoubleHdf5Array *_p = soap_new_resqml2__DoubleHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DoubleHdf5Array::Values = Values;
	}
	return _p;
}

inline resqml2__DoubleHdf5Array * soap_new_set_resqml2__DoubleHdf5Array(
	struct soap *soap,
	eml__Hdf5Dataset *Values)
{
	resqml2__DoubleHdf5Array *_p = soap_new_resqml2__DoubleHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DoubleHdf5Array::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml2__DoubleHdf5Array(struct soap *soap, resqml2__DoubleHdf5Array const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:DoubleHdf5Array", "resqml2:DoubleHdf5Array") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__DoubleHdf5Array * SOAP_FMAC4 soap_get_resqml2__DoubleHdf5Array(struct soap*, resqml2__DoubleHdf5Array *, const char*, const char*);

inline int soap_read_resqml2__DoubleHdf5Array(struct soap *soap, resqml2__DoubleHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__DoubleHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DoubleConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DoubleConstantArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__DoubleConstantArray(struct soap*, const char*, int, const resqml2__DoubleConstantArray *, const char*);
SOAP_FMAC3 resqml2__DoubleConstantArray * SOAP_FMAC4 soap_in_resqml2__DoubleConstantArray(struct soap*, const char*, resqml2__DoubleConstantArray *, const char*);
SOAP_FMAC1 resqml2__DoubleConstantArray * SOAP_FMAC2 soap_instantiate_resqml2__DoubleConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__DoubleConstantArray * soap_new_resqml2__DoubleConstantArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__DoubleConstantArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__DoubleConstantArray * soap_new_req_resqml2__DoubleConstantArray(
	struct soap *soap,
	double Value,
	ULONG64 Count)
{
	resqml2__DoubleConstantArray *_p = soap_new_resqml2__DoubleConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DoubleConstantArray::Value = Value;
		_p->resqml2__DoubleConstantArray::Count = Count;
	}
	return _p;
}

inline resqml2__DoubleConstantArray * soap_new_set_resqml2__DoubleConstantArray(
	struct soap *soap,
	double Value,
	ULONG64 Count)
{
	resqml2__DoubleConstantArray *_p = soap_new_resqml2__DoubleConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DoubleConstantArray::Value = Value;
		_p->resqml2__DoubleConstantArray::Count = Count;
	}
	return _p;
}

inline int soap_write_resqml2__DoubleConstantArray(struct soap *soap, resqml2__DoubleConstantArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:DoubleConstantArray", "resqml2:DoubleConstantArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__DoubleConstantArray * SOAP_FMAC4 soap_get_resqml2__DoubleConstantArray(struct soap*, resqml2__DoubleConstantArray *, const char*, const char*);

inline int soap_read_resqml2__DoubleConstantArray(struct soap *soap, resqml2__DoubleConstantArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__DoubleConstantArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DoubleLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__DoubleLatticeArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__DoubleLatticeArray(struct soap*, const char*, int, const resqml2__DoubleLatticeArray *, const char*);
SOAP_FMAC3 resqml2__DoubleLatticeArray * SOAP_FMAC4 soap_in_resqml2__DoubleLatticeArray(struct soap*, const char*, resqml2__DoubleLatticeArray *, const char*);
SOAP_FMAC1 resqml2__DoubleLatticeArray * SOAP_FMAC2 soap_instantiate_resqml2__DoubleLatticeArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__DoubleLatticeArray * soap_new_resqml2__DoubleLatticeArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__DoubleLatticeArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__DoubleLatticeArray * soap_new_req_resqml2__DoubleLatticeArray(
	struct soap *soap,
	double StartValue,
	const std::vector<resqml2__DoubleConstantArray *> & Offset)
{
	resqml2__DoubleLatticeArray *_p = soap_new_resqml2__DoubleLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DoubleLatticeArray::StartValue = StartValue;
		_p->resqml2__DoubleLatticeArray::Offset = Offset;
	}
	return _p;
}

inline resqml2__DoubleLatticeArray * soap_new_set_resqml2__DoubleLatticeArray(
	struct soap *soap,
	double StartValue,
	const std::vector<resqml2__DoubleConstantArray *> & Offset)
{
	resqml2__DoubleLatticeArray *_p = soap_new_resqml2__DoubleLatticeArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__DoubleLatticeArray::StartValue = StartValue;
		_p->resqml2__DoubleLatticeArray::Offset = Offset;
	}
	return _p;
}

inline int soap_write_resqml2__DoubleLatticeArray(struct soap *soap, resqml2__DoubleLatticeArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:DoubleLatticeArray", "resqml2:DoubleLatticeArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__DoubleLatticeArray * SOAP_FMAC4 soap_get_resqml2__DoubleLatticeArray(struct soap*, resqml2__DoubleLatticeArray *, const char*, const char*);

inline int soap_read_resqml2__DoubleLatticeArray(struct soap *soap, resqml2__DoubleLatticeArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__DoubleLatticeArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPointsProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREPointsProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREPointsProperty(struct soap*, const char*, int, const resqml2__obj_USCOREPointsProperty *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREPointsProperty * SOAP_FMAC4 soap_in_resqml2__obj_USCOREPointsProperty(struct soap*, const char*, resqml2__obj_USCOREPointsProperty *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREPointsProperty * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREPointsProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREPointsProperty * soap_new_resqml2__obj_USCOREPointsProperty(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREPointsProperty(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREPointsProperty * soap_new_req_resqml2__obj_USCOREPointsProperty(
	struct soap *soap,
	const std::vector<resqml2__PatchOfPoints *> & PatchOfPoints,
	ULONG64 Count1,
	enum resqml2__IndexableElements IndexableElement1,
	eml__DataObjectReference *SupportingRepresentation1,
	resqml2__AbstractPropertyKind *PropertyKind1,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREPointsProperty *_p = soap_new_resqml2__obj_USCOREPointsProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPointsProperty::PatchOfPoints = PatchOfPoints;
		_p->resqml2__AbstractProperty::Count = Count1;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement1;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation1;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind1;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREPointsProperty * soap_new_set_resqml2__obj_USCOREPointsProperty(
	struct soap *soap,
	const std::vector<resqml2__PatchOfPoints *> & PatchOfPoints,
	ULONG64 Count1,
	enum resqml2__IndexableElements IndexableElement1,
	ULONG64 *RealizationIndex1,
	ULONG64 *TimeStep1,
	resqml2__TimeIndex *TimeIndex1,
	eml__DataObjectReference *SupportingRepresentation1,
	eml__DataObjectReference *LocalCrs1,
	resqml2__AbstractPropertyKind *PropertyKind1,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREPointsProperty *_p = soap_new_resqml2__obj_USCOREPointsProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREPointsProperty::PatchOfPoints = PatchOfPoints;
		_p->resqml2__AbstractProperty::Count = Count1;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement1;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex1;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep1;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex1;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation1;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs1;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind1;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREPointsProperty(struct soap *soap, resqml2__obj_USCOREPointsProperty const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_PointsProperty", "resqml2:obj_PointsProperty") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREPointsProperty * SOAP_FMAC4 soap_get_resqml2__obj_USCOREPointsProperty(struct soap*, resqml2__obj_USCOREPointsProperty *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREPointsProperty(struct soap *soap, resqml2__obj_USCOREPointsProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREPointsProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StringLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__StringLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__StringLookup(struct soap*, const char*, int, const resqml2__StringLookup *, const char*);
SOAP_FMAC3 resqml2__StringLookup * SOAP_FMAC4 soap_in_resqml2__StringLookup(struct soap*, const char*, resqml2__StringLookup *, const char*);
SOAP_FMAC1 resqml2__StringLookup * SOAP_FMAC2 soap_instantiate_resqml2__StringLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__StringLookup * soap_new_resqml2__StringLookup(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__StringLookup(soap, n, NULL, NULL, NULL);
}

inline resqml2__StringLookup * soap_new_req_resqml2__StringLookup(
	struct soap *soap,
	LONG64 Key,
	const std::string& Value)
{
	resqml2__StringLookup *_p = soap_new_resqml2__StringLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StringLookup::Key = Key;
		_p->resqml2__StringLookup::Value = Value;
	}
	return _p;
}

inline resqml2__StringLookup * soap_new_set_resqml2__StringLookup(
	struct soap *soap,
	LONG64 Key,
	const std::string& Value)
{
	resqml2__StringLookup *_p = soap_new_resqml2__StringLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__StringLookup::Key = Key;
		_p->resqml2__StringLookup::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml2__StringLookup(struct soap *soap, resqml2__StringLookup const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:StringLookup", "resqml2:StringLookup") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__StringLookup * SOAP_FMAC4 soap_get_resqml2__StringLookup(struct soap*, resqml2__StringLookup *, const char*, const char*);

inline int soap_read_resqml2__StringLookup(struct soap *soap, resqml2__StringLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__StringLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREContinuousProperty_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREContinuousProperty_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREContinuousProperty(struct soap*, const char*, int, const resqml2__obj_USCOREContinuousProperty *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREContinuousProperty * SOAP_FMAC4 soap_in_resqml2__obj_USCOREContinuousProperty(struct soap*, const char*, resqml2__obj_USCOREContinuousProperty *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREContinuousProperty * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREContinuousProperty(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREContinuousProperty * soap_new_resqml2__obj_USCOREContinuousProperty(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREContinuousProperty(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREContinuousProperty * soap_new_req_resqml2__obj_USCOREContinuousProperty(
	struct soap *soap,
	enum resqml2__ResqmlUom UOM,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues1,
	ULONG64 Count2,
	enum resqml2__IndexableElements IndexableElement2,
	eml__DataObjectReference *SupportingRepresentation2,
	resqml2__AbstractPropertyKind *PropertyKind2,
	eml__Citation *Citation4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREContinuousProperty *_p = soap_new_resqml2__obj_USCOREContinuousProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREContinuousProperty::UOM = UOM;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues1;
		_p->resqml2__AbstractProperty::Count = Count2;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement2;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation2;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind2;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline resqml2__obj_USCOREContinuousProperty * soap_new_set_resqml2__obj_USCOREContinuousProperty(
	struct soap *soap,
	const std::vector<double> & MinimumValue,
	const std::vector<double> & MaximumValue,
	enum resqml2__ResqmlUom UOM,
	const std::vector<resqml2__PatchOfValues *> & PatchOfValues1,
	const std::vector<resqml2__PropertyKindFacet *> & Facet1,
	ULONG64 Count2,
	enum resqml2__IndexableElements IndexableElement2,
	ULONG64 *RealizationIndex2,
	ULONG64 *TimeStep2,
	resqml2__TimeIndex *TimeIndex2,
	eml__DataObjectReference *SupportingRepresentation2,
	eml__DataObjectReference *LocalCrs2,
	resqml2__AbstractPropertyKind *PropertyKind2,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata3,
	eml__Citation *Citation4,
	const std::vector<eml__ObjectAlias *> & Aliases4,
	eml__CustomData *CustomData4,
	const std::string& schemaVersion4,
	const std::string& uuid4)
{
	resqml2__obj_USCOREContinuousProperty *_p = soap_new_resqml2__obj_USCOREContinuousProperty(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREContinuousProperty::MinimumValue = MinimumValue;
		_p->resqml2__obj_USCOREContinuousProperty::MaximumValue = MaximumValue;
		_p->resqml2__obj_USCOREContinuousProperty::UOM = UOM;
		_p->resqml2__AbstractValuesProperty::PatchOfValues = PatchOfValues1;
		_p->resqml2__AbstractValuesProperty::Facet = Facet1;
		_p->resqml2__AbstractProperty::Count = Count2;
		_p->resqml2__AbstractProperty::IndexableElement = IndexableElement2;
		_p->resqml2__AbstractProperty::RealizationIndex = RealizationIndex2;
		_p->resqml2__AbstractProperty::TimeStep = TimeStep2;
		_p->resqml2__AbstractProperty::TimeIndex = TimeIndex2;
		_p->resqml2__AbstractProperty::SupportingRepresentation = SupportingRepresentation2;
		_p->resqml2__AbstractProperty::LocalCrs = LocalCrs2;
		_p->resqml2__AbstractProperty::PropertyKind = PropertyKind2;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata3;
		_p->eml__AbstractCitedDataObject::Citation = Citation4;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases4;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData4;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion4;
		_p->eml__AbstractCitedDataObject::uuid = uuid4;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREContinuousProperty(struct soap *soap, resqml2__obj_USCOREContinuousProperty const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_ContinuousProperty", "resqml2:obj_ContinuousProperty") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREContinuousProperty * SOAP_FMAC4 soap_get_resqml2__obj_USCOREContinuousProperty(struct soap*, resqml2__obj_USCOREContinuousProperty *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREContinuousProperty(struct soap *soap, resqml2__obj_USCOREContinuousProperty *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREContinuousProperty(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerHdf5Array_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerHdf5Array_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IntegerHdf5Array(struct soap*, const char*, int, const resqml2__IntegerHdf5Array *, const char*);
SOAP_FMAC3 resqml2__IntegerHdf5Array * SOAP_FMAC4 soap_in_resqml2__IntegerHdf5Array(struct soap*, const char*, resqml2__IntegerHdf5Array *, const char*);
SOAP_FMAC1 resqml2__IntegerHdf5Array * SOAP_FMAC2 soap_instantiate_resqml2__IntegerHdf5Array(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IntegerHdf5Array * soap_new_resqml2__IntegerHdf5Array(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IntegerHdf5Array(soap, n, NULL, NULL, NULL);
}

inline resqml2__IntegerHdf5Array * soap_new_req_resqml2__IntegerHdf5Array(
	struct soap *soap,
	LONG64 NullValue,
	eml__Hdf5Dataset *Values)
{
	resqml2__IntegerHdf5Array *_p = soap_new_resqml2__IntegerHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerHdf5Array::NullValue = NullValue;
		_p->resqml2__IntegerHdf5Array::Values = Values;
	}
	return _p;
}

inline resqml2__IntegerHdf5Array * soap_new_set_resqml2__IntegerHdf5Array(
	struct soap *soap,
	LONG64 NullValue,
	eml__Hdf5Dataset *Values)
{
	resqml2__IntegerHdf5Array *_p = soap_new_resqml2__IntegerHdf5Array(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerHdf5Array::NullValue = NullValue;
		_p->resqml2__IntegerHdf5Array::Values = Values;
	}
	return _p;
}

inline int soap_write_resqml2__IntegerHdf5Array(struct soap *soap, resqml2__IntegerHdf5Array const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IntegerHdf5Array", "resqml2:IntegerHdf5Array") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IntegerHdf5Array * SOAP_FMAC4 soap_get_resqml2__IntegerHdf5Array(struct soap*, resqml2__IntegerHdf5Array *, const char*, const char*);

inline int soap_read_resqml2__IntegerHdf5Array(struct soap *soap, resqml2__IntegerHdf5Array *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IntegerHdf5Array(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PropertyKindFacet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__PropertyKindFacet_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__PropertyKindFacet(struct soap*, const char*, int, const resqml2__PropertyKindFacet *, const char*);
SOAP_FMAC3 resqml2__PropertyKindFacet * SOAP_FMAC4 soap_in_resqml2__PropertyKindFacet(struct soap*, const char*, resqml2__PropertyKindFacet *, const char*);
SOAP_FMAC1 resqml2__PropertyKindFacet * SOAP_FMAC2 soap_instantiate_resqml2__PropertyKindFacet(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__PropertyKindFacet * soap_new_resqml2__PropertyKindFacet(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__PropertyKindFacet(soap, n, NULL, NULL, NULL);
}

inline resqml2__PropertyKindFacet * soap_new_req_resqml2__PropertyKindFacet(
	struct soap *soap,
	enum resqml2__Facet Facet,
	const std::string& Value)
{
	resqml2__PropertyKindFacet *_p = soap_new_resqml2__PropertyKindFacet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PropertyKindFacet::Facet = Facet;
		_p->resqml2__PropertyKindFacet::Value = Value;
	}
	return _p;
}

inline resqml2__PropertyKindFacet * soap_new_set_resqml2__PropertyKindFacet(
	struct soap *soap,
	enum resqml2__Facet Facet,
	const std::string& Value)
{
	resqml2__PropertyKindFacet *_p = soap_new_resqml2__PropertyKindFacet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__PropertyKindFacet::Facet = Facet;
		_p->resqml2__PropertyKindFacet::Value = Value;
	}
	return _p;
}

inline int soap_write_resqml2__PropertyKindFacet(struct soap *soap, resqml2__PropertyKindFacet const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:PropertyKindFacet", "resqml2:PropertyKindFacet") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__PropertyKindFacet * SOAP_FMAC4 soap_get_resqml2__PropertyKindFacet(struct soap*, resqml2__PropertyKindFacet *, const char*, const char*);

inline int soap_read_resqml2__PropertyKindFacet(struct soap *soap, resqml2__PropertyKindFacet *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__PropertyKindFacet(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREDoubleTableLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__obj_USCOREDoubleTableLookup_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__obj_USCOREDoubleTableLookup(struct soap*, const char*, int, const resqml2__obj_USCOREDoubleTableLookup *, const char*);
SOAP_FMAC3 resqml2__obj_USCOREDoubleTableLookup * SOAP_FMAC4 soap_in_resqml2__obj_USCOREDoubleTableLookup(struct soap*, const char*, resqml2__obj_USCOREDoubleTableLookup *, const char*);
SOAP_FMAC1 resqml2__obj_USCOREDoubleTableLookup * SOAP_FMAC2 soap_instantiate_resqml2__obj_USCOREDoubleTableLookup(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__obj_USCOREDoubleTableLookup * soap_new_resqml2__obj_USCOREDoubleTableLookup(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__obj_USCOREDoubleTableLookup(soap, n, NULL, NULL, NULL);
}

inline resqml2__obj_USCOREDoubleTableLookup * soap_new_req_resqml2__obj_USCOREDoubleTableLookup(
	struct soap *soap,
	const std::vector<resqml2__DoubleLookup *> & Value,
	eml__Citation *Citation3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREDoubleTableLookup *_p = soap_new_resqml2__obj_USCOREDoubleTableLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREDoubleTableLookup::Value = Value;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline resqml2__obj_USCOREDoubleTableLookup * soap_new_set_resqml2__obj_USCOREDoubleTableLookup(
	struct soap *soap,
	const std::vector<resqml2__DoubleLookup *> & Value,
	const std::vector<resqml2__NameValuePair *> & ExtraMetadata2,
	eml__Citation *Citation3,
	const std::vector<eml__ObjectAlias *> & Aliases3,
	eml__CustomData *CustomData3,
	const std::string& schemaVersion3,
	const std::string& uuid3)
{
	resqml2__obj_USCOREDoubleTableLookup *_p = soap_new_resqml2__obj_USCOREDoubleTableLookup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__obj_USCOREDoubleTableLookup::Value = Value;
		_p->resqml2__AbstractResqmlDataObject::ExtraMetadata = ExtraMetadata2;
		_p->eml__AbstractCitedDataObject::Citation = Citation3;
		_p->eml__AbstractCitedDataObject::Aliases = Aliases3;
		_p->eml__AbstractCitedDataObject::CustomData = CustomData3;
		_p->eml__AbstractCitedDataObject::schemaVersion = schemaVersion3;
		_p->eml__AbstractCitedDataObject::uuid = uuid3;
	}
	return _p;
}

inline int soap_write_resqml2__obj_USCOREDoubleTableLookup(struct soap *soap, resqml2__obj_USCOREDoubleTableLookup const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:obj_DoubleTableLookup", "resqml2:obj_DoubleTableLookup") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__obj_USCOREDoubleTableLookup * SOAP_FMAC4 soap_get_resqml2__obj_USCOREDoubleTableLookup(struct soap*, resqml2__obj_USCOREDoubleTableLookup *, const char*, const char*);

inline int soap_read_resqml2__obj_USCOREDoubleTableLookup(struct soap *soap, resqml2__obj_USCOREDoubleTableLookup *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__obj_USCOREDoubleTableLookup(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerConstantArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IntegerConstantArray(struct soap*, const char*, int, const resqml2__IntegerConstantArray *, const char*);
SOAP_FMAC3 resqml2__IntegerConstantArray * SOAP_FMAC4 soap_in_resqml2__IntegerConstantArray(struct soap*, const char*, resqml2__IntegerConstantArray *, const char*);
SOAP_FMAC1 resqml2__IntegerConstantArray * SOAP_FMAC2 soap_instantiate_resqml2__IntegerConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IntegerConstantArray * soap_new_resqml2__IntegerConstantArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IntegerConstantArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__IntegerConstantArray * soap_new_req_resqml2__IntegerConstantArray(
	struct soap *soap,
	LONG64 Value,
	ULONG64 Count)
{
	resqml2__IntegerConstantArray *_p = soap_new_resqml2__IntegerConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerConstantArray::Value = Value;
		_p->resqml2__IntegerConstantArray::Count = Count;
	}
	return _p;
}

inline resqml2__IntegerConstantArray * soap_new_set_resqml2__IntegerConstantArray(
	struct soap *soap,
	LONG64 Value,
	ULONG64 Count)
{
	resqml2__IntegerConstantArray *_p = soap_new_resqml2__IntegerConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerConstantArray::Value = Value;
		_p->resqml2__IntegerConstantArray::Count = Count;
	}
	return _p;
}

inline int soap_write_resqml2__IntegerConstantArray(struct soap *soap, resqml2__IntegerConstantArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IntegerConstantArray", "resqml2:IntegerConstantArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IntegerConstantArray * SOAP_FMAC4 soap_get_resqml2__IntegerConstantArray(struct soap*, resqml2__IntegerConstantArray *, const char*, const char*);

inline int soap_read_resqml2__IntegerConstantArray(struct soap *soap, resqml2__IntegerConstantArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IntegerConstantArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BooleanConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BooleanConstantArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__BooleanConstantArray(struct soap*, const char*, int, const resqml2__BooleanConstantArray *, const char*);
SOAP_FMAC3 resqml2__BooleanConstantArray * SOAP_FMAC4 soap_in_resqml2__BooleanConstantArray(struct soap*, const char*, resqml2__BooleanConstantArray *, const char*);
SOAP_FMAC1 resqml2__BooleanConstantArray * SOAP_FMAC2 soap_instantiate_resqml2__BooleanConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__BooleanConstantArray * soap_new_resqml2__BooleanConstantArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__BooleanConstantArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__BooleanConstantArray * soap_new_req_resqml2__BooleanConstantArray(
	struct soap *soap,
	bool Value,
	ULONG64 Count)
{
	resqml2__BooleanConstantArray *_p = soap_new_resqml2__BooleanConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BooleanConstantArray::Value = Value;
		_p->resqml2__BooleanConstantArray::Count = Count;
	}
	return _p;
}

inline resqml2__BooleanConstantArray * soap_new_set_resqml2__BooleanConstantArray(
	struct soap *soap,
	bool Value,
	ULONG64 Count)
{
	resqml2__BooleanConstantArray *_p = soap_new_resqml2__BooleanConstantArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BooleanConstantArray::Value = Value;
		_p->resqml2__BooleanConstantArray::Count = Count;
	}
	return _p;
}

inline int soap_write_resqml2__BooleanConstantArray(struct soap *soap, resqml2__BooleanConstantArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:BooleanConstantArray", "resqml2:BooleanConstantArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__BooleanConstantArray * SOAP_FMAC4 soap_get_resqml2__BooleanConstantArray(struct soap*, resqml2__BooleanConstantArray *, const char*, const char*);

inline int soap_read_resqml2__BooleanConstantArray(struct soap *soap, resqml2__BooleanConstantArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__BooleanConstantArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BooleanArrayFromIndexArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__BooleanArrayFromIndexArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__BooleanArrayFromIndexArray(struct soap*, const char*, int, const resqml2__BooleanArrayFromIndexArray *, const char*);
SOAP_FMAC3 resqml2__BooleanArrayFromIndexArray * SOAP_FMAC4 soap_in_resqml2__BooleanArrayFromIndexArray(struct soap*, const char*, resqml2__BooleanArrayFromIndexArray *, const char*);
SOAP_FMAC1 resqml2__BooleanArrayFromIndexArray * SOAP_FMAC2 soap_instantiate_resqml2__BooleanArrayFromIndexArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__BooleanArrayFromIndexArray * soap_new_resqml2__BooleanArrayFromIndexArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__BooleanArrayFromIndexArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__BooleanArrayFromIndexArray * soap_new_req_resqml2__BooleanArrayFromIndexArray(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *Indices,
	bool IndexIsTrue)
{
	resqml2__BooleanArrayFromIndexArray *_p = soap_new_resqml2__BooleanArrayFromIndexArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BooleanArrayFromIndexArray::Count = Count;
		_p->resqml2__BooleanArrayFromIndexArray::Indices = Indices;
		_p->resqml2__BooleanArrayFromIndexArray::IndexIsTrue = IndexIsTrue;
	}
	return _p;
}

inline resqml2__BooleanArrayFromIndexArray * soap_new_set_resqml2__BooleanArrayFromIndexArray(
	struct soap *soap,
	ULONG64 Count,
	resqml2__AbstractIntegerArray *Indices,
	bool IndexIsTrue)
{
	resqml2__BooleanArrayFromIndexArray *_p = soap_new_resqml2__BooleanArrayFromIndexArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__BooleanArrayFromIndexArray::Count = Count;
		_p->resqml2__BooleanArrayFromIndexArray::Indices = Indices;
		_p->resqml2__BooleanArrayFromIndexArray::IndexIsTrue = IndexIsTrue;
	}
	return _p;
}

inline int soap_write_resqml2__BooleanArrayFromIndexArray(struct soap *soap, resqml2__BooleanArrayFromIndexArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:BooleanArrayFromIndexArray", "resqml2:BooleanArrayFromIndexArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__BooleanArrayFromIndexArray * SOAP_FMAC4 soap_get_resqml2__BooleanArrayFromIndexArray(struct soap*, resqml2__BooleanArrayFromIndexArray *, const char*, const char*);

inline int soap_read_resqml2__BooleanArrayFromIndexArray(struct soap *soap, resqml2__BooleanArrayFromIndexArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__BooleanArrayFromIndexArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerArrayFromBooleanMaskArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_resqml2__IntegerArrayFromBooleanMaskArray_DEFINED
SOAP_FMAC3 int SOAP_FMAC4 soap_out_resqml2__IntegerArrayFromBooleanMaskArray(struct soap*, const char*, int, const resqml2__IntegerArrayFromBooleanMaskArray *, const char*);
SOAP_FMAC3 resqml2__IntegerArrayFromBooleanMaskArray * SOAP_FMAC4 soap_in_resqml2__IntegerArrayFromBooleanMaskArray(struct soap*, const char*, resqml2__IntegerArrayFromBooleanMaskArray *, const char*);
SOAP_FMAC1 resqml2__IntegerArrayFromBooleanMaskArray * SOAP_FMAC2 soap_instantiate_resqml2__IntegerArrayFromBooleanMaskArray(struct soap*, int, const char*, const char*, size_t*);

inline resqml2__IntegerArrayFromBooleanMaskArray * soap_new_resqml2__IntegerArrayFromBooleanMaskArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_resqml2__IntegerArrayFromBooleanMaskArray(soap, n, NULL, NULL, NULL);
}

inline resqml2__IntegerArrayFromBooleanMaskArray * soap_new_req_resqml2__IntegerArrayFromBooleanMaskArray(
	struct soap *soap,
	ULONG64 TotalIndexCount,
	resqml2__AbstractBooleanArray *Mask)
{
	resqml2__IntegerArrayFromBooleanMaskArray *_p = soap_new_resqml2__IntegerArrayFromBooleanMaskArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerArrayFromBooleanMaskArray::TotalIndexCount = TotalIndexCount;
		_p->resqml2__IntegerArrayFromBooleanMaskArray::Mask = Mask;
	}
	return _p;
}

inline resqml2__IntegerArrayFromBooleanMaskArray * soap_new_set_resqml2__IntegerArrayFromBooleanMaskArray(
	struct soap *soap,
	ULONG64 TotalIndexCount,
	resqml2__AbstractBooleanArray *Mask)
{
	resqml2__IntegerArrayFromBooleanMaskArray *_p = soap_new_resqml2__IntegerArrayFromBooleanMaskArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->resqml2__IntegerArrayFromBooleanMaskArray::TotalIndexCount = TotalIndexCount;
		_p->resqml2__IntegerArrayFromBooleanMaskArray::Mask = Mask;
	}
	return _p;
}

inline int soap_write_resqml2__IntegerArrayFromBooleanMaskArray(struct soap *soap, resqml2__IntegerArrayFromBooleanMaskArray const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (p->soap_serialize(soap), 0) || p->soap_put(soap, "resqml2:IntegerArrayFromBooleanMaskArray", "resqml2:IntegerArrayFromBooleanMaskArray") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 resqml2__IntegerArrayFromBooleanMaskArray * SOAP_FMAC4 soap_get_resqml2__IntegerArrayFromBooleanMaskArray(struct soap*, resqml2__IntegerArrayFromBooleanMaskArray *, const char*, const char*);

inline int soap_read_resqml2__IntegerArrayFromBooleanMaskArray(struct soap *soap, resqml2__IntegerArrayFromBooleanMaskArray *p)
{
	if (p)
	{	p->soap_default(soap);
		if (soap_begin_recv(soap) || soap_get_resqml2__IntegerArrayFromBooleanMaskArray(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__date_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__date_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__date(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__date(struct soap*, const std::string *);

#define soap_xsd__date2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__date(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__date(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__date(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__date soap_instantiate_std__string


#define soap_new_xsd__date soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__date(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_xsd__date(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_xsd__date(soap, p, "xsd:date", "xsd:date") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__date(struct soap*, std::string *, const char*, const char*);

inline int soap_read_xsd__date(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_xsd__date(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__anyURI_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__anyURI_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__anyURI(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, const std::string *);

#define soap_xsd__anyURI2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__anyURI(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__anyURI soap_instantiate_std__string


#define soap_new_xsd__anyURI soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_xsd__anyURI(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_xsd__anyURI(soap, p, "xsd:anyURI", "xsd:anyURI") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, std::string *, const char*, const char*);

inline int soap_read_xsd__anyURI(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_xsd__anyURI(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_xsd__ID_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_xsd__ID_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__ID(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__ID(struct soap*, const std::string *);

#define soap_xsd__ID2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__ID(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__ID(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__ID(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__ID soap_instantiate_std__string


#define soap_new_xsd__ID soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__ID(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_xsd__ID(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_xsd__ID(soap, p, "xsd:ID", "xsd:ID") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__ID(struct soap*, std::string *, const char*, const char*);

inline int soap_read_xsd__ID(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_xsd__ID(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__string_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);

#define soap_std__string2s(soap, a) ((a).c_str())
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2std__string(soap, s, a) soap_s2stdchar((soap), (s), (a), 0, -1, NULL)
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__string(soap, n, NULL, NULL, NULL);
}

inline std::string * soap_new_req_std__string(
	struct soap *soap)
{
	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}

inline std::string * soap_new_set_std__string(
	struct soap *soap)
{
	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

inline int soap_write_std__string(struct soap *soap, std::string const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_std__string(soap, p, "string", "xsd:string") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

inline int soap_read_std__string(struct soap *soap, std::string *p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_std__string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{
	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{
	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_write_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, p), 0) || soap_put_SOAP_ENV__Fault(soap, p, "SOAP-ENV:Fault", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

inline int soap_read_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Fault(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Fault(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{
	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{
	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_write_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, p), 0) || soap_put_SOAP_ENV__Reason(soap, p, "SOAP-ENV:Reason", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

inline int soap_read_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Reason(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Reason(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{
	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_write_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, p), 0) || soap_put_SOAP_ENV__Detail(soap, p, "SOAP-ENV:Detail", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

inline int soap_read_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Detail(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Detail(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{
	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{
	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_write_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, p), 0) || soap_put_SOAP_ENV__Code(soap, p, "SOAP-ENV:Code", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

inline int soap_read_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Code(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Code(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1)
{
	return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap)
{
	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_write_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, p), 0) || soap_put_SOAP_ENV__Header(soap, p, "SOAP-ENV:Header", "") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

inline int soap_read_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p)
{
	if (p)
	{	soap_default_SOAP_ENV__Header(soap, p);
		if (soap_begin_recv(soap) || soap_get_SOAP_ENV__Header(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_ProjectedCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_ProjectedCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_ProjectedCRSType(struct soap*, int, const union _gml__union_ProjectedCRSType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_ProjectedCRSType(struct soap*, int, const union _gml__union_ProjectedCRSType *);
SOAP_FMAC3 union _gml__union_ProjectedCRSType * SOAP_FMAC4 soap_in__gml__union_ProjectedCRSType(struct soap*, int*, union _gml__union_ProjectedCRSType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_GeodeticCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_GeodeticCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_GeodeticCRSType(struct soap*, int, const union _gml__union_GeodeticCRSType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_GeodeticCRSType(struct soap*, int, const union _gml__union_GeodeticCRSType *);
SOAP_FMAC3 union _gml__union_GeodeticCRSType * SOAP_FMAC4 soap_in__gml__union_GeodeticCRSType(struct soap*, int*, union _gml__union_GeodeticCRSType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gsr__union_SC_USCORECRS_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gsr__union_SC_USCORECRS_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gsr__union_SC_USCORECRS_USCOREPropertyType(struct soap*, int, const union _gsr__union_SC_USCORECRS_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gsr__union_SC_USCORECRS_USCOREPropertyType(struct soap*, int, const union _gsr__union_SC_USCORECRS_USCOREPropertyType *);
SOAP_FMAC3 union _gsr__union_SC_USCORECRS_USCOREPropertyType * SOAP_FMAC4 soap_in__gsr__union_SC_USCORECRS_USCOREPropertyType(struct soap*, int*, union _gsr__union_SC_USCORECRS_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__union_Date_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__union_Date_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gco__union_Date_USCOREPropertyType(struct soap*, int, const union _gco__union_Date_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gco__union_Date_USCOREPropertyType(struct soap*, int, const union _gco__union_Date_USCOREPropertyType *);
SOAP_FMAC3 union _gco__union_Date_USCOREPropertyType * SOAP_FMAC4 soap_in__gco__union_Date_USCOREPropertyType(struct soap*, int*, union _gco__union_Date_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gco__union_CharacterString_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gco__union_CharacterString_USCOREPropertyType(struct soap*, int, const union _gco__union_CharacterString_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gco__union_CharacterString_USCOREPropertyType(struct soap*, int, const union _gco__union_CharacterString_USCOREPropertyType *);
SOAP_FMAC3 union _gco__union_CharacterString_USCOREPropertyType * SOAP_FMAC4 soap_in__gco__union_CharacterString_USCOREPropertyType(struct soap*, int*, union _gco__union_CharacterString_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gts__union_TM_USCOREPrimitive_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gts__union_TM_USCOREPrimitive_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gts__union_TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int, const union _gts__union_TM_USCOREPrimitive_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gts__union_TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int, const union _gts__union_TM_USCOREPrimitive_USCOREPropertyType *);
SOAP_FMAC3 union _gts__union_TM_USCOREPrimitive_USCOREPropertyType * SOAP_FMAC4 soap_in__gts__union_TM_USCOREPrimitive_USCOREPropertyType(struct soap*, int*, union _gts__union_TM_USCOREPrimitive_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__union_DQ_USCOREResult_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__union_DQ_USCOREResult_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gmd__union_DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const union _gmd__union_DQ_USCOREResult_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gmd__union_DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const union _gmd__union_DQ_USCOREResult_USCOREPropertyType *);
SOAP_FMAC3 union _gmd__union_DQ_USCOREResult_USCOREPropertyType * SOAP_FMAC4 soap_in__gmd__union_DQ_USCOREResult_USCOREPropertyType(struct soap*, int*, union _gmd__union_DQ_USCOREResult_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType *);
SOAP_FMAC3 union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType * SOAP_FMAC4 soap_in__gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int*, union _gmd__union_EX_USCOREGeographicExtent_USCOREPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_coordinateOperationAccuracy_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_coordinateOperationAccuracy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_coordinateOperationAccuracy(struct soap*, int, const union _gml__union_coordinateOperationAccuracy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_coordinateOperationAccuracy(struct soap*, int, const union _gml__union_coordinateOperationAccuracy *);
SOAP_FMAC3 union _gml__union_coordinateOperationAccuracy * SOAP_FMAC4 soap_in__gml__union_coordinateOperationAccuracy(struct soap*, int*, union _gml__union_coordinateOperationAccuracy *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_SecondDefiningParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_SecondDefiningParameter(struct soap*, int, const union _gml__union_SecondDefiningParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_SecondDefiningParameter(struct soap*, int, const union _gml__union_SecondDefiningParameter *);
SOAP_FMAC3 union _gml__union_SecondDefiningParameter * SOAP_FMAC4 soap_in__gml__union_SecondDefiningParameter(struct soap*, int*, union _gml__union_SecondDefiningParameter *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_CRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_CRSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_CRSPropertyType(struct soap*, int, const union _gml__union_CRSPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_CRSPropertyType(struct soap*, int, const union _gml__union_CRSPropertyType *);
SOAP_FMAC3 union _gml__union_CRSPropertyType * SOAP_FMAC4 soap_in__gml__union_CRSPropertyType(struct soap*, int*, union _gml__union_CRSPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_GeneralConversionPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_GeneralConversionPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_GeneralConversionPropertyType(struct soap*, int, const union _gml__union_GeneralConversionPropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_GeneralConversionPropertyType(struct soap*, int, const union _gml__union_GeneralConversionPropertyType *);
SOAP_FMAC3 union _gml__union_GeneralConversionPropertyType * SOAP_FMAC4 soap_in__gml__union_GeneralConversionPropertyType(struct soap*, int*, union _gml__union_GeneralConversionPropertyType *);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__gml__union_TimePrimitivePropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__gml__union_TimePrimitivePropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__gml__union_TimePrimitivePropertyType(struct soap*, int, const union _gml__union_TimePrimitivePropertyType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__gml__union_TimePrimitivePropertyType(struct soap*, int, const union _gml__union_TimePrimitivePropertyType *);
SOAP_FMAC3 union _gml__union_TimePrimitivePropertyType * SOAP_FMAC4 soap_in__gml__union_TimePrimitivePropertyType(struct soap*, int*, union _gml__union_TimePrimitivePropertyType *);
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticCRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticCRSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeodeticCRSPropertyType(struct soap*, gml__GeodeticCRSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeodeticCRSPropertyType(struct soap*, const char *, int, gml__GeodeticCRSPropertyType *const*, const char *);
SOAP_FMAC3 gml__GeodeticCRSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__GeodeticCRSPropertyType(struct soap*, const char*, gml__GeodeticCRSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeodeticCRSPropertyType(struct soap*, gml__GeodeticCRSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeodeticCRSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__GeodeticCRSPropertyType(struct soap*, gml__GeodeticCRSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TimeIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TimeIndices_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__TimeIndices(struct soap*, resqml2__TimeIndices *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__TimeIndices(struct soap*, const char *, int, resqml2__TimeIndices *const*, const char *);
SOAP_FMAC3 resqml2__TimeIndices ** SOAP_FMAC4 soap_in_PointerToresqml2__TimeIndices(struct soap*, const char*, resqml2__TimeIndices **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__TimeIndices(struct soap*, resqml2__TimeIndices *const*, const char*, const char*);
SOAP_FMAC3 resqml2__TimeIndices ** SOAP_FMAC4 soap_get_PointerToresqml2__TimeIndices(struct soap*, resqml2__TimeIndices **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SeismicLatticeSetFeature_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SeismicLatticeSetFeature_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__SeismicLatticeSetFeature(struct soap*, resqml2__SeismicLatticeSetFeature *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__SeismicLatticeSetFeature(struct soap*, const char *, int, resqml2__SeismicLatticeSetFeature *const*, const char *);
SOAP_FMAC3 resqml2__SeismicLatticeSetFeature ** SOAP_FMAC4 soap_in_PointerToresqml2__SeismicLatticeSetFeature(struct soap*, const char*, resqml2__SeismicLatticeSetFeature **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__SeismicLatticeSetFeature(struct soap*, resqml2__SeismicLatticeSetFeature *const*, const char*, const char*);
SOAP_FMAC3 resqml2__SeismicLatticeSetFeature ** SOAP_FMAC4 soap_get_PointerToresqml2__SeismicLatticeSetFeature(struct soap*, resqml2__SeismicLatticeSetFeature **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SealedContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SealedContactRepresentationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__SealedContactRepresentationPart(struct soap*, resqml2__SealedContactRepresentationPart *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__SealedContactRepresentationPart(struct soap*, const char *, int, resqml2__SealedContactRepresentationPart *const*, const char *);
SOAP_FMAC3 resqml2__SealedContactRepresentationPart ** SOAP_FMAC4 soap_in_PointerToresqml2__SealedContactRepresentationPart(struct soap*, const char*, resqml2__SealedContactRepresentationPart **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__SealedContactRepresentationPart(struct soap*, resqml2__SealedContactRepresentationPart *const*, const char*, const char*);
SOAP_FMAC3 resqml2__SealedContactRepresentationPart ** SOAP_FMAC4 soap_get_PointerToresqml2__SealedContactRepresentationPart(struct soap*, resqml2__SealedContactRepresentationPart **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractContactRepresentationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractContactRepresentationPart(struct soap*, resqml2__AbstractContactRepresentationPart *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractContactRepresentationPart(struct soap*, const char *, int, resqml2__AbstractContactRepresentationPart *const*, const char *);
SOAP_FMAC3 resqml2__AbstractContactRepresentationPart ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractContactRepresentationPart(struct soap*, const char*, resqml2__AbstractContactRepresentationPart **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractContactRepresentationPart(struct soap*, resqml2__AbstractContactRepresentationPart *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractContactRepresentationPart ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractContactRepresentationPart(struct soap*, resqml2__AbstractContactRepresentationPart **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GeologicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GeologicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, resqml2__GeologicUnitInterpretationIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, const char *, int, resqml2__GeologicUnitInterpretationIndex *const*, const char *);
SOAP_FMAC3 resqml2__GeologicUnitInterpretationIndex ** SOAP_FMAC4 soap_in_PointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, const char*, resqml2__GeologicUnitInterpretationIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, resqml2__GeologicUnitInterpretationIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml2__GeologicUnitInterpretationIndex ** SOAP_FMAC4 soap_get_PointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, resqml2__GeologicUnitInterpretationIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__StratigraphicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__StratigraphicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, resqml2__StratigraphicUnitInterpretationIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, const char *, int, resqml2__StratigraphicUnitInterpretationIndex *const*, const char *);
SOAP_FMAC3 resqml2__StratigraphicUnitInterpretationIndex ** SOAP_FMAC4 soap_in_PointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, const char*, resqml2__StratigraphicUnitInterpretationIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, resqml2__StratigraphicUnitInterpretationIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml2__StratigraphicUnitInterpretationIndex ** SOAP_FMAC4 soap_get_PointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, resqml2__StratigraphicUnitInterpretationIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalDatumPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalDatumPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalDatumPropertyType(struct soap*, gml__VerticalDatumPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalDatumPropertyType(struct soap*, const char *, int, gml__VerticalDatumPropertyType *const*, const char *);
SOAP_FMAC3 gml__VerticalDatumPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalDatumPropertyType(struct soap*, const char*, gml__VerticalDatumPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalDatumPropertyType(struct soap*, gml__VerticalDatumPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalDatumPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalDatumPropertyType(struct soap*, gml__VerticalDatumPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalCSPropertyType(struct soap*, gml__VerticalCSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalCSPropertyType(struct soap*, const char *, int, gml__VerticalCSPropertyType *const*, const char *);
SOAP_FMAC3 gml__VerticalCSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalCSPropertyType(struct soap*, const char*, gml__VerticalCSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalCSPropertyType(struct soap*, gml__VerticalCSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalCSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalCSPropertyType(struct soap*, gml__VerticalCSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeneralConversionPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeneralConversionPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeneralConversionPropertyType(struct soap*, gml__GeneralConversionPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeneralConversionPropertyType(struct soap*, const char *, int, gml__GeneralConversionPropertyType *const*, const char *);
SOAP_FMAC3 gml__GeneralConversionPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__GeneralConversionPropertyType(struct soap*, const char*, gml__GeneralConversionPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeneralConversionPropertyType(struct soap*, gml__GeneralConversionPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeneralConversionPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__GeneralConversionPropertyType(struct soap*, gml__GeneralConversionPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__EllipsoidPropertyType(struct soap*, gml__EllipsoidPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__EllipsoidPropertyType(struct soap*, const char *, int, gml__EllipsoidPropertyType *const*, const char *);
SOAP_FMAC3 gml__EllipsoidPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__EllipsoidPropertyType(struct soap*, const char*, gml__EllipsoidPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__EllipsoidPropertyType(struct soap*, gml__EllipsoidPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__EllipsoidPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__EllipsoidPropertyType(struct soap*, gml__EllipsoidPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__PrimeMeridianPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__PrimeMeridianPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__PrimeMeridianPropertyType(struct soap*, gml__PrimeMeridianPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__PrimeMeridianPropertyType(struct soap*, const char *, int, gml__PrimeMeridianPropertyType *const*, const char *);
SOAP_FMAC3 gml__PrimeMeridianPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__PrimeMeridianPropertyType(struct soap*, const char*, gml__PrimeMeridianPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__PrimeMeridianPropertyType(struct soap*, gml__PrimeMeridianPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__PrimeMeridianPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__PrimeMeridianPropertyType(struct soap*, gml__PrimeMeridianPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticDatumPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticDatumPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeodeticDatumPropertyType(struct soap*, gml__GeodeticDatumPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeodeticDatumPropertyType(struct soap*, const char *, int, gml__GeodeticDatumPropertyType *const*, const char *);
SOAP_FMAC3 gml__GeodeticDatumPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__GeodeticDatumPropertyType(struct soap*, const char*, gml__GeodeticDatumPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeodeticDatumPropertyType(struct soap*, gml__GeodeticDatumPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeodeticDatumPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__GeodeticDatumPropertyType(struct soap*, gml__GeodeticDatumPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__SphericalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__SphericalCSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__SphericalCSPropertyType(struct soap*, gml__SphericalCSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__SphericalCSPropertyType(struct soap*, const char *, int, gml__SphericalCSPropertyType *const*, const char *);
SOAP_FMAC3 gml__SphericalCSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__SphericalCSPropertyType(struct soap*, const char*, gml__SphericalCSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__SphericalCSPropertyType(struct soap*, gml__SphericalCSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__SphericalCSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__SphericalCSPropertyType(struct soap*, gml__SphericalCSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CartesianCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CartesianCSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CartesianCSPropertyType(struct soap*, gml__CartesianCSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CartesianCSPropertyType(struct soap*, const char *, int, gml__CartesianCSPropertyType *const*, const char *);
SOAP_FMAC3 gml__CartesianCSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__CartesianCSPropertyType(struct soap*, const char*, gml__CartesianCSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CartesianCSPropertyType(struct soap*, gml__CartesianCSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__CartesianCSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__CartesianCSPropertyType(struct soap*, gml__CartesianCSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidalCSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidalCSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__EllipsoidalCSPropertyType(struct soap*, gml__EllipsoidalCSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__EllipsoidalCSPropertyType(struct soap*, const char *, int, gml__EllipsoidalCSPropertyType *const*, const char *);
SOAP_FMAC3 gml__EllipsoidalCSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__EllipsoidalCSPropertyType(struct soap*, const char*, gml__EllipsoidalCSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__EllipsoidalCSPropertyType(struct soap*, gml__EllipsoidalCSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__EllipsoidalCSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__EllipsoidalCSPropertyType(struct soap*, gml__EllipsoidalCSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__WitsmlWellboreReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__WitsmlWellboreReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__WitsmlWellboreReference(struct soap*, resqml2__WitsmlWellboreReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__WitsmlWellboreReference(struct soap*, const char *, int, resqml2__WitsmlWellboreReference *const*, const char *);
SOAP_FMAC3 resqml2__WitsmlWellboreReference ** SOAP_FMAC4 soap_in_PointerToresqml2__WitsmlWellboreReference(struct soap*, const char*, resqml2__WitsmlWellboreReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__WitsmlWellboreReference(struct soap*, resqml2__WitsmlWellboreReference *const*, const char*, const char*);
SOAP_FMAC3 resqml2__WitsmlWellboreReference ** SOAP_FMAC4 soap_get_PointerToresqml2__WitsmlWellboreReference(struct soap*, resqml2__WitsmlWellboreReference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Grid2dPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Grid2dPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Grid2dPatch(struct soap*, resqml2__Grid2dPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Grid2dPatch(struct soap*, const char *, int, resqml2__Grid2dPatch *const*, const char *);
SOAP_FMAC3 resqml2__Grid2dPatch ** SOAP_FMAC4 soap_in_PointerToresqml2__Grid2dPatch(struct soap*, const char*, resqml2__Grid2dPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Grid2dPatch(struct soap*, resqml2__Grid2dPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__Grid2dPatch ** SOAP_FMAC4 soap_get_PointerToresqml2__Grid2dPatch(struct soap*, resqml2__Grid2dPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__VolumeRegion_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__VolumeRegion_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__VolumeRegion(struct soap*, resqml2__VolumeRegion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__VolumeRegion(struct soap*, const char *, int, resqml2__VolumeRegion *const*, const char *);
SOAP_FMAC3 resqml2__VolumeRegion ** SOAP_FMAC4 soap_in_PointerToresqml2__VolumeRegion(struct soap*, const char*, resqml2__VolumeRegion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__VolumeRegion(struct soap*, resqml2__VolumeRegion *const*, const char*, const char*);
SOAP_FMAC3 resqml2__VolumeRegion ** SOAP_FMAC4 soap_get_PointerToresqml2__VolumeRegion(struct soap*, resqml2__VolumeRegion **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ContactIdentity(struct soap*, resqml2__ContactIdentity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ContactIdentity(struct soap*, const char *, int, resqml2__ContactIdentity *const*, const char *);
SOAP_FMAC3 resqml2__ContactIdentity ** SOAP_FMAC4 soap_in_PointerToresqml2__ContactIdentity(struct soap*, const char*, resqml2__ContactIdentity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ContactIdentity(struct soap*, resqml2__ContactIdentity *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ContactIdentity ** SOAP_FMAC4 soap_get_PointerToresqml2__ContactIdentity(struct soap*, resqml2__ContactIdentity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractPlaneGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractPlaneGeometry(struct soap*, resqml2__AbstractPlaneGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractPlaneGeometry(struct soap*, const char *, int, resqml2__AbstractPlaneGeometry *const*, const char *);
SOAP_FMAC3 resqml2__AbstractPlaneGeometry ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractPlaneGeometry(struct soap*, const char*, resqml2__AbstractPlaneGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractPlaneGeometry(struct soap*, resqml2__AbstractPlaneGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractPlaneGeometry ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractPlaneGeometry(struct soap*, resqml2__AbstractPlaneGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TrianglePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TrianglePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__TrianglePatch(struct soap*, resqml2__TrianglePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__TrianglePatch(struct soap*, const char *, int, resqml2__TrianglePatch *const*, const char *);
SOAP_FMAC3 resqml2__TrianglePatch ** SOAP_FMAC4 soap_in_PointerToresqml2__TrianglePatch(struct soap*, const char*, resqml2__TrianglePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__TrianglePatch(struct soap*, resqml2__TrianglePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__TrianglePatch ** SOAP_FMAC4 soap_get_PointerToresqml2__TrianglePatch(struct soap*, resqml2__TrianglePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__WellboreMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__WellboreMarker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__WellboreMarker(struct soap*, resqml2__WellboreMarker *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__WellboreMarker(struct soap*, const char *, int, resqml2__WellboreMarker *const*, const char *);
SOAP_FMAC3 resqml2__WellboreMarker ** SOAP_FMAC4 soap_in_PointerToresqml2__WellboreMarker(struct soap*, const char*, resqml2__WellboreMarker **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__WellboreMarker(struct soap*, resqml2__WellboreMarker *const*, const char*, const char*);
SOAP_FMAC3 resqml2__WellboreMarker ** SOAP_FMAC4 soap_get_PointerToresqml2__WellboreMarker(struct soap*, resqml2__WellboreMarker **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__DepositionMode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__DepositionMode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__DepositionMode(struct soap*, enum resqml2__DepositionMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__DepositionMode(struct soap*, const char *, int, enum resqml2__DepositionMode *const*, const char *);
SOAP_FMAC3 enum resqml2__DepositionMode ** SOAP_FMAC4 soap_in_PointerToresqml2__DepositionMode(struct soap*, const char*, enum resqml2__DepositionMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__DepositionMode(struct soap*, enum resqml2__DepositionMode *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__DepositionMode ** SOAP_FMAC4 soap_get_PointerToresqml2__DepositionMode(struct soap*, enum resqml2__DepositionMode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SequenceStratigraphySurface_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SequenceStratigraphySurface_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__SequenceStratigraphySurface(struct soap*, enum resqml2__SequenceStratigraphySurface *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__SequenceStratigraphySurface(struct soap*, const char *, int, enum resqml2__SequenceStratigraphySurface *const*, const char *);
SOAP_FMAC3 enum resqml2__SequenceStratigraphySurface ** SOAP_FMAC4 soap_in_PointerToresqml2__SequenceStratigraphySurface(struct soap*, const char*, enum resqml2__SequenceStratigraphySurface **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__SequenceStratigraphySurface(struct soap*, enum resqml2__SequenceStratigraphySurface *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__SequenceStratigraphySurface ** SOAP_FMAC4 soap_get_PointerToresqml2__SequenceStratigraphySurface(struct soap*, enum resqml2__SequenceStratigraphySurface **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Geobody3dShape_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Geobody3dShape_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Geobody3dShape(struct soap*, enum resqml2__Geobody3dShape *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Geobody3dShape(struct soap*, const char *, int, enum resqml2__Geobody3dShape *const*, const char *);
SOAP_FMAC3 enum resqml2__Geobody3dShape ** SOAP_FMAC4 soap_in_PointerToresqml2__Geobody3dShape(struct soap*, const char*, enum resqml2__Geobody3dShape **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Geobody3dShape(struct soap*, enum resqml2__Geobody3dShape *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__Geobody3dShape ** SOAP_FMAC4 soap_get_PointerToresqml2__Geobody3dShape(struct soap*, enum resqml2__Geobody3dShape **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__FaultThrow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__FaultThrow_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__FaultThrow(struct soap*, resqml2__FaultThrow *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__FaultThrow(struct soap*, const char *, int, resqml2__FaultThrow *const*, const char *);
SOAP_FMAC3 resqml2__FaultThrow ** SOAP_FMAC4 soap_in_PointerToresqml2__FaultThrow(struct soap*, const char*, resqml2__FaultThrow **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__FaultThrow(struct soap*, resqml2__FaultThrow *const*, const char*, const char*);
SOAP_FMAC3 resqml2__FaultThrow ** SOAP_FMAC4 soap_get_PointerToresqml2__FaultThrow(struct soap*, resqml2__FaultThrow **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__LengthMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__LengthMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__LengthMeasure(struct soap*, eml__LengthMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__LengthMeasure(struct soap*, const char *, int, eml__LengthMeasure *const*, const char *);
SOAP_FMAC3 eml__LengthMeasure ** SOAP_FMAC4 soap_in_PointerToeml__LengthMeasure(struct soap*, const char*, eml__LengthMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__LengthMeasure(struct soap*, eml__LengthMeasure *const*, const char*, const char*);
SOAP_FMAC3 eml__LengthMeasure ** SOAP_FMAC4 soap_get_PointerToeml__LengthMeasure(struct soap*, eml__LengthMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__HorizonInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__HorizonInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__HorizonInterpretationIndex(struct soap*, resqml2__HorizonInterpretationIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__HorizonInterpretationIndex(struct soap*, const char *, int, resqml2__HorizonInterpretationIndex *const*, const char *);
SOAP_FMAC3 resqml2__HorizonInterpretationIndex ** SOAP_FMAC4 soap_in_PointerToresqml2__HorizonInterpretationIndex(struct soap*, const char*, resqml2__HorizonInterpretationIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__HorizonInterpretationIndex(struct soap*, resqml2__HorizonInterpretationIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml2__HorizonInterpretationIndex ** SOAP_FMAC4 soap_get_PointerToresqml2__HorizonInterpretationIndex(struct soap*, resqml2__HorizonInterpretationIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Phase_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Phase_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Phase(struct soap*, enum resqml2__Phase *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Phase(struct soap*, const char *, int, enum resqml2__Phase *const*, const char *);
SOAP_FMAC3 enum resqml2__Phase ** SOAP_FMAC4 soap_in_PointerToresqml2__Phase(struct soap*, const char*, enum resqml2__Phase **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Phase(struct soap*, enum resqml2__Phase *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__Phase ** SOAP_FMAC4 soap_get_PointerToresqml2__Phase(struct soap*, enum resqml2__Phase **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__RockFluidUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__RockFluidUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__RockFluidUnitInterpretationIndex(struct soap*, resqml2__RockFluidUnitInterpretationIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__RockFluidUnitInterpretationIndex(struct soap*, const char *, int, resqml2__RockFluidUnitInterpretationIndex *const*, const char *);
SOAP_FMAC3 resqml2__RockFluidUnitInterpretationIndex ** SOAP_FMAC4 soap_in_PointerToresqml2__RockFluidUnitInterpretationIndex(struct soap*, const char*, resqml2__RockFluidUnitInterpretationIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__RockFluidUnitInterpretationIndex(struct soap*, resqml2__RockFluidUnitInterpretationIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml2__RockFluidUnitInterpretationIndex ** SOAP_FMAC4 soap_get_PointerToresqml2__RockFluidUnitInterpretationIndex(struct soap*, resqml2__RockFluidUnitInterpretationIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GpGridUnstructuredGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GpGridUnstructuredGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, resqml2__GpGridUnstructuredGridPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, const char *, int, resqml2__GpGridUnstructuredGridPatch *const*, const char *);
SOAP_FMAC3 resqml2__GpGridUnstructuredGridPatch ** SOAP_FMAC4 soap_in_PointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, const char*, resqml2__GpGridUnstructuredGridPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, resqml2__GpGridUnstructuredGridPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__GpGridUnstructuredGridPatch ** SOAP_FMAC4 soap_get_PointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, resqml2__GpGridUnstructuredGridPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GpGridColumnLayerGrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GpGridColumnLayerGrid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__GpGridColumnLayerGrid(struct soap*, resqml2__GpGridColumnLayerGrid *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__GpGridColumnLayerGrid(struct soap*, const char *, int, resqml2__GpGridColumnLayerGrid *const*, const char *);
SOAP_FMAC3 resqml2__GpGridColumnLayerGrid ** SOAP_FMAC4 soap_in_PointerToresqml2__GpGridColumnLayerGrid(struct soap*, const char*, resqml2__GpGridColumnLayerGrid **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__GpGridColumnLayerGrid(struct soap*, resqml2__GpGridColumnLayerGrid *const*, const char*, const char*);
SOAP_FMAC3 resqml2__GpGridColumnLayerGrid ** SOAP_FMAC4 soap_get_PointerToresqml2__GpGridColumnLayerGrid(struct soap*, resqml2__GpGridColumnLayerGrid **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CRSPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CRSPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CRSPropertyType(struct soap*, gml__CRSPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CRSPropertyType(struct soap*, const char *, int, gml__CRSPropertyType *const*, const char *);
SOAP_FMAC3 gml__CRSPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__CRSPropertyType(struct soap*, const char*, gml__CRSPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CRSPropertyType(struct soap*, gml__CRSPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__CRSPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__CRSPropertyType(struct soap*, gml__CRSPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__coordinateOperationAccuracy_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__coordinateOperationAccuracy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__coordinateOperationAccuracy(struct soap*, const char *, int, _gml__coordinateOperationAccuracy *const*, const char *);
SOAP_FMAC3 _gml__coordinateOperationAccuracy ** SOAP_FMAC4 soap_in_PointerTo_gml__coordinateOperationAccuracy(struct soap*, const char*, _gml__coordinateOperationAccuracy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy *const*, const char*, const char*);
SOAP_FMAC3 _gml__coordinateOperationAccuracy ** SOAP_FMAC4 soap_get_PointerTo_gml__coordinateOperationAccuracy(struct soap*, _gml__coordinateOperationAccuracy **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__secondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__secondDefiningParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__secondDefiningParameter(struct soap*, const char *, int, _gml__secondDefiningParameter *const*, const char *);
SOAP_FMAC3 _gml__secondDefiningParameter ** SOAP_FMAC4 soap_in_PointerTo_gml__secondDefiningParameter(struct soap*, const char*, _gml__secondDefiningParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter *const*, const char*, const char*);
SOAP_FMAC3 _gml__secondDefiningParameter ** SOAP_FMAC4 soap_get_PointerTo_gml__secondDefiningParameter(struct soap*, _gml__secondDefiningParameter **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__AngleType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__AngleType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__AngleType(struct soap*, gml__AngleType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__AngleType(struct soap*, const char *, int, gml__AngleType *const*, const char *);
SOAP_FMAC3 gml__AngleType ** SOAP_FMAC4 soap_in_PointerTogml__AngleType(struct soap*, const char*, gml__AngleType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__AngleType(struct soap*, gml__AngleType *const*, const char*, const char*);
SOAP_FMAC3 gml__AngleType ** SOAP_FMAC4 soap_get_PointerTogml__AngleType(struct soap*, gml__AngleType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__date_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__date_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__date(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__date(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__date(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__date(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__date(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTodouble_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTodouble_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodouble(struct soap*, double *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodouble(struct soap*, const char *, int, double *const*, const char *);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_in_PointerTodouble(struct soap*, const char*, double **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodouble(struct soap*, double *const*, const char*, const char*);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_get_PointerTodouble(struct soap*, double **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__AggregationType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__AggregationType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__AggregationType(struct soap*, enum gml__AggregationType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__AggregationType(struct soap*, const char *, int, enum gml__AggregationType *const*, const char *);
SOAP_FMAC3 enum gml__AggregationType ** SOAP_FMAC4 soap_in_PointerTogml__AggregationType(struct soap*, const char*, enum gml__AggregationType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__AggregationType(struct soap*, enum gml__AggregationType *const*, const char*, const char*);
SOAP_FMAC3 enum gml__AggregationType ** SOAP_FMAC4 soap_get_PointerTogml__AggregationType(struct soap*, enum gml__AggregationType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CoordinateSystemAxisPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CoordinateSystemAxisPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, gml__CoordinateSystemAxisPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const char *, int, gml__CoordinateSystemAxisPropertyType *const*, const char *);
SOAP_FMAC3 gml__CoordinateSystemAxisPropertyType ** SOAP_FMAC4 soap_in_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const char*, gml__CoordinateSystemAxisPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, gml__CoordinateSystemAxisPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gml__CoordinateSystemAxisPropertyType ** SOAP_FMAC4 soap_get_PointerTogml__CoordinateSystemAxisPropertyType(struct soap*, gml__CoordinateSystemAxisPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__domainOfValidity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__domainOfValidity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__domainOfValidity(struct soap*, _gml__domainOfValidity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__domainOfValidity(struct soap*, const char *, int, _gml__domainOfValidity *const*, const char *);
SOAP_FMAC3 _gml__domainOfValidity ** SOAP_FMAC4 soap_in_PointerTo_gml__domainOfValidity(struct soap*, const char*, _gml__domainOfValidity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__domainOfValidity(struct soap*, _gml__domainOfValidity *const*, const char*, const char*);
SOAP_FMAC3 _gml__domainOfValidity ** SOAP_FMAC4 soap_get_PointerTo_gml__domainOfValidity(struct soap*, _gml__domainOfValidity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__StreamlinePolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__StreamlinePolylineSetPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__StreamlinePolylineSetPatch(struct soap*, resqml2__StreamlinePolylineSetPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__StreamlinePolylineSetPatch(struct soap*, const char *, int, resqml2__StreamlinePolylineSetPatch *const*, const char *);
SOAP_FMAC3 resqml2__StreamlinePolylineSetPatch ** SOAP_FMAC4 soap_in_PointerToresqml2__StreamlinePolylineSetPatch(struct soap*, const char*, resqml2__StreamlinePolylineSetPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__StreamlinePolylineSetPatch(struct soap*, resqml2__StreamlinePolylineSetPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__StreamlinePolylineSetPatch ** SOAP_FMAC4 soap_get_PointerToresqml2__StreamlinePolylineSetPatch(struct soap*, resqml2__StreamlinePolylineSetPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__StreamlineWellbores_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__StreamlineWellbores_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__StreamlineWellbores(struct soap*, resqml2__StreamlineWellbores *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__StreamlineWellbores(struct soap*, const char *, int, resqml2__StreamlineWellbores *const*, const char *);
SOAP_FMAC3 resqml2__StreamlineWellbores ** SOAP_FMAC4 soap_in_PointerToresqml2__StreamlineWellbores(struct soap*, const char*, resqml2__StreamlineWellbores **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__StreamlineWellbores(struct soap*, resqml2__StreamlineWellbores *const*, const char*, const char*);
SOAP_FMAC3 resqml2__StreamlineWellbores ** SOAP_FMAC4 soap_get_PointerToresqml2__StreamlineWellbores(struct soap*, resqml2__StreamlineWellbores **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PatchBoundaries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PatchBoundaries_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__PatchBoundaries(struct soap*, resqml2__PatchBoundaries *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__PatchBoundaries(struct soap*, const char *, int, resqml2__PatchBoundaries *const*, const char *);
SOAP_FMAC3 resqml2__PatchBoundaries ** SOAP_FMAC4 soap_in_PointerToresqml2__PatchBoundaries(struct soap*, const char*, resqml2__PatchBoundaries **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__PatchBoundaries(struct soap*, resqml2__PatchBoundaries *const*, const char*, const char*);
SOAP_FMAC3 resqml2__PatchBoundaries ** SOAP_FMAC4 soap_get_PointerToresqml2__PatchBoundaries(struct soap*, resqml2__PatchBoundaries **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PolylineSetPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__PolylineSetPatch(struct soap*, resqml2__PolylineSetPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__PolylineSetPatch(struct soap*, const char *, int, resqml2__PolylineSetPatch *const*, const char *);
SOAP_FMAC3 resqml2__PolylineSetPatch ** SOAP_FMAC4 soap_in_PointerToresqml2__PolylineSetPatch(struct soap*, const char*, resqml2__PolylineSetPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__PolylineSetPatch(struct soap*, resqml2__PolylineSetPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__PolylineSetPatch ** SOAP_FMAC4 soap_get_PointerToresqml2__PolylineSetPatch(struct soap*, resqml2__PolylineSetPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__LineRole_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__LineRole_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__LineRole(struct soap*, enum resqml2__LineRole *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__LineRole(struct soap*, const char *, int, enum resqml2__LineRole *const*, const char *);
SOAP_FMAC3 enum resqml2__LineRole ** SOAP_FMAC4 soap_in_PointerToresqml2__LineRole(struct soap*, const char*, enum resqml2__LineRole **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__LineRole(struct soap*, enum resqml2__LineRole *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__LineRole ** SOAP_FMAC4 soap_get_PointerToresqml2__LineRole(struct soap*, enum resqml2__LineRole **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__NodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__NodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__NodePatch(struct soap*, resqml2__NodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__NodePatch(struct soap*, const char *, int, resqml2__NodePatch *const*, const char *);
SOAP_FMAC3 resqml2__NodePatch ** SOAP_FMAC4 soap_in_PointerToresqml2__NodePatch(struct soap*, const char*, resqml2__NodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__NodePatch(struct soap*, resqml2__NodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__NodePatch ** SOAP_FMAC4 soap_get_PointerToresqml2__NodePatch(struct soap*, resqml2__NodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__WellboreTrajectoryParentIntersection_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__WellboreTrajectoryParentIntersection_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__WellboreTrajectoryParentIntersection(struct soap*, resqml2__WellboreTrajectoryParentIntersection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__WellboreTrajectoryParentIntersection(struct soap*, const char *, int, resqml2__WellboreTrajectoryParentIntersection *const*, const char *);
SOAP_FMAC3 resqml2__WellboreTrajectoryParentIntersection ** SOAP_FMAC4 soap_in_PointerToresqml2__WellboreTrajectoryParentIntersection(struct soap*, const char*, resqml2__WellboreTrajectoryParentIntersection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__WellboreTrajectoryParentIntersection(struct soap*, resqml2__WellboreTrajectoryParentIntersection *const*, const char*, const char*);
SOAP_FMAC3 resqml2__WellboreTrajectoryParentIntersection ** SOAP_FMAC4 soap_get_PointerToresqml2__WellboreTrajectoryParentIntersection(struct soap*, resqml2__WellboreTrajectoryParentIntersection **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractParametricLineGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractParametricLineGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractParametricLineGeometry(struct soap*, resqml2__AbstractParametricLineGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractParametricLineGeometry(struct soap*, const char *, int, resqml2__AbstractParametricLineGeometry *const*, const char *);
SOAP_FMAC3 resqml2__AbstractParametricLineGeometry ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractParametricLineGeometry(struct soap*, const char*, resqml2__AbstractParametricLineGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractParametricLineGeometry(struct soap*, resqml2__AbstractParametricLineGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractParametricLineGeometry ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractParametricLineGeometry(struct soap*, resqml2__AbstractParametricLineGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__MdDomain_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__MdDomain_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__MdDomain(struct soap*, enum resqml2__MdDomain *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__MdDomain(struct soap*, const char *, int, enum resqml2__MdDomain *const*, const char *);
SOAP_FMAC3 enum resqml2__MdDomain ** SOAP_FMAC4 soap_in_PointerToresqml2__MdDomain(struct soap*, const char*, enum resqml2__MdDomain **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__MdDomain(struct soap*, enum resqml2__MdDomain *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__MdDomain ** SOAP_FMAC4 soap_get_PointerToresqml2__MdDomain(struct soap*, enum resqml2__MdDomain **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IntervalStratigraphicUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IntervalStratigraphicUnits_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__IntervalStratigraphicUnits(struct soap*, resqml2__IntervalStratigraphicUnits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__IntervalStratigraphicUnits(struct soap*, const char *, int, resqml2__IntervalStratigraphicUnits *const*, const char *);
SOAP_FMAC3 resqml2__IntervalStratigraphicUnits ** SOAP_FMAC4 soap_in_PointerToresqml2__IntervalStratigraphicUnits(struct soap*, const char*, resqml2__IntervalStratigraphicUnits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__IntervalStratigraphicUnits(struct soap*, resqml2__IntervalStratigraphicUnits *const*, const char*, const char*);
SOAP_FMAC3 resqml2__IntervalStratigraphicUnits ** SOAP_FMAC4 soap_get_PointerToresqml2__IntervalStratigraphicUnits(struct soap*, resqml2__IntervalStratigraphicUnits **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GeologicUnitMaterialImplacement_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GeologicUnitMaterialImplacement_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__GeologicUnitMaterialImplacement(struct soap*, enum resqml2__GeologicUnitMaterialImplacement *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__GeologicUnitMaterialImplacement(struct soap*, const char *, int, enum resqml2__GeologicUnitMaterialImplacement *const*, const char *);
SOAP_FMAC3 enum resqml2__GeologicUnitMaterialImplacement ** SOAP_FMAC4 soap_in_PointerToresqml2__GeologicUnitMaterialImplacement(struct soap*, const char*, enum resqml2__GeologicUnitMaterialImplacement **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__GeologicUnitMaterialImplacement(struct soap*, enum resqml2__GeologicUnitMaterialImplacement *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__GeologicUnitMaterialImplacement ** SOAP_FMAC4 soap_get_PointerToresqml2__GeologicUnitMaterialImplacement(struct soap*, enum resqml2__GeologicUnitMaterialImplacement **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GeologicUnitComposition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GeologicUnitComposition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__GeologicUnitComposition(struct soap*, enum resqml2__GeologicUnitComposition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__GeologicUnitComposition(struct soap*, const char *, int, enum resqml2__GeologicUnitComposition *const*, const char *);
SOAP_FMAC3 enum resqml2__GeologicUnitComposition ** SOAP_FMAC4 soap_in_PointerToresqml2__GeologicUnitComposition(struct soap*, const char*, enum resqml2__GeologicUnitComposition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__GeologicUnitComposition(struct soap*, enum resqml2__GeologicUnitComposition *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__GeologicUnitComposition ** SOAP_FMAC4 soap_get_PointerToresqml2__GeologicUnitComposition(struct soap*, enum resqml2__GeologicUnitComposition **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractContactInterpretationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractContactInterpretationPart(struct soap*, resqml2__AbstractContactInterpretationPart *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractContactInterpretationPart(struct soap*, const char *, int, resqml2__AbstractContactInterpretationPart *const*, const char *);
SOAP_FMAC3 resqml2__AbstractContactInterpretationPart ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractContactInterpretationPart(struct soap*, const char*, resqml2__AbstractContactInterpretationPart **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractContactInterpretationPart(struct soap*, resqml2__AbstractContactInterpretationPart *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractContactInterpretationPart ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractContactInterpretationPart(struct soap*, resqml2__AbstractContactInterpretationPart **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ConnectionInterpretations_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ConnectionInterpretations_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ConnectionInterpretations(struct soap*, resqml2__ConnectionInterpretations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ConnectionInterpretations(struct soap*, const char *, int, resqml2__ConnectionInterpretations *const*, const char *);
SOAP_FMAC3 resqml2__ConnectionInterpretations ** SOAP_FMAC4 soap_in_PointerToresqml2__ConnectionInterpretations(struct soap*, const char*, resqml2__ConnectionInterpretations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ConnectionInterpretations(struct soap*, resqml2__ConnectionInterpretations *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ConnectionInterpretations ** SOAP_FMAC4 soap_get_PointerToresqml2__ConnectionInterpretations(struct soap*, resqml2__ConnectionInterpretations **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IjGaps_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IjGaps_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__IjGaps(struct soap*, resqml2__IjGaps *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__IjGaps(struct soap*, const char *, int, resqml2__IjGaps *const*, const char *);
SOAP_FMAC3 resqml2__IjGaps ** SOAP_FMAC4 soap_in_PointerToresqml2__IjGaps(struct soap*, const char*, resqml2__IjGaps **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__IjGaps(struct soap*, resqml2__IjGaps *const*, const char*, const char*);
SOAP_FMAC3 resqml2__IjGaps ** SOAP_FMAC4 soap_get_PointerToresqml2__IjGaps(struct soap*, resqml2__IjGaps **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__CellStratigraphicUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__CellStratigraphicUnits_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__CellStratigraphicUnits(struct soap*, resqml2__CellStratigraphicUnits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__CellStratigraphicUnits(struct soap*, const char *, int, resqml2__CellStratigraphicUnits *const*, const char *);
SOAP_FMAC3 resqml2__CellStratigraphicUnits ** SOAP_FMAC4 soap_in_PointerToresqml2__CellStratigraphicUnits(struct soap*, const char*, resqml2__CellStratigraphicUnits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__CellStratigraphicUnits(struct soap*, resqml2__CellStratigraphicUnits *const*, const char*, const char*);
SOAP_FMAC3 resqml2__CellStratigraphicUnits ** SOAP_FMAC4 soap_get_PointerToresqml2__CellStratigraphicUnits(struct soap*, resqml2__CellStratigraphicUnits **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractParentWindow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractParentWindow_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractParentWindow(struct soap*, resqml2__AbstractParentWindow *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractParentWindow(struct soap*, const char *, int, resqml2__AbstractParentWindow *const*, const char *);
SOAP_FMAC3 resqml2__AbstractParentWindow ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractParentWindow(struct soap*, const char*, resqml2__AbstractParentWindow **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractParentWindow(struct soap*, resqml2__AbstractParentWindow *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractParentWindow ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractParentWindow(struct soap*, resqml2__AbstractParentWindow **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__CellFluidPhaseUnits_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__CellFluidPhaseUnits_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__CellFluidPhaseUnits(struct soap*, resqml2__CellFluidPhaseUnits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__CellFluidPhaseUnits(struct soap*, const char *, int, resqml2__CellFluidPhaseUnits *const*, const char *);
SOAP_FMAC3 resqml2__CellFluidPhaseUnits ** SOAP_FMAC4 soap_in_PointerToresqml2__CellFluidPhaseUnits(struct soap*, const char*, resqml2__CellFluidPhaseUnits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__CellFluidPhaseUnits(struct soap*, resqml2__CellFluidPhaseUnits *const*, const char*, const char*);
SOAP_FMAC3 resqml2__CellFluidPhaseUnits ** SOAP_FMAC4 soap_get_PointerToresqml2__CellFluidPhaseUnits(struct soap*, resqml2__CellFluidPhaseUnits **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SubRepresentationPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SubRepresentationPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__SubRepresentationPatch(struct soap*, resqml2__SubRepresentationPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__SubRepresentationPatch(struct soap*, const char *, int, resqml2__SubRepresentationPatch *const*, const char *);
SOAP_FMAC3 resqml2__SubRepresentationPatch ** SOAP_FMAC4 soap_in_PointerToresqml2__SubRepresentationPatch(struct soap*, const char*, resqml2__SubRepresentationPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__SubRepresentationPatch(struct soap*, resqml2__SubRepresentationPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__SubRepresentationPatch ** SOAP_FMAC4 soap_get_PointerToresqml2__SubRepresentationPatch(struct soap*, resqml2__SubRepresentationPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PatchOfGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PatchOfGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__PatchOfGeometry(struct soap*, resqml2__PatchOfGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__PatchOfGeometry(struct soap*, const char *, int, resqml2__PatchOfGeometry *const*, const char *);
SOAP_FMAC3 resqml2__PatchOfGeometry ** SOAP_FMAC4 soap_in_PointerToresqml2__PatchOfGeometry(struct soap*, const char*, resqml2__PatchOfGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__PatchOfGeometry(struct soap*, resqml2__PatchOfGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml2__PatchOfGeometry ** SOAP_FMAC4 soap_get_PointerToresqml2__PatchOfGeometry(struct soap*, resqml2__PatchOfGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PropertyKindFacet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PropertyKindFacet_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__PropertyKindFacet(struct soap*, resqml2__PropertyKindFacet *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__PropertyKindFacet(struct soap*, const char *, int, resqml2__PropertyKindFacet *const*, const char *);
SOAP_FMAC3 resqml2__PropertyKindFacet ** SOAP_FMAC4 soap_in_PointerToresqml2__PropertyKindFacet(struct soap*, const char*, resqml2__PropertyKindFacet **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__PropertyKindFacet(struct soap*, resqml2__PropertyKindFacet *const*, const char*, const char*);
SOAP_FMAC3 resqml2__PropertyKindFacet ** SOAP_FMAC4 soap_get_PointerToresqml2__PropertyKindFacet(struct soap*, resqml2__PropertyKindFacet **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PatchOfValues_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PatchOfValues_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__PatchOfValues(struct soap*, resqml2__PatchOfValues *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__PatchOfValues(struct soap*, const char *, int, resqml2__PatchOfValues *const*, const char *);
SOAP_FMAC3 resqml2__PatchOfValues ** SOAP_FMAC4 soap_in_PointerToresqml2__PatchOfValues(struct soap*, const char*, resqml2__PatchOfValues **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__PatchOfValues(struct soap*, resqml2__PatchOfValues *const*, const char*, const char*);
SOAP_FMAC3 resqml2__PatchOfValues ** SOAP_FMAC4 soap_get_PointerToresqml2__PatchOfValues(struct soap*, resqml2__PatchOfValues **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__StringLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__StringLookup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__StringLookup(struct soap*, resqml2__StringLookup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__StringLookup(struct soap*, const char *, int, resqml2__StringLookup *const*, const char *);
SOAP_FMAC3 resqml2__StringLookup ** SOAP_FMAC4 soap_in_PointerToresqml2__StringLookup(struct soap*, const char*, resqml2__StringLookup **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__StringLookup(struct soap*, resqml2__StringLookup *const*, const char*, const char*);
SOAP_FMAC3 resqml2__StringLookup ** SOAP_FMAC4 soap_get_PointerToresqml2__StringLookup(struct soap*, resqml2__StringLookup **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PatchOfPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PatchOfPoints_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__PatchOfPoints(struct soap*, resqml2__PatchOfPoints *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__PatchOfPoints(struct soap*, const char *, int, resqml2__PatchOfPoints *const*, const char *);
SOAP_FMAC3 resqml2__PatchOfPoints ** SOAP_FMAC4 soap_in_PointerToresqml2__PatchOfPoints(struct soap*, const char*, resqml2__PatchOfPoints **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__PatchOfPoints(struct soap*, resqml2__PatchOfPoints *const*, const char*, const char*);
SOAP_FMAC3 resqml2__PatchOfPoints ** SOAP_FMAC4 soap_get_PointerToresqml2__PatchOfPoints(struct soap*, resqml2__PatchOfPoints **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__DoubleLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__DoubleLookup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__DoubleLookup(struct soap*, resqml2__DoubleLookup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__DoubleLookup(struct soap*, const char *, int, resqml2__DoubleLookup *const*, const char *);
SOAP_FMAC3 resqml2__DoubleLookup ** SOAP_FMAC4 soap_in_PointerToresqml2__DoubleLookup(struct soap*, const char*, resqml2__DoubleLookup **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__DoubleLookup(struct soap*, resqml2__DoubleLookup *const*, const char*, const char*);
SOAP_FMAC3 resqml2__DoubleLookup ** SOAP_FMAC4 soap_get_PointerToresqml2__DoubleLookup(struct soap*, resqml2__DoubleLookup **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ParameterTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ParameterTemplate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ParameterTemplate(struct soap*, resqml2__ParameterTemplate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ParameterTemplate(struct soap*, const char *, int, resqml2__ParameterTemplate *const*, const char *);
SOAP_FMAC3 resqml2__ParameterTemplate ** SOAP_FMAC4 soap_in_PointerToresqml2__ParameterTemplate(struct soap*, const char*, resqml2__ParameterTemplate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ParameterTemplate(struct soap*, resqml2__ParameterTemplate *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ParameterTemplate ** SOAP_FMAC4 soap_get_PointerToresqml2__ParameterTemplate(struct soap*, resqml2__ParameterTemplate **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GeologicBoundaryKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GeologicBoundaryKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__GeologicBoundaryKind(struct soap*, enum resqml2__GeologicBoundaryKind *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__GeologicBoundaryKind(struct soap*, const char *, int, enum resqml2__GeologicBoundaryKind *const*, const char *);
SOAP_FMAC3 enum resqml2__GeologicBoundaryKind ** SOAP_FMAC4 soap_in_PointerToresqml2__GeologicBoundaryKind(struct soap*, const char*, enum resqml2__GeologicBoundaryKind **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__GeologicBoundaryKind(struct soap*, enum resqml2__GeologicBoundaryKind *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__GeologicBoundaryKind ** SOAP_FMAC4 soap_get_PointerToresqml2__GeologicBoundaryKind(struct soap*, enum resqml2__GeologicBoundaryKind **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__FluidMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__FluidMarker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__FluidMarker(struct soap*, enum resqml2__FluidMarker *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__FluidMarker(struct soap*, const char *, int, enum resqml2__FluidMarker *const*, const char *);
SOAP_FMAC3 enum resqml2__FluidMarker ** SOAP_FMAC4 soap_in_PointerToresqml2__FluidMarker(struct soap*, const char*, enum resqml2__FluidMarker **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__FluidMarker(struct soap*, enum resqml2__FluidMarker *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__FluidMarker ** SOAP_FMAC4 soap_get_PointerToresqml2__FluidMarker(struct soap*, enum resqml2__FluidMarker **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__FluidContact_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__FluidContact_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__FluidContact(struct soap*, enum resqml2__FluidContact *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__FluidContact(struct soap*, const char *, int, enum resqml2__FluidContact *const*, const char *);
SOAP_FMAC3 enum resqml2__FluidContact ** SOAP_FMAC4 soap_in_PointerToresqml2__FluidContact(struct soap*, const char*, enum resqml2__FluidContact **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__FluidContact(struct soap*, enum resqml2__FluidContact *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__FluidContact ** SOAP_FMAC4 soap_get_PointerToresqml2__FluidContact(struct soap*, enum resqml2__FluidContact **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TimeSeriesParentage_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TimeSeriesParentage_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__TimeSeriesParentage(struct soap*, resqml2__TimeSeriesParentage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__TimeSeriesParentage(struct soap*, const char *, int, resqml2__TimeSeriesParentage *const*, const char *);
SOAP_FMAC3 resqml2__TimeSeriesParentage ** SOAP_FMAC4 soap_in_PointerToresqml2__TimeSeriesParentage(struct soap*, const char*, resqml2__TimeSeriesParentage **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__TimeSeriesParentage(struct soap*, resqml2__TimeSeriesParentage *const*, const char*, const char*);
SOAP_FMAC3 resqml2__TimeSeriesParentage ** SOAP_FMAC4 soap_get_PointerToresqml2__TimeSeriesParentage(struct soap*, resqml2__TimeSeriesParentage **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Timestamp_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Timestamp(struct soap*, resqml2__Timestamp *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Timestamp(struct soap*, const char *, int, resqml2__Timestamp *const*, const char *);
SOAP_FMAC3 resqml2__Timestamp ** SOAP_FMAC4 soap_in_PointerToresqml2__Timestamp(struct soap*, const char*, resqml2__Timestamp **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Timestamp(struct soap*, resqml2__Timestamp *const*, const char*, const char*);
SOAP_FMAC3 resqml2__Timestamp ** SOAP_FMAC4 soap_get_PointerToresqml2__Timestamp(struct soap*, resqml2__Timestamp **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__PlaneAngleMeasure_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__PlaneAngleMeasure_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__PlaneAngleMeasure(struct soap*, eml__PlaneAngleMeasure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__PlaneAngleMeasure(struct soap*, const char *, int, eml__PlaneAngleMeasure *const*, const char *);
SOAP_FMAC3 eml__PlaneAngleMeasure ** SOAP_FMAC4 soap_in_PointerToeml__PlaneAngleMeasure(struct soap*, const char*, eml__PlaneAngleMeasure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__PlaneAngleMeasure(struct soap*, eml__PlaneAngleMeasure *const*, const char*, const char*);
SOAP_FMAC3 eml__PlaneAngleMeasure ** SOAP_FMAC4 soap_get_PointerToeml__PlaneAngleMeasure(struct soap*, eml__PlaneAngleMeasure **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ChronostratigraphicRank_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ChronostratigraphicRank_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ChronostratigraphicRank(struct soap*, resqml2__ChronostratigraphicRank *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ChronostratigraphicRank(struct soap*, const char *, int, resqml2__ChronostratigraphicRank *const*, const char *);
SOAP_FMAC3 resqml2__ChronostratigraphicRank ** SOAP_FMAC4 soap_in_PointerToresqml2__ChronostratigraphicRank(struct soap*, const char*, resqml2__ChronostratigraphicRank **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ChronostratigraphicRank(struct soap*, resqml2__ChronostratigraphicRank *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ChronostratigraphicRank ** SOAP_FMAC4 soap_get_PointerToresqml2__ChronostratigraphicRank(struct soap*, resqml2__ChronostratigraphicRank **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ColumnLayerSplitCoordinateLines_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ColumnLayerSplitCoordinateLines_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ColumnLayerSplitCoordinateLines(struct soap*, resqml2__ColumnLayerSplitCoordinateLines *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ColumnLayerSplitCoordinateLines(struct soap*, const char *, int, resqml2__ColumnLayerSplitCoordinateLines *const*, const char *);
SOAP_FMAC3 resqml2__ColumnLayerSplitCoordinateLines ** SOAP_FMAC4 soap_in_PointerToresqml2__ColumnLayerSplitCoordinateLines(struct soap*, const char*, resqml2__ColumnLayerSplitCoordinateLines **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ColumnLayerSplitCoordinateLines(struct soap*, resqml2__ColumnLayerSplitCoordinateLines *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ColumnLayerSplitCoordinateLines ** SOAP_FMAC4 soap_get_PointerToresqml2__ColumnLayerSplitCoordinateLines(struct soap*, resqml2__ColumnLayerSplitCoordinateLines **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredGridHingeNodeFaces_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredGridHingeNodeFaces_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__UnstructuredGridHingeNodeFaces(struct soap*, resqml2__UnstructuredGridHingeNodeFaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__UnstructuredGridHingeNodeFaces(struct soap*, const char *, int, resqml2__UnstructuredGridHingeNodeFaces *const*, const char *);
SOAP_FMAC3 resqml2__UnstructuredGridHingeNodeFaces ** SOAP_FMAC4 soap_in_PointerToresqml2__UnstructuredGridHingeNodeFaces(struct soap*, const char*, resqml2__UnstructuredGridHingeNodeFaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__UnstructuredGridHingeNodeFaces(struct soap*, resqml2__UnstructuredGridHingeNodeFaces *const*, const char*, const char*);
SOAP_FMAC3 resqml2__UnstructuredGridHingeNodeFaces ** SOAP_FMAC4 soap_get_PointerToresqml2__UnstructuredGridHingeNodeFaces(struct soap*, resqml2__UnstructuredGridHingeNodeFaces **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Activation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Activation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Activation(struct soap*, resqml2__Activation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Activation(struct soap*, const char *, int, resqml2__Activation *const*, const char *);
SOAP_FMAC3 resqml2__Activation ** SOAP_FMAC4 soap_in_PointerToresqml2__Activation(struct soap*, const char*, resqml2__Activation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Activation(struct soap*, resqml2__Activation *const*, const char*, const char*);
SOAP_FMAC3 resqml2__Activation ** SOAP_FMAC4 soap_get_PointerToresqml2__Activation(struct soap*, resqml2__Activation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__RepresentationIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__RepresentationIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__RepresentationIdentity(struct soap*, resqml2__RepresentationIdentity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__RepresentationIdentity(struct soap*, const char *, int, resqml2__RepresentationIdentity *const*, const char *);
SOAP_FMAC3 resqml2__RepresentationIdentity ** SOAP_FMAC4 soap_in_PointerToresqml2__RepresentationIdentity(struct soap*, const char*, resqml2__RepresentationIdentity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__RepresentationIdentity(struct soap*, resqml2__RepresentationIdentity *const*, const char*, const char*);
SOAP_FMAC3 resqml2__RepresentationIdentity ** SOAP_FMAC4 soap_get_PointerToresqml2__RepresentationIdentity(struct soap*, resqml2__RepresentationIdentity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractPropertyKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractPropertyKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractPropertyKind(struct soap*, resqml2__AbstractPropertyKind *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractPropertyKind(struct soap*, const char *, int, resqml2__AbstractPropertyKind *const*, const char *);
SOAP_FMAC3 resqml2__AbstractPropertyKind ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractPropertyKind(struct soap*, const char*, resqml2__AbstractPropertyKind **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractPropertyKind(struct soap*, resqml2__AbstractPropertyKind *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractPropertyKind ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractPropertyKind(struct soap*, resqml2__AbstractPropertyKind **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__RelatedTimeType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__RelatedTimeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__RelatedTimeType(struct soap*, gml__RelatedTimeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__RelatedTimeType(struct soap*, const char *, int, gml__RelatedTimeType *const*, const char *);
SOAP_FMAC3 gml__RelatedTimeType ** SOAP_FMAC4 soap_in_PointerTogml__RelatedTimeType(struct soap*, const char*, gml__RelatedTimeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__RelatedTimeType(struct soap*, gml__RelatedTimeType *const*, const char*, const char*);
SOAP_FMAC3 gml__RelatedTimeType ** SOAP_FMAC4 soap_get_PointerTogml__RelatedTimeType(struct soap*, gml__RelatedTimeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__AbstractVerticalCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__AbstractVerticalCrs_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__AbstractVerticalCrs(struct soap*, eml__AbstractVerticalCrs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__AbstractVerticalCrs(struct soap*, const char *, int, eml__AbstractVerticalCrs *const*, const char *);
SOAP_FMAC3 eml__AbstractVerticalCrs ** SOAP_FMAC4 soap_in_PointerToeml__AbstractVerticalCrs(struct soap*, const char*, eml__AbstractVerticalCrs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__AbstractVerticalCrs(struct soap*, eml__AbstractVerticalCrs *const*, const char*, const char*);
SOAP_FMAC3 eml__AbstractVerticalCrs ** SOAP_FMAC4 soap_get_PointerToeml__AbstractVerticalCrs(struct soap*, eml__AbstractVerticalCrs **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__LengthUom_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__LengthUom_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__LengthUom(struct soap*, enum eml__LengthUom *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__LengthUom(struct soap*, const char *, int, enum eml__LengthUom *const*, const char *);
SOAP_FMAC3 enum eml__LengthUom ** SOAP_FMAC4 soap_in_PointerToeml__LengthUom(struct soap*, const char*, enum eml__LengthUom **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__LengthUom(struct soap*, enum eml__LengthUom *const*, const char*, const char*);
SOAP_FMAC3 enum eml__LengthUom ** SOAP_FMAC4 soap_get_PointerToeml__LengthUom(struct soap*, enum eml__LengthUom **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__AbstractProjectedCrs_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__AbstractProjectedCrs_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__AbstractProjectedCrs(struct soap*, eml__AbstractProjectedCrs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__AbstractProjectedCrs(struct soap*, const char *, int, eml__AbstractProjectedCrs *const*, const char *);
SOAP_FMAC3 eml__AbstractProjectedCrs ** SOAP_FMAC4 soap_in_PointerToeml__AbstractProjectedCrs(struct soap*, const char*, eml__AbstractProjectedCrs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__AbstractProjectedCrs(struct soap*, eml__AbstractProjectedCrs *const*, const char*, const char*);
SOAP_FMAC3 eml__AbstractProjectedCrs ** SOAP_FMAC4 soap_get_PointerToeml__AbstractProjectedCrs(struct soap*, eml__AbstractProjectedCrs **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__EdgePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__EdgePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__EdgePatch(struct soap*, resqml2__EdgePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__EdgePatch(struct soap*, const char *, int, resqml2__EdgePatch *const*, const char *);
SOAP_FMAC3 resqml2__EdgePatch ** SOAP_FMAC4 soap_in_PointerToresqml2__EdgePatch(struct soap*, const char*, resqml2__EdgePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__EdgePatch(struct soap*, resqml2__EdgePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__EdgePatch ** SOAP_FMAC4 soap_get_PointerToresqml2__EdgePatch(struct soap*, resqml2__EdgePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__NameValuePair_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__NameValuePair_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__NameValuePair(struct soap*, resqml2__NameValuePair *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__NameValuePair(struct soap*, const char *, int, resqml2__NameValuePair *const*, const char *);
SOAP_FMAC3 resqml2__NameValuePair ** SOAP_FMAC4 soap_in_PointerToresqml2__NameValuePair(struct soap*, const char*, resqml2__NameValuePair **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__NameValuePair(struct soap*, resqml2__NameValuePair *const*, const char*, const char*);
SOAP_FMAC3 resqml2__NameValuePair ** SOAP_FMAC4 soap_get_PointerToresqml2__NameValuePair(struct soap*, resqml2__NameValuePair **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AdditionalGridPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AdditionalGridPoints_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AdditionalGridPoints(struct soap*, resqml2__AdditionalGridPoints *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AdditionalGridPoints(struct soap*, const char *, int, resqml2__AdditionalGridPoints *const*, const char *);
SOAP_FMAC3 resqml2__AdditionalGridPoints ** SOAP_FMAC4 soap_in_PointerToresqml2__AdditionalGridPoints(struct soap*, const char*, resqml2__AdditionalGridPoints **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AdditionalGridPoints(struct soap*, resqml2__AdditionalGridPoints *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AdditionalGridPoints ** SOAP_FMAC4 soap_get_PointerToresqml2__AdditionalGridPoints(struct soap*, resqml2__AdditionalGridPoints **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ElementIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ElementIndices_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ElementIndices(struct soap*, resqml2__ElementIndices *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ElementIndices(struct soap*, const char *, int, resqml2__ElementIndices *const*, const char *);
SOAP_FMAC3 resqml2__ElementIndices ** SOAP_FMAC4 soap_in_PointerToresqml2__ElementIndices(struct soap*, const char*, resqml2__ElementIndices **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ElementIndices(struct soap*, resqml2__ElementIndices *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ElementIndices ** SOAP_FMAC4 soap_get_PointerToresqml2__ElementIndices(struct soap*, resqml2__ElementIndices **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ThreePoint3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ThreePoint3d_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ThreePoint3d(struct soap*, resqml2__ThreePoint3d *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ThreePoint3d(struct soap*, const char *, int, resqml2__ThreePoint3d *const*, const char *);
SOAP_FMAC3 resqml2__ThreePoint3d ** SOAP_FMAC4 soap_in_PointerToresqml2__ThreePoint3d(struct soap*, const char*, resqml2__ThreePoint3d **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ThreePoint3d(struct soap*, resqml2__ThreePoint3d *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ThreePoint3d ** SOAP_FMAC4 soap_get_PointerToresqml2__ThreePoint3d(struct soap*, resqml2__ThreePoint3d **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IntegerConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IntegerConstantArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__IntegerConstantArray(struct soap*, resqml2__IntegerConstantArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__IntegerConstantArray(struct soap*, const char *, int, resqml2__IntegerConstantArray *const*, const char *);
SOAP_FMAC3 resqml2__IntegerConstantArray ** SOAP_FMAC4 soap_in_PointerToresqml2__IntegerConstantArray(struct soap*, const char*, resqml2__IntegerConstantArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__IntegerConstantArray(struct soap*, resqml2__IntegerConstantArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__IntegerConstantArray ** SOAP_FMAC4 soap_get_PointerToresqml2__IntegerConstantArray(struct soap*, resqml2__IntegerConstantArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__DoubleConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__DoubleConstantArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__DoubleConstantArray(struct soap*, resqml2__DoubleConstantArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__DoubleConstantArray(struct soap*, const char *, int, resqml2__DoubleConstantArray *const*, const char *);
SOAP_FMAC3 resqml2__DoubleConstantArray ** SOAP_FMAC4 soap_in_PointerToresqml2__DoubleConstantArray(struct soap*, const char*, resqml2__DoubleConstantArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__DoubleConstantArray(struct soap*, resqml2__DoubleConstantArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__DoubleConstantArray ** SOAP_FMAC4 soap_get_PointerToresqml2__DoubleConstantArray(struct soap*, resqml2__DoubleConstantArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__URL_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__URL_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__URL_USCOREPropertyType(struct soap*, gmd__URL_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__URL_USCOREPropertyType(struct soap*, const char *, int, gmd__URL_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__URL_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__URL_USCOREPropertyType(struct soap*, const char*, gmd__URL_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__URL_USCOREPropertyType(struct soap*, gmd__URL_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__URL_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__URL_USCOREPropertyType(struct soap*, gmd__URL_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREOnlineResource_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREOnlineResource_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREOnlineResource_USCOREPropertyType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREAddress_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREAddress_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, gmd__CI_USCOREAddress_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREAddress_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREAddress_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, gmd__CI_USCOREAddress_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREAddress_USCOREPropertyType(struct soap*, gmd__CI_USCOREAddress_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORETelephone_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORETelephone_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, gmd__CI_USCORETelephone_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCORETelephone_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORETelephone_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, gmd__CI_USCORETelephone_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORETelephone_USCOREPropertyType(struct soap*, gmd__CI_USCORETelephone_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, gmd__CI_USCORERoleCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCORERoleCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORERoleCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORERoleCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, gmd__CI_USCORERoleCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORERoleCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORERoleCode_USCOREPropertyType(struct soap*, gmd__CI_USCORERoleCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREContact_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREContact_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, gmd__CI_USCOREContact_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREContact_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREContact_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, gmd__CI_USCOREContact_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREContact_USCOREPropertyType(struct soap*, gmd__CI_USCOREContact_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREDateTypeCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREDateTypeCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREDateTypeCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREDateTypeCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORESeries_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORESeries_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, gmd__CI_USCORESeries_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCORESeries_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORESeries_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, gmd__CI_USCORESeries_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORESeries_USCOREPropertyType(struct soap*, gmd__CI_USCORESeries_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREPresentationFormCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, gmd__CI_USCOREPresentationFormCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Date_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Date_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__Date_USCOREPropertyType(struct soap*, gco__Date_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__Date_USCOREPropertyType(struct soap*, const char *, int, gco__Date_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__Date_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__Date_USCOREPropertyType(struct soap*, const char*, gco__Date_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__Date_USCOREPropertyType(struct soap*, gco__Date_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__Date_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__Date_USCOREPropertyType(struct soap*, gco__Date_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDate_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDate_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, gmd__CI_USCOREDate_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCOREDate_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCOREDate_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, gmd__CI_USCOREDate_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, gmd__CI_USCOREDate_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, gmd__DQ_USCOREResult_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char *, int, gmd__DQ_USCOREResult_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__DQ_USCOREResult_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, gmd__DQ_USCOREResult_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, gmd__DQ_USCOREResult_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__DQ_USCOREResult_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, gmd__DQ_USCOREResult_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__DateTime_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__DateTime_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__DateTime_USCOREPropertyType(struct soap*, gco__DateTime_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__DateTime_USCOREPropertyType(struct soap*, const char *, int, gco__DateTime_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__DateTime_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__DateTime_USCOREPropertyType(struct soap*, const char*, gco__DateTime_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__DateTime_USCOREPropertyType(struct soap*, gco__DateTime_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__DateTime_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__DateTime_USCOREPropertyType(struct soap*, gco__DateTime_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORECitation_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORECitation_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, gmd__CI_USCORECitation_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, const char *, int, gmd__CI_USCORECitation_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, const char*, gmd__CI_USCORECitation_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, gmd__CI_USCORECitation_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORECitation_USCOREPropertyType(struct soap*, gmd__CI_USCORECitation_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, const char *, int, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, const char*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType(struct soap*, gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, gmd__MD_USCOREIdentifier_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char *, int, gmd__MD_USCOREIdentifier_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, gmd__MD_USCOREIdentifier_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, gmd__MD_USCOREIdentifier_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, gmd__MD_USCOREIdentifier_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogsr__SC_USCORECRS_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogsr__SC_USCORECRS_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, gsr__SC_USCORECRS_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, const char *, int, gsr__SC_USCORECRS_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gsr__SC_USCORECRS_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, const char*, gsr__SC_USCORECRS_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, gsr__SC_USCORECRS_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gsr__SC_USCORECRS_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogsr__SC_USCORECRS_USCOREPropertyType(struct soap*, gsr__SC_USCORECRS_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Real_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Real_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__Real_USCOREPropertyType(struct soap*, gco__Real_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__Real_USCOREPropertyType(struct soap*, const char *, int, gco__Real_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__Real_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__Real_USCOREPropertyType(struct soap*, const char*, gco__Real_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__Real_USCOREPropertyType(struct soap*, gco__Real_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__Real_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__Real_USCOREPropertyType(struct soap*, gco__Real_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, gts__TM_USCOREPrimitive_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, const char *, int, gts__TM_USCOREPrimitive_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gts__TM_USCOREPrimitive_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, const char*, gts__TM_USCOREPrimitive_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, gts__TM_USCOREPrimitive_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gts__TM_USCOREPrimitive_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogts__TM_USCOREPrimitive_USCOREPropertyType(struct soap*, gts__TM_USCOREPrimitive_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Boolean_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Boolean_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__Boolean_USCOREPropertyType(struct soap*, gco__Boolean_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__Boolean_USCOREPropertyType(struct soap*, const char *, int, gco__Boolean_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__Boolean_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__Boolean_USCOREPropertyType(struct soap*, const char*, gco__Boolean_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__Boolean_USCOREPropertyType(struct soap*, gco__Boolean_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__Boolean_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__Boolean_USCOREPropertyType(struct soap*, gco__Boolean_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char *, int, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char *, int, gmd__EX_USCORETemporalExtent_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCORETemporalExtent_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char *, int, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCOREGeographicExtent_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCOREGeographicExtent_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, gmd__EX_USCOREGeographicExtent_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__CharacterString_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__CharacterString_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, gco__CharacterString_USCOREPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, const char *, int, gco__CharacterString_USCOREPropertyType *const*, const char *);
SOAP_FMAC3 gco__CharacterString_USCOREPropertyType ** SOAP_FMAC4 soap_in_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, const char*, gco__CharacterString_USCOREPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, gco__CharacterString_USCOREPropertyType *const*, const char*, const char*);
SOAP_FMAC3 gco__CharacterString_USCOREPropertyType ** SOAP_FMAC4 soap_get_PointerTogco__CharacterString_USCOREPropertyType(struct soap*, gco__CharacterString_USCOREPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__RelatedTimeType_relativePosition_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__RelatedTimeType_relativePosition_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, const char *, int, enum _gml__RelatedTimeType_relativePosition *const*, const char *);
SOAP_FMAC3 enum _gml__RelatedTimeType_relativePosition ** SOAP_FMAC4 soap_in_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, const char*, enum _gml__RelatedTimeType_relativePosition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition *const*, const char*, const char*);
SOAP_FMAC3 enum _gml__RelatedTimeType_relativePosition ** SOAP_FMAC4 soap_get_PointerTo_gml__RelatedTimeType_relativePosition(struct soap*, enum _gml__RelatedTimeType_relativePosition **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__ProjectedCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__ProjectedCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__ProjectedCRSType(struct soap*, gml__ProjectedCRSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__ProjectedCRSType(struct soap*, const char *, int, gml__ProjectedCRSType *const*, const char *);
SOAP_FMAC3 gml__ProjectedCRSType ** SOAP_FMAC4 soap_in_PointerTogml__ProjectedCRSType(struct soap*, const char*, gml__ProjectedCRSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__ProjectedCRSType(struct soap*, gml__ProjectedCRSType *const*, const char*, const char*);
SOAP_FMAC3 gml__ProjectedCRSType ** SOAP_FMAC4 soap_get_PointerTogml__ProjectedCRSType(struct soap*, gml__ProjectedCRSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalCRSType(struct soap*, gml__VerticalCRSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalCRSType(struct soap*, const char *, int, gml__VerticalCRSType *const*, const char *);
SOAP_FMAC3 gml__VerticalCRSType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalCRSType(struct soap*, const char*, gml__VerticalCRSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalCRSType(struct soap*, gml__VerticalCRSType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalCRSType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalCRSType(struct soap*, gml__VerticalCRSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IntervalGridCells_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IntervalGridCells_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__IntervalGridCells(struct soap*, resqml2__IntervalGridCells *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__IntervalGridCells(struct soap*, const char *, int, resqml2__IntervalGridCells *const*, const char *);
SOAP_FMAC3 resqml2__IntervalGridCells ** SOAP_FMAC4 soap_in_PointerToresqml2__IntervalGridCells(struct soap*, const char*, resqml2__IntervalGridCells **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__IntervalGridCells(struct soap*, resqml2__IntervalGridCells *const*, const char*, const char*);
SOAP_FMAC3 resqml2__IntervalGridCells ** SOAP_FMAC4 soap_get_PointerToresqml2__IntervalGridCells(struct soap*, resqml2__IntervalGridCells **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PointGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__PointGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__PointGeometry(struct soap*, resqml2__PointGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__PointGeometry(struct soap*, const char *, int, resqml2__PointGeometry *const*, const char *);
SOAP_FMAC3 resqml2__PointGeometry ** SOAP_FMAC4 soap_in_PointerToresqml2__PointGeometry(struct soap*, const char*, resqml2__PointGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__PointGeometry(struct soap*, resqml2__PointGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml2__PointGeometry ** SOAP_FMAC4 soap_get_PointerToresqml2__PointGeometry(struct soap*, resqml2__PointGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ContactPatch(struct soap*, resqml2__ContactPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ContactPatch(struct soap*, const char *, int, resqml2__ContactPatch *const*, const char *);
SOAP_FMAC3 resqml2__ContactPatch ** SOAP_FMAC4 soap_in_PointerToresqml2__ContactPatch(struct soap*, const char*, resqml2__ContactPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ContactPatch(struct soap*, resqml2__ContactPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ContactPatch ** SOAP_FMAC4 soap_get_PointerToresqml2__ContactPatch(struct soap*, resqml2__ContactPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactMode_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactMode_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ContactMode(struct soap*, enum resqml2__ContactMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ContactMode(struct soap*, const char *, int, enum resqml2__ContactMode *const*, const char *);
SOAP_FMAC3 enum resqml2__ContactMode ** SOAP_FMAC4 soap_in_PointerToresqml2__ContactMode(struct soap*, const char*, enum resqml2__ContactMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ContactMode(struct soap*, enum resqml2__ContactMode *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__ContactMode ** SOAP_FMAC4 soap_get_PointerToresqml2__ContactMode(struct soap*, enum resqml2__ContactMode **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactSide_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactSide_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ContactSide(struct soap*, enum resqml2__ContactSide *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ContactSide(struct soap*, const char *, int, enum resqml2__ContactSide *const*, const char *);
SOAP_FMAC3 enum resqml2__ContactSide ** SOAP_FMAC4 soap_in_PointerToresqml2__ContactSide(struct soap*, const char*, enum resqml2__ContactSide **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ContactSide(struct soap*, enum resqml2__ContactSide *const*, const char*, const char*);
SOAP_FMAC3 enum resqml2__ContactSide ** SOAP_FMAC4 soap_get_PointerToresqml2__ContactSide(struct soap*, enum resqml2__ContactSide **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactElementReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ContactElementReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ContactElementReference(struct soap*, resqml2__ContactElementReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ContactElementReference(struct soap*, const char *, int, resqml2__ContactElementReference *const*, const char *);
SOAP_FMAC3 resqml2__ContactElementReference ** SOAP_FMAC4 soap_in_PointerToresqml2__ContactElementReference(struct soap*, const char*, resqml2__ContactElementReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ContactElementReference(struct soap*, resqml2__ContactElementReference *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ContactElementReference ** SOAP_FMAC4 soap_get_PointerToresqml2__ContactElementReference(struct soap*, resqml2__ContactElementReference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IjkGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IjkGridGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__IjkGridGeometry(struct soap*, resqml2__IjkGridGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__IjkGridGeometry(struct soap*, const char *, int, resqml2__IjkGridGeometry *const*, const char *);
SOAP_FMAC3 resqml2__IjkGridGeometry ** SOAP_FMAC4 soap_in_PointerToresqml2__IjkGridGeometry(struct soap*, const char*, resqml2__IjkGridGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__IjkGridGeometry(struct soap*, resqml2__IjkGridGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml2__IjkGridGeometry ** SOAP_FMAC4 soap_get_PointerToresqml2__IjkGridGeometry(struct soap*, resqml2__IjkGridGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredGridGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__UnstructuredGridGeometry(struct soap*, resqml2__UnstructuredGridGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__UnstructuredGridGeometry(struct soap*, const char *, int, resqml2__UnstructuredGridGeometry *const*, const char *);
SOAP_FMAC3 resqml2__UnstructuredGridGeometry ** SOAP_FMAC4 soap_in_PointerToresqml2__UnstructuredGridGeometry(struct soap*, const char*, resqml2__UnstructuredGridGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__UnstructuredGridGeometry(struct soap*, resqml2__UnstructuredGridGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml2__UnstructuredGridGeometry ** SOAP_FMAC4 soap_get_PointerToresqml2__UnstructuredGridGeometry(struct soap*, resqml2__UnstructuredGridGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ColumnSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ColumnSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ColumnSubnodePatch(struct soap*, resqml2__ColumnSubnodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ColumnSubnodePatch(struct soap*, const char *, int, resqml2__ColumnSubnodePatch *const*, const char *);
SOAP_FMAC3 resqml2__ColumnSubnodePatch ** SOAP_FMAC4 soap_in_PointerToresqml2__ColumnSubnodePatch(struct soap*, const char*, resqml2__ColumnSubnodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ColumnSubnodePatch(struct soap*, resqml2__ColumnSubnodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ColumnSubnodePatch ** SOAP_FMAC4 soap_get_PointerToresqml2__ColumnSubnodePatch(struct soap*, resqml2__ColumnSubnodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TruncationCellPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TruncationCellPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__TruncationCellPatch(struct soap*, resqml2__TruncationCellPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__TruncationCellPatch(struct soap*, const char *, int, resqml2__TruncationCellPatch *const*, const char *);
SOAP_FMAC3 resqml2__TruncationCellPatch ** SOAP_FMAC4 soap_in_PointerToresqml2__TruncationCellPatch(struct soap*, const char*, resqml2__TruncationCellPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__TruncationCellPatch(struct soap*, resqml2__TruncationCellPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__TruncationCellPatch ** SOAP_FMAC4 soap_get_PointerToresqml2__TruncationCellPatch(struct soap*, resqml2__TruncationCellPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredColumnLayerGridGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredColumnLayerGridGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__UnstructuredColumnLayerGridGeometry(struct soap*, resqml2__UnstructuredColumnLayerGridGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__UnstructuredColumnLayerGridGeometry(struct soap*, const char *, int, resqml2__UnstructuredColumnLayerGridGeometry *const*, const char *);
SOAP_FMAC3 resqml2__UnstructuredColumnLayerGridGeometry ** SOAP_FMAC4 soap_in_PointerToresqml2__UnstructuredColumnLayerGridGeometry(struct soap*, const char*, resqml2__UnstructuredColumnLayerGridGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__UnstructuredColumnLayerGridGeometry(struct soap*, resqml2__UnstructuredColumnLayerGridGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml2__UnstructuredColumnLayerGridGeometry ** SOAP_FMAC4 soap_get_PointerToresqml2__UnstructuredColumnLayerGridGeometry(struct soap*, resqml2__UnstructuredColumnLayerGridGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__NodesPerCell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__NodesPerCell_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__NodesPerCell(struct soap*, resqml2__NodesPerCell *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__NodesPerCell(struct soap*, const char *, int, resqml2__NodesPerCell *const*, const char *);
SOAP_FMAC3 resqml2__NodesPerCell ** SOAP_FMAC4 soap_in_PointerToresqml2__NodesPerCell(struct soap*, const char*, resqml2__NodesPerCell **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__NodesPerCell(struct soap*, resqml2__NodesPerCell *const*, const char*, const char*);
SOAP_FMAC3 resqml2__NodesPerCell ** SOAP_FMAC4 soap_get_PointerToresqml2__NodesPerCell(struct soap*, resqml2__NodesPerCell **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Edges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Edges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Edges(struct soap*, resqml2__Edges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Edges(struct soap*, const char *, int, resqml2__Edges *const*, const char *);
SOAP_FMAC3 resqml2__Edges ** SOAP_FMAC4 soap_in_PointerToresqml2__Edges(struct soap*, const char*, resqml2__Edges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Edges(struct soap*, resqml2__Edges *const*, const char*, const char*);
SOAP_FMAC3 resqml2__Edges ** SOAP_FMAC4 soap_get_PointerToresqml2__Edges(struct soap*, resqml2__Edges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Regrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Regrid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Regrid(struct soap*, resqml2__Regrid *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Regrid(struct soap*, const char *, int, resqml2__Regrid *const*, const char *);
SOAP_FMAC3 resqml2__Regrid ** SOAP_FMAC4 soap_in_PointerToresqml2__Regrid(struct soap*, const char*, resqml2__Regrid **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Regrid(struct soap*, resqml2__Regrid *const*, const char*, const char*);
SOAP_FMAC3 resqml2__Regrid ** SOAP_FMAC4 soap_get_PointerToresqml2__Regrid(struct soap*, resqml2__Regrid **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractParametricLineArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractParametricLineArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractParametricLineArray(struct soap*, resqml2__AbstractParametricLineArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractParametricLineArray(struct soap*, const char *, int, resqml2__AbstractParametricLineArray *const*, const char *);
SOAP_FMAC3 resqml2__AbstractParametricLineArray ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractParametricLineArray(struct soap*, const char*, resqml2__AbstractParametricLineArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractParametricLineArray(struct soap*, resqml2__AbstractParametricLineArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractParametricLineArray ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractParametricLineArray(struct soap*, resqml2__AbstractParametricLineArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ParametricLineIntersections_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ParametricLineIntersections_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ParametricLineIntersections(struct soap*, resqml2__ParametricLineIntersections *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ParametricLineIntersections(struct soap*, const char *, int, resqml2__ParametricLineIntersections *const*, const char *);
SOAP_FMAC3 resqml2__ParametricLineIntersections ** SOAP_FMAC4 soap_in_PointerToresqml2__ParametricLineIntersections(struct soap*, const char*, resqml2__ParametricLineIntersections **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ParametricLineIntersections(struct soap*, resqml2__ParametricLineIntersections *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ParametricLineIntersections ** SOAP_FMAC4 soap_get_PointerToresqml2__ParametricLineIntersections(struct soap*, resqml2__ParametricLineIntersections **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractSeismicCoordinates_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractSeismicCoordinates_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractSeismicCoordinates(struct soap*, resqml2__AbstractSeismicCoordinates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractSeismicCoordinates(struct soap*, const char *, int, resqml2__AbstractSeismicCoordinates *const*, const char *);
SOAP_FMAC3 resqml2__AbstractSeismicCoordinates ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractSeismicCoordinates(struct soap*, const char*, resqml2__AbstractSeismicCoordinates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractSeismicCoordinates(struct soap*, resqml2__AbstractSeismicCoordinates *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractSeismicCoordinates ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractSeismicCoordinates(struct soap*, resqml2__AbstractSeismicCoordinates **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Point3dOffset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Point3dOffset_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Point3dOffset(struct soap*, resqml2__Point3dOffset *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Point3dOffset(struct soap*, const char *, int, resqml2__Point3dOffset *const*, const char *);
SOAP_FMAC3 resqml2__Point3dOffset ** SOAP_FMAC4 soap_in_PointerToresqml2__Point3dOffset(struct soap*, const char*, resqml2__Point3dOffset **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Point3dOffset(struct soap*, resqml2__Point3dOffset *const*, const char*, const char*);
SOAP_FMAC3 resqml2__Point3dOffset ** SOAP_FMAC4 soap_get_PointerToresqml2__Point3dOffset(struct soap*, resqml2__Point3dOffset **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IntegerLatticeArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IntegerLatticeArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__IntegerLatticeArray(struct soap*, resqml2__IntegerLatticeArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__IntegerLatticeArray(struct soap*, const char *, int, resqml2__IntegerLatticeArray *const*, const char *);
SOAP_FMAC3 resqml2__IntegerLatticeArray ** SOAP_FMAC4 soap_in_PointerToresqml2__IntegerLatticeArray(struct soap*, const char*, resqml2__IntegerLatticeArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__IntegerLatticeArray(struct soap*, resqml2__IntegerLatticeArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__IntegerLatticeArray ** SOAP_FMAC4 soap_get_PointerToresqml2__IntegerLatticeArray(struct soap*, resqml2__IntegerLatticeArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__Hdf5Dataset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__Hdf5Dataset_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__Hdf5Dataset(struct soap*, eml__Hdf5Dataset *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__Hdf5Dataset(struct soap*, const char *, int, eml__Hdf5Dataset *const*, const char *);
SOAP_FMAC3 eml__Hdf5Dataset ** SOAP_FMAC4 soap_in_PointerToeml__Hdf5Dataset(struct soap*, const char*, eml__Hdf5Dataset **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__Hdf5Dataset(struct soap*, eml__Hdf5Dataset *const*, const char*, const char*);
SOAP_FMAC3 eml__Hdf5Dataset ** SOAP_FMAC4 soap_get_PointerToeml__Hdf5Dataset(struct soap*, eml__Hdf5Dataset **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__equivalentPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__equivalentPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToptm__equivalentPropertyType(struct soap*, ptm__equivalentPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToptm__equivalentPropertyType(struct soap*, const char *, int, ptm__equivalentPropertyType *const*, const char *);
SOAP_FMAC3 ptm__equivalentPropertyType ** SOAP_FMAC4 soap_in_PointerToptm__equivalentPropertyType(struct soap*, const char*, ptm__equivalentPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToptm__equivalentPropertyType(struct soap*, ptm__equivalentPropertyType *const*, const char*, const char*);
SOAP_FMAC3 ptm__equivalentPropertyType ** SOAP_FMAC4 soap_get_PointerToptm__equivalentPropertyType(struct soap*, ptm__equivalentPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTobool_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTobool_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTobool(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTobool(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTobool(struct soap*, const char*, bool **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTobool(struct soap*, bool *const*, const char*, const char*);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTobool(struct soap*, bool **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__standardEnergisticsPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToptm__standardEnergisticsPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToptm__standardEnergisticsPropertyType(struct soap*, ptm__standardEnergisticsPropertyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToptm__standardEnergisticsPropertyType(struct soap*, const char *, int, ptm__standardEnergisticsPropertyType *const*, const char *);
SOAP_FMAC3 ptm__standardEnergisticsPropertyType ** SOAP_FMAC4 soap_in_PointerToptm__standardEnergisticsPropertyType(struct soap*, const char*, ptm__standardEnergisticsPropertyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToptm__standardEnergisticsPropertyType(struct soap*, ptm__standardEnergisticsPropertyType *const*, const char*, const char*);
SOAP_FMAC3 ptm__standardEnergisticsPropertyType ** SOAP_FMAC4 soap_get_PointerToptm__standardEnergisticsPropertyType(struct soap*, ptm__standardEnergisticsPropertyType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, const char *, int, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gsr__SC_USCORECRS_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, const char*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gsr__SC_USCORECRS_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gsr__SC_USCORECRS_USCOREPropertyType_sequence(struct soap*, __gsr__SC_USCORECRS_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__DateTime_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__DateTime_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, __gco__DateTime_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, const char *, int, __gco__DateTime_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gco__DateTime_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, const char*, __gco__DateTime_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, __gco__DateTime_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gco__DateTime_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gco__DateTime_USCOREPropertyType_sequence(struct soap*, __gco__DateTime_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Date_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__Date_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__Date_USCOREType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__Date_USCOREType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTogco__Date_USCOREType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__Date_USCOREType(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTogco__Date_USCOREType(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__Real_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__Real_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, __gco__Real_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, const char *, int, __gco__Real_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gco__Real_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, const char*, __gco__Real_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, __gco__Real_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gco__Real_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gco__Real_USCOREPropertyType_sequence(struct soap*, __gco__Real_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__Boolean_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__Boolean_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, __gco__Boolean_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, const char *, int, __gco__Boolean_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gco__Boolean_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, const char*, __gco__Boolean_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, __gco__Boolean_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gco__Boolean_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gco__Boolean_USCOREPropertyType_sequence(struct soap*, __gco__Boolean_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__CharacterString_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gco__CharacterString_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, __gco__CharacterString_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, const char *, int, __gco__CharacterString_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gco__CharacterString_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, const char*, __gco__CharacterString_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, __gco__CharacterString_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gco__CharacterString_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gco__CharacterString_USCOREPropertyType_sequence(struct soap*, __gco__CharacterString_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__ID_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__ID_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__ID(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__ID(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__ID(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__ID(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__ID(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, const char *, int, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, const char*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gts__TM_USCOREPrimitive_USCOREPropertyType_sequence(struct soap*, __gts__TM_USCOREPrimitive_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__DQ_USCOREResult_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__DQ_USCOREResult_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREResult_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__DQ_USCOREEvaluationMethodTypeCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCORESeries_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCORESeries_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCORESeries_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORESeries_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORESeries_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORESeries_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, gmd__CI_USCORESeries_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, const char *, int, gmd__CI_USCORESeries_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, const char*, gmd__CI_USCORESeries_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, gmd__CI_USCORESeries_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORESeries_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORESeries_USCOREType(struct soap*, gmd__CI_USCORESeries_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREPresentationFormCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCORERoleCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORERoleCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnLineFunctionCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__URL_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__URL_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, __gmd__URL_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__URL_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__URL_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__URL_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, __gmd__URL_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__URL_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__URL_USCOREPropertyType_sequence(struct soap*, __gmd__URL_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREOnlineResource_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnlineResource_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREOnlineResource_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREOnlineResource_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, const char*, gmd__CI_USCOREOnlineResource_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREOnlineResource_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREOnlineResource_USCOREType(struct soap*, gmd__CI_USCOREOnlineResource_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREAddress_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREAddress_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREAddress_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREAddress_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREAddress_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, gmd__CI_USCOREAddress_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREAddress_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, const char*, gmd__CI_USCOREAddress_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, gmd__CI_USCOREAddress_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREAddress_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREAddress_USCOREType(struct soap*, gmd__CI_USCOREAddress_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCORETelephone_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCORETelephone_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORETelephone_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORETelephone_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORETelephone_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, gmd__CI_USCORETelephone_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, const char *, int, gmd__CI_USCORETelephone_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, const char*, gmd__CI_USCORETelephone_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, gmd__CI_USCORETelephone_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORETelephone_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORETelephone_USCOREType(struct soap*, gmd__CI_USCORETelephone_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREContact_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREContact_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREContact_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREContact_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREContact_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREContact_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, gmd__CI_USCOREContact_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREContact_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, const char*, gmd__CI_USCOREContact_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, gmd__CI_USCOREContact_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREContact_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREContact_USCOREType(struct soap*, gmd__CI_USCOREContact_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREResponsibleParty_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREResponsibleParty_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREResponsibleParty_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, const char*, gmd__CI_USCOREResponsibleParty_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREResponsibleParty_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREResponsibleParty_USCOREType(struct soap*, gmd__CI_USCOREResponsibleParty_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDateTypeCode_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__CodeListValue_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogco__CodeListValue_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogco__CodeListValue_USCOREType(struct soap*, gco__CodeListValue_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogco__CodeListValue_USCOREType(struct soap*, const char *, int, gco__CodeListValue_USCOREType *const*, const char *);
SOAP_FMAC3 gco__CodeListValue_USCOREType ** SOAP_FMAC4 soap_in_PointerTogco__CodeListValue_USCOREType(struct soap*, const char*, gco__CodeListValue_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogco__CodeListValue_USCOREType(struct soap*, gco__CodeListValue_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gco__CodeListValue_USCOREType ** SOAP_FMAC4 soap_get_PointerTogco__CodeListValue_USCOREType(struct soap*, gco__CodeListValue_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCOREDate_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCOREDate_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCOREDate_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCOREDate_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDate_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCOREDate_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, gmd__CI_USCOREDate_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, const char *, int, gmd__CI_USCOREDate_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, const char*, gmd__CI_USCOREDate_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, gmd__CI_USCOREDate_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCOREDate_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCOREDate_USCOREType(struct soap*, gmd__CI_USCOREDate_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__CI_USCORECitation_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__CI_USCORECitation_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__CI_USCORECitation_USCOREPropertyType_sequence(struct soap*, __gmd__CI_USCORECitation_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORECitation_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__CI_USCORECitation_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, gmd__CI_USCORECitation_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, const char *, int, gmd__CI_USCORECitation_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, const char*, gmd__CI_USCORECitation_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, gmd__CI_USCORECitation_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__CI_USCORECitation_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__CI_USCORECitation_USCOREType(struct soap*, gmd__CI_USCORECitation_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence(struct soap*, __gmd__MD_USCOREIdentifier_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__MD_USCOREIdentifier_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__MD_USCOREIdentifier_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, gmd__MD_USCOREIdentifier_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, const char *, int, gmd__MD_USCOREIdentifier_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, const char*, gmd__MD_USCOREIdentifier_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, gmd__MD_USCOREIdentifier_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__MD_USCOREIdentifier_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__MD_USCOREIdentifier_USCOREType(struct soap*, gmd__MD_USCOREIdentifier_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREVerticalExtent_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREVerticalExtent_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, const char *, int, gmd__EX_USCOREVerticalExtent_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, const char*, gmd__EX_USCOREVerticalExtent_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCOREVerticalExtent_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCOREVerticalExtent_USCOREType(struct soap*, gmd__EX_USCOREVerticalExtent_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCORETemporalExtent_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCORETemporalExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCORETemporalExtent_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, const char *, int, gmd__EX_USCORETemporalExtent_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, const char*, gmd__EX_USCORETemporalExtent_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCORETemporalExtent_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCORETemporalExtent_USCOREType(struct soap*, gmd__EX_USCORETemporalExtent_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, const char *, int, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, const char*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence(struct soap*, __gmd__EX_USCOREGeographicExtent_USCOREPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__coordinateOperationAccuracy_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__coordinateOperationAccuracy_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, __gml__coordinateOperationAccuracy_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, const char *, int, __gml__coordinateOperationAccuracy_sequence *const*, const char *);
SOAP_FMAC3 __gml__coordinateOperationAccuracy_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, const char*, __gml__coordinateOperationAccuracy_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, __gml__coordinateOperationAccuracy_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__coordinateOperationAccuracy_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__coordinateOperationAccuracy_sequence(struct soap*, __gml__coordinateOperationAccuracy_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__LengthType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__LengthType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__LengthType(struct soap*, gml__LengthType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__LengthType(struct soap*, const char *, int, gml__LengthType *const*, const char *);
SOAP_FMAC3 gml__LengthType ** SOAP_FMAC4 soap_in_PointerTogml__LengthType(struct soap*, const char*, gml__LengthType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__LengthType(struct soap*, gml__LengthType *const*, const char*, const char*);
SOAP_FMAC3 gml__LengthType ** SOAP_FMAC4 soap_get_PointerTogml__LengthType(struct soap*, gml__LengthType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__MeasureType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__MeasureType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__MeasureType(struct soap*, gml__MeasureType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__MeasureType(struct soap*, const char *, int, gml__MeasureType *const*, const char *);
SOAP_FMAC3 gml__MeasureType ** SOAP_FMAC4 soap_in_PointerTogml__MeasureType(struct soap*, const char*, gml__MeasureType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__MeasureType(struct soap*, gml__MeasureType *const*, const char*, const char*);
SOAP_FMAC3 gml__MeasureType ** SOAP_FMAC4 soap_get_PointerTogml__MeasureType(struct soap*, gml__MeasureType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__SecondDefiningParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_gml__SecondDefiningParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_gml__SecondDefiningParameter(struct soap*, const char *, int, _gml__SecondDefiningParameter *const*, const char *);
SOAP_FMAC3 _gml__SecondDefiningParameter ** SOAP_FMAC4 soap_in_PointerTo_gml__SecondDefiningParameter(struct soap*, const char*, _gml__SecondDefiningParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter *const*, const char*, const char*);
SOAP_FMAC3 _gml__SecondDefiningParameter ** SOAP_FMAC4 soap_get_PointerTo_gml__SecondDefiningParameter(struct soap*, _gml__SecondDefiningParameter **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__domainOfValidity_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__domainOfValidity_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__domainOfValidity_sequence(struct soap*, __gml__domainOfValidity_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__domainOfValidity_sequence(struct soap*, const char *, int, __gml__domainOfValidity_sequence *const*, const char *);
SOAP_FMAC3 __gml__domainOfValidity_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__domainOfValidity_sequence(struct soap*, const char*, __gml__domainOfValidity_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__domainOfValidity_sequence(struct soap*, __gml__domainOfValidity_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__domainOfValidity_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__domainOfValidity_sequence(struct soap*, __gml__domainOfValidity_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREExtent_USCOREType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogmd__EX_USCOREExtent_USCOREType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, gmd__EX_USCOREExtent_USCOREType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, const char *, int, gmd__EX_USCOREExtent_USCOREType *const*, const char *);
SOAP_FMAC3 gmd__EX_USCOREExtent_USCOREType ** SOAP_FMAC4 soap_in_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, const char*, gmd__EX_USCOREExtent_USCOREType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, gmd__EX_USCOREExtent_USCOREType *const*, const char*, const char*);
SOAP_FMAC3 gmd__EX_USCOREExtent_USCOREType ** SOAP_FMAC4 soap_get_PointerTogmd__EX_USCOREExtent_USCOREType(struct soap*, gmd__EX_USCOREExtent_USCOREType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__VerticalDatumPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__VerticalDatumPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, __gml__VerticalDatumPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, const char *, int, __gml__VerticalDatumPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__VerticalDatumPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, const char*, __gml__VerticalDatumPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, __gml__VerticalDatumPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__VerticalDatumPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__VerticalDatumPropertyType_sequence(struct soap*, __gml__VerticalDatumPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalDatumType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalDatumType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalDatumType(struct soap*, gml__VerticalDatumType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalDatumType(struct soap*, const char *, int, gml__VerticalDatumType *const*, const char *);
SOAP_FMAC3 gml__VerticalDatumType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalDatumType(struct soap*, const char*, gml__VerticalDatumType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalDatumType(struct soap*, gml__VerticalDatumType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalDatumType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalDatumType(struct soap*, gml__VerticalDatumType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__VerticalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__VerticalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, __gml__VerticalCSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, const char *, int, __gml__VerticalCSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__VerticalCSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, const char*, __gml__VerticalCSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, __gml__VerticalCSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__VerticalCSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__VerticalCSPropertyType_sequence(struct soap*, __gml__VerticalCSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__VerticalCSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__VerticalCSType(struct soap*, gml__VerticalCSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__VerticalCSType(struct soap*, const char *, int, gml__VerticalCSType *const*, const char *);
SOAP_FMAC3 gml__VerticalCSType ** SOAP_FMAC4 soap_in_PointerTogml__VerticalCSType(struct soap*, const char*, gml__VerticalCSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__VerticalCSType(struct soap*, gml__VerticalCSType *const*, const char*, const char*);
SOAP_FMAC3 gml__VerticalCSType ** SOAP_FMAC4 soap_get_PointerTogml__VerticalCSType(struct soap*, gml__VerticalCSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeodeticCRSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeodeticCRSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, __gml__GeodeticCRSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, const char *, int, __gml__GeodeticCRSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__GeodeticCRSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, const char*, __gml__GeodeticCRSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, __gml__GeodeticCRSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__GeodeticCRSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__GeodeticCRSPropertyType_sequence(struct soap*, __gml__GeodeticCRSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticCRSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticCRSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeodeticCRSType(struct soap*, gml__GeodeticCRSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeodeticCRSType(struct soap*, const char *, int, gml__GeodeticCRSType *const*, const char *);
SOAP_FMAC3 gml__GeodeticCRSType ** SOAP_FMAC4 soap_in_PointerTogml__GeodeticCRSType(struct soap*, const char*, gml__GeodeticCRSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeodeticCRSType(struct soap*, gml__GeodeticCRSType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeodeticCRSType ** SOAP_FMAC4 soap_get_PointerTogml__GeodeticCRSType(struct soap*, gml__GeodeticCRSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CRSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CRSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__CRSPropertyType_sequence(struct soap*, __gml__CRSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__CRSPropertyType_sequence(struct soap*, const char *, int, __gml__CRSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__CRSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__CRSPropertyType_sequence(struct soap*, const char*, __gml__CRSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__CRSPropertyType_sequence(struct soap*, __gml__CRSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__CRSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__CRSPropertyType_sequence(struct soap*, __gml__CRSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeneralConversionPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeneralConversionPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, __gml__GeneralConversionPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, const char *, int, __gml__GeneralConversionPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__GeneralConversionPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, const char*, __gml__GeneralConversionPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, __gml__GeneralConversionPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__GeneralConversionPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__GeneralConversionPropertyType_sequence(struct soap*, __gml__GeneralConversionPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__EllipsoidPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__EllipsoidPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, __gml__EllipsoidPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, const char *, int, __gml__EllipsoidPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__EllipsoidPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, const char*, __gml__EllipsoidPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, __gml__EllipsoidPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__EllipsoidPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__EllipsoidPropertyType_sequence(struct soap*, __gml__EllipsoidPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__EllipsoidType(struct soap*, gml__EllipsoidType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__EllipsoidType(struct soap*, const char *, int, gml__EllipsoidType *const*, const char *);
SOAP_FMAC3 gml__EllipsoidType ** SOAP_FMAC4 soap_in_PointerTogml__EllipsoidType(struct soap*, const char*, gml__EllipsoidType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__EllipsoidType(struct soap*, gml__EllipsoidType *const*, const char*, const char*);
SOAP_FMAC3 gml__EllipsoidType ** SOAP_FMAC4 soap_get_PointerTogml__EllipsoidType(struct soap*, gml__EllipsoidType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__PrimeMeridianPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__PrimeMeridianPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, __gml__PrimeMeridianPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, const char *, int, __gml__PrimeMeridianPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__PrimeMeridianPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, const char*, __gml__PrimeMeridianPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, __gml__PrimeMeridianPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__PrimeMeridianPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__PrimeMeridianPropertyType_sequence(struct soap*, __gml__PrimeMeridianPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__PrimeMeridianType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__PrimeMeridianType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__PrimeMeridianType(struct soap*, gml__PrimeMeridianType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__PrimeMeridianType(struct soap*, const char *, int, gml__PrimeMeridianType *const*, const char *);
SOAP_FMAC3 gml__PrimeMeridianType ** SOAP_FMAC4 soap_in_PointerTogml__PrimeMeridianType(struct soap*, const char*, gml__PrimeMeridianType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__PrimeMeridianType(struct soap*, gml__PrimeMeridianType *const*, const char*, const char*);
SOAP_FMAC3 gml__PrimeMeridianType ** SOAP_FMAC4 soap_get_PointerTogml__PrimeMeridianType(struct soap*, gml__PrimeMeridianType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeodeticDatumPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__GeodeticDatumPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, __gml__GeodeticDatumPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, const char *, int, __gml__GeodeticDatumPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__GeodeticDatumPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, const char*, __gml__GeodeticDatumPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, __gml__GeodeticDatumPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__GeodeticDatumPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__GeodeticDatumPropertyType_sequence(struct soap*, __gml__GeodeticDatumPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticDatumType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__GeodeticDatumType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__GeodeticDatumType(struct soap*, gml__GeodeticDatumType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__GeodeticDatumType(struct soap*, const char *, int, gml__GeodeticDatumType *const*, const char *);
SOAP_FMAC3 gml__GeodeticDatumType ** SOAP_FMAC4 soap_in_PointerTogml__GeodeticDatumType(struct soap*, const char*, gml__GeodeticDatumType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__GeodeticDatumType(struct soap*, gml__GeodeticDatumType *const*, const char*, const char*);
SOAP_FMAC3 gml__GeodeticDatumType ** SOAP_FMAC4 soap_get_PointerTogml__GeodeticDatumType(struct soap*, gml__GeodeticDatumType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__SphericalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__SphericalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, __gml__SphericalCSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, const char *, int, __gml__SphericalCSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__SphericalCSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, const char*, __gml__SphericalCSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, __gml__SphericalCSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__SphericalCSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__SphericalCSPropertyType_sequence(struct soap*, __gml__SphericalCSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__SphericalCSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__SphericalCSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__SphericalCSType(struct soap*, gml__SphericalCSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__SphericalCSType(struct soap*, const char *, int, gml__SphericalCSType *const*, const char *);
SOAP_FMAC3 gml__SphericalCSType ** SOAP_FMAC4 soap_in_PointerTogml__SphericalCSType(struct soap*, const char*, gml__SphericalCSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__SphericalCSType(struct soap*, gml__SphericalCSType *const*, const char*, const char*);
SOAP_FMAC3 gml__SphericalCSType ** SOAP_FMAC4 soap_get_PointerTogml__SphericalCSType(struct soap*, gml__SphericalCSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CartesianCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CartesianCSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, __gml__CartesianCSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, const char *, int, __gml__CartesianCSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__CartesianCSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, const char*, __gml__CartesianCSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, __gml__CartesianCSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__CartesianCSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__CartesianCSPropertyType_sequence(struct soap*, __gml__CartesianCSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CartesianCSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CartesianCSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CartesianCSType(struct soap*, gml__CartesianCSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CartesianCSType(struct soap*, const char *, int, gml__CartesianCSType *const*, const char *);
SOAP_FMAC3 gml__CartesianCSType ** SOAP_FMAC4 soap_in_PointerTogml__CartesianCSType(struct soap*, const char*, gml__CartesianCSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CartesianCSType(struct soap*, gml__CartesianCSType *const*, const char*, const char*);
SOAP_FMAC3 gml__CartesianCSType ** SOAP_FMAC4 soap_get_PointerTogml__CartesianCSType(struct soap*, gml__CartesianCSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, __gml__CoordinateSystemAxisPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, const char *, int, __gml__CoordinateSystemAxisPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__CoordinateSystemAxisPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, const char*, __gml__CoordinateSystemAxisPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, __gml__CoordinateSystemAxisPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__CoordinateSystemAxisPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__CoordinateSystemAxisPropertyType_sequence(struct soap*, __gml__CoordinateSystemAxisPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CoordinateSystemAxisType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CoordinateSystemAxisType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CoordinateSystemAxisType(struct soap*, gml__CoordinateSystemAxisType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CoordinateSystemAxisType(struct soap*, const char *, int, gml__CoordinateSystemAxisType *const*, const char *);
SOAP_FMAC3 gml__CoordinateSystemAxisType ** SOAP_FMAC4 soap_in_PointerTogml__CoordinateSystemAxisType(struct soap*, const char*, gml__CoordinateSystemAxisType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CoordinateSystemAxisType(struct soap*, gml__CoordinateSystemAxisType *const*, const char*, const char*);
SOAP_FMAC3 gml__CoordinateSystemAxisType ** SOAP_FMAC4 soap_get_PointerTogml__CoordinateSystemAxisType(struct soap*, gml__CoordinateSystemAxisType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__EllipsoidalCSPropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__EllipsoidalCSPropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, __gml__EllipsoidalCSPropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, const char *, int, __gml__EllipsoidalCSPropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__EllipsoidalCSPropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, const char*, __gml__EllipsoidalCSPropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, __gml__EllipsoidalCSPropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__EllipsoidalCSPropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__EllipsoidalCSPropertyType_sequence(struct soap*, __gml__EllipsoidalCSPropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidalCSType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__EllipsoidalCSType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__EllipsoidalCSType(struct soap*, gml__EllipsoidalCSType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__EllipsoidalCSType(struct soap*, const char *, int, gml__EllipsoidalCSType *const*, const char *);
SOAP_FMAC3 gml__EllipsoidalCSType ** SOAP_FMAC4 soap_in_PointerTogml__EllipsoidalCSType(struct soap*, const char*, gml__EllipsoidalCSType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__EllipsoidalCSType(struct soap*, gml__EllipsoidalCSType *const*, const char*, const char*);
SOAP_FMAC3 gml__EllipsoidalCSType ** SOAP_FMAC4 soap_get_PointerTogml__EllipsoidalCSType(struct soap*, gml__EllipsoidalCSType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__TimePrimitivePropertyType_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__gml__TimePrimitivePropertyType_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, __gml__TimePrimitivePropertyType_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, const char *, int, __gml__TimePrimitivePropertyType_sequence *const*, const char *);
SOAP_FMAC3 __gml__TimePrimitivePropertyType_sequence ** SOAP_FMAC4 soap_in_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, const char*, __gml__TimePrimitivePropertyType_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, __gml__TimePrimitivePropertyType_sequence *const*, const char*, const char*);
SOAP_FMAC3 __gml__TimePrimitivePropertyType_sequence ** SOAP_FMAC4 soap_get_PointerTo__gml__TimePrimitivePropertyType_sequence(struct soap*, __gml__TimePrimitivePropertyType_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_xlink__actuate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_xlink__actuate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xlink__actuate(struct soap*, enum _xlink__actuate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xlink__actuate(struct soap*, const char *, int, enum _xlink__actuate *const*, const char *);
SOAP_FMAC3 enum _xlink__actuate ** SOAP_FMAC4 soap_in_PointerTo_xlink__actuate(struct soap*, const char*, enum _xlink__actuate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xlink__actuate(struct soap*, enum _xlink__actuate *const*, const char*, const char*);
SOAP_FMAC3 enum _xlink__actuate ** SOAP_FMAC4 soap_get_PointerTo_xlink__actuate(struct soap*, enum _xlink__actuate **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_xlink__show_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo_xlink__show_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xlink__show(struct soap*, enum _xlink__show *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xlink__show(struct soap*, const char *, int, enum _xlink__show *const*, const char *);
SOAP_FMAC3 enum _xlink__show ** SOAP_FMAC4 soap_in_PointerTo_xlink__show(struct soap*, const char*, enum _xlink__show **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xlink__show(struct soap*, enum _xlink__show *const*, const char*, const char*);
SOAP_FMAC3 enum _xlink__show ** SOAP_FMAC4 soap_get_PointerTo_xlink__show(struct soap*, enum _xlink__show **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__anyURI_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__anyURI_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyURI(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyURI(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__anyURI(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyURI(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__anyURI(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__NilReasonType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__NilReasonType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__NilReasonType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__NilReasonType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTogml__NilReasonType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__NilReasonType(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTogml__NilReasonType(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CodeType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CodeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CodeType(struct soap*, gml__CodeType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CodeType(struct soap*, const char *, int, gml__CodeType *const*, const char *);
SOAP_FMAC3 gml__CodeType ** SOAP_FMAC4 soap_in_PointerTogml__CodeType(struct soap*, const char*, gml__CodeType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CodeType(struct soap*, gml__CodeType *const*, const char*, const char*);
SOAP_FMAC3 gml__CodeType ** SOAP_FMAC4 soap_get_PointerTogml__CodeType(struct soap*, gml__CodeType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CodeWithAuthorityType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__CodeWithAuthorityType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__CodeWithAuthorityType(struct soap*, gml__CodeWithAuthorityType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__CodeWithAuthorityType(struct soap*, const char *, int, gml__CodeWithAuthorityType *const*, const char *);
SOAP_FMAC3 gml__CodeWithAuthorityType ** SOAP_FMAC4 soap_in_PointerTogml__CodeWithAuthorityType(struct soap*, const char*, gml__CodeWithAuthorityType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__CodeWithAuthorityType(struct soap*, gml__CodeWithAuthorityType *const*, const char*, const char*);
SOAP_FMAC3 gml__CodeWithAuthorityType ** SOAP_FMAC4 soap_get_PointerTogml__CodeWithAuthorityType(struct soap*, gml__CodeWithAuthorityType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__ReferenceType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__ReferenceType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__ReferenceType(struct soap*, gml__ReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__ReferenceType(struct soap*, const char *, int, gml__ReferenceType *const*, const char *);
SOAP_FMAC3 gml__ReferenceType ** SOAP_FMAC4 soap_in_PointerTogml__ReferenceType(struct soap*, const char*, gml__ReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__ReferenceType(struct soap*, gml__ReferenceType *const*, const char*, const char*);
SOAP_FMAC3 gml__ReferenceType ** SOAP_FMAC4 soap_get_PointerTogml__ReferenceType(struct soap*, gml__ReferenceType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__StringOrRefType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTogml__StringOrRefType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTogml__StringOrRefType(struct soap*, gml__StringOrRefType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTogml__StringOrRefType(struct soap*, const char *, int, gml__StringOrRefType *const*, const char *);
SOAP_FMAC3 gml__StringOrRefType ** SOAP_FMAC4 soap_in_PointerTogml__StringOrRefType(struct soap*, const char*, gml__StringOrRefType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTogml__StringOrRefType(struct soap*, gml__StringOrRefType *const*, const char*, const char*);
SOAP_FMAC3 gml__StringOrRefType ** SOAP_FMAC4 soap_get_PointerTogml__StringOrRefType(struct soap*, gml__StringOrRefType **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__DescriptionString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__DescriptionString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__DescriptionString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__DescriptionString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToeml__DescriptionString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__DescriptionString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToeml__DescriptionString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__CustomData_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__CustomData_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__CustomData(struct soap*, eml__CustomData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__CustomData(struct soap*, const char *, int, eml__CustomData *const*, const char *);
SOAP_FMAC3 eml__CustomData ** SOAP_FMAC4 soap_in_PointerToeml__CustomData(struct soap*, const char*, eml__CustomData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__CustomData(struct soap*, eml__CustomData *const*, const char*, const char*);
SOAP_FMAC3 eml__CustomData ** SOAP_FMAC4 soap_get_PointerToeml__CustomData(struct soap*, eml__CustomData **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__ObjectAlias_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__ObjectAlias_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__ObjectAlias(struct soap*, eml__ObjectAlias *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__ObjectAlias(struct soap*, const char *, int, eml__ObjectAlias *const*, const char *);
SOAP_FMAC3 eml__ObjectAlias ** SOAP_FMAC4 soap_in_PointerToeml__ObjectAlias(struct soap*, const char*, eml__ObjectAlias **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__ObjectAlias(struct soap*, eml__ObjectAlias *const*, const char*, const char*);
SOAP_FMAC3 eml__ObjectAlias ** SOAP_FMAC4 soap_get_PointerToeml__ObjectAlias(struct soap*, eml__ObjectAlias **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__Citation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__Citation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__Citation(struct soap*, eml__Citation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__Citation(struct soap*, const char *, int, eml__Citation *const*, const char *);
SOAP_FMAC3 eml__Citation ** SOAP_FMAC4 soap_in_PointerToeml__Citation(struct soap*, const char*, eml__Citation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__Citation(struct soap*, eml__Citation *const*, const char*, const char*);
SOAP_FMAC3 eml__Citation ** SOAP_FMAC4 soap_get_PointerToeml__Citation(struct soap*, eml__Citation **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__CommentString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__CommentString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__CommentString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__CommentString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToeml__CommentString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__CommentString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToeml__CommentString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTodateTime_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTodateTime_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodateTime(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodateTime(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTodateTime(struct soap*, const char*, time_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodateTime(struct soap*, time_t *const*, const char*, const char*);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTodateTime(struct soap*, time_t **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__NameString_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__NameString_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__NameString(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__NameString(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToeml__NameString(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__NameString(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToeml__NameString(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractParameterKey_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractParameterKey(struct soap*, resqml2__AbstractParameterKey *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractParameterKey(struct soap*, const char *, int, resqml2__AbstractParameterKey *const*, const char *);
SOAP_FMAC3 resqml2__AbstractParameterKey ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractParameterKey(struct soap*, const char*, resqml2__AbstractParameterKey **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractParameterKey(struct soap*, resqml2__AbstractParameterKey *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractParameterKey ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractParameterKey(struct soap*, resqml2__AbstractParameterKey **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractActivityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractActivityParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractActivityParameter(struct soap*, resqml2__AbstractActivityParameter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractActivityParameter(struct soap*, const char *, int, resqml2__AbstractActivityParameter *const*, const char *);
SOAP_FMAC3 resqml2__AbstractActivityParameter ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractActivityParameter(struct soap*, const char*, resqml2__AbstractActivityParameter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractActivityParameter(struct soap*, resqml2__AbstractActivityParameter *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractActivityParameter ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractActivityParameter(struct soap*, resqml2__AbstractActivityParameter **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTostd__string_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTostd__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__OrientedMacroFace_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__OrientedMacroFace_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__OrientedMacroFace(struct soap*, resqml2__OrientedMacroFace *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__OrientedMacroFace(struct soap*, const char *, int, resqml2__OrientedMacroFace *const*, const char *);
SOAP_FMAC3 resqml2__OrientedMacroFace ** SOAP_FMAC4 soap_in_PointerToresqml2__OrientedMacroFace(struct soap*, const char*, resqml2__OrientedMacroFace **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__OrientedMacroFace(struct soap*, resqml2__OrientedMacroFace *const*, const char*, const char*);
SOAP_FMAC3 resqml2__OrientedMacroFace ** SOAP_FMAC4 soap_get_PointerToresqml2__OrientedMacroFace(struct soap*, resqml2__OrientedMacroFace **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__VolumeShell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__VolumeShell_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__VolumeShell(struct soap*, resqml2__VolumeShell *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__VolumeShell(struct soap*, const char *, int, resqml2__VolumeShell *const*, const char *);
SOAP_FMAC3 resqml2__VolumeShell ** SOAP_FMAC4 soap_in_PointerToresqml2__VolumeShell(struct soap*, const char*, resqml2__VolumeShell **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__VolumeShell(struct soap*, resqml2__VolumeShell *const*, const char*, const char*);
SOAP_FMAC3 resqml2__VolumeShell ** SOAP_FMAC4 soap_get_PointerToresqml2__VolumeShell(struct soap*, resqml2__VolumeShell **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToLONG64_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToLONG64_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToLONG64(struct soap*, LONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToLONG64(struct soap*, const char *, int, LONG64 *const*, const char *);
SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_in_PointerToLONG64(struct soap*, const char*, LONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToLONG64(struct soap*, LONG64 *const*, const char*, const char*);
SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_get_PointerToLONG64(struct soap*, LONG64 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TimeInterval_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TimeInterval_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__TimeInterval(struct soap*, resqml2__TimeInterval *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__TimeInterval(struct soap*, const char *, int, resqml2__TimeInterval *const*, const char *);
SOAP_FMAC3 resqml2__TimeInterval ** SOAP_FMAC4 soap_in_PointerToresqml2__TimeInterval(struct soap*, const char*, resqml2__TimeInterval **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__TimeInterval(struct soap*, resqml2__TimeInterval *const*, const char*, const char*);
SOAP_FMAC3 resqml2__TimeInterval ** SOAP_FMAC4 soap_get_PointerToresqml2__TimeInterval(struct soap*, resqml2__TimeInterval **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__CellOverlap_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__CellOverlap_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__CellOverlap(struct soap*, resqml2__CellOverlap *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__CellOverlap(struct soap*, const char *, int, resqml2__CellOverlap *const*, const char *);
SOAP_FMAC3 resqml2__CellOverlap ** SOAP_FMAC4 soap_in_PointerToresqml2__CellOverlap(struct soap*, const char*, resqml2__CellOverlap **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__CellOverlap(struct soap*, resqml2__CellOverlap *const*, const char*, const char*);
SOAP_FMAC3 resqml2__CellOverlap ** SOAP_FMAC4 soap_get_PointerToresqml2__CellOverlap(struct soap*, resqml2__CellOverlap **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml2__OverlapVolume_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml2__OverlapVolume_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__resqml2__OverlapVolume_sequence(struct soap*, __resqml2__OverlapVolume_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__resqml2__OverlapVolume_sequence(struct soap*, const char *, int, __resqml2__OverlapVolume_sequence *const*, const char *);
SOAP_FMAC3 __resqml2__OverlapVolume_sequence ** SOAP_FMAC4 soap_in_PointerTo__resqml2__OverlapVolume_sequence(struct soap*, const char*, __resqml2__OverlapVolume_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__resqml2__OverlapVolume_sequence(struct soap*, __resqml2__OverlapVolume_sequence *const*, const char*, const char*);
SOAP_FMAC3 __resqml2__OverlapVolume_sequence ** SOAP_FMAC4 soap_get_PointerTo__resqml2__OverlapVolume_sequence(struct soap*, __resqml2__OverlapVolume_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml2__CellOverlap_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml2__CellOverlap_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__resqml2__CellOverlap_sequence(struct soap*, __resqml2__CellOverlap_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__resqml2__CellOverlap_sequence(struct soap*, const char *, int, __resqml2__CellOverlap_sequence *const*, const char *);
SOAP_FMAC3 __resqml2__CellOverlap_sequence ** SOAP_FMAC4 soap_in_PointerTo__resqml2__CellOverlap_sequence(struct soap*, const char*, __resqml2__CellOverlap_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__resqml2__CellOverlap_sequence(struct soap*, __resqml2__CellOverlap_sequence *const*, const char*, const char*);
SOAP_FMAC3 __resqml2__CellOverlap_sequence ** SOAP_FMAC4 soap_get_PointerTo__resqml2__CellOverlap_sequence(struct soap*, __resqml2__CellOverlap_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__OverlapVolume_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__OverlapVolume_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__OverlapVolume(struct soap*, resqml2__OverlapVolume *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__OverlapVolume(struct soap*, const char *, int, resqml2__OverlapVolume *const*, const char *);
SOAP_FMAC3 resqml2__OverlapVolume ** SOAP_FMAC4 soap_in_PointerToresqml2__OverlapVolume(struct soap*, const char*, resqml2__OverlapVolume **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__OverlapVolume(struct soap*, resqml2__OverlapVolume *const*, const char*, const char*);
SOAP_FMAC3 resqml2__OverlapVolume ** SOAP_FMAC4 soap_get_PointerToresqml2__OverlapVolume(struct soap*, resqml2__OverlapVolume **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Intervals_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Intervals_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Intervals(struct soap*, resqml2__Intervals *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Intervals(struct soap*, const char *, int, resqml2__Intervals *const*, const char *);
SOAP_FMAC3 resqml2__Intervals ** SOAP_FMAC4 soap_in_PointerToresqml2__Intervals(struct soap*, const char*, resqml2__Intervals **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Intervals(struct soap*, resqml2__Intervals *const*, const char*, const char*);
SOAP_FMAC3 resqml2__Intervals ** SOAP_FMAC4 soap_get_PointerToresqml2__Intervals(struct soap*, resqml2__Intervals **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml2__KGaps_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml2__KGaps_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__resqml2__KGaps_sequence(struct soap*, __resqml2__KGaps_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__resqml2__KGaps_sequence(struct soap*, const char *, int, __resqml2__KGaps_sequence *const*, const char *);
SOAP_FMAC3 __resqml2__KGaps_sequence ** SOAP_FMAC4 soap_in_PointerTo__resqml2__KGaps_sequence(struct soap*, const char*, __resqml2__KGaps_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__resqml2__KGaps_sequence(struct soap*, __resqml2__KGaps_sequence *const*, const char*, const char*);
SOAP_FMAC3 __resqml2__KGaps_sequence ** SOAP_FMAC4 soap_get_PointerTo__resqml2__KGaps_sequence(struct soap*, __resqml2__KGaps_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractBooleanArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractBooleanArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractBooleanArray(struct soap*, resqml2__AbstractBooleanArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractBooleanArray(struct soap*, const char *, int, resqml2__AbstractBooleanArray *const*, const char *);
SOAP_FMAC3 resqml2__AbstractBooleanArray ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractBooleanArray(struct soap*, const char*, resqml2__AbstractBooleanArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractBooleanArray(struct soap*, resqml2__AbstractBooleanArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractBooleanArray ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractBooleanArray(struct soap*, resqml2__AbstractBooleanArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GpGridUnstructuredColumnLayerGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GpGridUnstructuredColumnLayerGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, resqml2__GpGridUnstructuredColumnLayerGridPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char *, int, resqml2__GpGridUnstructuredColumnLayerGridPatch *const*, const char *);
SOAP_FMAC3 resqml2__GpGridUnstructuredColumnLayerGridPatch ** SOAP_FMAC4 soap_in_PointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, resqml2__GpGridUnstructuredColumnLayerGridPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, resqml2__GpGridUnstructuredColumnLayerGridPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__GpGridUnstructuredColumnLayerGridPatch ** SOAP_FMAC4 soap_get_PointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, resqml2__GpGridUnstructuredColumnLayerGridPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GpGridIjkGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__GpGridIjkGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__GpGridIjkGridPatch(struct soap*, resqml2__GpGridIjkGridPatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__GpGridIjkGridPatch(struct soap*, const char *, int, resqml2__GpGridIjkGridPatch *const*, const char *);
SOAP_FMAC3 resqml2__GpGridIjkGridPatch ** SOAP_FMAC4 soap_in_PointerToresqml2__GpGridIjkGridPatch(struct soap*, const char*, resqml2__GpGridIjkGridPatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__GpGridIjkGridPatch(struct soap*, resqml2__GpGridIjkGridPatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__GpGridIjkGridPatch ** SOAP_FMAC4 soap_get_PointerToresqml2__GpGridIjkGridPatch(struct soap*, resqml2__GpGridIjkGridPatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__KGaps_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__KGaps_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__KGaps(struct soap*, resqml2__KGaps *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__KGaps(struct soap*, const char *, int, resqml2__KGaps *const*, const char *);
SOAP_FMAC3 resqml2__KGaps ** SOAP_FMAC4 soap_in_PointerToresqml2__KGaps(struct soap*, const char*, resqml2__KGaps **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__KGaps(struct soap*, resqml2__KGaps *const*, const char*, const char*);
SOAP_FMAC3 resqml2__KGaps ** SOAP_FMAC4 soap_get_PointerToresqml2__KGaps(struct soap*, resqml2__KGaps **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml2__IjGaps_sequence_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerTo__resqml2__IjGaps_sequence_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo__resqml2__IjGaps_sequence(struct soap*, __resqml2__IjGaps_sequence *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo__resqml2__IjGaps_sequence(struct soap*, const char *, int, __resqml2__IjGaps_sequence *const*, const char *);
SOAP_FMAC3 __resqml2__IjGaps_sequence ** SOAP_FMAC4 soap_in_PointerTo__resqml2__IjGaps_sequence(struct soap*, const char*, __resqml2__IjGaps_sequence **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo__resqml2__IjGaps_sequence(struct soap*, __resqml2__IjGaps_sequence *const*, const char*, const char*);
SOAP_FMAC3 __resqml2__IjGaps_sequence ** SOAP_FMAC4 soap_get_PointerTo__resqml2__IjGaps_sequence(struct soap*, __resqml2__IjGaps_sequence **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ResqmlJaggedArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ResqmlJaggedArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ResqmlJaggedArray(struct soap*, resqml2__ResqmlJaggedArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ResqmlJaggedArray(struct soap*, const char *, int, resqml2__ResqmlJaggedArray *const*, const char *);
SOAP_FMAC3 resqml2__ResqmlJaggedArray ** SOAP_FMAC4 soap_in_PointerToresqml2__ResqmlJaggedArray(struct soap*, const char*, resqml2__ResqmlJaggedArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ResqmlJaggedArray(struct soap*, resqml2__ResqmlJaggedArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ResqmlJaggedArray ** SOAP_FMAC4 soap_get_PointerToresqml2__ResqmlJaggedArray(struct soap*, resqml2__ResqmlJaggedArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UniformSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UniformSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__UniformSubnodePatch(struct soap*, resqml2__UniformSubnodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__UniformSubnodePatch(struct soap*, const char *, int, resqml2__UniformSubnodePatch *const*, const char *);
SOAP_FMAC3 resqml2__UniformSubnodePatch ** SOAP_FMAC4 soap_in_PointerToresqml2__UniformSubnodePatch(struct soap*, const char*, resqml2__UniformSubnodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__UniformSubnodePatch(struct soap*, resqml2__UniformSubnodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__UniformSubnodePatch ** SOAP_FMAC4 soap_get_PointerToresqml2__UniformSubnodePatch(struct soap*, resqml2__UniformSubnodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__VariableSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__VariableSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__VariableSubnodePatch(struct soap*, resqml2__VariableSubnodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__VariableSubnodePatch(struct soap*, const char *, int, resqml2__VariableSubnodePatch *const*, const char *);
SOAP_FMAC3 resqml2__VariableSubnodePatch ** SOAP_FMAC4 soap_in_PointerToresqml2__VariableSubnodePatch(struct soap*, const char*, resqml2__VariableSubnodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__VariableSubnodePatch(struct soap*, resqml2__VariableSubnodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__VariableSubnodePatch ** SOAP_FMAC4 soap_get_PointerToresqml2__VariableSubnodePatch(struct soap*, resqml2__VariableSubnodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ColumnLayerSubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ColumnLayerSubnodeTopology_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ColumnLayerSubnodeTopology(struct soap*, resqml2__ColumnLayerSubnodeTopology *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ColumnLayerSubnodeTopology(struct soap*, const char *, int, resqml2__ColumnLayerSubnodeTopology *const*, const char *);
SOAP_FMAC3 resqml2__ColumnLayerSubnodeTopology ** SOAP_FMAC4 soap_in_PointerToresqml2__ColumnLayerSubnodeTopology(struct soap*, const char*, resqml2__ColumnLayerSubnodeTopology **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ColumnLayerSubnodeTopology(struct soap*, resqml2__ColumnLayerSubnodeTopology *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ColumnLayerSubnodeTopology ** SOAP_FMAC4 soap_get_PointerToresqml2__ColumnLayerSubnodeTopology(struct soap*, resqml2__ColumnLayerSubnodeTopology **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredSubnodeTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredSubnodeTopology_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__UnstructuredSubnodeTopology(struct soap*, resqml2__UnstructuredSubnodeTopology *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__UnstructuredSubnodeTopology(struct soap*, const char *, int, resqml2__UnstructuredSubnodeTopology *const*, const char *);
SOAP_FMAC3 resqml2__UnstructuredSubnodeTopology ** SOAP_FMAC4 soap_in_PointerToresqml2__UnstructuredSubnodeTopology(struct soap*, const char*, resqml2__UnstructuredSubnodeTopology **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__UnstructuredSubnodeTopology(struct soap*, resqml2__UnstructuredSubnodeTopology *const*, const char*, const char*);
SOAP_FMAC3 resqml2__UnstructuredSubnodeTopology ** SOAP_FMAC4 soap_get_PointerToresqml2__UnstructuredSubnodeTopology(struct soap*, resqml2__UnstructuredSubnodeTopology **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IjSplitColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__IjSplitColumnEdges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__IjSplitColumnEdges(struct soap*, resqml2__IjSplitColumnEdges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__IjSplitColumnEdges(struct soap*, const char *, int, resqml2__IjSplitColumnEdges *const*, const char *);
SOAP_FMAC3 resqml2__IjSplitColumnEdges ** SOAP_FMAC4 soap_in_PointerToresqml2__IjSplitColumnEdges(struct soap*, const char*, resqml2__IjSplitColumnEdges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__IjSplitColumnEdges(struct soap*, resqml2__IjSplitColumnEdges *const*, const char*, const char*);
SOAP_FMAC3 resqml2__IjSplitColumnEdges ** SOAP_FMAC4 soap_get_PointerToresqml2__IjSplitColumnEdges(struct soap*, resqml2__IjSplitColumnEdges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SplitFaces_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SplitFaces_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__SplitFaces(struct soap*, resqml2__SplitFaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__SplitFaces(struct soap*, const char *, int, resqml2__SplitFaces *const*, const char *);
SOAP_FMAC3 resqml2__SplitFaces ** SOAP_FMAC4 soap_in_PointerToresqml2__SplitFaces(struct soap*, const char*, resqml2__SplitFaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__SplitFaces(struct soap*, resqml2__SplitFaces *const*, const char*, const char*);
SOAP_FMAC3 resqml2__SplitFaces ** SOAP_FMAC4 soap_get_PointerToresqml2__SplitFaces(struct soap*, resqml2__SplitFaces **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__UnstructuredColumnEdges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__UnstructuredColumnEdges(struct soap*, resqml2__UnstructuredColumnEdges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__UnstructuredColumnEdges(struct soap*, const char *, int, resqml2__UnstructuredColumnEdges *const*, const char *);
SOAP_FMAC3 resqml2__UnstructuredColumnEdges ** SOAP_FMAC4 soap_in_PointerToresqml2__UnstructuredColumnEdges(struct soap*, const char*, resqml2__UnstructuredColumnEdges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__UnstructuredColumnEdges(struct soap*, resqml2__UnstructuredColumnEdges *const*, const char*, const char*);
SOAP_FMAC3 resqml2__UnstructuredColumnEdges ** SOAP_FMAC4 soap_get_PointerToresqml2__UnstructuredColumnEdges(struct soap*, resqml2__UnstructuredColumnEdges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ColumnLayerSplitColumnEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ColumnLayerSplitColumnEdges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ColumnLayerSplitColumnEdges(struct soap*, resqml2__ColumnLayerSplitColumnEdges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ColumnLayerSplitColumnEdges(struct soap*, const char *, int, resqml2__ColumnLayerSplitColumnEdges *const*, const char *);
SOAP_FMAC3 resqml2__ColumnLayerSplitColumnEdges ** SOAP_FMAC4 soap_in_PointerToresqml2__ColumnLayerSplitColumnEdges(struct soap*, const char*, resqml2__ColumnLayerSplitColumnEdges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ColumnLayerSplitColumnEdges(struct soap*, resqml2__ColumnLayerSplitColumnEdges *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ColumnLayerSplitColumnEdges ** SOAP_FMAC4 soap_get_PointerToresqml2__ColumnLayerSplitColumnEdges(struct soap*, resqml2__ColumnLayerSplitColumnEdges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SplitNodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SplitNodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__SplitNodePatch(struct soap*, resqml2__SplitNodePatch *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__SplitNodePatch(struct soap*, const char *, int, resqml2__SplitNodePatch *const*, const char *);
SOAP_FMAC3 resqml2__SplitNodePatch ** SOAP_FMAC4 soap_in_PointerToresqml2__SplitNodePatch(struct soap*, const char*, resqml2__SplitNodePatch **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__SplitNodePatch(struct soap*, resqml2__SplitNodePatch *const*, const char*, const char*);
SOAP_FMAC3 resqml2__SplitNodePatch ** SOAP_FMAC4 soap_get_PointerToresqml2__SplitNodePatch(struct soap*, resqml2__SplitNodePatch **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SplitEdges_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__SplitEdges_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__SplitEdges(struct soap*, resqml2__SplitEdges *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__SplitEdges(struct soap*, const char *, int, resqml2__SplitEdges *const*, const char *);
SOAP_FMAC3 resqml2__SplitEdges ** SOAP_FMAC4 soap_in_PointerToresqml2__SplitEdges(struct soap*, const char*, resqml2__SplitEdges **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__SplitEdges(struct soap*, resqml2__SplitEdges *const*, const char*, const char*);
SOAP_FMAC3 resqml2__SplitEdges ** SOAP_FMAC4 soap_get_PointerToresqml2__SplitEdges(struct soap*, resqml2__SplitEdges **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractGeometry(struct soap*, resqml2__AbstractGeometry *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractGeometry(struct soap*, const char *, int, resqml2__AbstractGeometry *const*, const char *);
SOAP_FMAC3 resqml2__AbstractGeometry ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractGeometry(struct soap*, const char*, resqml2__AbstractGeometry **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractGeometry(struct soap*, resqml2__AbstractGeometry *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractGeometry ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractGeometry(struct soap*, resqml2__AbstractGeometry **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AdditionalGridTopology_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AdditionalGridTopology_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AdditionalGridTopology(struct soap*, resqml2__AdditionalGridTopology *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AdditionalGridTopology(struct soap*, const char *, int, resqml2__AdditionalGridTopology *const*, const char *);
SOAP_FMAC3 resqml2__AdditionalGridTopology ** SOAP_FMAC4 soap_in_PointerToresqml2__AdditionalGridTopology(struct soap*, const char*, resqml2__AdditionalGridTopology **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AdditionalGridTopology(struct soap*, resqml2__AdditionalGridTopology *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AdditionalGridTopology ** SOAP_FMAC4 soap_get_PointerToresqml2__AdditionalGridTopology(struct soap*, resqml2__AdditionalGridTopology **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ElementIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__ElementIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__ElementIdentity(struct soap*, resqml2__ElementIdentity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__ElementIdentity(struct soap*, const char *, int, resqml2__ElementIdentity *const*, const char *);
SOAP_FMAC3 resqml2__ElementIdentity ** SOAP_FMAC4 soap_in_PointerToresqml2__ElementIdentity(struct soap*, const char*, resqml2__ElementIdentity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__ElementIdentity(struct soap*, resqml2__ElementIdentity *const*, const char*, const char*);
SOAP_FMAC3 resqml2__ElementIdentity ** SOAP_FMAC4 soap_get_PointerToresqml2__ElementIdentity(struct soap*, resqml2__ElementIdentity **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractIntegerArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractIntegerArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractIntegerArray(struct soap*, resqml2__AbstractIntegerArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractIntegerArray(struct soap*, const char *, int, resqml2__AbstractIntegerArray *const*, const char *);
SOAP_FMAC3 resqml2__AbstractIntegerArray ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractIntegerArray(struct soap*, const char*, resqml2__AbstractIntegerArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractIntegerArray(struct soap*, resqml2__AbstractIntegerArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractIntegerArray ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractIntegerArray(struct soap*, resqml2__AbstractIntegerArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__DataObjectReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToeml__DataObjectReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToeml__DataObjectReference(struct soap*, eml__DataObjectReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToeml__DataObjectReference(struct soap*, const char *, int, eml__DataObjectReference *const*, const char *);
SOAP_FMAC3 eml__DataObjectReference ** SOAP_FMAC4 soap_in_PointerToeml__DataObjectReference(struct soap*, const char*, eml__DataObjectReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToeml__DataObjectReference(struct soap*, eml__DataObjectReference *const*, const char*, const char*);
SOAP_FMAC3 eml__DataObjectReference ** SOAP_FMAC4 soap_get_PointerToeml__DataObjectReference(struct soap*, eml__DataObjectReference **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TimeIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__TimeIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__TimeIndex(struct soap*, resqml2__TimeIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__TimeIndex(struct soap*, const char *, int, resqml2__TimeIndex *const*, const char *);
SOAP_FMAC3 resqml2__TimeIndex ** SOAP_FMAC4 soap_in_PointerToresqml2__TimeIndex(struct soap*, const char*, resqml2__TimeIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__TimeIndex(struct soap*, resqml2__TimeIndex *const*, const char*, const char*);
SOAP_FMAC3 resqml2__TimeIndex ** SOAP_FMAC4 soap_get_PointerToresqml2__TimeIndex(struct soap*, resqml2__TimeIndex **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractDoubleArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractDoubleArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractDoubleArray(struct soap*, resqml2__AbstractDoubleArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractDoubleArray(struct soap*, const char *, int, resqml2__AbstractDoubleArray *const*, const char *);
SOAP_FMAC3 resqml2__AbstractDoubleArray ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractDoubleArray(struct soap*, const char*, resqml2__AbstractDoubleArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractDoubleArray(struct soap*, resqml2__AbstractDoubleArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractDoubleArray ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractDoubleArray(struct soap*, resqml2__AbstractDoubleArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Point3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__Point3d_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__Point3d(struct soap*, resqml2__Point3d *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__Point3d(struct soap*, const char *, int, resqml2__Point3d *const*, const char *);
SOAP_FMAC3 resqml2__Point3d ** SOAP_FMAC4 soap_in_PointerToresqml2__Point3d(struct soap*, const char*, resqml2__Point3d **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__Point3d(struct soap*, resqml2__Point3d *const*, const char*, const char*);
SOAP_FMAC3 resqml2__Point3d ** SOAP_FMAC4 soap_get_PointerToresqml2__Point3d(struct soap*, resqml2__Point3d **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractValueArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractValueArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractValueArray(struct soap*, resqml2__AbstractValueArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractValueArray(struct soap*, const char *, int, resqml2__AbstractValueArray *const*, const char *);
SOAP_FMAC3 resqml2__AbstractValueArray ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractValueArray(struct soap*, const char*, resqml2__AbstractValueArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractValueArray(struct soap*, resqml2__AbstractValueArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractValueArray ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractValueArray(struct soap*, resqml2__AbstractValueArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractPoint3dArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToresqml2__AbstractPoint3dArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToresqml2__AbstractPoint3dArray(struct soap*, resqml2__AbstractPoint3dArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToresqml2__AbstractPoint3dArray(struct soap*, const char *, int, resqml2__AbstractPoint3dArray *const*, const char *);
SOAP_FMAC3 resqml2__AbstractPoint3dArray ** SOAP_FMAC4 soap_in_PointerToresqml2__AbstractPoint3dArray(struct soap*, const char*, resqml2__AbstractPoint3dArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToresqml2__AbstractPoint3dArray(struct soap*, resqml2__AbstractPoint3dArray *const*, const char*, const char*);
SOAP_FMAC3 resqml2__AbstractPoint3dArray ** SOAP_FMAC4 soap_get_PointerToresqml2__AbstractPoint3dArray(struct soap*, resqml2__AbstractPoint3dArray **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__nonNegativeInteger_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_PointerToxsd__nonNegativeInteger_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__nonNegativeInteger(struct soap*, ULONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__nonNegativeInteger(struct soap*, const char *, int, ULONG64 *const*, const char *);
SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_in_PointerToxsd__nonNegativeInteger(struct soap*, const char*, ULONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__nonNegativeInteger(struct soap*, ULONG64 *const*, const char*, const char*);
SOAP_FMAC3 ULONG64 ** SOAP_FMAC4 soap_get_PointerToxsd__nonNegativeInteger(struct soap*, ULONG64 **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__XML_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__XML_DEFINED
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1__QName_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1__QName_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

inline int soap_write__QName(struct soap *soap, char *const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put__QName(soap, p, "QName", "xsd:QName") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

inline int soap_read__QName(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get__QName(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_string_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

inline int soap_write_string(struct soap *soap, char *const *p)
{
	soap_free_temp(soap);
	if (p)
	{	if (soap_begin_send(soap) || soap_put_string(soap, p, "string", "xsd:string") || soap_end_send(soap))
			return soap->error;
	}
	return SOAP_OK;
}
SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

inline int soap_read_string(struct soap *soap, char **p)
{
	if (p)
	{	if (soap_begin_recv(soap) || soap_get_string(soap, p, NULL, NULL) == NULL || soap_end_recv(soap))
			return soap->error;
	}
	return SOAP_OK;
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__SealedContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__SealedContactRepresentationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__SealedContactRepresentationPart(struct soap*, std::vector<resqml2__SealedContactRepresentationPart *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__SealedContactRepresentationPart(struct soap*, const std::vector<resqml2__SealedContactRepresentationPart *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__SealedContactRepresentationPart(struct soap*, const char*, int, const std::vector<resqml2__SealedContactRepresentationPart *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__SealedContactRepresentationPart *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__SealedContactRepresentationPart(struct soap*, const char*, std::vector<resqml2__SealedContactRepresentationPart *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__SealedContactRepresentationPart *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__SealedContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__SealedContactRepresentationPart *>  * soap_new_std__vectorTemplateOfPointerToresqml2__SealedContactRepresentationPart(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__SealedContactRepresentationPart(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractContactRepresentationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractContactRepresentationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__AbstractContactRepresentationPart(struct soap*, std::vector<resqml2__AbstractContactRepresentationPart *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__AbstractContactRepresentationPart(struct soap*, const std::vector<resqml2__AbstractContactRepresentationPart *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__AbstractContactRepresentationPart(struct soap*, const char*, int, const std::vector<resqml2__AbstractContactRepresentationPart *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__AbstractContactRepresentationPart *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__AbstractContactRepresentationPart(struct soap*, const char*, std::vector<resqml2__AbstractContactRepresentationPart *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__AbstractContactRepresentationPart *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractContactRepresentationPart(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__AbstractContactRepresentationPart *>  * soap_new_std__vectorTemplateOfPointerToresqml2__AbstractContactRepresentationPart(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractContactRepresentationPart(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GeologicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GeologicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, std::vector<resqml2__GeologicUnitInterpretationIndex *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, const std::vector<resqml2__GeologicUnitInterpretationIndex *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, const char*, int, const std::vector<resqml2__GeologicUnitInterpretationIndex *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__GeologicUnitInterpretationIndex *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, const char*, std::vector<resqml2__GeologicUnitInterpretationIndex *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__GeologicUnitInterpretationIndex *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__GeologicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__GeologicUnitInterpretationIndex *>  * soap_new_std__vectorTemplateOfPointerToresqml2__GeologicUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__GeologicUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__StratigraphicUnitInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__StratigraphicUnitInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, std::vector<resqml2__StratigraphicUnitInterpretationIndex *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, const std::vector<resqml2__StratigraphicUnitInterpretationIndex *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, const char*, int, const std::vector<resqml2__StratigraphicUnitInterpretationIndex *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__StratigraphicUnitInterpretationIndex *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, const char*, std::vector<resqml2__StratigraphicUnitInterpretationIndex *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__StratigraphicUnitInterpretationIndex *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__StratigraphicUnitInterpretationIndex *>  * soap_new_std__vectorTemplateOfPointerToresqml2__StratigraphicUnitInterpretationIndex(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__StratigraphicUnitInterpretationIndex(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__Grid2dPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__Grid2dPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__Grid2dPatch(struct soap*, std::vector<resqml2__Grid2dPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__Grid2dPatch(struct soap*, const std::vector<resqml2__Grid2dPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__Grid2dPatch(struct soap*, const char*, int, const std::vector<resqml2__Grid2dPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__Grid2dPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__Grid2dPatch(struct soap*, const char*, std::vector<resqml2__Grid2dPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__Grid2dPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__Grid2dPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__Grid2dPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__Grid2dPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__Grid2dPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__VolumeRegion_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__VolumeRegion_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__VolumeRegion(struct soap*, std::vector<resqml2__VolumeRegion *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__VolumeRegion(struct soap*, const std::vector<resqml2__VolumeRegion *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__VolumeRegion(struct soap*, const char*, int, const std::vector<resqml2__VolumeRegion *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__VolumeRegion *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__VolumeRegion(struct soap*, const char*, std::vector<resqml2__VolumeRegion *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__VolumeRegion *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__VolumeRegion(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__VolumeRegion *>  * soap_new_std__vectorTemplateOfPointerToresqml2__VolumeRegion(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__VolumeRegion(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ContactIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ContactIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__ContactIdentity(struct soap*, std::vector<resqml2__ContactIdentity *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__ContactIdentity(struct soap*, const std::vector<resqml2__ContactIdentity *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__ContactIdentity(struct soap*, const char*, int, const std::vector<resqml2__ContactIdentity *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__ContactIdentity *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__ContactIdentity(struct soap*, const char*, std::vector<resqml2__ContactIdentity *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__ContactIdentity *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__ContactIdentity(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__ContactIdentity *>  * soap_new_std__vectorTemplateOfPointerToresqml2__ContactIdentity(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__ContactIdentity(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractPlaneGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractPlaneGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__AbstractPlaneGeometry(struct soap*, std::vector<resqml2__AbstractPlaneGeometry *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__AbstractPlaneGeometry(struct soap*, const std::vector<resqml2__AbstractPlaneGeometry *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__AbstractPlaneGeometry(struct soap*, const char*, int, const std::vector<resqml2__AbstractPlaneGeometry *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__AbstractPlaneGeometry *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__AbstractPlaneGeometry(struct soap*, const char*, std::vector<resqml2__AbstractPlaneGeometry *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__AbstractPlaneGeometry *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractPlaneGeometry(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__AbstractPlaneGeometry *>  * soap_new_std__vectorTemplateOfPointerToresqml2__AbstractPlaneGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractPlaneGeometry(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__TrianglePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__TrianglePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__TrianglePatch(struct soap*, std::vector<resqml2__TrianglePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__TrianglePatch(struct soap*, const std::vector<resqml2__TrianglePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__TrianglePatch(struct soap*, const char*, int, const std::vector<resqml2__TrianglePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__TrianglePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__TrianglePatch(struct soap*, const char*, std::vector<resqml2__TrianglePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__TrianglePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__TrianglePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__TrianglePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__TrianglePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__TrianglePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__WellboreMarker_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__WellboreMarker_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__WellboreMarker(struct soap*, std::vector<resqml2__WellboreMarker *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__WellboreMarker(struct soap*, const std::vector<resqml2__WellboreMarker *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__WellboreMarker(struct soap*, const char*, int, const std::vector<resqml2__WellboreMarker *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__WellboreMarker *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__WellboreMarker(struct soap*, const char*, std::vector<resqml2__WellboreMarker *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__WellboreMarker *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__WellboreMarker(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__WellboreMarker *>  * soap_new_std__vectorTemplateOfPointerToresqml2__WellboreMarker(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__WellboreMarker(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__FaultThrow_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__FaultThrow_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__FaultThrow(struct soap*, std::vector<resqml2__FaultThrow *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__FaultThrow(struct soap*, const std::vector<resqml2__FaultThrow *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__FaultThrow(struct soap*, const char*, int, const std::vector<resqml2__FaultThrow *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__FaultThrow *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__FaultThrow(struct soap*, const char*, std::vector<resqml2__FaultThrow *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__FaultThrow *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__FaultThrow(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__FaultThrow *>  * soap_new_std__vectorTemplateOfPointerToresqml2__FaultThrow(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__FaultThrow(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__HorizonInterpretationIndex_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__HorizonInterpretationIndex_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__HorizonInterpretationIndex(struct soap*, std::vector<resqml2__HorizonInterpretationIndex *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__HorizonInterpretationIndex(struct soap*, const std::vector<resqml2__HorizonInterpretationIndex *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__HorizonInterpretationIndex(struct soap*, const char*, int, const std::vector<resqml2__HorizonInterpretationIndex *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__HorizonInterpretationIndex *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__HorizonInterpretationIndex(struct soap*, const char*, std::vector<resqml2__HorizonInterpretationIndex *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__HorizonInterpretationIndex *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__HorizonInterpretationIndex(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__HorizonInterpretationIndex *>  * soap_new_std__vectorTemplateOfPointerToresqml2__HorizonInterpretationIndex(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__HorizonInterpretationIndex(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml2__BoundaryRelation_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml2__BoundaryRelation_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfresqml2__BoundaryRelation(struct soap*, std::vector<enum resqml2__BoundaryRelation> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfresqml2__BoundaryRelation(struct soap*, const std::vector<enum resqml2__BoundaryRelation> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfresqml2__BoundaryRelation(struct soap*, const char*, int, const std::vector<enum resqml2__BoundaryRelation> *, const char*);
SOAP_FMAC3 std::vector<enum resqml2__BoundaryRelation> * SOAP_FMAC4 soap_in_std__vectorTemplateOfresqml2__BoundaryRelation(struct soap*, const char*, std::vector<enum resqml2__BoundaryRelation> *, const char*);
SOAP_FMAC1 std::vector<enum resqml2__BoundaryRelation>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfresqml2__BoundaryRelation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum resqml2__BoundaryRelation>  * soap_new_std__vectorTemplateOfresqml2__BoundaryRelation(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfresqml2__BoundaryRelation(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, std::vector<resqml2__GpGridUnstructuredGridPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, const std::vector<resqml2__GpGridUnstructuredGridPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, const char*, int, const std::vector<resqml2__GpGridUnstructuredGridPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__GpGridUnstructuredGridPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, const char*, std::vector<resqml2__GpGridUnstructuredGridPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__GpGridUnstructuredGridPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__GpGridUnstructuredGridPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredGridPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredGridPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GpGridColumnLayerGrid_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GpGridColumnLayerGrid_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__GpGridColumnLayerGrid(struct soap*, std::vector<resqml2__GpGridColumnLayerGrid *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__GpGridColumnLayerGrid(struct soap*, const std::vector<resqml2__GpGridColumnLayerGrid *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__GpGridColumnLayerGrid(struct soap*, const char*, int, const std::vector<resqml2__GpGridColumnLayerGrid *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__GpGridColumnLayerGrid *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__GpGridColumnLayerGrid(struct soap*, const char*, std::vector<resqml2__GpGridColumnLayerGrid *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__GpGridColumnLayerGrid *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__GpGridColumnLayerGrid(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__GpGridColumnLayerGrid *>  * soap_new_std__vectorTemplateOfPointerToresqml2__GpGridColumnLayerGrid(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__GpGridColumnLayerGrid(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__integer_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__integer_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__integer(struct soap*, std::vector<LONG64> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__integer(struct soap*, const std::vector<LONG64> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__integer(struct soap*, const char*, int, const std::vector<LONG64> *, const char*);
SOAP_FMAC3 std::vector<LONG64> * SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__integer(struct soap*, const char*, std::vector<LONG64> *, const char*);
SOAP_FMAC1 std::vector<LONG64>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__integer(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<LONG64>  * soap_new_std__vectorTemplateOfxsd__integer(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfxsd__integer(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfdouble_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfdouble_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfdouble(struct soap*, std::vector<double> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfdouble(struct soap*, const std::vector<double> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfdouble(struct soap*, const char*, int, const std::vector<double> *, const char*);
SOAP_FMAC3 std::vector<double> * SOAP_FMAC4 soap_in_std__vectorTemplateOfdouble(struct soap*, const char*, std::vector<double> *, const char*);
SOAP_FMAC1 std::vector<double>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfdouble(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<double>  * soap_new_std__vectorTemplateOfdouble(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfdouble(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, std::vector<_gml__coordinateOperationAccuracy *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, const std::vector<_gml__coordinateOperationAccuracy *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, const char*, int, const std::vector<_gml__coordinateOperationAccuracy *> *, const char*);
SOAP_FMAC3 std::vector<_gml__coordinateOperationAccuracy *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, const char*, std::vector<_gml__coordinateOperationAccuracy *> *, const char*);
SOAP_FMAC1 std::vector<_gml__coordinateOperationAccuracy *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_gml__coordinateOperationAccuracy *>  * soap_new_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTo_gml__coordinateOperationAccuracy(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, std::vector<gml__CoordinateSystemAxisPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const std::vector<gml__CoordinateSystemAxisPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const char*, int, const std::vector<gml__CoordinateSystemAxisPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gml__CoordinateSystemAxisPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, const char*, std::vector<gml__CoordinateSystemAxisPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gml__CoordinateSystemAxisPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gml__CoordinateSystemAxisPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogml__CoordinateSystemAxisPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTo_gml__domainOfValidity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTo_gml__domainOfValidity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, std::vector<_gml__domainOfValidity *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, const std::vector<_gml__domainOfValidity *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, const char*, int, const std::vector<_gml__domainOfValidity *> *, const char*);
SOAP_FMAC3 std::vector<_gml__domainOfValidity *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, const char*, std::vector<_gml__domainOfValidity *> *, const char*);
SOAP_FMAC1 std::vector<_gml__domainOfValidity *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_gml__domainOfValidity *>  * soap_new_std__vectorTemplateOfPointerTo_gml__domainOfValidity(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTo_gml__domainOfValidity(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PatchBoundaries_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PatchBoundaries_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__PatchBoundaries(struct soap*, std::vector<resqml2__PatchBoundaries *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__PatchBoundaries(struct soap*, const std::vector<resqml2__PatchBoundaries *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__PatchBoundaries(struct soap*, const char*, int, const std::vector<resqml2__PatchBoundaries *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__PatchBoundaries *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__PatchBoundaries(struct soap*, const char*, std::vector<resqml2__PatchBoundaries *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__PatchBoundaries *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__PatchBoundaries(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__PatchBoundaries *>  * soap_new_std__vectorTemplateOfPointerToresqml2__PatchBoundaries(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__PatchBoundaries(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PolylineSetPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PolylineSetPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__PolylineSetPatch(struct soap*, std::vector<resqml2__PolylineSetPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__PolylineSetPatch(struct soap*, const std::vector<resqml2__PolylineSetPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__PolylineSetPatch(struct soap*, const char*, int, const std::vector<resqml2__PolylineSetPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__PolylineSetPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__PolylineSetPatch(struct soap*, const char*, std::vector<resqml2__PolylineSetPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__PolylineSetPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__PolylineSetPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__PolylineSetPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__PolylineSetPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__PolylineSetPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__NodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__NodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__NodePatch(struct soap*, std::vector<resqml2__NodePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__NodePatch(struct soap*, const std::vector<resqml2__NodePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__NodePatch(struct soap*, const char*, int, const std::vector<resqml2__NodePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__NodePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__NodePatch(struct soap*, const char*, std::vector<resqml2__NodePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__NodePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__NodePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__NodePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__NodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__NodePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractContactInterpretationPart_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractContactInterpretationPart_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__AbstractContactInterpretationPart(struct soap*, std::vector<resqml2__AbstractContactInterpretationPart *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__AbstractContactInterpretationPart(struct soap*, const std::vector<resqml2__AbstractContactInterpretationPart *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__AbstractContactInterpretationPart(struct soap*, const char*, int, const std::vector<resqml2__AbstractContactInterpretationPart *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__AbstractContactInterpretationPart *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__AbstractContactInterpretationPart(struct soap*, const char*, std::vector<resqml2__AbstractContactInterpretationPart *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__AbstractContactInterpretationPart *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractContactInterpretationPart(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__AbstractContactInterpretationPart *>  * soap_new_std__vectorTemplateOfPointerToresqml2__AbstractContactInterpretationPart(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractContactInterpretationPart(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__SubRepresentationPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__SubRepresentationPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__SubRepresentationPatch(struct soap*, std::vector<resqml2__SubRepresentationPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__SubRepresentationPatch(struct soap*, const std::vector<resqml2__SubRepresentationPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__SubRepresentationPatch(struct soap*, const char*, int, const std::vector<resqml2__SubRepresentationPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__SubRepresentationPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__SubRepresentationPatch(struct soap*, const char*, std::vector<resqml2__SubRepresentationPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__SubRepresentationPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__SubRepresentationPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__SubRepresentationPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__SubRepresentationPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__SubRepresentationPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PatchOfGeometry_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PatchOfGeometry_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__PatchOfGeometry(struct soap*, std::vector<resqml2__PatchOfGeometry *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__PatchOfGeometry(struct soap*, const std::vector<resqml2__PatchOfGeometry *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__PatchOfGeometry(struct soap*, const char*, int, const std::vector<resqml2__PatchOfGeometry *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__PatchOfGeometry *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__PatchOfGeometry(struct soap*, const char*, std::vector<resqml2__PatchOfGeometry *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__PatchOfGeometry *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__PatchOfGeometry(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__PatchOfGeometry *>  * soap_new_std__vectorTemplateOfPointerToresqml2__PatchOfGeometry(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__PatchOfGeometry(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PropertyKindFacet_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PropertyKindFacet_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__PropertyKindFacet(struct soap*, std::vector<resqml2__PropertyKindFacet *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__PropertyKindFacet(struct soap*, const std::vector<resqml2__PropertyKindFacet *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__PropertyKindFacet(struct soap*, const char*, int, const std::vector<resqml2__PropertyKindFacet *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__PropertyKindFacet *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__PropertyKindFacet(struct soap*, const char*, std::vector<resqml2__PropertyKindFacet *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__PropertyKindFacet *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__PropertyKindFacet(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__PropertyKindFacet *>  * soap_new_std__vectorTemplateOfPointerToresqml2__PropertyKindFacet(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__PropertyKindFacet(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PatchOfValues_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PatchOfValues_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__PatchOfValues(struct soap*, std::vector<resqml2__PatchOfValues *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__PatchOfValues(struct soap*, const std::vector<resqml2__PatchOfValues *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__PatchOfValues(struct soap*, const char*, int, const std::vector<resqml2__PatchOfValues *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__PatchOfValues *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__PatchOfValues(struct soap*, const char*, std::vector<resqml2__PatchOfValues *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__PatchOfValues *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__PatchOfValues(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__PatchOfValues *>  * soap_new_std__vectorTemplateOfPointerToresqml2__PatchOfValues(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__PatchOfValues(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__StringLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__StringLookup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__StringLookup(struct soap*, std::vector<resqml2__StringLookup *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__StringLookup(struct soap*, const std::vector<resqml2__StringLookup *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__StringLookup(struct soap*, const char*, int, const std::vector<resqml2__StringLookup *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__StringLookup *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__StringLookup(struct soap*, const char*, std::vector<resqml2__StringLookup *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__StringLookup *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__StringLookup(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__StringLookup *>  * soap_new_std__vectorTemplateOfPointerToresqml2__StringLookup(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__StringLookup(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PatchOfPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__PatchOfPoints_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__PatchOfPoints(struct soap*, std::vector<resqml2__PatchOfPoints *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__PatchOfPoints(struct soap*, const std::vector<resqml2__PatchOfPoints *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__PatchOfPoints(struct soap*, const char*, int, const std::vector<resqml2__PatchOfPoints *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__PatchOfPoints *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__PatchOfPoints(struct soap*, const char*, std::vector<resqml2__PatchOfPoints *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__PatchOfPoints *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__PatchOfPoints(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__PatchOfPoints *>  * soap_new_std__vectorTemplateOfPointerToresqml2__PatchOfPoints(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__PatchOfPoints(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__DoubleLookup_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__DoubleLookup_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__DoubleLookup(struct soap*, std::vector<resqml2__DoubleLookup *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__DoubleLookup(struct soap*, const std::vector<resqml2__DoubleLookup *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__DoubleLookup(struct soap*, const char*, int, const std::vector<resqml2__DoubleLookup *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__DoubleLookup *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__DoubleLookup(struct soap*, const char*, std::vector<resqml2__DoubleLookup *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__DoubleLookup *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__DoubleLookup(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__DoubleLookup *>  * soap_new_std__vectorTemplateOfPointerToresqml2__DoubleLookup(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__DoubleLookup(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ParameterTemplate_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ParameterTemplate_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__ParameterTemplate(struct soap*, std::vector<resqml2__ParameterTemplate *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__ParameterTemplate(struct soap*, const std::vector<resqml2__ParameterTemplate *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__ParameterTemplate(struct soap*, const char*, int, const std::vector<resqml2__ParameterTemplate *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__ParameterTemplate *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__ParameterTemplate(struct soap*, const char*, std::vector<resqml2__ParameterTemplate *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__ParameterTemplate *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__ParameterTemplate(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__ParameterTemplate *>  * soap_new_std__vectorTemplateOfPointerToresqml2__ParameterTemplate(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__ParameterTemplate(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__Timestamp_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__Timestamp_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__Timestamp(struct soap*, std::vector<resqml2__Timestamp *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__Timestamp(struct soap*, const std::vector<resqml2__Timestamp *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__Timestamp(struct soap*, const char*, int, const std::vector<resqml2__Timestamp *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__Timestamp *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__Timestamp(struct soap*, const char*, std::vector<resqml2__Timestamp *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__Timestamp *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__Timestamp(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__Timestamp *>  * soap_new_std__vectorTemplateOfPointerToresqml2__Timestamp(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__Timestamp(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ChronostratigraphicRank_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ChronostratigraphicRank_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__ChronostratigraphicRank(struct soap*, std::vector<resqml2__ChronostratigraphicRank *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__ChronostratigraphicRank(struct soap*, const std::vector<resqml2__ChronostratigraphicRank *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__ChronostratigraphicRank(struct soap*, const char*, int, const std::vector<resqml2__ChronostratigraphicRank *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__ChronostratigraphicRank *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__ChronostratigraphicRank(struct soap*, const char*, std::vector<resqml2__ChronostratigraphicRank *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__ChronostratigraphicRank *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__ChronostratigraphicRank(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__ChronostratigraphicRank *>  * soap_new_std__vectorTemplateOfPointerToresqml2__ChronostratigraphicRank(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__ChronostratigraphicRank(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__RepresentationIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__RepresentationIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__RepresentationIdentity(struct soap*, std::vector<resqml2__RepresentationIdentity *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__RepresentationIdentity(struct soap*, const std::vector<resqml2__RepresentationIdentity *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__RepresentationIdentity(struct soap*, const char*, int, const std::vector<resqml2__RepresentationIdentity *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__RepresentationIdentity *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__RepresentationIdentity(struct soap*, const char*, std::vector<resqml2__RepresentationIdentity *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__RepresentationIdentity *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__RepresentationIdentity(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__RepresentationIdentity *>  * soap_new_std__vectorTemplateOfPointerToresqml2__RepresentationIdentity(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__RepresentationIdentity(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__RelatedTimeType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__RelatedTimeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, std::vector<gml__RelatedTimeType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, const std::vector<gml__RelatedTimeType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, const char*, int, const std::vector<gml__RelatedTimeType *> *, const char*);
SOAP_FMAC3 std::vector<gml__RelatedTimeType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, const char*, std::vector<gml__RelatedTimeType *> *, const char*);
SOAP_FMAC1 std::vector<gml__RelatedTimeType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gml__RelatedTimeType *>  * soap_new_std__vectorTemplateOfPointerTogml__RelatedTimeType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogml__RelatedTimeType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__EdgePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__EdgePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__EdgePatch(struct soap*, std::vector<resqml2__EdgePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__EdgePatch(struct soap*, const std::vector<resqml2__EdgePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__EdgePatch(struct soap*, const char*, int, const std::vector<resqml2__EdgePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__EdgePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__EdgePatch(struct soap*, const char*, std::vector<resqml2__EdgePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__EdgePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__EdgePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__EdgePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__EdgePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__EdgePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__NameValuePair_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__NameValuePair_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__NameValuePair(struct soap*, std::vector<resqml2__NameValuePair *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__NameValuePair(struct soap*, const std::vector<resqml2__NameValuePair *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__NameValuePair(struct soap*, const char*, int, const std::vector<resqml2__NameValuePair *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__NameValuePair *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__NameValuePair(struct soap*, const char*, std::vector<resqml2__NameValuePair *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__NameValuePair *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__NameValuePair(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__NameValuePair *>  * soap_new_std__vectorTemplateOfPointerToresqml2__NameValuePair(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__NameValuePair(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AdditionalGridPoints_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AdditionalGridPoints_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__AdditionalGridPoints(struct soap*, std::vector<resqml2__AdditionalGridPoints *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__AdditionalGridPoints(struct soap*, const std::vector<resqml2__AdditionalGridPoints *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__AdditionalGridPoints(struct soap*, const char*, int, const std::vector<resqml2__AdditionalGridPoints *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__AdditionalGridPoints *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__AdditionalGridPoints(struct soap*, const char*, std::vector<resqml2__AdditionalGridPoints *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__AdditionalGridPoints *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__AdditionalGridPoints(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__AdditionalGridPoints *>  * soap_new_std__vectorTemplateOfPointerToresqml2__AdditionalGridPoints(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__AdditionalGridPoints(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ElementIndices_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ElementIndices_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__ElementIndices(struct soap*, std::vector<resqml2__ElementIndices *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__ElementIndices(struct soap*, const std::vector<resqml2__ElementIndices *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__ElementIndices(struct soap*, const char*, int, const std::vector<resqml2__ElementIndices *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__ElementIndices *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__ElementIndices(struct soap*, const char*, std::vector<resqml2__ElementIndices *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__ElementIndices *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__ElementIndices(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__ElementIndices *>  * soap_new_std__vectorTemplateOfPointerToresqml2__ElementIndices(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__ElementIndices(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ThreePoint3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ThreePoint3d_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__ThreePoint3d(struct soap*, std::vector<resqml2__ThreePoint3d *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__ThreePoint3d(struct soap*, const std::vector<resqml2__ThreePoint3d *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__ThreePoint3d(struct soap*, const char*, int, const std::vector<resqml2__ThreePoint3d *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__ThreePoint3d *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__ThreePoint3d(struct soap*, const char*, std::vector<resqml2__ThreePoint3d *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__ThreePoint3d *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__ThreePoint3d(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__ThreePoint3d *>  * soap_new_std__vectorTemplateOfPointerToresqml2__ThreePoint3d(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__ThreePoint3d(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__IntegerConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__IntegerConstantArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__IntegerConstantArray(struct soap*, std::vector<resqml2__IntegerConstantArray *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__IntegerConstantArray(struct soap*, const std::vector<resqml2__IntegerConstantArray *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__IntegerConstantArray(struct soap*, const char*, int, const std::vector<resqml2__IntegerConstantArray *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__IntegerConstantArray *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__IntegerConstantArray(struct soap*, const char*, std::vector<resqml2__IntegerConstantArray *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__IntegerConstantArray *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__IntegerConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__IntegerConstantArray *>  * soap_new_std__vectorTemplateOfPointerToresqml2__IntegerConstantArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__IntegerConstantArray(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__DoubleConstantArray_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__DoubleConstantArray_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__DoubleConstantArray(struct soap*, std::vector<resqml2__DoubleConstantArray *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__DoubleConstantArray(struct soap*, const std::vector<resqml2__DoubleConstantArray *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__DoubleConstantArray(struct soap*, const char*, int, const std::vector<resqml2__DoubleConstantArray *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__DoubleConstantArray *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__DoubleConstantArray(struct soap*, const char*, std::vector<resqml2__DoubleConstantArray *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__DoubleConstantArray *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__DoubleConstantArray(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__DoubleConstantArray *>  * soap_new_std__vectorTemplateOfPointerToresqml2__DoubleConstantArray(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__DoubleConstantArray(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__CI_USCOREPresentationFormCode_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREPresentationFormCode_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__CI_USCOREResponsibleParty_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREResponsibleParty_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__MD_USCOREIdentifier_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__MD_USCOREIdentifier_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__CI_USCOREDate_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__CI_USCOREDate_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__CI_USCOREDate_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__CI_USCOREDate_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__DQ_USCOREResult_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__DQ_USCOREResult_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, std::vector<gco__DateTime_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, const std::vector<gco__DateTime_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gco__DateTime_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gco__DateTime_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, const char*, std::vector<gco__DateTime_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gco__DateTime_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gco__DateTime_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogco__DateTime_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, std::vector<gco__CharacterString_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, const std::vector<gco__CharacterString_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gco__CharacterString_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gco__CharacterString_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, const char*, std::vector<gco__CharacterString_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gco__CharacterString_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gco__CharacterString_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogco__CharacterString_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__EX_USCOREVerticalExtent_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCOREVerticalExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__EX_USCORETemporalExtent_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCORETemporalExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, int, const std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, const char*, std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gmd__EX_USCOREGeographicExtent_USCOREPropertyType *>  * soap_new_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogmd__EX_USCOREGeographicExtent_USCOREPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ContactPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ContactPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__ContactPatch(struct soap*, std::vector<resqml2__ContactPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__ContactPatch(struct soap*, const std::vector<resqml2__ContactPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__ContactPatch(struct soap*, const char*, int, const std::vector<resqml2__ContactPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__ContactPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__ContactPatch(struct soap*, const char*, std::vector<resqml2__ContactPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__ContactPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__ContactPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__ContactPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__ContactPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__ContactPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__nonNegativeInteger_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfxsd__nonNegativeInteger_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, std::vector<ULONG64> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, const std::vector<ULONG64> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, const char*, int, const std::vector<ULONG64> *, const char*);
SOAP_FMAC3 std::vector<ULONG64> * SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, const char*, std::vector<ULONG64> *, const char*);
SOAP_FMAC1 std::vector<ULONG64>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ULONG64>  * soap_new_std__vectorTemplateOfxsd__nonNegativeInteger(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfxsd__nonNegativeInteger(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ColumnSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ColumnSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__ColumnSubnodePatch(struct soap*, std::vector<resqml2__ColumnSubnodePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__ColumnSubnodePatch(struct soap*, const std::vector<resqml2__ColumnSubnodePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__ColumnSubnodePatch(struct soap*, const char*, int, const std::vector<resqml2__ColumnSubnodePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__ColumnSubnodePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__ColumnSubnodePatch(struct soap*, const char*, std::vector<resqml2__ColumnSubnodePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__ColumnSubnodePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__ColumnSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__ColumnSubnodePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__ColumnSubnodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__ColumnSubnodePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__Point3dOffset_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__Point3dOffset_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__Point3dOffset(struct soap*, std::vector<resqml2__Point3dOffset *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__Point3dOffset(struct soap*, const std::vector<resqml2__Point3dOffset *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__Point3dOffset(struct soap*, const char*, int, const std::vector<resqml2__Point3dOffset *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__Point3dOffset *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__Point3dOffset(struct soap*, const char*, std::vector<resqml2__Point3dOffset *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__Point3dOffset *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__Point3dOffset(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__Point3dOffset *>  * soap_new_std__vectorTemplateOfPointerToresqml2__Point3dOffset(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__Point3dOffset(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__equivalentPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__equivalentPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, std::vector<ptm__equivalentPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, const std::vector<ptm__equivalentPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, const char*, int, const std::vector<ptm__equivalentPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<ptm__equivalentPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, const char*, std::vector<ptm__equivalentPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<ptm__equivalentPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ptm__equivalentPropertyType *>  * soap_new_std__vectorTemplateOfPointerToptm__equivalentPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToptm__equivalentPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, std::vector<ptm__standardEnergisticsPropertyType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, const std::vector<ptm__standardEnergisticsPropertyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, const char*, int, const std::vector<ptm__standardEnergisticsPropertyType *> *, const char*);
SOAP_FMAC3 std::vector<ptm__standardEnergisticsPropertyType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, const char*, std::vector<ptm__standardEnergisticsPropertyType *> *, const char*);
SOAP_FMAC1 std::vector<ptm__standardEnergisticsPropertyType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ptm__standardEnergisticsPropertyType *>  * soap_new_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToptm__standardEnergisticsPropertyType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__CodeType_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerTogml__CodeType_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, std::vector<gml__CodeType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, const std::vector<gml__CodeType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, const char*, int, const std::vector<gml__CodeType *> *, const char*);
SOAP_FMAC3 std::vector<gml__CodeType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, const char*, std::vector<gml__CodeType *> *, const char*);
SOAP_FMAC1 std::vector<gml__CodeType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTogml__CodeType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<gml__CodeType *>  * soap_new_std__vectorTemplateOfPointerTogml__CodeType(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerTogml__CodeType(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml__ObjectAlias_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml__ObjectAlias_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeml__ObjectAlias(struct soap*, std::vector<eml__ObjectAlias *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeml__ObjectAlias(struct soap*, const std::vector<eml__ObjectAlias *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeml__ObjectAlias(struct soap*, const char*, int, const std::vector<eml__ObjectAlias *> *, const char*);
SOAP_FMAC3 std::vector<eml__ObjectAlias *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeml__ObjectAlias(struct soap*, const char*, std::vector<eml__ObjectAlias *> *, const char*);
SOAP_FMAC1 std::vector<eml__ObjectAlias *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeml__ObjectAlias(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eml__ObjectAlias *>  * soap_new_std__vectorTemplateOfPointerToeml__ObjectAlias(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToeml__ObjectAlias(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOf_XML_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOf_XML_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_XML(struct soap*, std::vector<char *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_XML(struct soap*, const std::vector<char *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_XML(struct soap*, const char*, int, const std::vector<char *> *, const char*);
SOAP_FMAC3 std::vector<char *> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_XML(struct soap*, const char*, std::vector<char *> *, const char*);
SOAP_FMAC1 std::vector<char *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_XML(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<char *>  * soap_new_std__vectorTemplateOf_XML(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOf_XML(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractParameterKey_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractParameterKey_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__AbstractParameterKey(struct soap*, std::vector<resqml2__AbstractParameterKey *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__AbstractParameterKey(struct soap*, const std::vector<resqml2__AbstractParameterKey *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__AbstractParameterKey(struct soap*, const char*, int, const std::vector<resqml2__AbstractParameterKey *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__AbstractParameterKey *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__AbstractParameterKey(struct soap*, const char*, std::vector<resqml2__AbstractParameterKey *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__AbstractParameterKey *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractParameterKey(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__AbstractParameterKey *>  * soap_new_std__vectorTemplateOfPointerToresqml2__AbstractParameterKey(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractParameterKey(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractActivityParameter_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__AbstractActivityParameter_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__AbstractActivityParameter(struct soap*, std::vector<resqml2__AbstractActivityParameter *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__AbstractActivityParameter(struct soap*, const std::vector<resqml2__AbstractActivityParameter *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__AbstractActivityParameter(struct soap*, const char*, int, const std::vector<resqml2__AbstractActivityParameter *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__AbstractActivityParameter *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__AbstractActivityParameter(struct soap*, const char*, std::vector<resqml2__AbstractActivityParameter *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__AbstractActivityParameter *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractActivityParameter(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__AbstractActivityParameter *>  * soap_new_std__vectorTemplateOfPointerToresqml2__AbstractActivityParameter(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__AbstractActivityParameter(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml2__ParameterKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml2__ParameterKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfresqml2__ParameterKind(struct soap*, std::vector<enum resqml2__ParameterKind> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfresqml2__ParameterKind(struct soap*, const std::vector<enum resqml2__ParameterKind> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfresqml2__ParameterKind(struct soap*, const char*, int, const std::vector<enum resqml2__ParameterKind> *, const char*);
SOAP_FMAC3 std::vector<enum resqml2__ParameterKind> * SOAP_FMAC4 soap_in_std__vectorTemplateOfresqml2__ParameterKind(struct soap*, const char*, std::vector<enum resqml2__ParameterKind> *, const char*);
SOAP_FMAC1 std::vector<enum resqml2__ParameterKind>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfresqml2__ParameterKind(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum resqml2__ParameterKind>  * soap_new_std__vectorTemplateOfresqml2__ParameterKind(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfresqml2__ParameterKind(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfstd__string_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfstd__string_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOfstd__string(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__OrientedMacroFace_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__OrientedMacroFace_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__OrientedMacroFace(struct soap*, std::vector<resqml2__OrientedMacroFace *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__OrientedMacroFace(struct soap*, const std::vector<resqml2__OrientedMacroFace *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__OrientedMacroFace(struct soap*, const char*, int, const std::vector<resqml2__OrientedMacroFace *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__OrientedMacroFace *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__OrientedMacroFace(struct soap*, const char*, std::vector<resqml2__OrientedMacroFace *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__OrientedMacroFace *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__OrientedMacroFace(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__OrientedMacroFace *>  * soap_new_std__vectorTemplateOfPointerToresqml2__OrientedMacroFace(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__OrientedMacroFace(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__VolumeShell_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__VolumeShell_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__VolumeShell(struct soap*, std::vector<resqml2__VolumeShell *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__VolumeShell(struct soap*, const std::vector<resqml2__VolumeShell *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__VolumeShell(struct soap*, const char*, int, const std::vector<resqml2__VolumeShell *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__VolumeShell *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__VolumeShell(struct soap*, const char*, std::vector<resqml2__VolumeShell *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__VolumeShell *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__VolumeShell(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__VolumeShell *>  * soap_new_std__vectorTemplateOfPointerToresqml2__VolumeShell(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__VolumeShell(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml2__ThrowKind_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfresqml2__ThrowKind_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfresqml2__ThrowKind(struct soap*, std::vector<enum resqml2__ThrowKind> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfresqml2__ThrowKind(struct soap*, const std::vector<enum resqml2__ThrowKind> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfresqml2__ThrowKind(struct soap*, const char*, int, const std::vector<enum resqml2__ThrowKind> *, const char*);
SOAP_FMAC3 std::vector<enum resqml2__ThrowKind> * SOAP_FMAC4 soap_in_std__vectorTemplateOfresqml2__ThrowKind(struct soap*, const char*, std::vector<enum resqml2__ThrowKind> *, const char*);
SOAP_FMAC1 std::vector<enum resqml2__ThrowKind>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfresqml2__ThrowKind(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum resqml2__ThrowKind>  * soap_new_std__vectorTemplateOfresqml2__ThrowKind(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfresqml2__ThrowKind(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml__DataObjectReference_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToeml__DataObjectReference_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToeml__DataObjectReference(struct soap*, std::vector<eml__DataObjectReference *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToeml__DataObjectReference(struct soap*, const std::vector<eml__DataObjectReference *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToeml__DataObjectReference(struct soap*, const char*, int, const std::vector<eml__DataObjectReference *> *, const char*);
SOAP_FMAC3 std::vector<eml__DataObjectReference *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToeml__DataObjectReference(struct soap*, const char*, std::vector<eml__DataObjectReference *> *, const char*);
SOAP_FMAC1 std::vector<eml__DataObjectReference *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToeml__DataObjectReference(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<eml__DataObjectReference *>  * soap_new_std__vectorTemplateOfPointerToeml__DataObjectReference(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToeml__DataObjectReference(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredColumnLayerGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredColumnLayerGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, std::vector<resqml2__GpGridUnstructuredColumnLayerGridPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const std::vector<resqml2__GpGridUnstructuredColumnLayerGridPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, int, const std::vector<resqml2__GpGridUnstructuredColumnLayerGridPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__GpGridUnstructuredColumnLayerGridPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, const char*, std::vector<resqml2__GpGridUnstructuredColumnLayerGridPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__GpGridUnstructuredColumnLayerGridPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__GpGridUnstructuredColumnLayerGridPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__GpGridUnstructuredColumnLayerGridPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GpGridIjkGridPatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__GpGridIjkGridPatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__GpGridIjkGridPatch(struct soap*, std::vector<resqml2__GpGridIjkGridPatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__GpGridIjkGridPatch(struct soap*, const std::vector<resqml2__GpGridIjkGridPatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__GpGridIjkGridPatch(struct soap*, const char*, int, const std::vector<resqml2__GpGridIjkGridPatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__GpGridIjkGridPatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__GpGridIjkGridPatch(struct soap*, const char*, std::vector<resqml2__GpGridIjkGridPatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__GpGridIjkGridPatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__GpGridIjkGridPatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__GpGridIjkGridPatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__GpGridIjkGridPatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__GpGridIjkGridPatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__UniformSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__UniformSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__UniformSubnodePatch(struct soap*, std::vector<resqml2__UniformSubnodePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__UniformSubnodePatch(struct soap*, const std::vector<resqml2__UniformSubnodePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__UniformSubnodePatch(struct soap*, const char*, int, const std::vector<resqml2__UniformSubnodePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__UniformSubnodePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__UniformSubnodePatch(struct soap*, const char*, std::vector<resqml2__UniformSubnodePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__UniformSubnodePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__UniformSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__UniformSubnodePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__UniformSubnodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__UniformSubnodePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__VariableSubnodePatch_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__VariableSubnodePatch_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__VariableSubnodePatch(struct soap*, std::vector<resqml2__VariableSubnodePatch *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__VariableSubnodePatch(struct soap*, const std::vector<resqml2__VariableSubnodePatch *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__VariableSubnodePatch(struct soap*, const char*, int, const std::vector<resqml2__VariableSubnodePatch *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__VariableSubnodePatch *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__VariableSubnodePatch(struct soap*, const char*, std::vector<resqml2__VariableSubnodePatch *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__VariableSubnodePatch *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__VariableSubnodePatch(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__VariableSubnodePatch *>  * soap_new_std__vectorTemplateOfPointerToresqml2__VariableSubnodePatch(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__VariableSubnodePatch(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ElementIdentity_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__ElementIdentity_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__ElementIdentity(struct soap*, std::vector<resqml2__ElementIdentity *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__ElementIdentity(struct soap*, const std::vector<resqml2__ElementIdentity *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__ElementIdentity(struct soap*, const char*, int, const std::vector<resqml2__ElementIdentity *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__ElementIdentity *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__ElementIdentity(struct soap*, const char*, std::vector<resqml2__ElementIdentity *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__ElementIdentity *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__ElementIdentity(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__ElementIdentity *>  * soap_new_std__vectorTemplateOfPointerToresqml2__ElementIdentity(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__ElementIdentity(soap, n, NULL, NULL, NULL);
}
#endif

#ifndef SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__Point3d_DEFINED
#define SOAP_TYPE_gsoap_resqml2_0_1_std__vectorTemplateOfPointerToresqml2__Point3d_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToresqml2__Point3d(struct soap*, std::vector<resqml2__Point3d *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToresqml2__Point3d(struct soap*, const std::vector<resqml2__Point3d *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToresqml2__Point3d(struct soap*, const char*, int, const std::vector<resqml2__Point3d *> *, const char*);
SOAP_FMAC3 std::vector<resqml2__Point3d *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToresqml2__Point3d(struct soap*, const char*, std::vector<resqml2__Point3d *> *, const char*);
SOAP_FMAC1 std::vector<resqml2__Point3d *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToresqml2__Point3d(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<resqml2__Point3d *>  * soap_new_std__vectorTemplateOfPointerToresqml2__Point3d(struct soap *soap, int n = -1)
{
	return soap_instantiate_std__vectorTemplateOfPointerToresqml2__Point3d(soap, n, NULL, NULL, NULL);
}
#endif

} // namespace gsoap_resqml2_0_1


#endif

/* End of gsoap_resqml2_0_1H.h */
