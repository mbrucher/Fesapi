//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace f2i.energisticsStandardsApi.resqml2_0 {

public class SeismicLineFeature : f2i.energisticsStandardsApi.resqml2_0.AbstractTechnicalFeature {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SeismicLineFeature(global::System.IntPtr cPtr, bool cMemoryOwn) : base(f2i.energisticsStandardsApi.energisticsApiPINVOKE.resqml2_0_SeismicLineFeature_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SeismicLineFeature obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~SeismicLineFeature() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          f2i.energisticsStandardsApi.energisticsApiPINVOKE.delete_resqml2_0_SeismicLineFeature(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public int getTraceIndexIncrement() {
    int ret = f2i.energisticsStandardsApi.energisticsApiPINVOKE.resqml2_0_SeismicLineFeature_getTraceIndexIncrement(swigCPtr);
    if (f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Pending) throw f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getFirstTraceIndex() {
    int ret = f2i.energisticsStandardsApi.energisticsApiPINVOKE.resqml2_0_SeismicLineFeature_getFirstTraceIndex(swigCPtr);
    if (f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Pending) throw f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint getTraceCount() {
    uint ret = f2i.energisticsStandardsApi.energisticsApiPINVOKE.resqml2_0_SeismicLineFeature_getTraceCount(swigCPtr);
    if (f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Pending) throw f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public f2i.energisticsStandardsApi.resqml2_0.SeismicLineSetFeature getSeismicLineSet() {
    global::System.IntPtr cPtr = f2i.energisticsStandardsApi.energisticsApiPINVOKE.resqml2_0_SeismicLineFeature_getSeismicLineSet(swigCPtr);
    f2i.energisticsStandardsApi.resqml2_0.SeismicLineSetFeature ret = (cPtr == global::System.IntPtr.Zero) ? null : new f2i.energisticsStandardsApi.resqml2_0.SeismicLineSetFeature(cPtr, false);
    if (f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Pending) throw f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setSeismicLineSet(f2i.energisticsStandardsApi.resqml2_0.SeismicLineSetFeature seisLineSet) {
    f2i.energisticsStandardsApi.energisticsApiPINVOKE.resqml2_0_SeismicLineFeature_setSeismicLineSet(swigCPtr, f2i.energisticsStandardsApi.resqml2_0.SeismicLineSetFeature.getCPtr(seisLineSet));
    if (f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Pending) throw f2i.energisticsStandardsApi.energisticsApiPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
